{"version":3,"file":"static/js/1275.772f5972.chunk.js","mappings":"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","sources":["screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormHr.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, CopyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Button,\n  DownloadIcon,\n  ServiceAccountCredentialsIcon,\n  WarnIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customRuntime\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.runtimeClassName\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <H3Section>Additional Environment Variables</H3Section>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADGroupAtIndex,\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADGroupAtIndex,\n  removeIDPADUsrAtIndex,\n  setIDPADGroupAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  BuiltInLogoElement,\n  LDAPLogoElement,\n  OIDCLogoElement,\n} from \"../../LogoComponents\";\nimport H3Section from \"../../../Common/H3Section\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Identity Provider</H3Section>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addCaCertificate,\n  addClientKeyPair,\n  addFileToCaCertificates,\n  addFileToClientKeyPair,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteClientKeyPair,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Security</H3Section>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  addFileMinIOMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <FormHr />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Container Images</H3Section>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport { AddIcon } from \"mds\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\nimport H3Section from \"../../../../Common/H3Section\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 320px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <H3Section>Name</H3Section>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <FormHr />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={logSearchSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={\n                        logSearchPostgresSecurityContext.fsGroupChangePolicy\n                      }\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <FormHr />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={prometheusSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport { BackLink, HelpBox, StorageIcon } from \"mds\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: false,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: false,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            onClick={() => {\n              dispatch(resetAddTenantForm());\n              navigate(\"/tenants\");\n            }}\n            label={\"Tenants\"}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport { LDAPIcon, OIDCIcon, UsersIcon } from \"mds\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;"],"names":["withStyles","theme","createStyles","container","display","flexFlow","padding","inputWithCopy","width","background","height","marginRight","inputLabel","fieldBasic","fontSize","label","value","classes","className","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","id","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","alignItems","credentialTitle","fontWeight","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","Grid","item","xs","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","marginBottom","tooltipContainer","placement","overflow","border","language","onChange","evn","target","backgroundColor","fontFamily","minHeight","borderTop","paddingRight","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","paddingLeft","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","Tooltip","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","FormHr","styled","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","dispatch","useAppDispatch","exposeMinIO","useSelector","state","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","customRuntime","runtimeClassName","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","useEffect","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","H3Section","descriptionText","h3Section","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","children","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","textAlign","indicatorLabels","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","root","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","deleteDialogStyles","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeaderWrapper","PageLayout","GenericWizard","wizardSteps","iconComponent","help","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","borderRadius","href","rel","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","DividerRoot","slot","overridesResolver","props","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","top","content","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","paddingBottom","React","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}