{"version":3,"file":"static/js/4114.1a16ce8b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Common/GenericWizard/WizardPage.tsx","screens/Console/Common/GenericWizard/GenericWizard.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Buckets/ListBuckets/BulkLifecycleModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { BucketsIcon, ReportedUsageIcon, TotalObjectsIcon } from \"mds\";\nimport { Bucket } from \"../types\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport CheckboxWrapper from \"../../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { hasPermission } from \"../../../../common/SecureComponent\";\nimport clsx from \"clsx\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginBottom: 30,\n      padding: 20,\n      color: theme.palette.primary.main,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      textDecoration: \"none\",\n      \"&:hover\": {\n        backgroundColor: \"#fafafa\",\n      },\n      \"& .min-icon\": {\n        height: 14,\n        width: 14,\n      },\n      \"& .MuiTypography-body2\": {\n        fontSize: 14,\n      },\n      \"& .MuiCardHeader-content\": {\n        wordWrap: \"break-word\",\n        overflowWrap: \"break-word\",\n        wordBreak: \"break-all\",\n        font: \"normal normal bold 24px/27px Inter\",\n        color: theme.palette.primary.main,\n\n        \"& .MuiTypography-root\": {\n          fontSize: 19,\n          fontWeight: \"bold\",\n          \"& .min-icon\": {\n            position: \"relative\",\n            top: 4,\n            marginRight: 4,\n            height: \"24px !important\",\n          },\n        },\n      },\n      \"& .MuiCardHeader-root\": {\n        background:\n          \"transparent linear-gradient(0deg, #EEF1F44E 0%, #FFFFFF 100%) 0% 0% no-repeat padding-box\",\n      },\n    },\n    checkBoxElement: {\n      width: 32,\n      height: 32,\n      float: \"left\",\n      overflow: \"hidden\",\n      \"& div\": {\n        position: \"absolute\",\n      },\n    },\n    manageButton: {\n      borderRadius: 4,\n      width: 111,\n      color: theme.palette.grey[\"700\"],\n      textTransform: \"unset\",\n      fontSize: 12,\n      fontWeight: \"normal\",\n      \"& .MuiButton-endIcon\": {\n        \"& .min-icon\": {\n          fontSize: 18,\n        },\n      },\n    },\n    metric: {\n      \"& .min-icon\": {\n        color: \"#000000\",\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    metricLabel: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: \"#000000\",\n    },\n    metricText: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    unit: {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    bucketName: {\n      padding: 0,\n      margin: 0,\n      fontSize: 22,\n    },\n    bucketIcon: {\n      \"& .min-icon\": {\n        height: 48,\n        width: 48,\n        color: theme.palette.primary.main,\n      },\n    },\n    bucketInfo: {\n      display: \"flex\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column-reverse\",\n      },\n    },\n    bucketStats: {\n      marginTop: 15,\n      borderTop: \"1px solid rgb(234,234,234, .7)\",\n      paddingTop: 14,\n    },\n    bucketActionButtons: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n\n      \"& button\": {\n        marginLeft: 8,\n      },\n\n      \"@media (max-width: 900px)\": {\n        marginTop: \"-33px\",\n      },\n    },\n    disabled: {\n      backgroundColor: \"red\",\n    },\n  })\n);\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n  noManage?: boolean;\n}\n\nconst BucketListItem = ({\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n  noManage = false,\n}: IBucketListItem) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota, true, false);\n\n  const manageAllowed =\n    hasPermission(bucket.name, IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]) &&\n    false;\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <Grid\n      container\n      className={clsx(classes.root, \"bucket-item\", {\n        [classes.disabled]: manageAllowed,\n      })}\n      onClick={() => {\n        navigate(`/buckets/${bucket.name}/admin`);\n      }}\n      sx={{\n        cursor: \"pointer\",\n      }}\n      id={`manageBucket-${bucket.name}`}\n    >\n      <Grid item xs={12}>\n        <Grid container justifyContent={\"space-between\"}>\n          <Grid item xs={12} sm={7}>\n            <Grid container>\n              <Grid item xs={12}>\n                {bulkSelect && (\n                  <div\n                    className={classes.checkBoxElement}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                  >\n                    <CheckboxWrapper\n                      checked={selected}\n                      id={`select-${bucket.name}`}\n                      label={\"\"}\n                      name={`select-${bucket.name}`}\n                      onChange={onCheckboxClick}\n                      value={bucket.name}\n                    />\n                  </div>\n                )}\n                <h1 className={classes.bucketName}>\n                  {bucket.name} {manageAllowed}\n                </h1>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container className={classes.bucketInfo}>\n                  <Grid item xs={12} sm paddingRight={5}>\n                    <Typography variant=\"body2\">\n                      Created: {new Date(bucket.creation_date).toString()}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm>\n                    <Typography variant=\"body2\">\n                      Access: {accessToStr(bucket)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={5} className={classes.bucketActionButtons}>\n            <Box display={{ xs: \"none\", sm: \"block\" }}>\n              <div style={{ marginBottom: 10 }} />\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} className={classes.bucketStats}>\n        <Grid container justifyContent={\"flex-start\"} spacing={4}>\n          <Grid item className={classes.bucketIcon}>\n            <Link to={`/buckets/${bucket.name}/browse`}>\n              <BucketsIcon />\n            </Link>\n          </Grid>\n          <Grid item textAlign={\"left\"} className={classes.metric}>\n            <ReportedUsageIcon />\n            <span className={classes.metricLabel}>Usage</span>\n            <div className={classes.metricText}>\n              {usageScalar}\n              <span className={classes.unit}>{usageUnit}</span>\n              {quota !== \"0\" && (\n                <Fragment>\n                  {\" \"}\n                  / {quotaForString.total}\n                  <span className={classes.unit}>{quotaForString.unit}</span>\n                </Fragment>\n              )}\n            </div>\n          </Grid>\n          <Grid item textAlign={\"left\"} className={classes.metric}>\n            <TotalObjectsIcon />\n            <span className={classes.metricLabel}>Objects</span>\n            <div className={classes.metricText}>\n              {bucket.objects ? prettyNumber(bucket.objects) : 0}\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BucketListItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardButton, IWizardPage } from \"./types\";\nimport { LinearProgress } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizardStepContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    wizardComponent: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 100px - 80px)\",\n      minHeight: 400,\n      flex: 1,\n      width: \"100%\",\n    },\n    wizardModal: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 515px)\",\n    },\n    buttonsContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\" as const,\n      padding: \"10px 0\",\n      borderTop: \"#EAEAEA 1px solid\",\n      \"& button\": {\n        marginLeft: 10,\n      },\n      \"&.forModal\": {\n        paddingBottom: 0,\n      },\n    },\n    buttonInnerContainer: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginRight: 15,\n    },\n  });\n\nconst WizardPage = ({\n  classes,\n  page,\n  pageChange,\n  loadingStep,\n  forModal,\n}: IWizardPage) => {\n  const buttonAction = (btn: IWizardButton) => {\n    switch (btn.type) {\n      case \"next\":\n        pageChange(\"++\");\n        break;\n      case \"back\":\n        pageChange(\"--\");\n        break;\n      case \"to\":\n        pageChange(btn.toPage || 0);\n        break;\n      case \"custom\":\n      default:\n    }\n\n    if (btn.action) {\n      btn.action(pageChange);\n    }\n  };\n\n  return (\n    <div className={classes.wizardStepContainer}>\n      <div className={forModal ? classes.wizardModal : classes.wizardComponent}>\n        {page.componentRender}\n      </div>\n      {loadingStep && (\n        <div>\n          <LinearProgress />\n        </div>\n      )}\n      <div\n        className={`${classes.buttonsContainer} ${forModal ? \"forModal\" : \"\"}`}\n      >\n        <div className={classes.buttonInnerContainer}>\n          {page.buttons.map((btn) => {\n            if (btn.componentRender) {\n              return btn.componentRender;\n            }\n            return (\n              <Button\n                id={\"wizard-button-\" + btn.label}\n                variant=\"regular\"\n                onClick={() => {\n                  buttonAction(btn);\n                }}\n                disabled={!btn.enabled}\n                key={`button-${page.label}-${btn.label}`}\n                label={btn.label}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WizardPage);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardMain } from \"./types\";\nimport WizardPage from \"./WizardPage\";\nimport { Grid, List } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizFromContainer: {},\n    wizFromModal: {\n      position: \"relative\",\n    },\n    modalWizardSteps: {\n      padding: 5,\n      borderBottom: \"#eaeaea 1px solid\",\n      \"& ul\": {\n        padding: 0,\n        marginTop: 0,\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n\n        \"& li\": {\n          listStyle: \"lower-roman\",\n          \"&::marker\": {\n            paddingLeft: 15,\n          },\n        },\n      },\n    },\n    buttonList: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      cursor: \"pointer\",\n      \"&:not(:disabled):hover\": {\n        textDecoration: \"underline\",\n      },\n      \"&:selected, &:active, &:focus, &:focus:active\": {\n        border: \"none\",\n        outline: 0,\n        boxShadow: \"none\",\n      },\n    },\n    paddedContentGrid: {\n      marginTop: 8,\n      padding: \"0 10px\",\n      minHeight: 400,\n    },\n    stepsLabel: {\n      fontSize: 20,\n      color: \"#393939\",\n      fontWeight: 600,\n      margin: \"15px 12px\",\n      \"&.stepsModalTitle\": {\n        textAlign: \"center\",\n        width: \"100%\",\n        marginTop: 0,\n        marginBottom: 10,\n      },\n    },\n    stepsMasterContainer: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#FFFFFF\",\n      width: \"100%\",\n      maxHeight: 90,\n    },\n    verticalSteps: {\n      borderRight: \"1px solid #E5E5E5\",\n      background: \"#F8F8F8\",\n    },\n    stepsContainer: {\n      paddingTop: 0,\n      \"& .MuiButtonBase-root.Mui-selected\": {\n        background: \"#E5E5E5\",\n      },\n    },\n    stepItem: {\n      minHeight: 60,\n      borderBottom: \"1px solid #E5E5E5\",\n      \"&:hover\": {\n        background: \"rgba(247,247,247,0.7)\",\n      },\n    },\n  });\n\nconst GenericWizard = ({\n  classes,\n  wizardSteps,\n  loadingStep,\n  forModal,\n}: IWizardMain) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  const pageChange = (toElement: string | number) => {\n    const lastPage = wizardSteps.length - 1;\n\n    if (toElement === \"++\") {\n      let nextPage = currentStep + 1;\n\n      if (nextPage > lastPage) {\n        nextPage = lastPage;\n      }\n\n      setCurrentStep(nextPage);\n    }\n\n    if (toElement === \"--\") {\n      let prevPage = currentStep - 1;\n\n      if (prevPage < 0) {\n        prevPage = 0;\n      }\n\n      setCurrentStep(prevPage);\n    }\n\n    if (typeof toElement === \"number\") {\n      let pg = toElement;\n      if (toElement < 0) {\n        pg = 0;\n      }\n\n      if (toElement > lastPage) {\n        pg = lastPage;\n      }\n\n      setCurrentStep(pg);\n    }\n  };\n\n  if (wizardSteps.length === 0) {\n    return null;\n  }\n\n  const stepsList = () => {\n    return (\n      <Fragment>\n        <List\n          component=\"nav\"\n          dense={true}\n          classes={{\n            root: classes.stepsContainer,\n          }}\n        >\n          {wizardSteps.map((step, index) => {\n            return (\n              <ListItem\n                id={\n                  \"wizard-step-\" + step.label.toLowerCase().replaceAll(\" \", \"-\")\n                }\n                button\n                disableRipple\n                onClick={() => pageChange(index)}\n                key={`wizard-${index.toString()}`}\n                selected={currentStep === index}\n                classes={{\n                  root: classes.stepItem,\n                }}\n              >\n                <ListItemText primary={step.label} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Fragment>\n    );\n  };\n  const stepsListModal = () => {\n    return (\n      <ul>\n        {wizardSteps.map((step, index) => {\n          return (\n            <li key={`wizard-${index.toString()}`}>\n              <button\n                onClick={() => pageChange(index)}\n                disabled={index > currentStep}\n                className={classes.buttonList}\n              >\n                {step.label}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Grid\n      container\n      className={forModal ? classes.wizFromModal : classes.wizFromContainer}\n    >\n      {forModal ? (\n        <Fragment>\n          <div className={classes.stepsMasterContainer}>\n            <div className={`${classes.stepsLabel} stepsModalTitle`}>Steps</div>\n            <div className={classes.modalWizardSteps}>{stepsListModal()}</div>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Grid\n            item\n            xs={12}\n            sm={2}\n            md={2}\n            lg={2}\n            xl={2}\n            className={classes.verticalSteps}\n          >\n            {stepsList()}\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        item\n        xs={12}\n        sm={forModal ? 12 : 10}\n        md={forModal ? 12 : 10}\n        lg={forModal ? 12 : 10}\n        xl={forModal ? 12 : 10}\n        className={forModal ? \"\" : classes.paddedContentGrid}\n      >\n        <WizardPage\n          page={wizardSteps[currentStep]}\n          pageChange={pageChange}\n          loadingStep={loadingStep}\n          forModal={forModal}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(GenericWizard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { BulkReplicationItem, BulkReplicationResponse } from \"../types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport api from \"../../../../common/api\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { SelectorTypes } from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  classes: any;\n  buckets: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    remoteBucketList: {\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto 45px\",\n      alignItems: \"center\",\n      justifyContent: \"stretch\",\n    },\n    errorIcon: {\n      color: \"#C72C48\",\n    },\n    successIcon: {\n      color: \"#42C91A\",\n    },\n    hide: {\n      opacity: 0,\n      transitionDuration: \"0.3s\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<BulkReplicationItem[]>([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    }\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = response.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\"\n        );\n\n        if (filterErrors.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api\n      .invoke(\"POST\", \"/api/v1/list-external-buckets\", remoteConnectInfo)\n      .then((dataReturn) => {\n        const buckets = get(dataReturn, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setExternalLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <div className={classes.successIcon}>\n            <CheckCircleOutlineIcon />\n          </div>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <div className={classes.errorIcon}>\n              <Tooltip title={errString} placement=\"top-start\">\n                <ErrorOutlineIcon />\n              </Tooltip>\n            </div>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <SelectWrapper\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(e: SelectChangeEvent<string>) => {\n              updateItem(indexItem, e.target.value as string);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBoxWrapper\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (responseItem: BulkReplicationItem[]) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <GenericWizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <Grid item xs={12}>\n                  <PredefinedList\n                    label=\"Local Buckets to replicate\"\n                    content={bucketsToAlter.join(\", \")}\n                  />\n                </Grid>\n                <h4>Remote Endpoint Configuration</h4>\n                <span className={classes.descriptionText}>\n                  Please avoid the use of root credentials for this feature\n                </span>\n                <br />\n                <br />\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SelectWrapper\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      setReplicationMode(e.target.value as string);\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                </Grid>\n                {replicationMode === \"async\" && (\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span className={classes.descriptionText}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <div className={classes.remoteBucketList}>\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </div>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddBulkReplicationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          // @ts-ignore\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport api from \"../../../../common/api\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { ITiersDropDown } from \"../BucketDetails/AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { MultiBucketResult } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  classes: any;\n  buckets: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    resultGrid: {\n      display: \"grid\",\n      gridTemplateColumns: \"45px auto\",\n      alignItems: \"center\",\n      justifyContent: \"stretch\",\n    },\n    errorIcon: {\n      paddingTop: 5,\n      color: \"#C72C48\",\n    },\n    successIcon: {\n      paddingTop: 5,\n      color: \"#42C91A\",\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [results, setResults] = useState<MultiBucketResult | null>(null);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    }\n  }, [loadingTiers, dispatch]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <div className={classes.successIcon}>\n            <CheckCircleOutlineIcon />\n          </div>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <div className={classes.errorIcon}>\n              <Tooltip title={errString} placement=\"top-start\">\n                <ErrorOutlineIcon />\n              </Tooltip>\n            </div>\n          );\n        }\n    }\n    return null;\n  };\n\n  const createLifecycleRules = (to: any) => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        noncurrentversion_transition_storage_class: NCTransitionSC,\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      buckets,\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api\n      .invoke(\"POST\", `/api/v1/buckets/multi-lifecycle`, lifecycleInsert)\n      .then((res: MultiBucketResult) => {\n        setAddLoading(false);\n        setResults(res);\n        to(\"++\");\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Lifecycle to multiple buckets\"\n    >\n      <GenericWizard\n        loadingStep={addLoading || loadingTiers}\n        wizardSteps={[\n          {\n            label: \"Lifecycle Configuration\",\n            componentRender: (\n              <Fragment>\n                <Grid item xs={12}>\n                  <PredefinedList\n                    label=\"Local Buckets to replicate\"\n                    content={buckets.join(\", \")}\n                  />\n                </Grid>\n                <h4>Remote Endpoint Configuration</h4>\n                <Grid container>\n                  <Grid item xs={12} className={classes.formScrollable}>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Lifecycle Configuration\n                        </legend>\n\n                        <Grid item xs={12}>\n                          <RadioGroupSelector\n                            currentSelection={ilmType}\n                            id=\"quota_type\"\n                            name=\"quota_type\"\n                            label=\"ILM Rule\"\n                            onChange={(\n                              e: React.ChangeEvent<{ value: unknown }>\n                            ) => {\n                              setIlmType(e.target.value as string);\n                            }}\n                            selectorOptions={[\n                              { value: \"expiry\", label: \"Expiry\" },\n                              { value: \"transition\", label: \"Transition\" },\n                            ]}\n                          />\n                        </Grid>\n                        {ilmType === \"expiry\" ? (\n                          <Fragment>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"expiry_days\"\n                                name=\"expiry_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setExpiryDays(e.target.value);\n                                }}\n                                label=\"Expiry Days\"\n                                value={expiryDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"noncurrentversion_expiration_days\"\n                                name=\"noncurrentversion_expiration_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCExpirationDays(e.target.value);\n                                }}\n                                label=\"Non-current Expiration Days\"\n                                value={NCExpirationDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                          </Fragment>\n                        ) : (\n                          <Fragment>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"transition_days\"\n                                name=\"transition_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setTransitionDays(e.target.value);\n                                }}\n                                label=\"Transition Days\"\n                                value={transitionDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"noncurrentversion_transition_days\"\n                                name=\"noncurrentversion_transition_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCTransitionDays(e.target.value);\n                                }}\n                                label=\"Non-current Transition Days\"\n                                value={NCTransitionDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                id=\"noncurrentversion_t_SC\"\n                                name=\"noncurrentversion_t_SC\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCTransitionSC(e.target.value);\n                                }}\n                                placeholder=\"Set Non-current Version Transition Storage Class\"\n                                label=\"Non-current Version Transition Storage Class\"\n                                value={NCTransitionSC}\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <SelectWrapper\n                                label=\"Storage Class\"\n                                id=\"storage_class\"\n                                name=\"storage_class\"\n                                value={storageClass}\n                                onChange={(e: SelectChangeEvent<string>) => {\n                                  setStorageClass(e.target.value as string);\n                                }}\n                                options={tiersList}\n                              />\n                            </Grid>\n                          </Fragment>\n                        )}\n                      </fieldset>\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          File Configuration\n                        </legend>\n\n                        <Grid item xs={12}>\n                          <InputBoxWrapper\n                            id=\"prefix\"\n                            name=\"prefix\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setPrefix(e.target.value);\n                            }}\n                            label=\"Prefix\"\n                            value={prefix}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <QueryMultiSelector\n                            name=\"tags\"\n                            label=\"Tags\"\n                            elements={tags}\n                            onChange={(vl: string) => {\n                              setTags(vl);\n                            }}\n                            keyPlaceholder=\"Tag Key\"\n                            valuePlaceholder=\"Tag Value\"\n                            withBorder\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <FormSwitchWrapper\n                            value=\"expired_delete_marker\"\n                            id=\"expired_delete_marker\"\n                            name=\"expired_delete_marker\"\n                            checked={expiredObjectDM}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setExpiredObjectDM(event.target.checked);\n                            }}\n                            label={\"Expired Object Delete Marker\"}\n                          />\n                        </Grid>\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Create Rules\",\n                enabled: !loadingTiers && !addLoading && isFormValid,\n                action: createLifecycleRules,\n              },\n            ],\n          },\n          {\n            label: \"Results\",\n            componentRender: (\n              <Fragment>\n                <h3>Multi Bucket lifecycle Assignments Results</h3>\n                <Grid container>\n                  <Grid item xs={12} className={classes.formScrollable}>\n                    <h4>Buckets Results</h4>\n                    {results?.results.map((resultItem) => {\n                      return (\n                        <div className={classes.resultGrid}>\n                          {LogoToShow({ errString: resultItem.error || \"\" })}\n                          <span>{resultItem.bucketName}</span>\n                        </div>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Done\",\n                enabled: !addLoading,\n                action: () => closeModalAndRefresh(true),\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddBulkReplicationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  Button,\n  HelpBox,\n  LifecycleConfigIcon,\n  MultipleBucketsIcon,\n  RefreshIcon,\n  SelectAllIcon,\n  SelectMultipleIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Bucket, BucketList } from \"../types\";\nimport {\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport BulkLifecycleModal from \"./BulkLifecycleModal\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport { setLoadingObjects } from \"../../ObjectBrowser/objectBrowserSlice\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bucketList: {\n      marginTop: 25,\n      height: \"calc(100vh - 211px)\",\n      \"&.isEmbedded\": {\n        height: \"calc(100vh - 128px)\",\n      },\n    },\n    searchField: {\n      ...searchField.searchField,\n      minWidth: 380,\n      \"@media (max-width: 900px)\": {\n        minWidth: 220,\n      },\n    },\n    ...containerForHeader,\n  });\n\ninterface IListBucketsProps {\n  classes: any;\n}\n\nconst ListBuckets = ({ classes }: IListBucketsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [lifecycleModalOpen, setLifecycleModalOpen] = useState<boolean>(false);\n  const [canPutLifecycle, setCanPutLifecycle] = useState<boolean>(false);\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  const features = useSelector(selFeatures);\n  const obOnly = !!features?.includes(\"object-browser-only\");\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api\n          .invoke(\"GET\", `/api/v1/buckets`)\n          .then((res: BucketList) => {\n            setLoading(false);\n            setRecords(res.buckets || []);\n            dispatch(setLoadingObjects(true));\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      };\n      fetchRecords();\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const hasBuckets = records.length > 0;\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const closeBulkLifecycleModal = (unselectAll: boolean) => {\n    setLifecycleModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  useEffect(() => {\n    var failLifecycle = false;\n    selectedBuckets.forEach((bucket: string) => {\n      hasPermission(bucket, IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE], true)\n        ? setCanPutLifecycle(true)\n        : (failLifecycle = true);\n    });\n    failLifecycle ? setCanPutLifecycle(false) : setCanPutLifecycle(true);\n  }, [selectedBuckets]);\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n          noManage={obOnly}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n  const canListBuckets = hasPermission(\"*\", [\n    IAM_SCOPES.S3_LIST_BUCKET,\n    IAM_SCOPES.S3_ALL_LIST_BUCKET,\n  ]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {lifecycleModalOpen && (\n        <BulkLifecycleModal\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkLifecycleModal}\n          open={lifecycleModalOpen}\n        />\n      )}\n      {!obOnly && <PageHeaderWrapper label={\"Buckets\"} />}\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray} display=\"flex\">\n          {obOnly && (\n            <Grid item xs>\n              <AutoColorIcon marginRight={15} marginTop={10} />\n            </Grid>\n          )}\n          {hasBuckets && (\n            <SearchBox\n              onChange={setFilterBuckets}\n              placeholder=\"Search Buckets\"\n              overrideClass={classes.searchField}\n              value={filterBuckets}\n            />\n          )}\n\n          <Grid\n            item\n            xs={12}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"flex-end\"}\n            sx={{\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            {!obOnly && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : bulkSelect\n                      ? \"Unselect Buckets\"\n                      : \"Select Multiple Buckets\"\n                  }\n                >\n                  <Button\n                    id={\"multiple-bucket-seection\"}\n                    onClick={() => {\n                      setBulkSelect(!bulkSelect);\n                      setSelectedBuckets([]);\n                    }}\n                    icon={<SelectMultipleIcon />}\n                    variant={bulkSelect ? \"callAction\" : \"regular\"}\n                    disabled={!hasBuckets}\n                  />\n                </TooltipWrapper>\n\n                {bulkSelect && (\n                  <TooltipWrapper\n                    tooltip={\n                      !hasBuckets\n                        ? \"\"\n                        : selectedBuckets.length === filteredRecords.length\n                        ? \"Unselect All Buckets\"\n                        : \"Select All Buckets\"\n                    }\n                  >\n                    <Button\n                      id={\"select-all-buckets\"}\n                      onClick={selectAllBuckets}\n                      icon={<SelectAllIcon />}\n                      variant={\"regular\"}\n                    />\n                  </TooltipWrapper>\n                )}\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : !canPutLifecycle\n                      ? permissionTooltipHelper(\n                          IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE],\n                          \"configure lifecycle for the selected buckets\"\n                        )\n                      : selectedBuckets.length === 0\n                      ? bulkSelect\n                        ? \"Please select at least one bucket on which to configure Lifecycle\"\n                        : \"Use the Select Multiple Buckets button to choose buckets on which to configure Lifecycle\"\n                      : \"Set Lifecycle\"\n                  }\n                >\n                  <Button\n                    id={\"set-lifecycle\"}\n                    onClick={() => {\n                      setLifecycleModalOpen(true);\n                    }}\n                    icon={<LifecycleConfigIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0 || !canPutLifecycle}\n                  />\n                </TooltipWrapper>\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : selectedBuckets.length === 0\n                      ? bulkSelect\n                        ? \"Please select at least one bucket on which to configure Replication\"\n                        : \"Use the Select Multiple Buckets button to choose buckets on which to configure Replication\"\n                      : \"Set Replication\"\n                  }\n                >\n                  <Button\n                    id={\"set-replication\"}\n                    onClick={() => {\n                      setReplicationModalOpen(true);\n                    }}\n                    icon={<MultipleBucketsIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0}\n                  />\n                </TooltipWrapper>\n              </Fragment>\n            )}\n\n            <TooltipWrapper tooltip={\"Refresh\"}>\n              <Button\n                id={\"refresh-buckets\"}\n                onClick={() => {\n                  setLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n\n            {!obOnly && (\n              <TooltipWrapper\n                tooltip={\n                  canCreateBucket\n                    ? \"\"\n                    : permissionTooltipHelper(\n                        [IAM_SCOPES.S3_CREATE_BUCKET],\n                        \"create a bucket\"\n                      )\n                }\n              >\n                <Button\n                  id={\"create-bucket\"}\n                  onClick={() => {\n                    navigate(IAM_PAGES.ADD_BUCKETS);\n                  }}\n                  icon={<AddIcon />}\n                  variant={\"callAction\"}\n                  disabled={!canCreateBucket}\n                  label={\"Create Bucket\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        </Grid>\n\n        {loading && <LinearProgress />}\n        {!loading && (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.bucketList} ${obOnly ? \"isEmbedded\" : \"\"}`}\n          >\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {!hasBuckets && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <br />\n                        {canListBuckets ? (\n                          \"\"\n                        ) : (\n                          <Fragment>\n                            <br />\n                            {permissionTooltipHelper(\n                              [\n                                IAM_SCOPES.S3_LIST_BUCKET,\n                                IAM_SCOPES.S3_ALL_LIST_BUCKET,\n                              ],\n                              \"view the buckets on this server\"\n                            )}\n                            <br />\n                          </Fragment>\n                        )}\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              navigate(IAM_PAGES.ADD_BUCKETS);\n                            }}\n                          >\n                            Create a Bucket.\n                          </AButton>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListBuckets);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon } from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface SelectorTypes {\n  label: any;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: any;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item fontSize={60}>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"flex\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n"],"names":["useStyles","makeStyles","theme","createStyles","root","marginBottom","padding","color","palette","primary","main","border","borderRadius","textDecoration","backgroundColor","height","width","fontSize","wordWrap","overflowWrap","wordBreak","font","fontWeight","position","top","marginRight","background","checkBoxElement","float","overflow","manageButton","grey","textTransform","metric","metricLabel","metricText","unit","bucketName","margin","bucketIcon","bucketInfo","display","flexFlow","bucketStats","marginTop","borderTop","paddingTop","bucketActionButtons","alignItems","justifyContent","marginLeft","disabled","bucket","onSelect","selected","bulkSelect","classes","noManage","navigate","useNavigate","usage","niceBytes","size","usageScalar","split","usageUnit","quota","get","quotaForString","calculateBytes","manageAllowed","hasPermission","name","IAM_PERMISSIONS","IAM_ROLES","Grid","container","className","clsx","onClick","sx","cursor","id","item","xs","sm","e","stopPropagation","CheckboxWrapper","checked","label","onChange","value","paddingRight","Typography","variant","Date","creation_date","toString","rw_access","read","write","accessToStr","Box","style","spacing","to","textAlign","Fragment","total","objects","prettyNumber","withStyles","wizardStepContainer","flexDirection","flex","wizardComponent","overflowY","minHeight","wizardModal","buttonsContainer","paddingBottom","buttonInnerContainer","page","pageChange","loadingStep","forModal","componentRender","LinearProgress","buttons","map","btn","type","toPage","action","buttonAction","enabled","wizFromContainer","wizFromModal","modalWizardSteps","borderBottom","listStyle","paddingLeft","buttonList","outline","boxShadow","paddedContentGrid","stepsLabel","stepsMasterContainer","maxHeight","verticalSteps","borderRight","stepsContainer","stepItem","wizardSteps","useState","currentStep","setCurrentStep","toElement","lastPage","length","nextPage","prevPage","pg","step","index","md","lg","xl","List","component","dense","ListItem","toLowerCase","replaceAll","button","disableRipple","ListItemText","remoteBucketList","gridTemplateColumns","errorIcon","successIcon","hide","opacity","transitionDuration","modalBasic","wizardCommon","open","closeModalAndRefresh","buckets","dispatch","useAppDispatch","bucketsToAlter","setBucketsToAlter","addLoading","setAddLoading","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","remoteBucketName","useEffect","bucketsAlter","relationBucketsAlter","forEach","push","LogoToShow","errString","CheckCircleOutline","Tooltip","title","placement","ErrorOutline","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","ModalWrapper","modalOpen","onClose","PredefinedList","content","join","descriptionText","InputBoxWrapper","target","placeholder","FormSwitchWrapper","SelectWrapper","options","validity","valid","min","pattern","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","wizardPageJump","remoteConnectInfo","api","then","dataReturn","arrayReplaceBuckets","element","catch","err","setModalErrorSnackMessage","errorItem","initialBucket","bucketResponse","find","stateOfItem","event","replicate","destinationBucket","endURL","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","response","states","replicationState","filter","itm","setTimeout","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","itemSize","resultGrid","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","loadingTiers","setLoadingTiers","tiersList","setTiersList","prefix","setPrefix","tags","setTags","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","results","setResults","res","objList","tier","tierType","formScrollable","formFieldRow","fieldGroup","RadioGroupSelector","currentSelection","selectorOptions","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","rules","expiry","expiry_days","noncurrentversion_expiration_days","transition","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","storage_class","lifecycleInsert","expired_object_delete_marker","resultItem","error","bucketList","searchField","minWidth","containerForHeader","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","lifecycleModalOpen","setLifecycleModalOpen","canPutLifecycle","setCanPutLifecycle","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setLoadingObjects","setErrorSnackMessage","filteredRecords","b","hasBuckets","selectListBuckets","targetD","failLifecycle","canCreateBucket","IAM_SCOPES","canListBuckets","BulkReplicationModal","unselectAll","BulkLifecycleModal","PageHeaderWrapper","PageLayout","actionsTray","AutoColorIcon","SearchBox","overrideClass","TooltipWrapper","tooltip","icon","selectAllBuckets","permissionTooltipHelper","IAM_PAGES","alignContent","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","AButton","StyledSwitch","switchBase","transform","common","white","thumb","track","transitions","create","focusVisible","switchContainer","Switch","indicatorLabelOn","indicatorLabel","fieldDescription","fieldBasic","switchOnly","description","indicatorLabels","extraInputProps","switchComponent","inputProps","disableFocusRipple","disableTouchRipple","htmlFor","inputLabel","tooltipContainer","inputStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","overlayAction","right","maxWidth","autoComplete","multiline","required","max","overlayId","overlayIcon","noLabelMinWidth","autoFocus","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","buttonTrigger","React","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","predefinedList","multiLine","actionButton","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","inputWithBorder","lineInputBoxes","queryDiv","alignSelf","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","keys","values","splittedVals","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","trim","keysList","valuesList","addEmptyLine","fieldContainer","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","radioUnselectedIcon","optionLabel","checkedOption","disableOptions","displayInColumn","row","selectorOption","control","SelectStyled","lineHeight","input","borderColor","InputBase","option"],"sourceRoot":""}