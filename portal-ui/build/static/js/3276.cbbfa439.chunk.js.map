{"version":3,"file":"static/js/3276.cbbfa439.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tools/Inspect.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport HelpBox from \"../../../../common/HelpBox\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup. </div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://docs.min.io/minio/baremetal/installation/deploy-minio-distributed.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={10} md={9}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, Button, DialogContentText } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { CopyIcon, FileBookIcon, PasswordKeyIcon } from \"../../../icons\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport {\n  deleteCookie,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport { AppState } from \"../../../store\";\nimport { InspectMenuIcon } from \"../../../icons/SidebarMenus\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    switchLabel: {\n      fontWeight: \"normal\",\n    },\n    ...deleteDialogStyles,\n    ...modalStyleUtils,\n  });\n\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = React.useState(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n      }}\n    >\n      <InputBoxWrapper\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        extraInputProps={{\n          readOnly: true,\n        }}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        sx={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"contained\"\n        onClick={() => setShown(!shown)}\n      >\n        Show/Hide\n      </Button>\n    </Box>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  distributedSetup: state.system.distributedSetup,\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\nconst connector = connect(mapState, mapDispatchToProps);\n\nconst Inspect = ({\n  classes,\n  setErrorSnackMessage,\n  distributedSetup,\n}: {\n  classes: any;\n  setErrorSnackMessage: any;\n  distributedSetup: boolean;\n}) => {\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    const file = encodeURIComponent(inspectPath);\n    const volume = encodeURIComponent(volumeName);\n\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          setErrorSnackMessage({\n            errorMessage: resErr.message,\n            detailedError: resErr.code,\n          });\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        setErrorSnackMessage(err);\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Inspect\"} />\n      <PageLayout>\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <Fragment>\n            <Box\n              sx={{\n                border: \"1px solid #eaeaea\",\n                padding: \"25px\",\n              }}\n            >\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  e.preventDefault();\n                  performInspect();\n                }}\n              >\n                <Box>\n                  <InputBoxWrapper\n                    id=\"inspect_volume\"\n                    name=\"inspect_volume\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_volume\",\n                    }}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setVolumeName(e.target.value);\n                    }}\n                    label=\"Volume or Bucket Name\"\n                    value={volumeName}\n                    error={volumeError}\n                    required\n                    placeholder={\"test-bucket\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"15px\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    id=\"inspect_path\"\n                    name=\"inspect_path\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_path\",\n                    }}\n                    error={pathError}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setInspectPath(e.target.value);\n                    }}\n                    label=\"File or Path to inspect\"\n                    value={inspectPath}\n                    required\n                    placeholder={\"test*/xl.meta\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"25px\",\n                  }}\n                >\n                  <FormSwitchWrapper\n                    classes={{\n                      inputLabel: classes.switchLabel,\n                    }}\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_encrypt\",\n                    }}\n                    label=\"Encrypt\"\n                    indicatorLabels={[\"True\", \"False\"]}\n                    checked={isEncrypt}\n                    value={\"true\"}\n                    id=\"inspect_encrypt\"\n                    name=\"inspect_encrypt\"\n                    onChange={(e) => {\n                      setIsEncrypt(!isEncrypt);\n                    }}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"55px\",\n                  }}\n                >\n                  <Button\n                    sx={{\n                      marginRight: \"15px\",\n                    }}\n                    type=\"button\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    data-test-id=\"inspect-clear-button\"\n                    onClick={resetForm}\n                  >\n                    Clear\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    data-test-id=\"inspect-submit-button\"\n                    disabled={!isFormValid}\n                  >\n                    Inspect\n                  </Button>\n                </Box>\n              </form>\n            </Box>\n            <Box\n              sx={{\n                marginTop: \"55px\",\n              }}\n            >\n              <HelpBox\n                title={\"Inspect\"}\n                iconComponent={<FileBookIcon />}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"15px\",\n                      }}\n                    >\n                      Inspect files on MinIO server\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"15px\",\n                        fontWeight: 500,\n                      }}\n                    >\n                      Examples\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        flex: \"2\",\n                        marginTop: \"15px\",\n                        \"& .step-number\": {\n                          color: \"#ffffff\",\n                          height: \"25px\",\n                          width: \"25px\",\n                          background: \"#081C42\",\n                          marginRight: \"10px\",\n                          textAlign: \"center\",\n                          fontWeight: 600,\n                          borderRadius: \"50%\",\n                        },\n\n                        \"& .step-row\": {\n                          fontSize: \"16px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n                        },\n\n                        \"& code\": {\n                          paddingLeft: \"10px\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"4px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          backgroundColor: \"#eaeaea\",\n                          color: \"#082146\",\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name :</label>{\" \"}\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path : </label>\n                            <code>test*/xl.meta</code>\n                          </Box>\n                        </Box>\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name : </label>\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path :</label> <code>test*/*/part.*</code>\n                          </Box>\n                        </Box>\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name : </label>\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path :</label> <code>test/**</code>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            </Box>\n          </Fragment>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <DialogContentText>\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <Box>\n                <KeyRevealer value={decryptionKey} />\n              </Box>\n            </DialogContentText>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(connector(Inspect));\n"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","StyledSwitch","withStyles","root","width","height","padding","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","createStyles","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","htmlFor","inputLabel","tooltipContainer","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","borderLeftWidth","zIndex","left","transitionDuration","modalErrorShow","closeButton","cursor","errorTitle","errorLabel","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","KeyRevealer","React","shown","setShown","readOnly","navigator","clipboard","writeText","variant","setErrorSnackMessage","distributedSetup","switchLabel","modalStyleUtils","volumeName","setVolumeName","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","isVolValid","isPathValid","trim","slice","isValid","makeRequest","url","fetch","method","performInspect","file","encodeURIComponent","volume","urlOfInspectApi","then","res","ok","json","resErr","code","blob","filename","headers","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","noValidate","onSubmit","e","preventDefault","flex","background","paddingRight","paddingTop","deleteCookie"],"sourceRoot":""}