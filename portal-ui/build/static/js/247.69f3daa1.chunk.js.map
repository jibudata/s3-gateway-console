{"version":3,"file":"static/js/247.69f3daa1.chunk.js","mappings":"+OA+HA,UA/F0B,SAAHA,GAKC,IAJtBC,EAASD,EAATC,UACAC,EAAWF,EAAXE,YACAC,EAAgBH,EAAhBG,iBACAC,EAAUJ,EAAVI,WAEMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAgCL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCT,EAAAA,EAAAA,WAAkB,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA4B9B,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXrB,UAAWA,EACXsB,MAAK,eACLC,QAAS,WACPrB,GAAiB,EACnB,EACAsB,WAAWJ,EAAAA,EAAAA,KAACK,EAAAA,IAAa,IAAIC,UAE7BC,EAAAA,EAAAA,MAACC,EAAAA,IAAU,CAACC,aAAa,EAAOC,kBAAkB,EAAMJ,SAAA,EACtDC,EAAAA,EAAAA,MAACI,EAAAA,IAAG,CAACC,GAAI,CAAEC,aAAc,IAAKP,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,UAAAM,SAAQ,WAAe,KAAGvB,MAE5BiB,EAAAA,EAAAA,KAACc,EAAAA,IAAQ,CACPC,MAAOzB,EACP0B,MAAO,cACPC,GAAI,YACJC,KAAM,YACNC,YAAa,oBACbC,SAAU,SAACC,GACT9B,EAAU8B,EAAEC,OAAOP,MACrB,KAEFf,EAAAA,EAAAA,KAACc,EAAAA,IAAQ,CACPC,MAAOrB,EACPsB,MAAO,gBACPC,GAAI,cACJC,KAAM,cACNC,YAAa,sBACbC,SAAU,SAACC,GACT1B,EAAY0B,EAAEC,OAAOP,MACvB,KAEFR,EAAAA,EAAAA,MAACgB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIb,GAAIc,EAAAA,GAAgBC,eAAerB,SAAA,EACpDN,EAAAA,EAAAA,KAAC4B,EAAAA,IAAM,CACLX,GAAI,QACJY,KAAK,SACLC,QAAQ,UACRC,QAhEQ,WAChBpC,EAAY,IACZJ,EAAU,GACZ,EA8DUyB,MAAO,WAEThB,EAAAA,EAAAA,KAAC4B,EAAAA,IAAM,CACLX,GAAI,sBACJY,KAAK,SACLC,QAAQ,aACRE,MAAM,UACNC,SACsB,KAApBvC,EAASwC,QAAmC,KAAlB5C,EAAO4C,QAAiBpC,EAEpDiC,QAtEY,WACpBhC,GAAa,GACb,IAAMoC,EAAc,CAAC,EAErBA,EAAO7C,GAAUI,EACjB,IAAM0C,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQxD,GAAgBsD,GAExCG,EAAAA,EAAIC,QACDC,cAAczD,EAAY,CACzB0D,KAAML,IAEPM,MAAK,WACJ3C,GAAa,GACbjB,GAAiB,EACnB,IACC6D,OAAM,SAACC,GACN5D,GAAS6D,EAAAA,EAAAA,KAA0BC,EAAAA,EAAAA,GAAeF,EAAMA,SACxD7C,GAAa,EACf,GACJ,EAoDUiB,MAAO,gBAMnB,C","sources":["screens/Console/Buckets/BucketDetails/AddBucketTagModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { AddNewTagIcon, Box, Button, FormLayout, Grid, InputBox } from \"mds\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IBucketTagModal {\n  modalOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  onCloseAndUpdate: (refresh: boolean) => void;\n}\n\nconst AddBucketTagModal = ({\n  modalOpen,\n  currentTags,\n  onCloseAndUpdate,\n  bucketName,\n}: IBucketTagModal) => {\n  const dispatch = useAppDispatch();\n  const [newKey, setNewKey] = useState<string>(\"\");\n  const [newLabel, setNewLabel] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const resetForm = () => {\n    setNewLabel(\"\");\n    setNewKey(\"\");\n  };\n\n  const addTagProcess = () => {\n    setIsSending(true);\n    const newTag: any = {};\n\n    newTag[newKey] = newLabel;\n    const newTagList = { ...currentTags, ...newTag };\n\n    api.buckets\n      .putBucketTags(bucketName, {\n        tags: newTagList,\n      })\n      .then(() => {\n        setIsSending(false);\n        onCloseAndUpdate(true);\n      })\n      .catch((error) => {\n        dispatch(setModalErrorSnackMessage(errorToHandler(error.error)));\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={modalOpen}\n      title={`Add New Tag `}\n      onClose={() => {\n        onCloseAndUpdate(false);\n      }}\n      titleIcon={<AddNewTagIcon />}\n    >\n      <FormLayout withBorders={false} containerPadding={false}>\n        <Box sx={{ marginBottom: 15 }}>\n          <strong>Bucket</strong>: {bucketName}\n        </Box>\n        <InputBox\n          value={newKey}\n          label={\"New Tag Key\"}\n          id={\"newTagKey\"}\n          name={\"newTagKey\"}\n          placeholder={\"Enter New Tag Key\"}\n          onChange={(e: any) => {\n            setNewKey(e.target.value);\n          }}\n        />\n        <InputBox\n          value={newLabel}\n          label={\"New Tag Label\"}\n          id={\"newTagLabel\"}\n          name={\"newTagLabel\"}\n          placeholder={\"Enter New Tag Label\"}\n          onChange={(e: any) => {\n            setNewLabel(e.target.value);\n          }}\n        />\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n          <Button\n            id={\"save-add-bucket-tag\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={\n              newLabel.trim() === \"\" || newKey.trim() === \"\" || isSending\n            }\n            onClick={addTagProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </FormLayout>\n    </ModalWrapper>\n  );\n};\n\nexport default AddBucketTagModal;\n"],"names":["_ref","modalOpen","currentTags","onCloseAndUpdate","bucketName","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","newKey","setNewKey","_useState3","_useState4","newLabel","setNewLabel","_useState5","_useState6","isSending","setIsSending","_jsx","ModalWrapper","title","onClose","titleIcon","AddNewTagIcon","children","_jsxs","FormLayout","withBorders","containerPadding","Box","sx","marginBottom","InputBox","value","label","id","name","placeholder","onChange","e","target","Grid","item","xs","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","color","disabled","trim","newTag","newTagList","_objectSpread","api","buckets","putBucketTags","tags","then","catch","error","setModalErrorSnackMessage","errorToHandler"],"sourceRoot":""}