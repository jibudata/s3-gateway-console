{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","common/BackLink.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/lodash/debounce.js","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","../node_modules/lodash/toNumber.js","screens/Console/Tenants/actions.ts","../node_modules/lodash/now.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","screens/shared/ErrorBlock.tsx","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","../node_modules/@mui/material/Table/TableContext.js","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Tenants/ListTenants/utils.ts","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Add.js","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Tenants/TenantDetails/utils.ts","screens/Console/Common/GenericWizard/WizardPage.tsx","screens/Console/Common/GenericWizard/GenericWizard.tsx","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/material/TableRow/tableRowClasses.js","../node_modules/@mui/material/TableRow/TableRow.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","utils/validationFunctions.ts","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/TenantSize.tsx","screens/Console/Tenants/AddTenant/Steps/NameTenant.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","id","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","toggleList","sidebarOpen","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","minHeight","boxShadow","justifyContent","labelStyle","rightMenu","textAlign","logo","fill","palette","primary","main","actions","direction","xs","sm","md","item","variant","component","pageContentStyles","contentSpacer","StyledSwitch","margin","switchBase","common","white","thumb","track","transitions","create","checked","focusVisible","switchContainer","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","isOpen","onCancel","onConfirm","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","sx","cancelButton","confirmButton","loading","loadingPosition","startIcon","autoFocus","link","textDecoration","light","icon","to","borderWidth","borderColor","borderStyle","contained","background","dark","rest","button","SelectStyled","spacing","input","InputBase","options","fieldContainer","map","option","_excluded","Box","defaultTheme","defaultClassName","generateClassName","BoxRoot","styled","styleFunctionSx","React","inProps","ref","useTheme","_extendSxProp","extendSxProp","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","createBox","createTheme","ClassNameGenerator","generate","isObject","require","now","toNumber","nativeMax","Math","nativeMin","module","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","radioUnselectedIcon","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","radioOptionsLayout","row","selectorOption","control","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","isBinary","test","slice","updateAddField","pageName","fieldName","ADD_TENANT_UPDATE_FIELD","field","isPageValid","valid","ADD_TENANT_SET_PAGE_VALID","setStorageClassesList","storageClasses","ADD_TENANT_SET_STORAGE_CLASSES_LIST","setLimitSize","limitSize","ADD_TENANT_SET_LIMIT_SIZE","addCaCertificate","ADD_TENANT_ADD_CA_KEYPAIR","deleteCaCertificate","ADD_TENANT_DELETE_CA_KEYPAIR","addFileToCaCertificates","key","fileName","ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR","addKeyPair","ADD_TENANT_ADD_MINIO_KEYPAIR","deleteKeyPair","ADD_TENANT_DELETE_MINIO_KEYPAIR","addFileToKeyPair","ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR","addFileServerCert","ADD_TENANT_ENCRYPTION_SERVER_CERT","addFileClientCert","ADD_TENANT_ENCRYPTION_CLIENT_CERT","addFileVaultCert","ADD_TENANT_ENCRYPTION_VAULT_CERT","addFileVaultCa","ADD_TENANT_ENCRYPTION_VAULT_CA","addFileGemaltoCa","ADD_TENANT_ENCRYPTION_GEMALTO_CA","resetAddTenantForm","ADD_TENANT_RESET_FORM","setTenantDetailsLoad","TENANT_DETAILS_SET_LOADING","setTenantName","tenantName","tenantNamespace","TENANT_DETAILS_SET_CURRENT_TENANT","namespace","setTenantInfo","tenant","TENANT_DETAILS_SET_TENANT","setTenantTab","tab","TENANT_DETAILS_SET_TAB","Date","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt","Tablelvl2Context","errorBlock","withBreak","CopyToClipboard","Object","defineProperty","_react","_interopRequireDefault","_copyToClipboard","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectWithoutProperties","source","excluded","i","target","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","call","_classCallCheck","instance","Constructor","_defineProperties","descriptor","configurable","writable","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_setPrototypeOf","p","_defineProperty","_React$PureComponent","_getPrototypeOf2","_this","_len","Array","_key","concat","_this$props","text","onCopy","elem","Children","only","protoProps","staticProps","subClass","superClass","_inherits","_this$props2","cloneElement","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","PureComponent","deselectCurrent","clipboardToIE11Formatting","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","focus","TableContext","valueString","textOverflow","fileInputField","fileInputStyles","accept","showFileSelector","setShowSelector","Grid","fieldBottom","InputLabel","fieldLabelError","Tooltip","HelpIcon","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","fileArray","toString","split","fileProcess","data","ErrorBlock","fileReselect","ecListTransform","ecList","getLimitSizes","resourceQuotas","quotas","returnQuotas","rsQuota","stCName","hard","used","tenantIsOnline","currentState","status","health_status","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","flexFlow","inputWithCopy","OutlinedInput","readOnly","endAdornment","InputAdornment","BoxIconButton","onMouseDown","edge","warningBlock","credentialTitle","buttonContainer","credentialsPanel","overflowY","promptTitle","buttonSpacer","promptIcon","newServiceAccount","closeModal","entity","consoleCreds","idp","ModalWrapper","NewAccountIcon","formScrollable","isArray","credentialsPair","accessKey","secretKey","WarnIcon","Button","consoleExtras","cCreds","itemMap","access_key","secret_key","filename","element","setAttribute","encodeURIComponent","click","download","JSON","stringify","endIcon","getDefaultAffinity","poolName","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","labelSelector","matchExpressions","operator","values","topologyKey","getNodeSelector","labels","withPodAntiAffinity","splittedLabels","splitKeyValue","nodeSelector","nodeAffinity","nodeSelectorTerms","def","log","wizardStepContainer","flexDirection","flex","wizardComponent","wizardModal","buttonsContainer","borderTop","buttonInnerContainer","page","pageChange","loadingStep","forModal","componentRender","LinearProgress","buttons","btn","toPage","action","buttonAction","enabled","wizFromContainer","wizFromModal","modalWizardSteps","borderBottom","listStyle","buttonList","outline","paddedContentGrid","stepsLabel","stepsMasterContainer","verticalSteps","borderRight","stepsContainer","paddingTop","stepItem","wizardSteps","currentStep","setCurrentStep","toElement","lastPage","nextPage","prevPage","pg","step","lg","xl","List","dense","ListItem","selected","ListItemText","getTableUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TableRoot","overridesResolver","styles","ownerState","stickyHeader","borderCollapse","borderSpacing","typography","body2","secondary","captionSide","defaultComponent","Table","useThemeProps","slots","composeClasses","useUtilityClasses","table","Provider","role","getTableBodyUtilityClass","TableBodyRoot","tablelvl2","TableBody","getTableRowUtilityClass","tableRowClasses","TableRowRoot","head","footer","verticalAlign","hover","alpha","selectedOpacity","hoverOpacity","TableRow","getTableCellUtilityClass","tableCellClasses","TableCellRoot","capitalize","align","mode","lighten","divider","darken","pxToRem","fontWeightMedium","paddingCheckbox","TableCell","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","commonFormValidation","fieldsValidate","returnErrors","trim","fieldKey","customValidation","customValidationMessage","pattern","customPatternMessage","rgx","RegExp","match","setErrorSnackMessage","wrapText","wordWrap","modalBasic","addNamespaceOpen","closeAddNamespaceModalAndRefresh","addNamespaceLoading","setAddNamespaceLoading","api","invoke","then","res","catch","ConfirmDialog","DialogContentText","advancedMode","tenants","createTenant","advancedModeOn","volumeSize","fields","tenantSize","sizeFactor","drivesPerServer","nodes","memoryNode","ecParity","ecParityChoices","cleanECChoices","maxAllocableMemo","memorySize","distribution","ecParityCalc","selectedStorageClass","nameTenant","wizardCommon","errorFlag","setErrorFlag","nodeError","setNodeError","usableInformation","storageFactors","find","erasureCode","updateField","validateMemorySize","memSize","clusterSize","maxMemSize","clusterSizeFactor","clusterSizeBytes","getBytes","memoSize","setMemoryResource","ecCodeValidated","erasureCodeCalc","persistentVolumes","pvSize","defaultEC","validateClusterSize","getECValue","isNaN","maxMemory","max_memory","getMaxAllocableMemory","factor","clusterCapacity","unit","distrCalculate","calculateDistribution","parsedSize","commonValidation","niceBytes","Divider","disks","rawCapacity","maxCapacity","floor","maxFailureTolerations","compositeFieldContainer","compositeAddOn","formFieldStyles","validationErrors","setValidationErrors","cleanValidation","clearValidationError","headerElement","h3Section","descriptionText","formFieldRow","InputBoxWrapper","multiContainer","SelectWrapper","k8sfactorForDropdown","sizePreview","emptyNamespace","setEmptyNamespace","loadingNamespaceInfo","setLoadingNamespaceInfo","showCreateButton","setShowCreateButton","openAddNSConfirm","setOpenAddNSConfirm","getNamespaceInformation","tenantsList","elements","newStorage","storageClass","debounceNamespace","useMemo","debounce","customNamespaceError","isValid","frmValidationCleanup","refresh","Paper","paperWrapper","AddIcon","customImage","configure","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","exposeMinIO","exposeConsole","prometheusCustom","tenantCustom","logSearchCustom","logSearchVolumeSize","logSearchSizeFactor","prometheusVolumeSize","prometheusSizeFactor","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","tenantSecurityContext","logSearchSecurityContext","logSearchPostgresSecurityContext","prometheusSecurityContext","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","logSearchCustomFields","fieldSpaceTop","prometheusCustomFields","customAccountValidation","runAsUser","runAsGroup","fsGroup","commonVal","FormSwitchWrapper","runAsNonRoot","idpSelection","identityProvider","accessKeys","secretKeys","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","ADURL","ADSkipTLS","ADServerInsecure","ADUserNameSearchFilter","ADGroupSearchBaseDN","ADGroupSearchFilter","ADGroupNameAttribute","ADUserDNs","ADUserNameFormat","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","shortened","gridTemplateColumns","gridGap","buttonTray","protocolRadioOptions","adUserDnRows","updateUserField","newUserField","updatePwordField","updateADUserField","newADUserDNsField","customIDPValidation","inputs","_","splice","RemoveIcon","getRandomString","RadioGroupSelector","Typography","gutterBottom","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","caCertificates","minioCertificateRows","fileItem","minWidth","minioCertsContainer","minioCACertsRow","rowActions","keyPair","FileSelector","encodedValue","cert","replicas","encryption","enableEncryption","encryptionType","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","enableCustomCertsForKES","serverCertificate","clientCertificate","vaultCertificate","vaultCA","gemaltoCA","kesSecurityContext","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","encryptionAvailable","encoded_key","encoded_cert","encryptionValidation","podAffinity","affinity","nodeSelectorLabels","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","setLoading","keyValueMap","setKeyValueMap","keyValuePairs","setKeyValuePairs","keyOptions","setKeyOptions","k","vl","kvp","kvs","a","join","splitItem","affinityHelpText","newKey","arrCp","assign","v","validPages","pageBox","settingsCommon","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","addSending","setAddSending","consoleCaCertificates","consoleCertificate","affinityType","kesReplicas","generatePoolName","affinityObject","dataSend","access_keys","secret_keys","enable_tls","enable_console","enable_prometheus","service_name","image","expose_minio","expose_console","pools","servers","volumes_per_server","volume_configuration","storage_class_name","resources","requests","memory","request","limits","limit","securityContext","erasureCodingParity","image_registry","registry","username","password","logSearchConfiguration","storageSize","postgres_image","postgres_init_image","postgres_securityContext","prometheusConfiguration","sidecar_image","init_image","tenantCerts","consoleCerts","caCerts","consoleCaCerts","ca_certificates","console_ca_certificates","minio","crt","tls","insertEncrypt","gemaltoCAIntroduce","ca","gemalto","keysecure","endpoint","credentials","token","domain","retry","aws","secretsmanager","region","kmskey","accesskey","secretkey","azure","keyvault","tenant_id","client_id","client_secret","gcp","secretmanager","project_id","client_email","private_key_id","private_key","vaultKeyPair","vaultCAInsert","vaultTLS","vault","engine","prefix","approle","secret","ping","encryptionServerKeyPair","encryptionClientKeyPair","client","server","dataIDP","keyarray","oidc","configuration_url","secret_id","claim_name","callback_url","scopes","active_directory","url","skip_tls_verification","server_insecure","username_format","username_search_filter","group_search_base_dn","group_search_filter","group_name_attribute","user_dns","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","server_start_tls","consoleSAList","newSrvAcc","consoleItem","consoleKey","history","createButton","every","includes","filteredWizardSteps","advancedOnly","CredentialsPrompt","PageHeader","BackLink","PageLayout","GenericWizard"],"mappings":"mHAsIIA,E,4LAMEC,EAAgB,WACpBC,cAAcF,IA+FVG,EAAqB,CACzBC,oBAAqBC,KAKRC,EAFGC,aARD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAOER,EAErBG,CAAUM,aA3LV,SAACC,GAAD,OACbC,YAAa,CACXC,oBAAqB,CACnBC,SAAU,WACVC,UAAW,GACXC,MAAO,MACPC,gBAAiB,OACjBC,OAAQ,oBACRC,gBAAiB,GACjBC,aAAc,EACdC,OAAQ,IACRC,QAAS,YACTC,KAAM,MACNC,UAAW,mBACXC,QAAS,EACTC,mBAAoB,QAEtBC,eAAgB,CACdF,QAAS,GAEXG,YAAa,CACXd,SAAU,WACVe,MAAO,EACPC,SAAU,QACVZ,OAAQ,EACRD,gBAAiB,OACjBc,OAAQ,WAEVC,WAAY,CACVC,QAAS,OACTC,WAAY,UAEdC,WAAY,CACVC,MAAO,OACPN,SAAU,GACVO,WAAY,IACZC,WAAY,EACZC,YAAa,IAEfC,YAAa,CACXJ,MAAO,UACPH,QAAS,OACT,QAAS,CACPjB,MAAO,GACPyB,OAAQ,KAGZC,cAAe,CACbN,MAAO,UACPH,QAAS,OACTC,WAAY,SACZhB,OAAQ,EACRD,gBAAiB,cACjB0B,YAAa,EACbb,SAAU,GACVc,kBAAmB,OACnBb,OAAQ,WAEVc,sBAAuB,CACrBC,UAAW,SACXV,MAAO,UACPW,WAAY,EACZzB,QAAS,SACT0B,WAAY,sBACZC,SAAU,UAEZC,iBAAkB,CAChBH,WAAY,EACZzB,QAAS,YAEX6B,aAAc,CACZb,YAAa,GAEfc,UAAW,CACT5B,UAAW,iBACXoB,kBAAmB,YAgHAlC,EAlGN,SAAC,GAKK,IAJvB2C,EAIsB,EAJtBA,QACA9C,EAGsB,EAHtBA,kBACAL,EAEsB,EAFtBA,oBACAoD,EACsB,EADtBA,YAEA,EAAsCC,oBAAkB,GAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,oBAAkB,GAAhE,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAoBC,uBAAY,WACpCF,GAAmB,KAClB,IAEHG,qBAAU,WACHJ,IACHxD,EAAoB,CAAE6D,cAAe,GAAIC,aAAc,KACvDP,GAAe,MAGhB,CAACvD,EAAqBwD,IAEzBI,qBAAU,WAEwB,KAA9BvD,EAAkB0D,SACS,UAA3B1D,EAAkB2D,MAGlBP,GAAmB,KAGpB,CAACC,EAAmBrD,EAAkB0D,QAAS1D,EAAkB2D,OAEpE,IAIMD,EAAUE,IAAI5D,EAAmB,UAAW,IAC5C6D,EAAiBD,IAAI5D,EAAmB,mBAAoB,IAElE,MAA+B,UAA3BA,EAAkB2D,MAAgC,KAAZD,EACjC,KAIP,cAAC,WAAD,UACE,sBACEI,UAAS,UAAKhB,EAAQxC,oBAAb,YACP6C,EAAkBL,EAAQ1B,eAAiB,IAE7C2C,MAAOhB,EACPiB,YAAaxE,EACbyE,aAAc,WA1DpB1E,EAAS2E,YA0DgCb,EA1DF,MAoDnC,UAQE,wBAAQS,UAAWhB,EAAQzB,YAAa8C,QAASd,EAAjD,SACE,cAAC,IAAD,MAEF,sBAAKS,UAAWhB,EAAQrB,WAAxB,UACE,sBAAMqC,UAAWhB,EAAQb,YAAzB,SACE,cAAC,IAAD,MAEF,sBAAM6B,UAAWhB,EAAQlB,WAAzB,SAAsC8B,OAEpB,KAAnBG,GACC,eAAC,WAAD,WACE,qBAAKC,UAAWhB,EAAQsB,qBAAxB,SACE,yBAAQN,UAAWhB,EAAQX,cAAegC,QAjChC,WACpBjB,GAAgBD,IAgCN,oBAEE,cAAC,IAAD,CACEa,UAAS,UAAKhB,EAAQF,aAAb,YACPK,EAAcH,EAAQD,UAAY,WAK1C,qBACEiB,UAAS,UAAKhB,EAAQR,sBAAb,YACPW,EAAcH,EAAQH,iBAAmB,IAF7C,SAKGkB,gBC9CThE,EAAYC,aAJD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClCmE,2BAGalE,iBAxIA,SAACC,GAAD,OACbC,YAAa,2BACRiE,KADO,IAEVC,KAAM,CACJ,mBAAoB,CAClBxD,QAAS,wBAGbyD,QAAS,CACPzD,QAAS,GACT0D,cAAe,GAEjBC,iBAAkB,CAChBjE,MAAO,OACPkE,SAAU,MAETC,QAwHQzE,CAAmBN,GArHb,SAAC,GAUF,IATlBgF,EASiB,EATjBA,QACAC,EAQiB,EARjBA,UACAC,EAOiB,EAPjBA,MACAC,EAMiB,EANjBA,SACAlC,EAKiB,EALjBA,QAKiB,IAJjBmC,iBAIiB,SAHjBjF,EAGiB,EAHjBA,kBACAkF,EAEiB,EAFjBA,iBACAb,EACiB,EADjBA,qBAEA,EAAwCrB,oBAAkB,GAA1D,mBAAOmC,EAAP,KAAqBC,EAArB,KAEA7B,qBAAU,WACRc,EAAqB,MACpB,CAACA,IAEJd,qBAAU,WACR,GAAIvD,EAAmB,CACrB,GAAkC,KAA9BA,EAAkB0D,QAEpB,YADA0B,GAAgB,GAIa,UAA3BpF,EAAkB2D,MACpByB,GAAgB,MAGnB,CAACpF,IAEJ,IAKMqF,EAAaJ,EACf,CACEnC,QAAS,CACPwC,MAAOxC,EAAQ4B,mBAGnB,CAAEC,SAAU,KAAeY,WAAW,GAEtC7B,EAAU,GAYd,OAVI1D,IACF0D,EAAU1D,EAAkBwF,kBAEa,KAAvCxF,EAAkBwF,kBAClBxF,EAAkBwF,iBAAiBC,OAAS,KAE5C/B,EAAU1D,EAAkB0D,UAK9B,eAACgC,EAAA,EAAD,yBACEC,KAAMb,EACNhC,QAASA,GACLuC,GAHN,IAIEO,OAAQ,QACRf,QAAS,SAACgB,EAAOC,GACA,kBAAXA,GACFjB,KAGJf,UAAWhB,EAAQyB,KAVrB,UAYE,eAACwB,EAAA,EAAD,CAAajC,UAAWhB,EAAQiC,MAAhC,UACE,qBAAKjB,UAAWhB,EAAQkD,UAAxB,SAAoCjB,IACpC,qBAAKjB,UAAWhB,EAAQmD,eAAxB,SACE,cAACC,EAAA,EAAD,CACE,aAAW,QACXpC,UAAWhB,EAAQzB,YACnB8C,QAASU,EACTsB,eAAa,EACbC,KAAK,QALP,SAOE,cAAC,IAAD,WAKN,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CACEV,KAAMR,EACNrB,UAAWhB,EAAQwD,cACnBzB,QAAS,WAxDbO,GAAgB,GAChBf,EAAqB,KA0DjBX,QAASA,EACT6C,aAAc,CACZzC,UAAU,GAAD,OAAKhB,EAAQ0D,SAAb,YACPxG,GAAgD,UAA3BA,EAAkB2D,KACnCb,EAAQ2D,cACR,KAGRC,iBACE1G,GAAgD,UAA3BA,EAAkB2D,KAAmB,IAAQ,MAGtE,cAACgD,EAAA,EAAD,CAAe7C,UAAWoB,EAAmB,GAAKpC,EAAQ0B,QAA1D,SACGQ,a,6JCnFH4B,EAAcC,aAAW,SAACzG,GAAD,OAC7BC,YAAa,eACRyG,SAIP,SAASC,EAAWC,GAClB,IAAMlE,EAAU8D,IAEhB,OACE,cAAC,IAAD,aACEK,WAAY,CAAEnE,YACVkE,IA6HK7G,iBA/JA,SAACC,GAAD,OACbC,YAAa,uCACR6G,KACAC,KAFO,IAGVC,iBAAkB,CAChBC,SAAU,EACV9G,SAAU,YAEZ+G,cAAe,CACb/G,SAAU,WACVe,MAAO,EACPiG,IAAK,EACL,QAAS,CACP5C,SAAU,GACV6C,UAAW,IAEb,cAAe,CACbD,IAAK,SA8IEpH,EAxHS,SAAC,GAuBH,IAtBpBsH,EAsBmB,EAtBnBA,MACAC,EAqBmB,EArBnBA,SACAC,EAoBmB,EApBnBA,MACAC,EAmBmB,EAnBnBA,GACAC,EAkBmB,EAlBnBA,KAkBmB,IAjBnBlE,YAiBmB,MAjBZ,OAiBY,MAhBnBmE,oBAgBmB,MAhBJ,MAgBI,MAfnBC,gBAemB,aAdnBC,iBAcmB,aAbnBC,eAamB,MAbT,GAaS,MAZnBC,aAYmB,MAZX,EAYW,MAXnBC,aAWmB,MAXX,GAWW,MAVnBC,gBAUmB,aATnBC,mBASmB,MATL,GASK,EARnBC,EAQmB,EARnBA,IACAC,EAOmB,EAPnBA,IAOmB,IANnBC,mBAMmB,MANL,KAMK,MALnBC,qBAKmB,MALH,KAKG,MAJnBC,uBAImB,MAJD,GAIC,EAHnBpB,EAGmB,EAHnBA,cAGmB,IAFnBqB,uBAEmB,SADnB7F,EACmB,EADnBA,QAEI8F,EAAe,aAAK,aAAcV,GAAUQ,GAUhD,MARa,WAAT/E,GAAqB2E,IACvBM,EAAU,IAAUN,GAGT,WAAT3E,GAAqB4E,IACvBK,EAAU,IAAUL,GAIpB,cAAC,IAAMM,SAAP,UACE,eAAC,IAAD,CACEC,WAAS,EACThF,UAAS,WACG,KAAVqE,EAAerF,EAAQiG,aAAejG,EAAQkG,mBAHlD,UAMa,KAAVvB,GACC,eAAC,IAAD,CACEwB,QAASrB,EACT9D,UACE6E,EAAkB7F,EAAQoG,gBAAkBpG,EAAQqG,WAHxD,UAME,iCACG1B,EACAW,EAAW,IAAM,MAEP,KAAZH,GACC,qBAAKnE,UAAWhB,EAAQsG,iBAAxB,SACE,cAAC,IAAD,CAASrE,MAAOkD,EAASoB,UAAU,YAAnC,SACE,qBAAKvF,UAAWhB,EAAQmF,QAAxB,SACE,cAAC,IAAD,aAQZ,sBAAKnE,UAAWhB,EAAQsE,iBAAxB,UACE,cAACL,EAAD,CACEa,GAAIA,EACJC,KAAMA,EACNtC,WAAS,EACToC,MAAOA,EACPI,SAAUA,EACVL,SAAUA,EACV/D,KAAMA,EACNqE,UAAWA,EACXF,aAAcA,EACdc,WAAYA,EACZT,MAAiB,KAAVA,EACPmB,WAAYnB,EACZE,YAAaA,EACbvE,UAAWhB,EAAQyG,cAEpBf,GACC,qBACE1E,UAAS,UAAKhB,EAAQwE,cAAb,YACG,KAAVG,EAAe,YAAc,IAFjC,SAKE,cAAC,IAAD,CACEtD,QACEmD,EACI,WACEA,KAEF,kBAAM,MAEZlB,KAAM,QACNoD,oBAAoB,EACpBrD,eAAe,EACfsD,oBAAoB,EAXtB,SAaGjB,MAINC,GACC,qBACE3E,UAAS,UAAKhB,EAAQwE,cAAb,YACG,KAAVG,EAAe,YAAc,IAFjC,SAKGgB,gB,iCCpNf,6GAsHM/I,EAAqB,CACzBgK,gBAGI7J,EAAYC,aAVD,SAACC,GAAD,MAAsB,CACrC4J,YAAa5J,EAAME,OAAO0J,YAC1BC,aAAc7J,EAAME,OAAO2J,aAC3BC,eAAgB9J,EAAM+J,cAAcC,cAAcC,mBAOhBtK,GAErBG,MAAUM,aAlGV,SAACC,GAAD,OACbC,YAAa,CACX4J,gBAAiB,CAEfxJ,MAAO,OACPyJ,UAAW,GACXxI,QAAS,OACThB,gBAAiB,OACjBM,KAAM,EACNmJ,UAAW,8BAEb1C,MAAO,CACL/F,QAAS,OACT0I,eAAgB,aAChBzI,WAAY,UAEd0I,WAAY,CACVxI,MAAO,OACPN,SAAU,GACVO,WAAY,IACZC,WAAY,GACZvB,UAAW,GAEb8J,UAAW,CACTC,UAAW,SAEbC,KAAM,CACJzI,WAAY,GACZ0I,KAAMrK,EAAMsK,QAAQC,QAAQC,KAC5B,cAAe,CACbnK,MAAO,UAoEUN,EA/DN,SAAC,GAQA,IAPlB2C,EAOiB,EAPjBA,QACA2E,EAMiB,EANjBA,MACAoD,EAKiB,EALjBA,QACAlB,EAIiB,EAJjBA,YACAC,EAGiB,EAHjBA,aACAC,EAEiB,EAFjBA,eACAH,EACiB,EADjBA,WAEA,OACE,eAAC,IAAD,CACEZ,WAAS,EACThF,UAAS,UAAKhB,EAAQmH,gBAAb,gBACTa,UAAU,MACVnJ,WAAW,SAJb,UAME,cAAC,IAAD,CAAKD,QAAS,CAAEqJ,GAAI,QAASC,GAAI,QAASC,GAAI,QAA9C,SACE,cAAC,IAAD,CAAMC,MAAI,EAACH,GAAI,GAAIhH,MAAO,CAAE7B,OAAQ,IAApC,oBAIF,eAAC,IAAD,CAAMgJ,MAAI,EAACH,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGnH,UAAWhB,EAAQ2E,MAArD,WACIkC,GACA,qBAAK7F,UAAWhB,EAAQ0H,KAAxB,SACGZ,EAAe,cAAC,IAAD,IAAmB,cAAC,IAAD,MAGvC,cAAC,IAAD,CAAYuB,QAAQ,KAAKrH,UAAWhB,EAAQuH,WAA5C,SACG5C,OAGL,eAAC,IAAD,CAAMyD,MAAI,EAACH,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGnH,UAAWhB,EAAQwH,UAArD,UACGO,GAAWA,EACXhB,GAAkBA,EAAepE,OAAS,GACzC,cAAC,IAAD,CACE5D,MAAM,UACN,aAAW,eACXuJ,UAAU,OACVjH,QAAS,WACPuF,KAEFtD,KAAK,QAPP,SASE,cAAC,KAAD,iB,8FC1EGjG,iBAvBA,SAACC,GAAD,OACbC,YAAa,eACRgL,QAqBQlL,EAZI,SAAC,GAA4D,IAA1D2C,EAAyD,EAAzDA,QAAyD,IAAhDgB,iBAAgD,MAApC,GAAoC,EAAhCkB,EAAgC,EAAhCA,SAC7C,OACE,qBAAKlB,UAAWhB,EAAQwI,cAAxB,SACE,cAAC,IAAD,CAAMxC,WAAS,EAAf,SACE,cAAC,IAAD,CAAMoC,MAAI,EAACH,GAAI,GAAIjH,UAAWA,EAA9B,SACGkB,Y,iKC4CLuG,EAAepL,aAAW,SAACC,GAAD,MAAY,CAC1CmE,KAAM,CACJ9D,MAAO,GACPyB,OAAQ,GACRnB,QAAS,EACTyK,OAAQ,GAEVC,WAAY,CACV1K,QAAS,EACT,YAAa,CACXE,UAAW,mBACXY,MAAOzB,EAAMsK,QAAQgB,OAAOC,MAC5B,aAAc,CACZjL,gBAAiB,UACjByJ,UAAW,oCACXjJ,QAAS,EACTP,OAAQ,SAGZ,wBAAyB,CACvBkB,MAAO,UACPlB,OAAQ,mBAGZiL,MAAO,CACLnL,MAAO,GACPyB,OAAQ,GACRxB,gBAAiB,UACjBC,OAAQ,oBACRoB,WAAY,GAEd8J,MAAO,CACLhL,aAAc,GACdH,gBAAiB,UACjByJ,UAAW,oCACXjJ,QAAS,EACTuB,WAAYrC,EAAM0L,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,GACTC,aAAc,GACdC,gBAAiB,CACfxK,QAAS,OACTC,WAAY,SACZyI,eAAgB,eA3CCjK,CA6CjBgM,KAsGWhM,iBA5KA,SAACC,GAAD,OACbC,YAAa,yBACX+L,aAAc,CACZC,aAAc,IAEhBC,iBAAkB,CAChBxK,WAAY,OACZD,MAAO,sBAET0K,eAAgB,CACdhL,SAAU,GACVM,MAAO,UACP2J,OAAQ,gBAEVgB,iBAAkB,CAChBhM,UAAW,EACXqB,MAAO,WAEToG,QAAS,CACP1G,SAAU,KAETkL,KACAvF,QAsJQ/G,EApGW,SAAC,GAaP,IAAD,IAZjBsH,aAYiB,MAZT,GAYS,EAXjBC,EAWiB,EAXjBA,SACAC,EAUiB,EAVjBA,MACAC,EASiB,EATjBA,GACAC,EAQiB,EARjBA,KAQiB,IAPjBmE,eAOiB,aANjBjE,gBAMiB,aALjB2E,kBAKiB,aAJjBzE,eAIiB,MAJP,GAIO,MAHjB0E,mBAGiB,MAHH,GAGG,EAFjB7J,EAEiB,EAFjBA,QACA8J,EACiB,EADjBA,gBAEMC,EACJ,eAAC,IAAMhE,SAAP,YACI6D,GACA,sBACE5I,UAAWgJ,YAAKhK,EAAQyJ,eAAT,eACZzJ,EAAQwJ,kBAAoBN,IAFjC,SAKGY,GAAmBA,EAAgBnH,OAAS,EACzCmH,EAAgB,GAChB,QAGR,cAACrB,EAAD,CACES,QAASA,EACTtE,SAAUA,EACV7F,MAAM,UACNgG,KAAMA,EACNe,WAAY,CAAE,aAAc,oBAC5Bb,SAAUA,EACV5B,eAAa,EACbqD,oBAAkB,EAClBC,oBAAkB,EAClB9B,MAAOA,KAEP+E,GACA,sBACE5I,UAAWgJ,YAAKhK,EAAQyJ,eAAT,eACZzJ,EAAQwJ,iBAAmBN,IAFhC,SAKGY,EAAkBA,EAAgB,GAAK,UAMhD,OAAIF,EACKG,EAIP,qBAAK/I,UAAWhB,EAAQsJ,aAAxB,SACE,eAAC,IAAD,CAAMtD,WAAS,EAACnH,WAAY,SAA5B,UACE,cAAC,IAAD,CAAMuJ,MAAI,EAACH,IAAE,EAAb,SACE,eAAC,IAAD,CAAMjC,WAAS,EAAf,UACE,cAAC,IAAD,CAAMoC,MAAI,EAACH,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACa,KAAVxD,GACC,eAAC,IAAD,CAAYwB,QAASrB,EAAI9D,UAAWhB,EAAQqG,WAA5C,UACE,+BAAO1B,IACM,KAAZQ,GACC,qBAAKnE,UAAWhB,EAAQsG,iBAAxB,SACE,cAAC,IAAD,CAASrE,MAAOkD,EAASoB,UAAU,YAAnC,SACE,qBAAKvF,UAAWhB,EAAQmF,QAAxB,SACE,cAAC,IAAD,eAQd,cAAC,IAAD,CAAMiD,MAAI,EAACH,GAAI,GAAIC,IAAE,EAACT,UAAW,OAAjC,SACmB,KAAhBoC,GACC,cAAC,IAAD,CAAYvB,UAAU,IAAItH,UAAWhB,EAAQ0J,iBAA7C,SACGG,WAOX,cAAC,IAAD,CACEzB,MAAI,EACJH,GAAI,GACJC,GAAI,EACJT,UAAW,QACXzG,UAAWhB,EAAQoJ,gBALrB,SAOGW,a,+KC1FI1M,iBApGA,SAACC,GAAD,OACbC,YAAa,eACRiE,QAkGQnE,EAhFO,SAAC,GAaI,IAAD,IAZxB4M,cAYwB,SAXxBlI,EAWwB,EAXxBA,QACAmI,EAUwB,EAVxBA,SACAC,EASwB,EATxBA,UASwB,IARxBnK,eAQwB,MARd,GAQc,MAPxBiC,aAOwB,MAPhB,GAOgB,EANxBmI,EAMwB,EANxBA,UACAC,EAKwB,EALxBA,oBAKwB,IAJxBC,kBAIwB,MAJX,SAIW,MAHxBC,mBAGwB,MAHV,UAGU,MAFxBC,0BAEwB,MAFH,GAEG,MADxBC,yBACwB,MADJ,GACI,EACxB,OACE,eAAC,IAAD,CACE5H,KAAMoH,EACNlI,QAAS,SAACgB,EAAOC,GACA,kBAAXA,GACFjB,KAGJf,UAAWhB,EAAQyB,KACnBiJ,GAAI,CACF,mBAAoB,CAClBzM,QAAS,wBAVf,UAcE,eAAC,IAAD,CAAa+C,UAAWhB,EAAQiC,MAAhC,UACE,qBAAKjB,UAAWhB,EAAQkD,UAAxB,SAAoCjB,IACpC,qBAAKjB,UAAWhB,EAAQmD,eAAxB,SACE,cAAC,IAAD,CACE,aAAW,QACXnC,UAAWhB,EAAQzB,YACnB8C,QAASU,EACTsB,eAAa,EACbC,KAAK,QALP,SAOE,cAAC,IAAD,WAKN,cAAC,IAAD,CAAetC,UAAWhB,EAAQ0B,QAAlC,SACG2I,IAEH,eAAC,IAAD,CAAerJ,UAAWhB,EAAQ+H,QAAlC,UACE,cAAC,IAAD,yBACE/G,UAAWhB,EAAQ2K,aACnBtJ,QAAS6I,GAAYnI,EACrBkD,SAAUmF,EACVvJ,KAAK,UACD4J,GALN,IAMEpC,QAAQ,WACRtJ,MAAM,UAPR,SASGuL,KAGH,cAAC,IAAD,yBACEtJ,UAAWhB,EAAQ4K,cACnB/J,KAAK,SACLQ,QAAS8I,EACTU,QAAST,EACTnF,SAAUmF,EACV/B,QAAQ,WACRtJ,MAAM,YACN+L,gBAAgB,QAChBC,UAAW,cAAC,IAAMhF,SAAP,IACXiF,WAAS,GACLR,GAXN,aAaGD,e,iCC9GX,kDA+DelN,iBAxCA,SAACC,GAAD,OACbC,YAAa,CACX0N,KAAM,CACJrM,QAAS,OACTC,WAAY,SACZqM,eAAgB,OAChBrJ,SAAU,QACV5D,QAAS,sBACTc,MAAOzB,EAAMsK,QAAQC,QAAQsD,MAC7B1M,SAAU,QACV,UAAW,CACTyM,eAAgB,cAGpBE,KAAM,CACJlM,YAAa,QACbN,QAAS,OACTC,WAAY,SACZyI,eAAgB,cAsBPjK,EAXE,SAAC,GAAkD,IAAhDgO,EAA+C,EAA/CA,GAAI1G,EAA2C,EAA3CA,MAAO3E,EAAoC,EAApCA,QAASgB,EAA2B,EAA3BA,UACtC,OACE,eAAC,IAAD,CAAMqK,GAAIA,EAAIrK,UAAS,UAAKhB,EAAQiL,KAAb,YAAqBjK,GAAwB,IAApE,UACE,qBAAKA,UAAWhB,EAAQoL,KAAxB,SACE,cAAC,IAAD,MAEF,qBAAKpK,UAAWhB,EAAQ2E,MAAxB,SAAgCA,W,kKCyCvBtH,iBA5EA,SAACC,GAAD,OACbC,YAAa,CACXkE,KAAM,CACJxD,QAAS,EACTgB,WAAY,EACZqM,YAAa,EACbC,YAAa,UACbxM,MAAO,UACPyM,YAAa,QACbzN,aAAc,EACd,cAAe,CAEbJ,MAAO,IAET,8BAA+B,CAC7BC,gBAAiBN,EAAMsK,QAAQC,QAAQC,KACvC/J,aAAc,EACdK,QAAS,IAEX,aAAc,CACZW,MAAO,UACPwM,YAAa,YAGjBE,UAAW,CACTF,YAAajO,EAAMsK,QAAQC,QAAQC,KACnC4D,WAAYpO,EAAMsK,QAAQC,QAAQC,KAClC/I,MAAO,QACP,8BAA+B,CAC7BnB,gBAAiBN,EAAMsK,QAAQC,QAAQ8D,KACvC5N,aAAc,EACdK,QAAS,IAEX,UAAW,CACTR,gBAAiBN,EAAMsK,QAAQC,QAAQsD,MACvCpM,MAAO,aAyCA1B,EA7BO,SAAC,GAMA,IALrB2C,EAKoB,EALpBA,QACAkC,EAIoB,EAJpBA,SAIoB,IAHpBmG,eAGoB,MAHV,WAGU,EAFpBlD,EAEoB,EAFpBA,QACGyG,EACiB,iBACdC,EACJ,cAAC,IAAD,2BACMD,GADN,IAEE5K,UAAWgJ,YAAKhK,EAAQyB,KAAT,eACZzB,EAAQyL,UAAwB,cAAZpD,IAHzB,SAMGnG,KAIL,OAAIiD,GAAuB,KAAZA,EAEX,cAAC,IAAD,CAASlD,MAAOkD,EAAhB,SACE,+BAAO0G,MAKNA,M,sKCzCHC,EAAezO,aAAW,SAACC,GAAD,OAC9BC,YAAa,CACXkE,KAAM,CACJrC,OAAQ,GACRM,WAAY,EACZ,YAAa,CACXhC,UAAWJ,EAAMyO,QAAQ,KAG7BC,MAAO,CACL5M,OAAQ,GACR3B,SAAU,WACVsB,MAAO,UACPN,SAAU,GACVO,WAAY,IACZf,QAAS,qBACTJ,OAAQ,oBACRE,aAAc,EACda,QAAS,OACTC,WAAY,SACZ,UAAW,CACT0M,YAAa,WAEf,UAAW,CACT3N,gBAAiB,aAxBJP,CA4BnB4O,KAsDa5O,iBAxFA,SAACC,GAAD,OACbC,YAAa,2BACR6G,KACAC,QAqFQhH,EApDO,SAAC,GAUH,IATlB2C,EASiB,EATjBA,QACA8E,EAQiB,EARjBA,GACAC,EAOiB,EAPjBA,KACAH,EAMiB,EANjBA,SACAsH,EAKiB,EALjBA,QACAvH,EAIiB,EAJjBA,MAIiB,IAHjBQ,eAGiB,MAHP,GAGO,EAFjBN,EAEiB,EAFjBA,MAEiB,IADjBI,gBACiB,SACjB,OACE,cAAC,IAAMc,SAAP,UACE,eAAC,IAAD,CAAMqC,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQmM,eAAtC,UACa,KAAVxH,GACC,eAAC,IAAD,CAAYwB,QAASrB,EAAI9D,UAAWhB,EAAQqG,WAA5C,UACE,+BAAO1B,IACM,KAAZQ,GACC,qBAAKnE,UAAWhB,EAAQsG,iBAAxB,SACE,cAAC,IAAD,CAASrE,MAAOkD,EAASoB,UAAU,YAAnC,SACE,qBAAKvF,UAAWhB,EAAQmF,QAAxB,SACE,cAAC,IAAD,aAOZ,cAAC,IAAD,CAAa1C,WAAS,EAAtB,SACE,cAAC,IAAD,CACEqC,GAAIA,EACJC,KAAMA,EACNF,MAAOA,EACPD,SAAUA,EACVoH,MAAO,cAACF,EAAD,IACP7G,SAAUA,EANZ,SAQGiH,EAAQE,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CACExH,MAAOwH,EAAOxH,MADhB,SAIGwH,EAAO1H,OAJV,iBAEiBI,EAFjB,YAEyBsH,EAAO1H,wB,mHC3HxC2H,EAAY,CAAC,YAAa,a,sBCM1BC,EDES,WAAiC,IAAdL,EAAc,uDAAJ,GAExCM,EAGEN,EAHFM,aADF,EAIIN,EAFFO,wBAFF,MAEqB,cAFrB,EAGEC,EACER,EADFQ,kBAEIC,EAAUC,YAAO,MAAPA,CAAcC,KACxBN,EAAmBO,cAAiB,SAAaC,EAASC,GAC9D,IAAM1P,EAAQ2P,YAAST,GAEjBU,EAAgBC,YAAaJ,GAEjC/L,EAEEkM,EAFFlM,UAFI,EAIFkM,EADF5E,iBAHI,MAGQ,MAHR,EAKA8E,EAAQC,YAA8BH,EAAeZ,GAE3D,OAAoBgB,cAAKX,EAASY,YAAS,CACzCC,GAAIlF,EACJ0E,IAAKA,EACLhM,UAAWgJ,YAAKhJ,EAAW0L,EAAoBA,EAAkBD,GAAoBA,GACrFnP,MAAOA,GACN8P,OA0BL,OAAOb,EClDGkB,CAAU,CACpBjB,aANmBkB,cAOnBjB,iBAAkB,cAClBC,kBAAmBiB,IAAmBC,WAEzBrB,O,oBCbf,IAAIsB,EAAWC,EAAQ,KACnBC,EAAMD,EAAQ,KACdE,EAAWF,EAAQ,KAMnBG,EAAYC,KAAKzI,IACjB0I,EAAYD,KAAK1I,IAqLrB4I,EAAOC,QA7HP,SAAkBC,EAAMC,EAAMrC,GAC5B,IAAIsC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACTC,GAAW,EAEf,GAAmB,mBAARX,EACT,MAAM,IAAIY,UAzEQ,uBAmFpB,SAASC,EAAWC,GAClB,IAAIC,EAAOb,EACPc,EAAUb,EAKd,OAHAD,EAAWC,OAAWc,EACtBT,EAAiBM,EACjBT,EAASL,EAAKkB,MAAMF,EAASD,GAI/B,SAASI,EAAYL,GAMnB,OAJAN,EAAiBM,EAEjBR,EAAUc,WAAWC,EAAcpB,GAE5BQ,EAAUI,EAAWC,GAAQT,EAatC,SAASiB,EAAaR,GACpB,IAAIS,EAAoBT,EAAOP,EAM/B,YAAyBU,IAAjBV,GAA+BgB,GAAqBtB,GACzDsB,EAAoB,GAAOb,GANJI,EAAON,GAM8BJ,EAGjE,SAASiB,IACP,IAAIP,EAAOrB,IACX,GAAI6B,EAAaR,GACf,OAAOU,EAAaV,GAGtBR,EAAUc,WAAWC,EA3BvB,SAAuBP,GACrB,IAEIW,EAAcxB,GAFMa,EAAOP,GAI/B,OAAOG,EACHb,EAAU4B,EAAarB,GAJDU,EAAON,IAK7BiB,EAoB+BC,CAAcZ,IAGnD,SAASU,EAAaV,GAKpB,OAJAR,OAAUW,EAINN,GAAYT,EACPW,EAAWC,IAEpBZ,EAAWC,OAAWc,EACfZ,GAeT,SAASsB,IACP,IAAIb,EAAOrB,IACPmC,EAAaN,EAAaR,GAM9B,GAJAZ,EAAW2B,UACX1B,EAAW2B,KACXvB,EAAeO,EAEXc,EAAY,CACd,QAAgBX,IAAZX,EACF,OAAOa,EAAYZ,GAErB,GAAIG,EAIF,OAFAqB,aAAazB,GACbA,EAAUc,WAAWC,EAAcpB,GAC5BY,EAAWN,GAMtB,YAHgBU,IAAZX,IACFA,EAAUc,WAAWC,EAAcpB,IAE9BI,EAIT,OA3GAJ,EAAOP,EAASO,IAAS,EACrBV,EAAS3B,KACX6C,IAAY7C,EAAQ6C,QAEpBL,GADAM,EAAS,YAAa9C,GACH+B,EAAUD,EAAS9B,EAAQwC,UAAY,EAAGH,GAAQG,EACrEO,EAAW,aAAc/C,IAAYA,EAAQ+C,SAAWA,GAoG1DgB,EAAUK,OApCV,gBACkBf,IAAZX,GACFyB,aAAazB,GAEfE,EAAiB,EACjBN,EAAWK,EAAeJ,EAAWG,OAAUW,GAgCjDU,EAAUM,MA7BV,WACE,YAAmBhB,IAAZX,EAAwBD,EAASmB,EAAa/B,MA6BhDkC,I,2KCjHHO,EAAczM,YAAW,aAC7BtC,KAAM,CACJ,UAAW,CACT7D,gBAAiB,iBAGlB6S,MAGCC,EAAc,SAACxM,GACnB,IAAMlE,EAAUwQ,IAEhB,OACE,cAAC,IAAD,aACExP,UAAWhB,EAAQyB,KACnB4B,eAAa,EACbtE,MAAM,UACN4R,YAAa,sBAAM3P,UAAWhB,EAAQ4Q,oBACtCxF,KAAM,sBAAMpK,UAAWhB,EAAQ6Q,uBAC3B3M,KAgEK7G,iBA9GA,SAACC,GAAD,OACbC,YAAa,uCACR6G,KACAC,KAFO,IAGVyM,YAAa,CACX,iBAAkB,CAChB,+BAAgC,CAC9B/R,MAAO,YAGX,eAAgB,CACdG,YAAa,GAEf,+BAAgC,CAC9BT,SAAU,GACVM,MAAO,YAGXgS,cAAe,CACb,+BAAgC,CAC9BtS,SAAU,GACVM,MAAO,UACPC,WAAY,WAwFL3B,EA3DmB,SAAC,GAWX,IAAD,IAVrB2T,uBAUqB,MAVH,GAUG,EATrBC,EASqB,EATrBA,iBACAtM,EAQqB,EARrBA,MACAG,EAOqB,EAPrBA,GACAC,EAMqB,EANrBA,KACAH,EAKqB,EALrBA,SAKqB,IAJrBO,eAIqB,MAJX,GAIW,MAHrB+L,sBAGqB,SAFrBlR,EAEqB,EAFrBA,QAEqB,IADrBmR,uBACqB,SACrB,OACE,eAAC,IAAD,CAAMnL,WAAS,EAACnH,WAAY,SAA5B,UACE,cAAC,IAAD,CAAMuJ,MAAI,EAACH,IAAE,EAAb,SACE,eAAC,IAAD,CAAY9B,QAASrB,EAAI9D,UAAWhB,EAAQqG,WAA5C,UACE,+BAAO1B,IACM,KAAZQ,GACC,qBAAKnE,UAAWhB,EAAQsG,iBAAxB,SACE,cAAC,IAAD,CAASrE,MAAOkD,EAASoB,UAAU,YAAnC,SACE,8BACE,cAAC,IAAD,eAOZ,cAAC,IAAD,CAAM6B,MAAI,EAACH,IAAE,EAACjH,UAAWhB,EAAQoR,mBAAjC,SACE,cAAC,IAAD,CACE,aAAYtM,EACZA,GAAIA,EACJC,KAAMA,EACNF,MAAOoM,EACPrM,SAAUA,EACVyM,KAAMF,EACNlQ,MAAO,CAAErC,QAAS,QAAS6I,UAAW,SAPxC,SASGuJ,EAAgB5E,KAAI,SAACkF,GACpB,OACE,cAAC,IAAD,CAEEzM,MAAOyM,EAAezM,MACtB0M,QAAS,cAACb,EAAD,IACT/L,MAAO2M,EAAe3M,MACtBM,SAAUiM,EACVlQ,UAAWgJ,YAAKhK,EAAQ8Q,YAAT,eACZ9Q,EAAQ+Q,cACPO,EAAezM,QAAUoM,KAR/B,aACalM,EADb,YACqBuM,EAAezM,sB,oBC3IlD,IAAI2M,EAAW1D,EAAQ,KACnBD,EAAWC,EAAQ,KACnB2D,EAAW3D,EAAQ,KAMnB4D,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SA8CnB1D,EAAOC,QArBP,SAAkBxJ,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI4M,EAAS5M,GACX,OA1CM,IA4CR,GAAIgJ,EAAShJ,GAAQ,CACnB,IAAIuI,EAAgC,mBAAjBvI,EAAMkN,QAAwBlN,EAAMkN,UAAYlN,EACnEA,EAAQgJ,EAAST,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAATvI,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQ2M,EAAS3M,GACjB,IAAImN,EAAWL,EAAWM,KAAKpN,GAC/B,OAAQmN,GAAYJ,EAAUK,KAAKpN,GAC/BgN,EAAahN,EAAMqN,MAAM,GAAIF,EAAW,EAAI,GAC3CN,EAAWO,KAAKpN,GAvDb,KAuD6BA,I,iCC5DvC,orBA8DasN,EAAiB,SAC5BC,EACAC,EACAxN,GAEA,MAAO,CACLhE,KAAMyR,IACNF,WACAG,MAAOF,EACPxN,UAIS2N,EAAc,SAACJ,EAAkBK,GAC5C,MAAO,CACL5R,KAAM6R,IACNN,WACAK,UAMSE,EAAwB,SAACC,GACpC,MAAO,CACL/R,KAAMgS,IACND,mBAISE,EAAe,SAACC,GAC3B,MAAO,CACLlS,KAAMmS,IACND,cAMSE,EAAmB,WAC9B,MAAO,CACLpS,KAAMqS,MAIGC,EAAsB,SAACrO,GAClC,MAAO,CACLjE,KAAMuS,IACNtO,OAISuO,EAA0B,SACrCvO,EACAwO,EACAC,EACA1O,GAEA,MAAO,CACLhE,KAAM2S,IACN1O,KACAwO,MACAC,WACA1O,UAgCS4O,EAAa,WACxB,MAAO,CACL5S,KAAM6S,MAIGC,EAAgB,SAAC7O,GAC5B,MAAO,CACLjE,KAAM+S,IACN9O,OAIS+O,EAAmB,SAC9B/O,EACAwO,EACAC,EACA1O,GAEA,MAAO,CACLhE,KAAMiT,IACNhP,KACAwO,MACAC,WACA1O,UAiBSkP,EAAoB,SAC/BT,EACAC,EACA1O,GAEA,MAAO,CACLhE,KAAMmT,IACNV,MACAC,WACA1O,UAISoP,EAAoB,SAC/BX,EACAC,EACA1O,GAEA,MAAO,CACLhE,KAAMqT,IACNZ,MACAC,WACA1O,UAISsP,EAAmB,SAC9Bb,EACAC,EACA1O,GAEA,MAAO,CACLhE,KAAMuT,IACNd,MACAC,WACA1O,UAISwP,EAAiB,SAACd,EAAkB1O,GAC/C,MAAO,CACLhE,KAAMyT,IACNf,WACA1O,UAIS0P,EAAmB,SAAChB,EAAkB1O,GACjD,MAAO,CACLhE,KAAM2T,IACNjB,WACA1O,UAIS4P,EAAqB,WAChC,MAAO,CACL5T,KAAM6T,MAIGC,EAAuB,SAAC9J,GACnC,MAAO,CACLhK,KAAM+T,IACN3X,MAAO4N,IAIEgK,EAAgB,SAACC,EAAoBC,GAChD,MAAO,CACLlU,KAAMmU,IACNjQ,KAAM+P,EACNG,UAAWF,IAIFG,EAAgB,SAACC,GAC5B,MAAO,CACLtU,KAAMuU,IACND,WAISE,EAAe,SAACC,GAC3B,MAAO,CACLzU,KAAM0U,IACND,S,oBC5RJ,IAAI7T,EAAOqM,EAAQ,IAsBnBM,EAAOC,QAJG,WACR,OAAO5M,EAAK+T,KAAKzH,Q,oBCnBnB,IAAI0H,EAAkB3H,EAAQ,KAG1B4H,EAAc,OAelBtH,EAAOC,QANP,SAAkBsH,GAChB,OAAOA,EACHA,EAAOzD,MAAM,EAAGuD,EAAgBE,GAAU,GAAGC,QAAQF,EAAa,IAClEC,I,kBCdN,IAAIE,EAAe,KAiBnBzH,EAAOC,QAPP,SAAyBsH,GAGvB,IAFA,IAAIvQ,EAAQuQ,EAAOhT,OAEZyC,KAAWyQ,EAAa5D,KAAK0D,EAAOG,OAAO1Q,MAClD,OAAOA,I,iCCfT,WAKM2Q,EAAgCjJ,kBAMvBiJ,O,iCCXf,qDAmCe1Y,iBA5BA,SAACC,GAAD,aACbC,YAAa,CACXyY,WAAY,CACVjX,OAAO,UAAAzB,EAAMsK,eAAN,eAAevC,MAAMyC,OAAQ,eAyB3BzK,EAfI,SAAC,GAIK,IAHvB2C,EAGsB,EAHtBA,QACAW,EAEsB,EAFtBA,aAEsB,IADtBsV,iBACsB,SACtB,OACE,eAAC,IAAMlQ,SAAP,WACGkQ,GAAa,uBACd,cAAC,IAAD,CAAY3N,UAAU,IAAID,QAAQ,QAAQrH,UAAWhB,EAAQgW,WAA7D,SACGrV,W,iCC3BT,IACIuV,EADWpI,EAAQ,KACQoI,gBAE/BA,EAAgBA,gBAAkBA,EAClC9H,EAAOC,QAAU6H,G,iCCJjBC,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6H,qBAAkB,EAE1B,IAAIG,EAASC,EAAuBxI,EAAQ,IAExCyI,EAAmBD,EAAuBxI,EAAQ,MAEtD,SAASwI,EAAuBE,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAEzF,SAASE,EAAQF,GAAwT,OAAtOE,EAArD,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAmC,SAAiBJ,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,oBAAXG,QAAyBH,EAAIK,cAAgBF,QAAUH,IAAQG,OAAOG,UAAY,gBAAkBN,GAAiBE,EAAQF,GAExV,SAASO,EAAQC,EAAQC,GAAkB,IAAIC,EAAOf,OAAOe,KAAKF,GAAS,GAAIb,OAAOgB,sBAAuB,CAAE,IAAIC,EAAUjB,OAAOgB,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOnB,OAAOoB,yBAAyBP,EAAQM,GAAKE,eAAgBN,EAAKO,KAAKjI,MAAM0H,EAAME,GAAY,OAAOF,EAI9U,SAASQ,EAAyBC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAAkErE,EAAKuE,EAAnEC,EAEzF,SAAuCH,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,GAAI,IAA2DrE,EAAKuE,EAA5DC,EAAS,GAAQC,EAAa5B,OAAOe,KAAKS,GAAqB,IAAKE,EAAI,EAAGA,EAAIE,EAAWpV,OAAQkV,IAAOvE,EAAMyE,EAAWF,GAAQD,EAASI,QAAQ1E,IAAQ,IAAawE,EAAOxE,GAAOqE,EAAOrE,IAAQ,OAAOwE,EAFxMzK,CAA8BsK,EAAQC,GAAuB,GAAIzB,OAAOgB,sBAAuB,CAAE,IAAIc,EAAmB9B,OAAOgB,sBAAsBQ,GAAS,IAAKE,EAAI,EAAGA,EAAII,EAAiBtV,OAAQkV,IAAOvE,EAAM2E,EAAiBJ,GAAQD,EAASI,QAAQ1E,IAAQ,GAAkB6C,OAAOW,UAAUoB,qBAAqBC,KAAKR,EAAQrE,KAAgBwE,EAAOxE,GAAOqE,EAAOrE,IAAU,OAAOwE,EAIne,SAASM,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIpJ,UAAU,qCAEhH,SAASqJ,EAAkBT,EAAQ5T,GAAS,IAAK,IAAI2T,EAAI,EAAGA,EAAI3T,EAAMvB,OAAQkV,IAAK,CAAE,IAAIW,EAAatU,EAAM2T,GAAIW,EAAWhB,WAAagB,EAAWhB,aAAc,EAAOgB,EAAWC,cAAe,EAAU,UAAWD,IAAYA,EAAWE,UAAW,GAAMvC,OAAOC,eAAe0B,EAAQU,EAAWlF,IAAKkF,IAI7S,SAASG,EAA2BC,EAAMT,GAAQ,OAAIA,GAA2B,WAAlBzB,EAAQyB,IAAsC,oBAATA,EAA8CU,EAAuBD,GAAtCT,EAEnI,SAASW,EAAgBC,GAAwJ,OAAnJD,EAAkB3C,OAAO6C,eAAiB7C,OAAO8C,eAAiB,SAAyBF,GAAK,OAAOA,EAAEG,WAAa/C,OAAO8C,eAAeF,IAAcD,EAAgBC,GAExM,SAASF,EAAuBD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIO,eAAe,6DAAgE,OAAOP,EAI/J,SAASQ,EAAgBL,EAAGM,GAA+G,OAA1GD,EAAkBjD,OAAO6C,gBAAkB,SAAyBD,EAAGM,GAAsB,OAAjBN,EAAEG,UAAYG,EAAUN,GAAaK,EAAgBL,EAAGM,GAErK,SAASC,EAAgB9C,EAAKlD,EAAKzO,GAAiK,OAApJyO,KAAOkD,EAAOL,OAAOC,eAAeI,EAAKlD,EAAK,CAAEzO,MAAOA,EAAO2S,YAAY,EAAMiB,cAAc,EAAMC,UAAU,IAAkBlC,EAAIlD,GAAOzO,EAAgB2R,EAE3M,IAAIN,EAEJ,SAAUqD,GAGR,SAASrD,IACP,IAAIsD,EAEAC,EAEJrB,EAAgBhI,KAAM8F,GAEtB,IAAK,IAAIwD,EAAOvJ,UAAUxN,OAAQ0M,EAAO,IAAIsK,MAAMD,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/EvK,EAAKuK,GAAQzJ,UAAUyJ,GA0BzB,OArBAN,EAAgBT,EAFhBY,EAAQd,EAA2BvI,MAAOoJ,EAAmBV,EAAgB5C,IAAkBiC,KAAK3I,MAAMgK,EAAkB,CAACpJ,MAAMyJ,OAAOxK,MAE3F,WAAW,SAAUtM,GAClE,IAAI+W,EAAcL,EAAMvV,MACpB6V,EAAOD,EAAYC,KACnBC,EAASF,EAAYE,OACrB9X,EAAW4X,EAAY5X,SACvBgK,EAAU4N,EAAY5N,QAEtB+N,EAAO5D,EAAM,QAAY6D,SAASC,KAAKjY,GAEvCyM,GAAS,EAAI4H,EAAgB,SAAawD,EAAM7N,GAEhD8N,GACFA,EAAOD,EAAMpL,GAIXsL,GAAQA,EAAK/V,OAAuC,oBAAvB+V,EAAK/V,MAAM7C,SAC1C4Y,EAAK/V,MAAM7C,QAAQ0B,MAIhB0W,EArDX,IAAsBnB,EAAa8B,EAAYC,EA0E7C,OAlEF,SAAmBC,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIrL,UAAU,sDAAyDoL,EAASxD,UAAYX,OAAOlN,OAAOsR,GAAcA,EAAWzD,UAAW,CAAED,YAAa,CAAEhS,MAAOyV,EAAU5B,UAAU,EAAMD,cAAc,KAAe8B,GAAYnB,EAAgBkB,EAAUC,GASjXC,CAAUtE,EAAiBqD,GAjBPjB,EAwDPpC,EAxDoBkE,EAwDH,CAAC,CAC7B9G,IAAK,SACLzO,MAAO,WACL,IAAI4V,EAAerK,KAAKlM,MAIpBhC,GAHQuY,EAAaV,KACXU,EAAaT,OACZS,EAAavO,QACbuO,EAAavY,UACxBgC,EAAQwT,EAAyB+C,EAAc,CAAC,OAAQ,SAAU,UAAW,aAE7ER,EAAO5D,EAAM,QAAY6D,SAASC,KAAKjY,GAE3C,OAAOmU,EAAM,QAAYqE,aAAaT,EA9E5C,SAAuBnC,GAAU,IAAK,IAAID,EAAI,EAAGA,EAAI1H,UAAUxN,OAAQkV,IAAK,CAAE,IAAIF,EAAyB,MAAhBxH,UAAU0H,GAAa1H,UAAU0H,GAAK,GAAQA,EAAI,EAAKd,EAAQY,GAAQ,GAAMgD,SAAQ,SAAUrH,GAAOgG,EAAgBxB,EAAQxE,EAAKqE,EAAOrE,OAAsB6C,OAAOyE,0BAA6BzE,OAAO0E,iBAAiB/C,EAAQ3B,OAAOyE,0BAA0BjD,IAAmBZ,EAAQY,GAAQgD,SAAQ,SAAUrH,GAAO6C,OAAOC,eAAe0B,EAAQxE,EAAK6C,OAAOoB,yBAAyBI,EAAQrE,OAAe,OAAOwE,EA8E3cgD,CAAc,GAAI5W,EAAO,CACnE7C,QAAS+O,KAAK/O,cArE4C+Y,GAAY7B,EAAkBD,EAAYxB,UAAWsD,GAAiBC,GAAa9B,EAAkBD,EAAa+B,GA0E3KnE,EA1DT,CA2DEG,EAAM,QAAY0E,eAEpB1M,EAAQ6H,gBAAkBA,EAE1BoD,EAAgBpD,EAAiB,eAAgB,CAC/C8D,YAAQzK,EACRrD,aAASqD,K,iCC1GX,IAAIyL,EAAkBlN,EAAQ,KAE1BmN,EAA4B,CAC9B,aAAc,OACd,YAAa,MACb,QAAW,QAyGb7M,EAAOC,QA/FP,SAAc0L,EAAM7N,GAClB,IAAIgP,EACFta,EACAua,EACAC,EACAC,EACAC,EACAC,GAAU,EACPrP,IACHA,EAAU,IAEZgP,EAAQhP,EAAQgP,QAAS,EACzB,IAgDE,GA/CAC,EAAmBH,IAEnBI,EAAQI,SAASC,cACjBJ,EAAYG,SAASE,gBAErBJ,EAAOE,SAASG,cAAc,SACzBC,YAAc7B,EAEnBuB,EAAKra,MAAM4a,IAAM,QAEjBP,EAAKra,MAAMxD,SAAW,QACtB6d,EAAKra,MAAMwD,IAAM,EACjB6W,EAAKra,MAAM6a,KAAO,mBAElBR,EAAKra,MAAM8a,WAAa,MAExBT,EAAKra,MAAM+a,iBAAmB,OAC9BV,EAAKra,MAAMgb,cAAgB,OAC3BX,EAAKra,MAAMib,aAAe,OAC1BZ,EAAKra,MAAMkb,WAAa,OACxBb,EAAKc,iBAAiB,QAAQ,SAASC,GAErC,GADAA,EAAEC,kBACEpQ,EAAQqQ,OAEV,GADAF,EAAEG,iBAC6B,qBAApBH,EAAEI,cAA+B,CAC1CvB,GAASwB,QAAQC,KAAK,iCACtBzB,GAASwB,QAAQC,KAAK,4BACtBC,OAAOH,cAAcI,YACrB,IAAIN,EAAStB,EAA0B/O,EAAQqQ,SAAWtB,EAAyB,QACnF2B,OAAOH,cAAcK,QAAQP,EAAQxC,QAErCsC,EAAEI,cAAcI,YAChBR,EAAEI,cAAcK,QAAQ5Q,EAAQqQ,OAAQxC,GAGxC7N,EAAQ8N,SACVqC,EAAEG,iBACFtQ,EAAQ8N,OAAOqC,EAAEI,mBAIrBjB,SAASuB,KAAKC,YAAY1B,GAE1BF,EAAM6B,mBAAmB3B,GACzBD,EAAU6B,SAAS9B,IAEFI,SAAS2B,YAAY,QAEpC,MAAM,IAAIC,MAAM,iCAElB7B,GAAU,EACV,MAAO8B,GACPnC,GAASwB,QAAQrX,MAAM,qCAAsCgY,GAC7DnC,GAASwB,QAAQC,KAAK,4BACtB,IACEC,OAAOH,cAAcK,QAAQ5Q,EAAQqQ,QAAU,OAAQxC,GACvD7N,EAAQ8N,QAAU9N,EAAQ8N,OAAO4C,OAAOH,eACxClB,GAAU,EACV,MAAO8B,GACPnC,GAASwB,QAAQrX,MAAM,uCAAwCgY,GAC/DnC,GAASwB,QAAQrX,MAAM,0BACvBzE,EA/EN,SAAgBA,GACd,IAAI0c,GAAW,YAAYrL,KAAKsL,UAAUC,WAAa,SAAM,QAAU,KACvE,OAAO5c,EAAQgV,QAAQ,gBAAiB0H,GA6E1Bf,CAAO,YAAarQ,EAAUA,EAAQtL,QAjFjC,oCAkFfgc,OAAOa,OAAO7c,EAASmZ,IA/D3B,QAkEMsB,IACkC,mBAAzBA,EAAUqC,YACnBrC,EAAUqC,YAAYtC,GAEtBC,EAAUsC,mBAIVrC,GACFE,SAASuB,KAAKa,YAAYtC,GAE5BH,IAGF,OAAOI,I,kBC5GTnN,EAAOC,QAAU,WACf,IAAIgN,EAAYG,SAASE,eACzB,IAAKL,EAAUwC,WACb,OAAO,aAKT,IAHA,IAAIC,EAAStC,SAASuC,cAElBC,EAAS,GACJnG,EAAI,EAAGA,EAAIwD,EAAUwC,WAAYhG,IACxCmG,EAAOvG,KAAK4D,EAAU4C,WAAWpG,IAGnC,OAAQiG,EAAOI,QAAQC,eACrB,IAAK,QACL,IAAK,WACHL,EAAOM,OACP,MAEF,QACEN,EAAS,KAKb,OADAzC,EAAUsC,kBACH,WACc,UAAnBtC,EAAUxa,MACVwa,EAAUsC,kBAELtC,EAAUwC,YACbG,EAAOrD,SAAQ,SAASS,GACtBC,EAAU6B,SAAS9B,MAIvB0C,GACAA,EAAOO,W,iCCpCX,WAKMC,EAA4BxR,kBAMnBwR,O,iNC+JAjhB,iBA1HA,SAACC,GAAD,OACbC,YAAa,uCACR6G,KACAC,KAFO,IAGVka,YAAa,CACX1c,SAAU,IACVka,WAAY,SACZnc,SAAU,SACV4e,aAAc,WACd9gB,UAAW,GAEb+gB,eAAgB,CACd/V,OAAQ,WAEPgW,QA4GQrhB,EAzGM,SAAC,GAYA,IAXpBsH,EAWmB,EAXnBA,MACA3E,EAUmB,EAVnBA,QACA4E,EASmB,EATnBA,SACAE,EAQmB,EARnBA,GACAC,EAOmB,EAPnBA,KAOmB,IANnBE,gBAMmB,aALnBE,eAKmB,MALT,GAKS,EAJnBG,EAImB,EAJnBA,SAImB,IAHnBD,aAGmB,MAHX,GAGW,MAFnBsZ,cAEmB,MAFV,GAEU,MADnB9Z,aACmB,MADX,GACW,EACnB,EAA4C3E,oBAAS,GAArD,mBAAO0e,EAAP,KAAyBC,EAAzB,KAEA,OACE,cAAC,IAAM9Y,SAAP,UACE,eAAC+Y,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJjH,UAAS,UAAKhB,EAAQye,eAAb,YAA+Bze,EAAQ+e,YAAvC,YACP/e,EAAQmM,eADD,YAEK,KAAV9G,EAAerF,EAAQiG,aAAe,IAL5C,UAOa,KAAVtB,GACC,eAACqa,EAAA,EAAD,CACE7Y,QAASrB,EACT9D,UAAS,UAAe,KAAVqE,EAAerF,EAAQif,gBAAkB,GAA9C,YACPjf,EAAQqG,YAHZ,UAME,iCACG1B,EACAW,EAAW,IAAM,MAEP,KAAZH,GACC,qBAAKnE,UAAWhB,EAAQsG,iBAAxB,SACE,cAAC4Y,EAAA,EAAD,CAASjd,MAAOkD,EAASoB,UAAU,YAAnC,SACE,qBAAKvF,UAAWhB,EAAQmF,QAAxB,SACE,cAACga,EAAA,EAAD,aAQXP,GAA8B,KAAV/Z,EACnB,sBAAK7D,UAAWhB,EAAQsE,iBAAxB,UACE,uBACEzD,KAAK,OACLkE,KAAMA,EACNH,SAAU,SAACyX,GACT,IAAM9I,EAAWzS,IAAIub,EAAG,uBAAwB,KCtGrC,SAAC+C,EAAUC,GACpC,IAAMC,EAAOF,EAAItH,OAAOyH,MAAM,GACxBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GAErBE,EAAOG,OAAS,WAGd,IAAMC,EAAaJ,EAAO7Q,OAC1B,GAAIiR,EAAY,CACd,IAAMC,EAAYD,EAAWE,WAAWC,MAAM,WAErB,IAArBF,EAAUld,QACZ0c,EAASQ,EAAU,MD0FXG,CAAY3D,GAAG,SAAC4D,GACdrb,EAASqb,EAAM1M,OAGnBoL,OAAQA,EACRrZ,SAAUA,EACVL,SAAUA,EACVjE,UAAWhB,EAAQye,iBAGV,KAAV5Z,GACC,cAACzB,EAAA,EAAD,CACErE,MAAM,UACN,aAAW,iBACXuJ,UAAU,OACVjH,QAAS,WACPwd,GAAgB,IAElBxb,eAAe,EACfqD,oBAAoB,EACpBpD,KAAK,QATP,SAWE,cAAC,IAAD,MAIO,KAAV+B,GAAgB,cAAC6a,EAAA,EAAD,CAAYvf,aAAc0E,OAG7C,sBAAKrE,UAAWhB,EAAQmgB,aAAxB,UACE,qBAAKnf,UAAWhB,EAAQue,YAAxB,SAAsC1Z,IACtC,cAACzB,EAAA,EAAD,CACErE,MAAM,UACN,aAAW,iBACXuJ,UAAU,OACVjH,QAAS,WACPwd,GAAgB,IAElBxb,eAAe,EACfqD,oBAAoB,EACpBpD,KAAK,QATP,SAWE,cAAC,IAAD,kB,iCEjKd,2HA4Ca8c,EAAkB,SAACC,GAC9B,OAAOA,EAAOjU,KAAI,SAACvH,GACjB,MAAO,CAAEF,MAAOE,EAAOA,aAIdyb,EAAgB,SAACC,GAC5B,IAAMC,EAA0B1f,IAAIyf,EAAgB,WAAY,IAE1DE,EAAoB,GAY1B,OAVAD,EAAO7F,SAAQ,SAAC+F,GACd,IAAMC,EAAUD,EAAQ3b,KAAKgb,MAC3B,iDACA,GACIa,EAAO9f,IAAI4f,EAAS,OAAQ,GAC5BG,EAAO/f,IAAI4f,EAAS,OAAQ,GAElCD,EAAaE,GAAWC,EAAOC,KAG1BJ,GAGIK,EAAiB,SAAC3L,GAC7B,MAA4B,KAAxBA,EAAO4L,kBAIR5L,EAAO6L,QACiB,UAAzB7L,EAAO8L,eACkB,WAAzB9L,EAAO8L,kBAKP9L,EAAO6L,QACyB,UAAhC7L,EAAO6L,OAAOC,eACkB,WAAhC9L,EAAO6L,OAAOC,kB,iCChFlB,IAAI3K,EAAyBxI,EAAQ,IAErCqI,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6S,aAAU,EAElB,IAAIC,EAAiB7K,EAAuBxI,EAAQ,KAEhDsT,EAActT,EAAQ,GAEtBuT,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,oLACD,UAEJlT,EAAQ6S,QAAUG,G,iCCflB,IAAI/K,EAAyBxI,EAAQ,IAErCqI,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6S,aAAU,EAElB,IAAIC,EAAiB7K,EAAuBxI,EAAQ,KAEhDsT,EAActT,EAAQ,GAEtBuT,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,iQACD,cAEJlT,EAAQ6S,QAAUG,G,iCCflB,IAAI/K,EAAyBxI,EAAQ,IAErCqI,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6S,aAAU,EAElB,IAAIC,EAAiB7K,EAAuBxI,EAAQ,KAEhDsT,EAActT,EAAQ,GAEtBuT,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wCACD,OAEJlT,EAAQ6S,QAAUG,G,qMC6EHhkB,eArEA,SAACC,GAAD,OACbC,YAAa,CACXyI,UAAW,CACTpH,QAAS,OACT4iB,SAAU,SACVvjB,QAAS,gBAEXwjB,cAAe,CACb,wBAAyB,CACvB9jB,MAAO,OACP+N,WAAY,UACZ,wBAAyB,CACvBtM,OAAQ,SAEV,mCAAoC,CAClCF,YAAa,QACb,wBAAyB,CACvBE,OAAQ,UAId,kCAAmC,CACjCzB,MAAO,QACPyB,OAAQ,UAGZiH,WAAY,CACV5H,SAAU,QACVO,WAAY,SAyCH3B,EArCQ,SAAC,GAQjB,IAAD,IAPJsH,aAOI,MAPI,GAOJ,MANJE,aAMI,MANI,GAMJ,MALJ7E,eAKI,MALM,GAKN,EACJ,OACE,sBAAKgB,UAAWhB,EAAQgG,UAAxB,UACE,sBAAKhF,UAAWhB,EAAQqG,WAAxB,UAAqC1B,EAArC,OACA,qBAAK3D,UAAWhB,EAAQyhB,cAAxB,SACE,cAACC,EAAA,EAAD,CACE7c,MAAOA,EACP8c,UAAQ,EACRC,aACE,cAACC,EAAA,EAAD,CAAgBpkB,SAAS,MAAzB,SACE,cAAC,IAAD,CAAiBsc,KAAMlV,EAAvB,SACE,cAACid,EAAA,EAAD,CACE,aAAW,OACX3c,QAAS,OACT9D,QAAS,aACT0gB,YAAa,aACbC,KAAK,MALP,SAOE,cAAC,IAAD,oB,kBC6JH3kB,uBAlNA,SAACC,GAAD,OACbC,YAAa,CACX0kB,aAAc,CACZljB,MAAO,MACPN,SAAU,SACViK,OAAQ,kBACR9J,QAAS,OACTC,WAAY,SACZ,SAAU,CACRK,YAAa,QACbE,OAAQ,GACRzB,MAAO,KAGXukB,gBAAiB,CACfjkB,QAAS,cACTe,WAAY,IACZP,SAAU,SAEZ0jB,gBAAiB,CACf1a,UAAW,QACX/J,UAAW,QAEb0kB,iBAAkB,CAChBC,UAAW,OACX3d,UAAW,KAEb4d,YAAa,CACX1jB,QAAS,OACTC,WAAY,UAEd0jB,aAAc,CACZrjB,YAAa,SAEfsjB,WAAY,CACVtjB,YAAa,QACbN,QAAS,OACTC,WAAY,SACZO,OAAQ,OACRzB,MAAO,YA2KEN,EA/IW,SAAC,GAMK,IAL9B2C,EAK6B,EAL7BA,QACAyiB,EAI6B,EAJ7BA,kBACA5f,EAG6B,EAH7BA,KACA6f,EAE6B,EAF7BA,WACAC,EAC6B,EAD7BA,OAEA,IAAKF,EACH,OAAO,KAGT,IAAMG,EAAe9hB,IAAI2hB,EAAmB,UAAW,MACjDI,EAAM/hB,IAAI2hB,EAAmB,OAAO,GAE1C,OACE,cAACK,EAAA,EAAD,CACE9gB,UAAWa,EACXd,QAAS,WACP2gB,KAEFzgB,MACE,sBAAKjB,UAAWhB,EAAQsiB,YAAxB,UACE,qBAAKthB,UAAWhB,EAAQwiB,WAAxB,SACE,cAACO,EAAA,EAAD,MACK,IACP,uCAAUJ,EAAV,iBAVN,SAcE,eAAC7D,EAAA,EAAD,CAAM9Y,WAAS,EAAf,UACE,eAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQgjB,eAAtC,mBACSL,EADT,iDAEIE,GAAOD,GACP,cAAC,IAAM7c,SAAP,UACE,eAAC+Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQoiB,iBAAtC,UACE,qBAAKphB,UAAWhB,EAAQkiB,gBAAxB,iCAGCvI,MAAMsJ,QAAQL,IACbA,EAAaxW,KAAI,SAAC8W,EAAiB9d,GACjC,OACE,qCACE,cAAC,EAAD,CACET,MAAM,aACNE,MAAOqe,EAAgBC,YAEzB,cAAC,EAAD,CACExe,MAAM,aACNE,MAAOqe,EAAgBE,mBAK/BzJ,MAAMsJ,QAAQL,IACd,qCACE,cAAC,EAAD,CACEje,MAAM,aACNE,MAAO+d,EAAaO,YAEtB,cAAC,EAAD,CACExe,MAAM,aACNE,MAAO+d,EAAaQ,oBAO/BP,EACC,qBAAK7hB,UAAWhB,EAAQiiB,aAAxB,yEAIA,sBAAKjhB,UAAWhB,EAAQiiB,aAAxB,UACE,cAACoB,EAAA,EAAD,IACA,kHAON,eAACvE,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQmiB,gBAAtC,UACE,cAACmB,EAAA,EAAD,CACEjb,QAAQ,WACRrH,UAAWhB,EAAQuiB,aACnBlhB,QAAS,WACPqhB,KAEF3jB,MAAM,UANR,mBAWE8jB,GACA,cAACS,EAAA,EAAD,CACEjiB,QAAS,WACP,IAAIkiB,EAAgB,GAEpB,GAAIX,EACF,GAAKjJ,MAAMsJ,QAAQL,GASZ,CACL,IAAMY,EAASZ,EAAaxW,KAAI,SAACqX,GAC/B,MAAO,CACLC,WAAYD,EAAQN,UACpBQ,WAAYF,EAAQL,cAIxBG,EAAgB,CACd7G,QAAQ,YAAK8G,SAjBfD,EAAgB,CACd7G,QAAS,CACP,CACEgH,WAAYd,EAAaO,UACzBQ,WAAYf,EAAaQ,cAzHlC,SAACQ,EAAkB7J,GAClC,IAAI8J,EAAUrI,SAASG,cAAc,KACrCkI,EAAQC,aACN,OACA,iCAAmCC,mBAAmBhK,IAExD8J,EAAQC,aAAa,WAAYF,GAEjCC,EAAQ5iB,MAAMrC,QAAU,OACxB4c,SAASuB,KAAKC,YAAY6G,GAE1BA,EAAQG,QAERxI,SAASuB,KAAKa,YAAYiG,GA8HZI,CACE,mBACAC,KAAKC,UAAL,eACKZ,MAITa,QAAS,cAAC,IAAD,IACT/b,QAAQ,YACRtJ,MAAM,UArCR,kC,iCChMZ,oEAiBO,IAAMslB,EAAqB,SAACvP,EAAoBwP,GAwBrD,MAvBwC,CACtCC,gBAAiB,CACfC,+CAAgD,CAC9C,CACEC,cAAe,CACbC,iBAAkB,CAChB,CACEpR,IAAK,mBACLqR,SAAU,KACVC,OAAQ,CAAC9P,IAEX,CACExB,IAAK,iBACLqR,SAAU,KACVC,OAAQ,CAACN,MAIfO,YAAa,8BAQVC,EAAkB,SAC7BC,EACAC,EACAlQ,EACAwP,GAGA,IAAMW,EAAiBF,EAAOhF,MAAM,KAChC2E,EAAwB,GAE5BO,EAAetK,SAAQ,SAAChW,GACtB,IAAMugB,EAAgBvgB,EAAMob,MAAM,KACL,IAAzBmF,EAAcviB,QAChB+hB,EAAiBjN,KAAK,CACpBnE,IAAK4R,EAAc,GACnBP,SAAU,KACVC,OAAQ,CAACM,EAAc,SAK7B,IAAMC,EAA+B,CACnCC,aAAc,CACZZ,+CAAgD,CAC9Ca,kBAAmB,CACjB,CACEX,iBAAkBA,OAM5B,GAAIM,EAAqB,CACvB,IAAMM,EAAMjB,EAAmBvP,EAAYwP,GAC3Ca,EAAaZ,gBAAkBe,EAAIf,gBAGrC,OADA7H,QAAQ6I,IAAIJ,GACLA,I,+FC6CM9nB,eAvGA,SAACC,GAAD,OACbC,YAAa,CACXioB,oBAAqB,CACnB5mB,QAAS,OACT6mB,cAAe,SACfC,KAAM,GAERC,gBAAiB,CACftD,UAAW,OACX9Y,aAAc,GACdnK,OAAQ,6BACRgI,UAAW,IACXse,KAAM,EACN/nB,MAAO,QAETioB,YAAa,CACXvD,UAAW,OACX9Y,aAAc,GACdnK,OAAQ,uBAEVymB,iBAAkB,CAChBjnB,QAAS,OACT6mB,cAAe,MACfne,eAAgB,aAChBrJ,QAAS,SACT6nB,UAAW,oBACX,WAAY,CACV7mB,WAAY,IAEd,aAAc,CACZ0C,cAAe,IAGnBokB,qBAAsB,CACpBpoB,MAAO,OACP8J,UAAW,QACXvI,YAAa,QAmEJ7B,EA/DI,SAAC,GAMA,IALlB2C,EAKiB,EALjBA,QACAgmB,EAIiB,EAJjBA,KACAC,EAGiB,EAHjBA,WACAC,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,SAsBA,OACE,sBAAKnlB,UAAWhB,EAAQwlB,oBAAxB,UACE,qBAAKxkB,UAAWmlB,EAAWnmB,EAAQ4lB,YAAc5lB,EAAQ2lB,gBAAzD,SACGK,EAAKI,kBAEPF,GACC,8BACE,cAACG,EAAA,EAAD,MAGJ,qBACErlB,UAAS,UAAKhB,EAAQ6lB,iBAAb,YAAiCM,EAAW,WAAa,IADpE,SAGE,qBAAKnlB,UAAWhB,EAAQ+lB,qBAAxB,SACGC,EAAKM,QAAQla,KAAI,SAACma,GACjB,OACE,cAACjD,EAAA,EAAD,CACEjb,QAAQ,YACRtJ,MAAM,UACNuE,KAAK,QACLjC,QAAS,YAxCF,SAACklB,GACpB,OAAQA,EAAI1lB,MACV,IAAK,OACHolB,EAAW,MACX,MACF,IAAK,OACHA,EAAW,MACX,MACF,IAAK,KACHA,EAAWM,EAAIC,QAAU,GAMzBD,EAAIE,QACNF,EAAIE,OAAOR,GAyBCS,CAAaH,IAEfthB,UAAWshB,EAAII,QAPjB,SAUGJ,EAAI5hB,OAVP,iBAQiBqhB,EAAKrhB,MARtB,YAQ+B4hB,EAAI5hB,qB,oCCwIlCtH,iBAhOA,SAACC,GAAD,OACbC,YAAa,CACXqpB,iBAAkB,GAClBC,aAAc,CACZppB,SAAU,YAEZqpB,iBAAkB,CAChB7oB,QAAS,EACT8oB,aAAc,oBACd,OAAQ,CACN9oB,QAAS,EACTP,UAAW,EACXkB,QAAS,OACT0I,eAAgB,eAEhB,OAAQ,CACN0f,UAAW,cACX,YAAa,CACX1nB,YAAa,OAKrB2nB,WAAY,CACVrpB,gBAAiB,cACjBC,OAAQ,OACRa,OAAQ,UACR,yBAA0B,CACxBwM,eAAgB,aAElB,gDAAiD,CAC/CrN,OAAQ,OACRqpB,QAAS,EACT7f,UAAW,SAGf8f,kBAAmB,CACjBzpB,UAAW,EACXO,QAAS,SACTmJ,UAAW,KAEbggB,WAAY,CACV3oB,SAAU,GACVM,MAAO,UACPC,WAAY,IACZ0J,OAAQ,YACR,oBAAqB,CACnBjB,UAAW,SACX9J,MAAO,OACPD,UAAW,EACX6L,aAAc,KAGlB8d,qBAAsB,CACpB5pB,SAAU,SACVgH,IAAK,EACL7G,gBAAiB,UACjBD,MAAO,OACP+G,UAAW,IAEb4iB,cAAe,CACbC,YAAa,oBACb7b,WAAY,WAEd8b,eAAgB,CACdC,WAAY,EACZ,qCAAsC,CACpC/b,WAAY,YAGhBgc,SAAU,CACR,UAAW,CACThc,WAAY,8BAwJLrO,EAnJO,SAAC,GAKH,IAJlB2C,EAIiB,EAJjBA,QACA2nB,EAGiB,EAHjBA,YACAzB,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,SAEA,EAAsCjmB,mBAAiB,GAAvD,mBAAO0nB,EAAP,KAAoBC,EAApB,KAEM5B,EAAa,SAAC6B,GAClB,IAAMC,EAAWJ,EAAYhlB,OAAS,EAEtC,GAAkB,OAAdmlB,EAAoB,CACtB,IAAIE,EAAWJ,EAAc,EAEzBI,EAAWD,IACbC,EAAWD,GAGbF,EAAeG,GAGjB,GAAkB,OAAdF,EAAoB,CACtB,IAAIG,EAAWL,EAAc,EAEzBK,EAAW,IACbA,EAAW,GAGbJ,EAAeI,GAGjB,GAAyB,kBAAdH,EAAwB,CACjC,IAAII,EAAKJ,EACLA,EAAY,IACdI,EAAK,GAGHJ,EAAYC,IACdG,EAAKH,GAGPF,EAAeK,KAInB,GAA2B,IAAvBP,EAAYhlB,OACd,OAAO,KAqDT,OACE,eAACmc,EAAA,EAAD,CACE9Y,WAAS,EACThF,UAAWmlB,EAAWnmB,EAAQ6mB,aAAe7mB,EAAQ4mB,iBAFvD,UAIGT,EACC,cAAC,WAAD,UACE,sBAAKnlB,UAAWhB,EAAQqnB,qBAAxB,UACE,qBAAKrmB,UAAS,UAAKhB,EAAQonB,WAAb,oBAAd,mBACA,qBAAKpmB,UAAWhB,EAAQ8mB,iBAAxB,SA3BN,6BACGa,EAAYvb,KAAI,SAAC+b,EAAM/iB,GACtB,OACE,6BACE,wBACE/D,QAAS,kBAAM4kB,EAAW7gB,IAC1BH,SAAUG,EAAQwiB,EAClB5mB,UAAWhB,EAAQinB,WAHrB,SAKGkB,EAAKxjB,SANV,iBAAmBS,EAAM0a,yBA4B7B,cAAC,WAAD,UACE,cAAChB,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJC,GAAI,EACJC,GAAI,EACJigB,GAAI,EACJC,GAAI,EACJrnB,UAAWhB,EAAQsnB,cAPrB,SA9DJ,cAAC,WAAD,UACE,cAACgB,EAAA,EAAD,CACEhgB,UAAU,MACVigB,OAAO,EACPvoB,QAAS,CACPyB,KAAMzB,EAAQwnB,gBAJlB,SAOGG,EAAYvb,KAAI,SAAC+b,EAAM/iB,GACtB,OACE,cAACojB,EAAA,EAAD,CACE3c,QAAM,EACNxI,eAAa,EACbhC,QAAS,kBAAM4kB,EAAW7gB,IAE1BqjB,SAAUb,IAAgBxiB,EAC1BpF,QAAS,CACPyB,KAAMzB,EAAQ0nB,UAPlB,SAUE,cAACgB,EAAA,EAAD,CAAc7gB,QAASsgB,EAAKxjB,SAV9B,iBAIiBS,EAAM0a,wBA8D/B,cAAChB,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJC,GAAIie,EAAW,GAAK,GACpBhe,GAAIge,EAAW,GAAK,GACpBiC,GAAIjC,EAAW,GAAK,GACpBkC,GAAIlC,EAAW,GAAK,GACpBnlB,UAAWmlB,EAAW,GAAKnmB,EAAQmnB,kBAPrC,SASE,cAAC,EAAD,CACEnB,KAAM2B,EAAYC,GAClB3B,WAAYA,EACZC,YAAaA,EACbC,SAAUA,a,yHClPb,SAASwC,EAAqBC,GACnC,OAAOC,YAAqB,WAAYD,GAErBE,YAAuB,WAAY,CAAC,OAAQ,iBAAjE,I,OCFMxc,EAAY,CAAC,YAAa,YAAa,UAAW,OAAQ,gBAsB1Dyc,EAAYnc,YAAO,QAAS,CAChC7H,KAAM,WACN6jB,KAAM,OACNI,kBAAmB,SAAC9kB,EAAO+kB,GACzB,IACEC,EACEhlB,EADFglB,WAEF,MAAO,CAACD,EAAOxnB,KAAMynB,EAAWC,cAAgBF,EAAOE,gBAPzCvc,EASf,gBACDtP,EADC,EACDA,MACA4rB,EAFC,EAEDA,WAFC,OAGG3b,YAAS,CACb3O,QAAS,QACTjB,MAAO,OACPyrB,eAAgB,WAChBC,cAAe,EACf,YAAa9b,YAAS,GAAIjQ,EAAMgsB,WAAWC,MAAO,CAChDtrB,QAASX,EAAMyO,QAAQ,GACvBhN,MAAOzB,EAAMsK,QAAQmS,KAAKyP,UAC1B/hB,UAAW,OACXgiB,YAAa,YAEdP,EAAWC,cAAgB,CAC5BC,eAAgB,gBAEZM,EAAmB,QACnBC,EAAqB7c,cAAiB,SAAeC,EAASC,GAClE,IAAM9I,EAAQ0lB,YAAc,CAC1B1lB,MAAO6I,EACPhI,KAAM,aAIN/D,EAKEkD,EALFlD,UADF,EAMIkD,EAJFoE,iBAFF,MAEcohB,EAFd,IAMIxlB,EAHFjG,eAHF,MAGY,SAHZ,IAMIiG,EAFFZ,YAJF,MAIS,SAJT,IAMIY,EADFilB,oBALF,SAOM/b,EAAQC,YAA8BnJ,EAAOoI,GAE7C4c,EAAa3b,YAAS,GAAIrJ,EAAO,CACrCoE,YACArK,UACAqF,OACA6lB,iBAGInpB,EA5DkB,SAAAkpB,GACxB,IACElpB,EAEEkpB,EAFFlpB,QAGI6pB,EAAQ,CACZpoB,KAAM,CAAC,OAFLynB,EADFC,cAG+B,iBAEjC,OAAOW,YAAeD,EAAOlB,EAAsB3oB,GAoDnC+pB,CAAkBb,GAC5Bc,EAAQld,WAAc,iBAAO,CACjC7O,UACAqF,OACA6lB,kBACE,CAAClrB,EAASqF,EAAM6lB,IACpB,OAAoB7b,cAAKgR,IAAa2L,SAAU,CAC9CplB,MAAOmlB,EACP9nB,SAAuBoL,cAAKyb,EAAWxb,YAAS,CAC9CC,GAAIlF,EACJ4hB,KAAM5hB,IAAcohB,EAAmB,KAAO,QAC9C1c,IAAKA,EACLhM,UAAWgJ,YAAKhK,EAAQyB,KAAMT,GAC9BkoB,WAAYA,GACX9b,SA2DQuc,O,yHCjJR,SAASQ,EAAyBvB,GACvC,OAAOC,YAAqB,eAAgBD,GAErBE,YAAuB,eAAgB,CAAC,SAAjE,I,OCFMxc,EAAY,CAAC,YAAa,aAqB1B8d,EAAgBxd,YAAO,QAAS,CACpC7H,KAAM,eACN6jB,KAAM,OACNI,kBAAmB,SAAC9kB,EAAO+kB,GAAR,OAAmBA,EAAOxnB,OAHzBmL,CAInB,CACDhO,QAAS,oBAELyrB,EAAY,CAChBhiB,QAAS,QAELqhB,EAAmB,QACnBY,EAAyBxd,cAAiB,SAAmBC,EAASC,GAC1E,IAAM9I,EAAQ0lB,YAAc,CAC1B1lB,MAAO6I,EACPhI,KAAM,iBAIN/D,EAEEkD,EAFFlD,UADF,EAGIkD,EADFoE,iBAFF,MAEcohB,EAFd,EAIMtc,EAAQC,YAA8BnJ,EAAOoI,GAE7C4c,EAAa3b,YAAS,GAAIrJ,EAAO,CACrCoE,cAGItI,EArCkB,SAAAkpB,GACxB,IACElpB,EACEkpB,EADFlpB,QAKF,OAAO8pB,YAHO,CACZroB,KAAM,CAAC,SAEoB0oB,EAA0BnqB,GA8BvC+pB,CAAkBb,GAClC,OAAoB5b,cAAKyI,IAAiBkU,SAAU,CAClDplB,MAAOwlB,EACPnoB,SAAuBoL,cAAK8c,EAAe7c,YAAS,CAClDvM,UAAWgJ,YAAKhK,EAAQyB,KAAMT,GAC9BwM,GAAIlF,EACJ0E,IAAKA,EACLkd,KAAM5hB,IAAcohB,EAAmB,KAAO,WAC9CR,WAAYA,GACX9b,SAqCQkd,O,yIC/FR,SAASC,EAAwB3B,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACe4B,EADS1B,YAAuB,cAAe,CAAC,OAAQ,WAAY,QAAS,OAAQ,W,OCF9Fxc,EAAY,CAAC,YAAa,YAAa,QAAS,YA0BhDme,EAAe7d,YAAO,KAAM,CAChC7H,KAAM,cACN6jB,KAAM,OACNI,kBAAmB,SAAC9kB,EAAO+kB,GACzB,IACEC,EACEhlB,EADFglB,WAEF,MAAO,CAACD,EAAOxnB,KAAMynB,EAAWwB,MAAQzB,EAAOyB,KAAMxB,EAAWyB,QAAU1B,EAAO0B,UAPhE/d,EASlB,kBACDtP,EADC,EACDA,MADC,UAGDyB,MAAO,UACPH,QAAS,YACTgsB,cAAe,SAEf1D,QAAS,GAPR,0BAQKsD,EAAgBK,MARrB,UAQqC,CACpCjtB,gBAAiBN,EAAMsK,QAAQ6e,OAAOoE,QATvC,0BAWKL,EAAgB/B,UAAa,CACjC7qB,gBAAiBktB,YAAMxtB,EAAMsK,QAAQC,QAAQC,KAAMxK,EAAMsK,QAAQ6e,OAAOsE,iBACxE,UAAW,CACTntB,gBAAiBktB,YAAMxtB,EAAMsK,QAAQC,QAAQC,KAAMxK,EAAMsK,QAAQ6e,OAAOsE,gBAAkBztB,EAAMsK,QAAQ6e,OAAOuE,iBAdlH,KAwBGC,EAAwBne,cAAiB,SAAkBC,EAASC,GACxE,IAAM9I,EAAQ0lB,YAAc,CAC1B1lB,MAAO6I,EACPhI,KAAM,gBAIN/D,EAIEkD,EAJFlD,UADF,EAKIkD,EAHFoE,iBAFF,MAZuB,KAYvB,IAKIpE,EAFF2mB,aAHF,WAKI3mB,EADFukB,gBAJF,SAMMrb,EAAQC,YAA8BnJ,EAAOoI,GAE7C+d,EAAYvd,aAAiBiJ,KAE7BmT,EAAa3b,YAAS,GAAIrJ,EAAO,CACrCoE,YACAuiB,QACApC,WACAiC,KAAML,GAAmC,SAAtBA,EAAUhiB,QAC7BsiB,OAAQN,GAAmC,WAAtBA,EAAUhiB,UAG3BrI,EAvEkB,SAAAkpB,GACxB,IACElpB,EAKEkpB,EALFlpB,QAMI6pB,EAAQ,CACZpoB,KAAM,CAAC,OAFLynB,EAJFT,UAM2B,WAFzBS,EAHF2B,OAKgD,QAF9C3B,EAFFwB,MAIiE,OAF/DxB,EADFyB,QAGmF,WAErF,OAAOb,YAAeD,EAAOU,EAAyBvqB,GA4DtC+pB,CAAkBb,GAClC,OAAoB5b,cAAKmd,EAAcld,YAAS,CAC9CC,GAAIlF,EACJ0E,IAAKA,EACLhM,UAAWgJ,YAAKhK,EAAQyB,KAAMT,GAC9BkpB,KAnCqB,OAmCf5hB,EAAiC,KAAO,MAC9C4gB,WAAYA,GACX9b,OAgDU6d,O,0JC3IR,SAASC,EAAyBtC,GACvC,OAAOC,YAAqB,eAAgBD,GAE9C,IACeuC,EADUrC,YAAuB,eAAgB,CAAC,OAAQ,OAAQ,OAAQ,SAAU,YAAa,aAAc,kBAAmB,cAAe,YAAa,cAAe,aAAc,eAAgB,iB,OCFpNxc,EAAY,CAAC,QAAS,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,WA6B7F8e,EAAgBxe,YAAO,KAAM,CACjC7H,KAAM,eACN6jB,KAAM,OACNI,kBAAmB,SAAC9kB,EAAO+kB,GACzB,IACEC,EACEhlB,EADFglB,WAEF,MAAO,CAACD,EAAOxnB,KAAMwnB,EAAOC,EAAW7gB,SAAU4gB,EAAO,OAAD,OAAQoC,YAAWnC,EAAW5lB,QAAiC,WAAvB4lB,EAAWjrB,SAAwBgrB,EAAO,UAAD,OAAWoC,YAAWnC,EAAWjrB,WAAkC,YAArBirB,EAAWoC,OAAuBrC,EAAO,QAAD,OAASoC,YAAWnC,EAAWoC,SAAWpC,EAAWC,cAAgBF,EAAOE,gBAPxRvc,EASnB,gBACDtP,EADC,EACDA,MACA4rB,EAFC,EAEDA,WAFC,OAGG3b,YAAS,GAAIjQ,EAAMgsB,WAAWC,MAAO,CACzC3qB,QAAS,aACTgsB,cAAe,UAGf7D,aAAc,kBAAF,OACe,UAAvBzpB,EAAMsK,QAAQ2jB,KAAmBC,YAAQV,YAAMxtB,EAAMsK,QAAQ6jB,QAAS,GAAI,KAAQC,YAAOZ,YAAMxtB,EAAMsK,QAAQ6jB,QAAS,GAAI,MAC9HhkB,UAAW,OACXxJ,QAAS,IACe,SAAvBirB,EAAW7gB,SAAsB,CAClCtJ,MAAOzB,EAAMsK,QAAQmS,KAAKlS,QAC1BnI,WAAYpC,EAAMgsB,WAAWqC,QAAQ,IACrC3sB,WAAY1B,EAAMgsB,WAAWsC,kBACL,SAAvB1C,EAAW7gB,SAAsB,CAClCtJ,MAAOzB,EAAMsK,QAAQmS,KAAKlS,SACF,WAAvBqhB,EAAW7gB,SAAwB,CACpCtJ,MAAOzB,EAAMsK,QAAQmS,KAAKyP,UAC1B9pB,WAAYpC,EAAMgsB,WAAWqC,QAAQ,IACrCltB,SAAUnB,EAAMgsB,WAAWqC,QAAQ,KACd,UAApBzC,EAAW5lB,MAAX,aACDrF,QAAS,YADR,YAEKktB,EAAiBU,iBAAoB,CACzCluB,MAAO,GAEPM,QAAS,gBACT,QAAS,CACPA,QAAS,KAGW,aAAvBirB,EAAWjrB,SAA0B,CACtCN,MAAO,GAEPM,QAAS,aACe,SAAvBirB,EAAWjrB,SAAsB,CAClCA,QAAS,GACa,SAArBirB,EAAWoC,OAAoB,CAChC7jB,UAAW,QACW,WAArByhB,EAAWoC,OAAsB,CAClC7jB,UAAW,UACW,UAArByhB,EAAWoC,OAAqB,CACjC7jB,UAAW,QACXge,cAAe,eACO,YAArByD,EAAWoC,OAAuB,CACnC7jB,UAAW,WACVyhB,EAAWC,cAAgB,CAC5B1rB,SAAU,SACVgH,IAAK,EACLzG,OAAQ,EACRJ,gBAAiBN,EAAMsK,QAAQ8D,WAAWwV,aAOtC4K,EAAyBhf,cAAiB,SAAmBC,EAASC,GAC1E,IAoBI1E,EApBEpE,EAAQ0lB,YAAc,CAC1B1lB,MAAO6I,EACPhI,KAAM,iBAGR,EASIb,EARFonB,aADF,MACU,UADV,EAEEtqB,EAOEkD,EAPFlD,UACW+qB,EAMT7nB,EANFoE,UACS0jB,EAKP9nB,EALFjG,QACOguB,EAIL/nB,EAJFgoB,MACMC,EAGJjoB,EAHFZ,KACA8oB,EAEEloB,EAFFkoB,cACSC,EACPnoB,EADFmE,QAEI+E,EAAQC,YAA8BnJ,EAAOoI,GAE7C0d,EAAQld,aAAiBwR,KACzB+L,EAAYvd,aAAiBiJ,KAC7BuW,EAAajC,GAAmC,SAAtBA,EAAUhiB,QAIxCC,EADEyjB,IAGUO,EAAa,KAAO,MAGlC,IAAIJ,EAAQD,GAEPC,GAASI,IACZJ,EAAQ,OAGV,IAAM7jB,EAAUgkB,GAAehC,GAAaA,EAAUhiB,QAEhD6gB,EAAa3b,YAAS,GAAIrJ,EAAO,CACrConB,QACAhjB,YACArK,QAAS+tB,IAAgBhC,GAASA,EAAM/rB,QAAU+rB,EAAM/rB,QAAU,UAClEqF,KAAM6oB,IAAanC,GAASA,EAAM1mB,KAAO0mB,EAAM1mB,KAAO,UACtD8oB,gBACAjD,aAA0B,SAAZ9gB,GAAsB2hB,GAASA,EAAMb,aACnD9gB,YAGIrI,EAjIkB,SAAAkpB,GACxB,IACElpB,EAMEkpB,EANFlpB,QACAqI,EAKE6gB,EALF7gB,QACAijB,EAIEpC,EAJFoC,MACArtB,EAGEirB,EAHFjrB,QACAqF,EAEE4lB,EAFF5lB,KAGIumB,EAAQ,CACZpoB,KAAM,CAAC,OAAQ4G,EAFb6gB,EADFC,cAGwC,eAA0B,YAAVmC,GAAA,eAA+BD,YAAWC,IAAsB,WAAZrtB,GAAA,iBAAkCotB,YAAWptB,IAAnJ,cAAsKotB,YAAW/nB,MAEzL,OAAOwmB,YAAeD,EAAOqB,EAA0BlrB,GAqHvC+pB,CAAkBb,GAC9BqD,EAAW,KAMf,OAJIH,IACFG,EAA6B,QAAlBH,EAA0B,YAAc,cAGjC9e,cAAK8d,EAAe7d,YAAS,CAC/CC,GAAIlF,EACJ0E,IAAKA,EACLhM,UAAWgJ,YAAKhK,EAAQyB,KAAMT,GAC9B,YAAaurB,EACbL,MAAOA,EACPhD,WAAYA,GACX9b,OAyEU0e,O,iCCtOf,IAAIxV,EAAyBxI,EAAQ,IAErCqI,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6S,aAAU,EAElB,IAAIC,EAAiB7K,EAAuBxI,EAAQ,KAEhDsT,EAActT,EAAQ,GAEtBuT,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,ocACD,UAEJlT,EAAQ6S,QAAUG,G,iCCflB,IAAI/K,EAAyBxI,EAAQ,IAErCqI,OAAOC,eAAe/H,EAAS,aAAc,CAC3CxJ,OAAO,IAETwJ,EAAQ6S,aAAU,EAElB,IAAIC,EAAiB7K,EAAuBxI,EAAQ,KAEhDsT,EAActT,EAAQ,GAEtBuT,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJlT,EAAQ6S,QAAUG,G,wOCSLmL,EAAuB,SAACC,GACnC,IAAIC,EAAoB,GA2BxB,OAzBAD,EAAe9R,SAAQ,SAACpI,GACtB,GAAIA,EAAMjN,UAAmC,KAAvBiN,EAAM1N,MAAM8nB,OAChCD,EAAana,EAAMqa,UAAY,6BAIjC,GAAKra,EAAMjN,UAAmC,KAAvBiN,EAAM1N,MAAM8nB,OAInC,GAAIpa,EAAMsa,kBAAoBta,EAAMua,wBAClCJ,EAAana,EAAMqa,UAAYra,EAAMua,6BAIvC,GAAIva,EAAMwa,SAAWxa,EAAMya,qBAA3B,CACE,IAAMC,EAAM,IAAIC,OAAO3a,EAAMwa,QAAS,KAEjCxa,EAAM1N,MAAMsoB,MAAMF,KACrBP,EAAana,EAAMqa,UAAYra,EAAMya,+BAMpCN,G,4DC4DH9vB,EAAqB,CACzBwwB,0BAGIrwB,EAAYC,YAAQ,KAAMJ,GAEjBS,eAzFA,SAACC,GAAD,OACbC,YAAa,yBACX8vB,SAAU,CACRxrB,SAAU,QACVka,WAAY,SACZuR,SAAU,eAETC,KACA/rB,QAiFQnE,CAAmBN,GAtER,SAAC,GAML,IALpBiD,EAKmB,EALnBA,QACAiV,EAImB,EAJnBA,UACAuY,EAGmB,EAHnBA,iBACAC,EAEmB,EAFnBA,iCACAL,EACmB,EADnBA,qBAEA,EACEltB,oBAAkB,GADpB,mBAAOwtB,EAAP,KAA4BC,EAA5B,KAGAltB,qBAAU,WACJitB,GACFE,IACGC,OAAO,OAAQ,oBAAqB,CACnC9oB,KAAMkQ,IAEP6Y,MAAK,SAACC,GACLJ,GAAuB,GACvBF,GAAiC,MAElCO,OAAM,SAAC3Q,GACNsQ,GAAuB,GACvBP,EAAqB/P,QAG1B,CACDqQ,EACAD,EACAxY,EACAmY,IAOF,OACE,cAACa,EAAA,EAAD,CACEhsB,MAAK,gBACLsI,YAAa,SACbC,mBAAoB,CAClBzL,MAAO,UACPsJ,QAAS,aAEX4B,OAAQujB,EACRpjB,UAAWsjB,EACXvjB,UAdiB,WACnBwjB,GAAuB,IAcrB5rB,QAAS,WACP0rB,GAAiC,IAEnCpjB,oBACE,eAAC,IAAMtE,SAAP,WACG2nB,GAAuB,cAACrH,EAAA,EAAD,IACxB,eAAC6H,EAAA,EAAD,6DAEE,uBACA,mBAAGltB,UAAWhB,EAAQqtB,SAAtB,SAAiCpY,IAHnC,gB,6CCySJlY,EAAYC,aApBD,SAACC,GAAD,MAAsB,CACrCkxB,aAAclxB,EAAMmxB,QAAQC,aAAaC,eACzCC,WAAYtxB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWF,WACzDG,WAAYzxB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWC,WACzDC,gBAAiB1xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWE,gBAC9DC,MAAO3xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWG,MACpDC,WAAY5xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWI,WACzDC,SAAU7xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWK,SACvDC,gBAAiB9xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWM,gBAC9DC,eAAgB/xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWO,eAC7DC,iBACEhyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWQ,iBAC/CC,WAAYjyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWS,WACzDC,aAAclyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWU,aAC3DC,aAAcnyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWW,aAC3Drc,UAAW9V,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAW1b,UACxDsc,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,wBAGb,CAClCld,mBACAK,kBAGanV,eA/UA,SAACC,GAAD,OACbC,YAAa,yBACXkE,KAAM,CACJiH,OAAQ,GAEVshB,MAAO,CACL,uBAAwB,CACtBvrB,SAAU,MAGX8uB,KACAgC,QAoUQlyB,CAAmBN,GAjUd,SAAC,GAmBK,IAlBxBiD,EAkBuB,EAlBvBA,QACAmS,EAiBuB,EAjBvBA,eACAK,EAgBuB,EAhBvBA,YACA2b,EAeuB,EAfvBA,aACAI,EAcuB,EAdvBA,WACAG,EAauB,EAbvBA,WACAC,EAYuB,EAZvBA,gBACAC,EAWuB,EAXvBA,MACAC,EAUuB,EAVvBA,WACAC,EASuB,EATvBA,SACAC,EAQuB,EARvBA,gBACAC,EAOuB,EAPvBA,eACAC,EAMuB,EANvBA,iBACAC,EAKuB,EALvBA,WACAC,EAIuB,EAJvBA,aACAC,EAGuB,EAHvBA,aACArc,EAEuB,EAFvBA,UACAsc,EACuB,EADvBA,qBAEA,EAAkCnvB,oBAAkB,GAApD,mBAAOsvB,EAAP,KAAkBC,EAAlB,KACA,EAAkCvvB,mBAAiB,IAAnD,mBAAOwvB,EAAP,KAAkBC,EAAlB,KACMC,EAAoBR,EAAaS,eAAeC,MACpD,SAACjM,GAAD,OAAaA,EAAQkM,cAAgBjB,KAIjCkB,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,aAAcI,EAAO1N,KAEtC,CAACsN,IAOG8d,EAAqBzvB,uBAAY,WACrC,IAAM0vB,EAAUpe,SAAS+c,IAAe,EAClCsB,EAAc5B,GAAc,EAC5B6B,EAAanB,GAAoB,EACjCoB,EAAoB3B,EAEpB4B,EAAmBC,YACvBJ,EAAYrQ,SAAS,IACrBuQ,GAEIG,EAAWC,YAAkBP,EAASI,EAAkBF,GAC9DJ,EAAY,aAAcQ,KACzB,CAACvB,EAAkBJ,EAAYH,EAAYsB,EAAazB,IAqB3D9tB,qBAAU,WACRwvB,MACC,CAACpB,EAAYoB,IAEhBxvB,qBAAU,WACRwvB,MACC,CAAChB,EAAkBgB,IAEtBxvB,qBAAU,WACR,GAAIsuB,EAAgBpsB,OAAS,GAA4B,KAAvBwsB,EAAa9pB,MAAc,CAC3D,IAAMqrB,EAAkBC,YACtB3B,EACAG,EAAayB,kBACbzB,EAAa0B,OACb1B,EAAaP,OAGfoB,EAAY,eAAgBU,GAC5BV,EAAY,WAAYU,EAAgBI,cAEzC,CAAC/B,EAAgBpsB,OAAQwsB,EAAcH,EAAgBgB,IAI1DvvB,qBAAU,WACRswB,IACAC,IA7C4B,SAACpC,GACf,KAAVA,GAAiBqC,MAAMnf,SAAS8c,MAClCe,EAAa,IACb/B,IACGC,OACC,MAFJ,2DAGwDe,IAErDd,MAAK,SAACC,GACL,IAAMmD,EAAYnD,EAAIoD,WAAapD,EAAIoD,WAAa,EACpDnB,EAAY,mBAAoBkB,MAEjClD,OAAM,SAAC3Q,GACNoS,GAAa,GACbE,EAAatS,EAAI1c,kBAgCvBywB,CAAsBxC,KAErB,CAACA,EAAOL,EAAYG,EAAYC,IAEnC,IAAMoC,EAAsB,WAC1B,IAAMztB,EAAOirB,EACP8C,EAAS3C,EACT3b,EAAYwd,YAAS,KAAM,MAAM,GAEjCe,EAA6B,CACjCC,KAAMF,EACNxsB,MAAOvB,EAAKwc,YAGR0R,EAAiBC,YACrBH,EACAxf,SAAS8c,GACT9c,SAASiB,GACTjB,SAAS6c,IAGXqB,EAAY,eAAgBwB,IAGxBR,EAAa,WACjBhB,EAAY,WAAY,IAEH,KAAjBpB,EAAMjC,QAA4C,KAA3BgC,EAAgBhC,QACzCiB,IACGC,OAAO,MADV,6BACuCe,EADvC,YACgDD,IAC7Cb,MAAK,SAACzN,GACL2P,EAAY,kBAAmB5P,YAAgBC,IAC/C2P,EAAY,iBAAkB3P,MAE/B2N,OAAM,SAAC3Q,GACN2S,EAAY,kBAAmB,IAC/Bxd,EAAY,cAAc,GAC1Bwd,EAAY,WAAY,QA0EhC,OAlEAvvB,qBAAU,WACR,IAAMixB,EAAanB,YAAShC,EAAYG,GAAY,GAC9CiD,EAAmBnF,EAAqB,CAC5C,CACEI,SAAU,QACVtnB,UAAU,EACVT,MAAO+pB,EACP/B,iBAAkB2C,EAClB1C,wBAAyB4C,GAE3B,CACE9C,SAAU,cACVtnB,UAAU,EACVT,MAAO0pB,EACP1B,iBACE/a,SAAS4f,GAAc,YACvB5f,SAAS4f,GAAc3e,EAAUsc,GACnCvC,wBAAwB,sDAAD,OAAwD8E,YAC7E7e,EAAUsc,IACV,KAGJ,CACEzC,SAAU,kBACVtnB,UAAU,EACVT,MAAOgqB,EACPhC,iBAAkB/a,SAAS+c,GAAc,EACzC/B,wBAAyB,wCAE3B,CACEF,SAAU,WACVtnB,UAAU,EACVT,MAAO8pB,EACP9B,iBAAkB/a,SAAS6c,GAAmB,EAC9C7B,wBAAyB,sCAI7Bta,EACE,eACE,UAAWmf,MACT,gBAAiBA,MACjB,oBAAqBA,MACrB,aAAcA,IACO,KAAvBxC,EAAa9pB,OACU,IAAvB+pB,EAAa/pB,OACQ,KAArB6pB,EAAW7pB,SAEd,CACDupB,EACAL,EACAG,EACAG,EACAM,EACAR,EACAS,EACAF,EACAnc,EACAsc,EACA7c,EACAgd,EACAE,IAMA,sBAAK1uB,UAAWhB,EAAQyB,KAAxB,UACE,qDACA,cAACowB,EAAA,EAAD,IACA,cAAClI,EAAA,EAAD,CAAO3oB,UAAWhB,EAAQgqB,MAAO,aAAW,eAAe1mB,KAAM,QAAjE,SACE,eAACgnB,EAAA,EAAD,WACE,eAACW,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,+BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACGxZ,SAAS8c,GAAS,EAAIA,EAAQ,SAGnC,eAAC3D,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,+BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACG6D,EAAeA,EAAa2C,MAAQ,SAGzC,eAAC7G,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,4BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACG6D,EAAeyC,YAAUzC,EAAa0B,QAAU,SAGrD,eAAC5F,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,2BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACG6D,EAAeA,EAAayB,kBAAoB,UAGnDzC,GACA,eAAClD,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,6BACA,eAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,UAA0BuD,EAA1B,iBAKgB,IAAvBO,EAAa/pB,OAAeuqB,GAC3B,eAAC,WAAD,WACE,4DACA,cAACiC,EAAA,EAAD,IACA,cAAClI,EAAA,EAAD,CACE3oB,UAAWhB,EAAQgqB,MACnB,aAAW,eACX1mB,KAAM,QAHR,SAKE,eAACgnB,EAAA,EAAD,WACE,eAACW,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,uBACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACgB,KAAbwD,EAAkBA,EAAW,SAGlC,eAAC7D,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,0BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACGsG,YAAUxC,EAAa2C,kBAG5B,eAAC9G,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAWI,MAAM,MAAjB,6BACA,cAACJ,EAAA,EAAD,CAAWR,MAAM,QAAjB,SACGsG,YAAUhC,EAAkBoC,kBAGjC,eAAC/G,EAAA,EAAD,WACE,cAACa,EAAA,EAAD,CAAW7qB,MAAO,CAAE8lB,aAAc,GAAKmF,MAAM,MAA7C,uCAGA,cAACJ,EAAA,EAAD,CAAW7qB,MAAO,CAAE8lB,aAAc,GAAKuE,MAAM,QAA7C,SACG6D,EACGjhB,KAAK+jB,MACHrC,EAAkBsC,sBAChB/C,EAAa2C,OAEjB,wBCyFhB/0B,EAAYC,aApBD,SAACC,GAAD,MAAsB,CACrCkxB,aAAclxB,EAAMmxB,QAAQC,aAAaC,eACzCC,WAAYtxB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWF,WACzDG,WAAYzxB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWC,WACzDC,gBAAiB1xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWE,gBAC9DC,MAAO3xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWG,MACpDC,WAAY5xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWI,WACzDC,SAAU7xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWK,SACvDC,gBAAiB9xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWM,gBAC9DC,eAAgB/xB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWO,eAC7DC,iBACEhyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWQ,iBAC/CC,WAAYjyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWS,WACzDC,aAAclyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWU,aAC3DC,aAAcnyB,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAWW,aAC3Drc,UAAW9V,EAAMmxB,QAAQC,aAAaG,OAAOC,WAAW1b,UACxDsc,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,wBAGb,CAClCld,mBACAK,kBAGanV,eAvYA,SAACC,GAAD,OACbC,YAAa,qCACX40B,wBAAyB,CACvBvzB,QAAS,OACTC,WAAY,UAEduzB,eAAgB,CACdnzB,WAAY,GACZ,QAAS,CACPsK,aAAc,GAEhB,4BAA6B,CAC3B,QAAS,CACP7L,UAAW,MAId20B,KACA9E,KACAgC,QAoXQlyB,CAAmBN,GAjXf,SAAC,GAmBK,IAlBvBiD,EAkBsB,EAlBtBA,QACAmS,EAiBsB,EAjBtBA,eACAK,EAgBsB,EAhBtBA,YAEA+b,GAcsB,EAftBJ,aAesB,EAdtBI,YACAG,EAasB,EAbtBA,WACAC,EAYsB,EAZtBA,gBACAC,EAWsB,EAXtBA,MACAC,EAUsB,EAVtBA,WACAC,EASsB,EATtBA,SACAC,EAQsB,EARtBA,gBACAC,EAOsB,EAPtBA,eACAC,EAMsB,EANtBA,iBACAC,EAKsB,EALtBA,WACAC,EAIsB,EAJtBA,aACAC,EAGsB,EAHtBA,aACArc,EAEsB,EAFtBA,UACAsc,EACsB,EADtBA,qBAEA,EAAgDnvB,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KACA,EAAkCryB,oBAAkB,GAApD,mBAAOsvB,EAAP,KAAkBC,EAAlB,KACA,EAAkCvvB,mBAAiB,IAAnD,mBAAOwvB,EAAP,KAAkBC,EAAlB,KAGMK,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,aAAcI,EAAO1N,KAEtC,CAACsN,IAGGqgB,EAAkB,SAACngB,GACvBkgB,EAAoBE,YAAqBH,EAAkBjgB,KAOvD4d,EAAqBzvB,uBAAY,WACrC,IAAM0vB,EAAUpe,SAAS+c,IAAe,EAClCsB,EAAc5B,GAAc,EAC5B6B,EAAanB,GAAoB,EACjCoB,EAAoB3B,EAEpB4B,EAAmBC,YACvBJ,EAAYrQ,SAAS,IACrBuQ,GAEIG,EAAWC,YAAkBP,EAASI,EAAkBF,GAC9DJ,EAAY,aAAcQ,KACzB,CAACvB,EAAkBJ,EAAYH,EAAYsB,EAAazB,IAqB3D9tB,qBAAU,WACRwvB,MACC,CAACpB,EAAYoB,IAEhBxvB,qBAAU,WACRwvB,MACC,CAAChB,EAAkBgB,IAEtBxvB,qBAAU,WACR,GAAIsuB,EAAgBpsB,OAAS,GAA4B,KAAvBwsB,EAAa9pB,MAAc,CAC3D,IAAMqrB,EAAkBC,YACtB3B,EACAG,EAAayB,kBACbzB,EAAa0B,OACb1B,EAAaP,OAGfoB,EAAY,eAAgBU,GAC5BV,EAAY,WAAYU,EAAgBI,cAEzC,CAAC/B,EAAgBpsB,OAAQwsB,EAAcH,EAAgBgB,IAI1DvvB,qBAAU,WACRswB,IACAC,IA7C4B,SAACpC,GACf,KAAVA,GAAiBqC,MAAMnf,SAAS8c,MAClCe,EAAa,IACb/B,IACGC,OACC,MAFJ,2DAGwDe,IAErDd,MAAK,SAACC,GACL,IAAMmD,EAAYnD,EAAIoD,WAAapD,EAAIoD,WAAa,EACpDnB,EAAY,mBAAoBkB,MAEjClD,OAAM,SAAC3Q,GACNoS,GAAa,GACbE,EAAatS,EAAI1c,kBAgCvBywB,CAAsBxC,KAErB,CAACA,EAAOL,EAAYG,EAAYC,IAEnC,IAAMoC,EAAsB,WAC1B,IAAMztB,EAAOirB,EACP8C,EAAS3C,EACT3b,EAAYwd,YAAS,KAAM,MAAM,GAEjCe,EAA6B,CACjCC,KAAMF,EACNxsB,MAAOvB,EAAKwc,YAGR0R,EAAiBC,YACrBH,EACAxf,SAAS8c,GACT9c,SAASiB,GACTjB,SAAS6c,IAGXqB,EAAY,eAAgBwB,IAGxBR,EAAa,WACjBhB,EAAY,WAAY,IAEH,KAAjBpB,EAAMjC,QAA4C,KAA3BgC,EAAgBhC,QACzCiB,IACGC,OAAO,MADV,6BACuCe,EADvC,YACgDD,IAC7Cb,MAAK,SAACzN,GACL2P,EAAY,kBAAmB5P,YAAgBC,IAC/C2P,EAAY,iBAAkB3P,MAE/B2N,OAAM,SAAC3Q,GACN2S,EAAY,kBAAmB,IAC/Bxd,EAAY,cAAc,GAC1Bwd,EAAY,WAAY,QA4EhC,OApEAvvB,qBAAU,WACR,IAAMixB,EAAanB,YAAShC,EAAYG,GAAY,GAC9CiD,EAAmBnF,EAAqB,CAC5C,CACEI,SAAU,QACVtnB,UAAU,EACVT,MAAO+pB,EACP/B,iBAAkB2C,EAClB1C,wBAAyB4C,GAE3B,CACE9C,SAAU,cACVtnB,UAAU,EACVT,MAAO0pB,EACP1B,iBACE/a,SAAS4f,GAAc,YACvB5f,SAAS4f,GAAc3e,EAAUsc,GACnCvC,wBAAwB,sDAAD,OAAwD8E,YAC7E7e,EAAUsc,IACV,KAGJ,CACEzC,SAAU,kBACVtnB,UAAU,EACVT,MAAOgqB,EACPhC,iBAAkB/a,SAAS+c,GAAc,EACzC/B,wBAAyB,wCAE3B,CACEF,SAAU,WACVtnB,UAAU,EACVT,MAAO8pB,EACP9B,iBAAkB/a,SAAS6c,GAAmB,EAC9C7B,wBAAyB,sCAI7Bta,EACE,eACE,UAAWmf,MACT,gBAAiBA,MACjB,oBAAqBA,MACrB,aAAcA,IACO,KAAvBxC,EAAa9pB,OACU,IAAvB+pB,EAAa/pB,OACQ,KAArB6pB,EAAW7pB,OAGfktB,EAAoBZ,KACnB,CACD/C,EACAL,EACAG,EACAG,EACAM,EACAR,EACAS,EACAF,EACAnc,EACAsc,EACA7c,EACAgd,EACAE,IAMA,eAAC,WAAD,WACE,cAAC5Q,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,sBAAKjH,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,yBACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,qDAKoB,KAAvBzD,EAAa9pB,OACZ,cAACyZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQqF,MAAxB,SAAgC8pB,EAAa9pB,UAG3B,KAArB6pB,EAAW7pB,OACV,cAACyZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQqF,MAAxB,SAAgC6pB,EAAW7pB,UAG/C,cAACyZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,QACHC,KAAK,QACLlE,KAAK,SACL+D,SAAU,SAACyX,GACT2T,EAAY,QAAS3T,EAAEvE,OAAOjT,OAC9B2tB,EAAgB,UAElB7tB,MAAM,oBACNM,SAAmC,KAAzBoqB,EACVxqB,MAAO+pB,EACPppB,IAAI,IACJF,UAAQ,EACRD,MAAOitB,EAAgB,OAAa,OAGxC,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,WACHC,KAAK,WACLlE,KAAK,SACL+D,SAAU,SAACyX,GACT2T,EAAY,kBAAmB3T,EAAEvE,OAAOjT,OACxC2tB,EAAgB,aAElB7tB,MAAM,8BACNE,MAAO8pB,EACP1pB,SAAmC,KAAzBoqB,EACV7pB,IAAI,IACJF,UAAQ,EACRD,MAAOitB,EAAgB,UAAgB,OAG3C,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,qBAAK/xB,UAAWhB,EAAQ6yB,aAAxB,SACE,sBAAK7xB,UAAWhB,EAAQmyB,wBAAxB,UACE,cAACW,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,cACHC,KAAK,cACLH,SAAU,SAACyX,GACT2T,EAAY,aAAc3T,EAAEvE,OAAOjT,OACnC2tB,EAAgB,gBAElB7tB,MAAM,aACNE,MAAO0pB,EACPtpB,SAAmC,KAAzBoqB,EACV/pB,UAAQ,EACRD,MAAOitB,EAAgB,aAAmB,GAC1C9sB,IAAI,MAEN,qBAAKxE,UAAWhB,EAAQoyB,eAAxB,SACE,cAACY,EAAA,EAAD,CACEruB,MAAO,GACPG,GAAG,cACHC,KAAK,cACLF,MAAO6pB,EACPzpB,SAAmC,KAAzBoqB,EACVzqB,SAAU,SAACyX,GACT2T,EAAY,aAAc3T,EAAEvE,OAAOjT,QAErCqH,QAAS+mB,2BAQrB,eAAC,WAAD,WACE,cAACnU,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,EAAY,aAAc3T,EAAEvE,OAAOjT,OACnC2tB,EAAgB,oBAElB7tB,MAAM,uBACNE,MAAOgqB,EACP5pB,SAAmC,KAAzBoqB,EACV/pB,UAAQ,EACRD,MAAOitB,EAAgB,iBAAuB,GAC9C9sB,IAAI,QAGR,eAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,UACE,cAACG,EAAA,EAAD,CACEluB,GAAG,YACHC,KAAK,YACLH,SAAU,SAACyX,GACT2T,EAAY,WAAY3T,EAAEvE,OAAOjT,QAEnCF,MAAM,sBACNM,SAAmC,KAAzBoqB,EACVxqB,MAAOiqB,EACP5iB,QAAS6iB,IAEX,sBAAM/tB,UAAWhB,EAAQ4yB,gBAAzB,4H,SC7EJ71B,EAAYC,aARD,SAACC,GAAD,MAAsB,CACrC6X,WAAY7X,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWxa,WACzDG,UAAWhY,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWra,UACxDoa,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,qBAC/Czc,eAAgB3V,EAAMmxB,QAAQC,aAAazb,kBAGT,CAClC9V,8BACAqV,mBACAQ,0BACAG,iBACAN,kBAGanV,eA1SA,SAACC,GAAD,OACbC,YAAa,qCACX21B,YAAa,CACXz1B,SAAU,QACVwB,WAAY,GACZyM,WAAY,UACZ7N,OAAQ,oBACRI,QAAS,IAERo0B,KACA9E,KACAgC,QA+RQlyB,CAAmBN,GA/Qf,SAAC,GAWM,IAVxBiD,EAUuB,EAVvBA,QACA4S,EASuB,EATvBA,eACAkC,EAQuB,EARvBA,WACAG,EAOuB,EAPvBA,UACAoa,EAMuB,EANvBA,qBACAld,EAKuB,EALvBA,eACAQ,EAIuB,EAJvBA,sBACAG,EAGuB,EAHvBA,aACAN,EAEuB,EAFvBA,YACA1V,EACuB,EADvBA,0BAEA,EAAgDoD,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KACA,EAA4CryB,oBAAkB,GAA9D,mBAAOizB,EAAP,KAAuBC,EAAvB,KACA,EACElzB,oBAAkB,GADpB,mBAAOmzB,EAAP,KAA6BC,EAA7B,KAEA,EAAgDpzB,oBAAkB,GAAlE,mBAAOqzB,EAAP,KAAyBC,EAAzB,KACA,EAAgDtzB,oBAAkB,GAAlE,mBAAOuzB,EAAP,KAAyBC,EAAzB,KAGM1D,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,aAAcI,EAAO1N,KAEtC,CAACsN,IAIGwhB,EAA0BnzB,uBAAY,WAC1CgzB,GAAoB,GACpBxD,EAAY,uBAAwB,IAEpCrd,EAAsB,IAGtBib,IACGC,OAAO,MADV,6BACuC5Y,EADvC,aAEG6Y,MAAK,SAACC,GACL,IAAM6F,EAAc9yB,IAAIitB,EAAK,UAAW,IAExC,GAAI6F,GAAeA,EAAYjxB,OAAS,EAGtC,OAFAywB,GAAkB,QAClBE,GAAwB,GAG1BF,GAAkB,GAGlBxF,IACGC,OACC,MAFJ,6BAG0B5Y,EAH1B,2BAGsDA,EAHtD,kBAKG6Y,MAAK,SAACC,GACL,IAAM8F,EAA4B/yB,IAAIitB,EAAK,WAAY,IACvDjb,EAAawN,YAAcyN,IAE3B,IAAM+F,EAAaD,EAASznB,KAAI,SAAC2nB,GAC/B,IAAMhvB,EAAOjE,IAAIizB,EAAc,OAAQ,IAAIhU,MACzC,iDACA,GAEF,MAAO,CAAEpb,MAAOI,EAAMF,MAAOE,MAG/B4N,EAAsBmhB,GAClBA,EAAWnxB,OAAS,GACtBqtB,EAAY,uBAAwB8D,EAAW,GAAGjvB,OAEpDyuB,GAAwB,MAEzBtF,OAAM,SAAC3Q,GACNiW,GAAwB,GACxBE,GAAoB,GACpB9W,QAAQrX,MAAM,oBAAqBgY,SAGxC2Q,OAAM,SAAC3Q,GACNvgB,EAA0B,CACxB6D,aAAc,oDACdD,cAAe2c,EAAI3c,qBAGxB,CACDuU,EACAnC,EACAhW,EACA6V,EACAqd,IAGIgE,EAAoBC,mBACxB,kBAAMC,IAASP,EAAyB,OACxC,CAACA,IAGHlzB,qBAAU,WACR,GAAkB,KAAdwU,EAKF,OAJA+e,IACAV,GAAwB,GAGjBU,EAAkB1jB,SAE1B,CAAC0jB,EAAmB/e,IAGvBxU,qBAAU,WACR,IAAI0zB,GAAuB,EACvBxzB,EAAe,GAEdwyB,GAAmBE,EAItBzgB,EAAejQ,OAAS,GACxBwwB,IACCE,IAEDc,GAAuB,EACvBxzB,EAAe,mCARfwzB,GAAuB,EACvBxzB,EAAe,gDAUjB,IAAMgxB,EAAmBnF,EAAqB,CAC5C,CACEI,SAAU,cACVtnB,UAAU,EACVynB,QAAS,oBACTC,qBACE,2EACFnoB,MAAOiQ,GAET,CACE8X,SAAU,YACVtnB,UAAU,EACVT,MAAOoQ,EACP4X,iBAAkBsH,EAClBrH,wBAAyBnsB,KAIvByzB,IACF,gBAAiBzC,MACjB,cAAeA,IACjB/e,EAAejQ,OAAS,EAE1B6P,EAAY,aAAc4hB,GAE1B7B,EAAoBZ,KACnB,CACD/e,EACAqC,EACAH,EACAtC,EACA2gB,EACAE,IAGF,IAAMgB,EAAuB,SAAChiB,GAC5BkgB,EAAoBE,YAAqBH,EAAkBjgB,KAe7D,OACE,eAAC,WAAD,WACGohB,GACC,cAAC,EAAD,CACEjG,iBAAkBiG,EAClBhG,iCAbkB,SAAC6G,GACzBZ,GAAoB,GAEhBY,GACFN,KAUI/e,UAAWA,IAGf,eAAC6J,EAAA,EAAD,CAAM9Y,WAAS,EAAf,UACE,cAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGE,GAAI,EAAtB,SACE,cAACosB,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,SACE,eAAC1V,EAAA,EAAD,CAAM9Y,WAAS,EAAf,UACE,eAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,sBAAKjH,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,yBACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,4DAIF,qBAAK5xB,UAAWhB,EAAQ6yB,aAAxB,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,cACHC,KAAK,cACLH,SAAU,SAACyX,GACT2T,EAAY,aAAc3T,EAAEvE,OAAOjT,OACnCwvB,EAAqB,gBAEvB1vB,MAAM,OACNE,MAAOiQ,EACPxP,UAAQ,EACRD,MAAOitB,EAAiB,gBAAkB,UAIhD,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,YACHC,KAAK,YACLH,SAAU,SAACyX,GACT2T,EAAY,YAAa3T,EAAEvE,OAAOjT,OAClCwvB,EAAqB,cAEvB1vB,MAAM,YACNE,MAAOoQ,EACP5P,MAAOitB,EAAgB,WAAiB,GACxC5sB,YAAa6tB,EAAmB,cAACkB,EAAA,EAAD,IAAc,KAC9CjwB,cA3DK,WACnBkvB,GAAoB,IA2DNpuB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACG,EAAA,EAAD,CACEluB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,EACE,uBACA3T,EAAEvE,OAAOjT,QAGbF,MAAM,gBACNE,MAAOwqB,EACPnjB,QAAS0G,EACT3N,SAAU2N,EAAejQ,OAAS,MAGtC,cAAC,EAAD,WAIN,cAACmc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGE,GAAI,EAAtB,SACE,qBAAKnH,UAAWhB,EAAQkzB,YAAxB,SACE,cAAC,EAAD,kB,iBCswBNn2B,EAAYC,aApDD,SAACC,GAAD,MAAsB,CACrC2V,eAAgB3V,EAAMmxB,QAAQC,aAAazb,eAC3C8hB,YAAaz3B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUD,YACzDE,UAAW33B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUC,UACvDC,gBAAiB53B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUE,gBAC7DC,cAAe73B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUG,cAC3DC,sBACE93B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUI,sBAC9CC,sBACE/3B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUK,sBAC9CC,YAAah4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUM,YACzDC,cAAej4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUO,cAC3DC,iBACEl4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUQ,iBAC9CC,aAAcn4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUS,aAC1DC,gBAAiBp4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUU,gBAC7DC,oBACEr4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUW,oBAC9CC,oBACEt4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUY,oBAC9CC,qBACEv4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUa,qBAC9CC,qBACEx4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUc,qBAC9CC,8BACEz4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUe,8BAC9CC,eAAgB14B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUgB,eAC5DC,SAAU34B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUiB,SACtDC,uBACE54B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUkB,uBAC9CC,2BACE74B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUmB,2BAC9CC,+BACE94B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUoB,+BAC9CC,gBAAiB/4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUqB,gBAC7DC,uBACEh5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUsB,uBAC9CC,oBACEj5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUuB,oBAC9C7G,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,qBAC/C8G,sBACEl5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUwB,sBAC9CC,yBACEn5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUyB,yBAC9CC,iCACEp5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAC/B0B,iCACLC,0BACEr5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAU2B,6BAGZ,CAClCnkB,mBACAK,kBAGanV,eA/gCA,SAACC,GAAD,OACbC,YAAa,yBACXg5B,kBAAmB,CACjBr3B,YAAa,GAEb,oBAAqB,CACnBrB,OAAQ,kBAGZ24B,0BAA2B,CACzBv3B,WAAY,GACZtB,MAAO,MACP+K,OAAQ,QAEV+tB,cAAe,CACbv3B,YAAa,IAEfw3B,WAAW,2BACNC,IAAmBD,YADd,IAERjP,WAAY,GACZle,aAAc,KAEhBqtB,sBAAuB,CACrB,4BAA6B,CAC3BpV,SAAU,SACV3iB,WAAY,aAEZ,cAAe,CACb0K,aAAc,EACdrK,YAAa,KAKnB23B,sBAAuB,CACrB53B,WAAY,GACZhB,QAAS,GACTN,MAAO,MACP+K,OAAQ,QAEVouB,cAAe,CACbp5B,UAAW,IAEbq5B,uBAAwB,CACtB93B,WAAY,GACZhB,QAAS,GACTN,MAAO,MACP+K,OAAQ,SAEP6kB,KACAgC,QA69BQlyB,CAAmBN,GA19BhB,SAAC,GAkCK,IAjCtBiD,EAiCqB,EAjCrBA,QACA4S,EAgCqB,EAhCrBA,eACA8hB,EA+BqB,EA/BrBA,YACAE,EA8BqB,EA9BrBA,UACAC,EA6BqB,EA7BrBA,gBACAC,EA4BqB,EA5BrBA,cACAC,EA2BqB,EA3BrBA,sBACAC,EA0BqB,EA1BrBA,sBACAC,EAyBqB,EAzBrBA,YACAC,EAwBqB,EAxBrBA,cACAC,EAuBqB,EAvBrBA,iBACAC,EAsBqB,EAtBrBA,aACAC,EAqBqB,EArBrBA,gBACAC,EAoBqB,EApBrBA,oBAEAK,GAkBqB,EAnBrBJ,oBAmBqB,EAlBrBI,gBACAC,EAiBqB,EAjBrBA,SACAC,EAgBqB,EAhBrBA,uBACAC,EAeqB,EAfrBA,2BACAN,EAcqB,EAdrBA,qBAEAE,GAYqB,EAbrBD,qBAaqB,EAZrBC,+BACAK,EAWqB,EAXrBA,+BACAC,EAUqB,EAVrBA,gBACAC,EASqB,EATrBA,uBACAC,EAQqB,EARrBA,oBACA/jB,EAOqB,EAPrBA,eACAK,EAMqB,EANrBA,YACA6c,EAKqB,EALrBA,qBACA8G,EAIqB,EAJrBA,sBACAC,EAGqB,EAHrBA,yBACAC,EAEqB,EAFrBA,iCACAC,EACqB,EADrBA,0BAEA,EAAgDp2B,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KAGMvC,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,YAAaI,EAAO1N,KAErC,CAACsN,IAIH1R,qBAAU,WACR,IAAIu2B,EAAyC,GACzC5B,IACF4B,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,mCACVtnB,UAAU,EACVT,MAAOsxB,EAAsBc,UAC7BpK,iBACsC,KAApCsJ,EAAsBc,WACtBnlB,SAASqkB,EAAsBc,WAAa,EAC9CnK,wBAAwB,8CAE1B,CACEF,SAAU,oCACVtnB,UAAU,EACVT,MAAOsxB,EAAsBe,WAC7BrK,iBACuC,KAArCsJ,EAAsBe,YACtBplB,SAASqkB,EAAsBe,YAAc,EAC/CpK,wBAAwB,+CAE1B,CACEF,SAAU,iCACVtnB,UAAU,EACVT,MAAOsxB,EAAsBgB,QAC7BtK,iBACoC,KAAlCsJ,EAAsBgB,SACtBrlB,SAASqkB,EAAsBgB,SAAW,EAC5CrK,wBAAwB,+CAI1BqI,IACF6B,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,2BACVtnB,UAAU,EACVT,MAAOkxB,EACPlJ,iBAAqD,KAAnCkJ,EAClBjJ,wBAAyB,yBAE3B,CACEF,SAAU,yBACVtnB,UAAU,EACVT,MAAO2wB,EACP3I,iBAC2B,KAAzB2I,GAA+B1jB,SAAS0jB,IAAyB,EACnE1I,wBAAwB,qDAE1B,CACEF,SAAU,uCACVtnB,UAAU,EACVT,MAAOyxB,EAA0BW,UACjCpK,iBAC0C,KAAxCyJ,EAA0BW,WAC1BnlB,SAASwkB,EAA0BW,WAAa,EAClDnK,wBAAwB,8CAE1B,CACEF,SAAU,wCACVtnB,UAAU,EACVT,MAAOyxB,EAA0BY,WACjCrK,iBAC2C,KAAzCyJ,EAA0BY,YAC1BplB,SAASwkB,EAA0BY,YAAc,EACnDpK,wBAAwB,+CAE1B,CACEF,SAAU,qCACVtnB,UAAU,EACVT,MAAOyxB,EAA0Ba,QACjCtK,iBACwC,KAAtCyJ,EAA0Ba,SAC1BrlB,SAASwkB,EAA0Ba,SAAW,EAChDrK,wBAAwB,+CAI1BuI,IACF2B,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,2BACVtnB,UAAU,EACVT,MAAO6wB,EACP7I,iBAAoD,KAAlC6I,EAClB5I,wBAAyB,yBAE3B,CACEF,SAAU,yBACVtnB,UAAU,EACVT,MAAOywB,EACPzI,iBAC0B,KAAxByI,GAA8BxjB,SAASwjB,IAAwB,EACjExI,wBAAwB,sDAE1B,CACEF,SAAU,sCACVtnB,UAAU,EACVT,MAAOuxB,EAAyBa,UAChCpK,iBACyC,KAAvCuJ,EAAyBa,WACzBnlB,SAASskB,EAAyBa,WAAa,EACjDnK,wBAAwB,8CAE1B,CACEF,SAAU,uCACVtnB,UAAU,EACVT,MAAOuxB,EAAyBc,WAChCrK,iBAC0C,KAAxCuJ,EAAyBc,YACzBplB,SAASskB,EAAyBc,YAAc,EAClDpK,wBAAwB,+CAE1B,CACEF,SAAU,oCACVtnB,UAAU,EACVT,MAAOuxB,EAAyBe,QAChCtK,iBACuC,KAArCuJ,EAAyBe,SACzBrlB,SAASskB,EAAyBe,SAAW,EAC/CrK,wBAAwB,4CAE1B,CACEF,SAAU,qCACVtnB,UAAU,EACVT,MAAOwxB,EAAiCY,UACxCpK,iBACiD,KAA/CwJ,EAAiCY,WACjCnlB,SAASukB,EAAiCY,WAAa,EACzDnK,wBAAwB,8CAE1B,CACEF,SAAU,sCACVtnB,UAAU,EACVT,MAAOyxB,EAA0BY,WACjCrK,iBACkD,KAAhDwJ,EAAiCa,YACjCplB,SAASukB,EAAiCa,YAAc,EAC1DpK,wBAAwB,+CAE1B,CACEF,SAAU,mCACVtnB,UAAU,EACVT,MAAOwxB,EAAiCc,QACxCtK,iBAC+C,KAA7CwJ,EAAiCc,SACjCrlB,SAASukB,EAAiCc,SAAW,EACvDrK,wBAAwB,+CAK1B4H,IACFsC,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,QACVtnB,UAAU,EACVT,MAAO+vB,EACP7H,QAAS,wBACTC,qBAAsB,iDAExB,CACEJ,SAAU,iBACVtnB,UAAU,EACVT,MAAO8wB,EACP5I,QAAS,wBACTC,qBACE,wDAEJ,CACEJ,SAAU,WACVtnB,UAAU,EACVT,MAAO+wB,EACP7I,QAAS,wBACTC,qBAAsB,+CAExB,CACEJ,SAAU,yBACVtnB,UAAU,EACVT,MAAOgxB,EACP9I,QAAS,wBACTC,qBACE,sDAEJ,CACEJ,SAAU,6BACVtnB,UAAU,EACVT,MAAOixB,EACP/I,QAAS,wBACTC,qBACE,qDAEJ,CACEJ,SAAU,kBACVtnB,UAAU,EACVT,MAAOmxB,EACPjJ,QAAS,wBACTC,qBACE,sDAEJ,CACEJ,SAAU,yBACVtnB,UAAU,EACVT,MAAOoxB,EACPlJ,QAAS,wBACTC,qBACE,uDAEJ,CACEJ,SAAU,sBACVtnB,UAAU,EACVT,MAAOqxB,EACPnJ,QAAS,wBACTC,qBACE,uDAGF6H,IACFmC,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,WACVtnB,UAAU,EACVT,MAAOiwB,GAET,CACElI,SAAU,mBACVtnB,UAAU,EACVT,MAAOkwB,GAET,CACEnI,SAAU,mBACVtnB,UAAU,EACVT,MAAOmwB,OAMf,IAAMoC,EAAY5K,EAAqBwK,GAEvCxkB,EAAY,YAA+C,IAAlC2D,OAAOe,KAAKkgB,GAAWz0B,QAEhD4vB,EAAoB6E,KACnB,CACD1C,EACAE,EACAe,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACArB,EACAC,EACAC,EACAC,EACAxiB,EACA2iB,EACAC,EACAC,EACAU,EACAP,EACAE,EACAJ,EACAa,EACAC,EACAC,EACAC,IAGF71B,qBAAU,WAEJmS,EAAejQ,OAAS,IAIM,IAHPiQ,EAAeyE,QACtC,SAACjP,GAAD,OAAeA,EAAKvD,QAAUkxB,KAEXpzB,QACnBqtB,EAAY,iCAAkCX,GAMjB,IAHPzc,EAAeyE,QACrC,SAACjP,GAAD,OAAeA,EAAKvD,QAAU6wB,KAEZ/yB,QAClBqtB,EAAY,gCAAiCX,MAGhD,CACDqG,EACAK,EACA1G,EACAzc,EACAod,IAGF,IAAMwC,EAAkB,SAACngB,GACvBkgB,EAAoBE,YAAqBH,EAAkBjgB,KAG7D,OACE,eAACkiB,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,sBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,uBACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,2DAIF,sBAAK5xB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,6BACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,6EAIF,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,cAACc,EAAA,EAAD,CACExyB,MAAM,eACNC,GAAG,eACHC,KAAK,eACLmE,QAAS+rB,EACTrwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,cAAe9mB,IAE7BvE,MAAO,2BAGX,cAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,cAACc,EAAA,EAAD,CACExyB,MAAM,iBACNC,GAAG,iBACHC,KAAK,iBACLmE,QAASgsB,EACTtwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,gBAAiB9mB,IAE/BvE,MAAO,6BAIX,sBAAK3D,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,uCACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,6HAKF,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,cAACc,EAAA,EAAD,CACExyB,MAAM,eACNC,GAAG,uBACHC,KAAK,uBACLmE,QAASksB,EACTxwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,eAAgB9mB,IAE9BvE,MAAO,+BAGVywB,GACC,cAACtW,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQw2B,0BAAtC,SACE,2BAAUx1B,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,uCAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAS,UAAKhB,EAAQu2B,mBAAzC,SACE,sBACEv1B,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ42B,uBADlD,UAGE,qBAAK51B,UAAWhB,EAAQy2B,cAAxB,SACE,cAAC3D,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,mCACHC,KAAK,mCACLH,SAAU,SAACyX,GACT2T,EAAY,wBAAD,YAAC,eACPmG,GADM,IAETc,UAAW5a,EAAEvE,OAAOjT,SAEtB2tB,EAAgB,qCAElB7tB,MAAM,cACNE,MAAOsxB,EAAsBc,UAC7B3xB,UAAQ,EACRD,MACEitB,EAAgB,kCAAwC,GAE1D9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQy2B,cAAxB,SACE,cAAC3D,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,oCACHC,KAAK,oCACLH,SAAU,SAACyX,GACT2T,EAAY,wBAAD,YAAC,eACPmG,GADM,IAETe,WAAY7a,EAAEvE,OAAOjT,SAEvB2tB,EAAgB,sCAElB7tB,MAAM,eACNE,MAAOsxB,EAAsBe,WAC7B5xB,UAAQ,EACRD,MACEitB,EAAgB,mCAChB,GAEF9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQy2B,cAAxB,SACE,cAAC3D,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,iCACHC,KAAK,iCACLH,SAAU,SAACyX,GACT2T,EAAY,wBAAD,YAAC,eACPmG,GADM,IAETgB,QAAS9a,EAAEvE,OAAOjT,SAEpB2tB,EAAgB,mCAElB7tB,MAAM,UACNE,MAAOsxB,EAAsBgB,QAC7B7xB,UAAQ,EACRD,MACEitB,EAAgB,gCAAsC,GAExD9sB,IAAI,aAKZ,uBACA,cAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,qBAAKv1B,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACsE,EAAA,EAAD,CACExyB,MAAM,oCACNC,GAAG,sCACHC,KAAK,sCACLmE,QAASitB,EAAsBmB,aAC/B1yB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,wBAAD,YAAC,eACPmG,GADM,IAETmB,aAAcpuB,MAGlBvE,MAAO,gCAOnB,cAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,cAACc,EAAA,EAAD,CACExyB,MAAM,kBACNC,GAAG,2BACHC,KAAK,2BACLmE,QAASmsB,EACTzwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,kBAAmB9mB,IAEjCvE,MAAO,mCAGV0wB,GACC,eAACvW,EAAA,EAAD,CAAM7W,GAAI,GAAIjH,UAAWhB,EAAQ62B,sBAAjC,UACE,cAAC/X,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAAC+qB,EAAA,EAAD,CACEluB,GAAG,2BACHC,KAAK,2BACLH,SAAU,SAACyX,GACT2T,EACE,gCACA3T,EAAEvE,OAAOjT,QAGbF,MAAM,2BACNE,MAAO6wB,EACPxpB,QAAS0G,EACT3N,SAAU2N,EAAejQ,OAAS,MAGtC,cAACmc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,yBACHC,KAAK,yBACLH,SAAU,SAACyX,GACT2T,EAAY,sBAAuB3T,EAAEvE,OAAOjT,OAC5C2tB,EAAgB,2BAElB7tB,MAAM,oBACNE,MAAOywB,EACPhwB,UAAQ,EACRD,MAAOitB,EAAgB,wBAA8B,GACrD9sB,IAAI,UAKV,2BACExE,UAAS,UAAKhB,EAAQ02B,WAAb,YAA2B12B,EAAQ82B,eAD9C,UAGE,wBAAQ91B,UAAWhB,EAAQ4yB,gBAA3B,2CAIA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,sBACEjH,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ42B,uBADlD,UAGE,qBAAK51B,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,sCACHC,KAAK,sCACLH,SAAU,SAACyX,GACT2T,EAAY,2BAAD,YAAC,eACPoG,GADM,IAETa,UAAW5a,EAAEvE,OAAOjT,SAEtB2tB,EAAgB,wCAElB7tB,MAAM,cACNE,MAAOuxB,EAAyBa,UAChC3xB,UAAQ,EACRD,MACEitB,EAAgB,qCAChB,GAEF9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,uCACHC,KAAK,uCACLH,SAAU,SAACyX,GACT2T,EAAY,2BAAD,YAAC,eACPoG,GADM,IAETc,WAAY7a,EAAEvE,OAAOjT,SAEvB2tB,EAAgB,yCAElB7tB,MAAM,eACNE,MAAOuxB,EAAyBc,WAChC5xB,UAAQ,EACRD,MACEitB,EAAgB,sCAEX,GAEP9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,oCACHC,KAAK,oCACLH,SAAU,SAACyX,GACT2T,EAAY,2BAAD,YAAC,eACPoG,GADM,IAETe,QAAS9a,EAAEvE,OAAOjT,SAEpB2tB,EAAgB,sCAElB7tB,MAAM,UACNE,MAAOuxB,EAAyBe,QAChC7xB,UAAQ,EACRD,MACEitB,EAAgB,mCAChB,GAEF9sB,IAAI,aAKZ,uBACA,cAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACsE,EAAA,EAAD,CACExyB,MAAM,uCACNC,GAAG,yCACHC,KAAK,yCACLmE,QAASktB,EAAyBkB,aAClC1yB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,2BAAD,YAAC,eACPoG,GADM,IAETkB,aAAcpuB,MAGlBvE,MAAO,8BAKf,2BAAU3D,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,4CAIA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,sBACEjH,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ42B,uBADlD,UAGE,qBAAK51B,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,qCACHC,KAAK,qCACLH,SAAU,SAACyX,GACT2T,EAAY,mCAAD,YAAC,eACPqG,GADM,IAETY,UAAW5a,EAAEvE,OAAOjT,SAEtB2tB,EAAgB,uCAElB7tB,MAAM,cACNE,MAAOwxB,EAAiCY,UACxC3xB,UAAQ,EACRD,MACEitB,EAAgB,oCAChB,GAEF9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,sCACHC,KAAK,sCACLH,SAAU,SAACyX,GACT2T,EAAY,mCAAD,YAAC,eACPqG,GADM,IAETa,WAAY7a,EAAEvE,OAAOjT,SAEvB2tB,EAAgB,wCAElB7tB,MAAM,eACNE,MAAOwxB,EAAiCa,WACxC5xB,UAAQ,EACRD,MACEitB,EAAgB,qCAChB,GAEF9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,mCACHC,KAAK,mCACLH,SAAU,SAACyX,GACT2T,EAAY,mCAAD,YAAC,eACPqG,GADM,IAETc,QAAS9a,EAAEvE,OAAOjT,SAEpB2tB,EAAgB,qCAElB7tB,MAAM,UACNE,MAAOwxB,EAAiCc,QACxC7xB,UAAQ,EACRD,MACEitB,EAAgB,kCAAwC,GAE1D9sB,IAAI,aAKZ,uBACA,cAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACsE,EAAA,EAAD,CACExyB,MAAM,sCACNC,GAAG,wCACHC,KAAK,wCACLmE,QAASmtB,EAAiCiB,aAC1C1yB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,mCAAD,YAAC,eACPqG,GADM,IAETiB,aAAcpuB,MAGlBvE,MAAO,iCAOnB,cAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,cAACc,EAAA,EAAD,CACExyB,MAAM,mBACNC,GAAG,2BACHC,KAAK,2BACLmE,QAASisB,EACTvwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,mBAAoB9mB,IAElCvE,MAAO,mCAGVwwB,GACC,eAACrW,EAAA,EAAD,CAAM7W,GAAI,GAAIjH,UAAWhB,EAAQ+2B,uBAAjC,UACE,cAACjY,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAAC+qB,EAAA,EAAD,CACEluB,GAAG,2BACHC,KAAK,2BACLH,SAAU,SAACyX,GACT2T,EACE,iCACA3T,EAAEvE,OAAOjT,QAGbF,MAAM,2BACNE,MAAOkxB,EACP7pB,QAAS0G,EACT3N,SAAU2N,EAAejQ,OAAS,MAGtC,cAACmc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,yBACHC,KAAK,yBACLH,SAAU,SAACyX,GACT2T,EAAY,uBAAwB3T,EAAEvE,OAAOjT,OAC7C2tB,EAAgB,2BAElB7tB,MAAM,oBACNE,MAAO2wB,EACPlwB,UAAQ,EACRD,MAAOitB,EAAgB,wBAA8B,GACrD9sB,IAAI,UAIV,2BACExE,UAAS,UAAKhB,EAAQ02B,WAAb,YAA2B12B,EAAQ82B,eAD9C,UAGE,wBAAQ91B,UAAWhB,EAAQ4yB,gBAA3B,4CAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,sBACEv1B,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ42B,uBADlD,UAGE,qBAAK51B,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,uCACHC,KAAK,uCACLH,SAAU,SAACyX,GACT2T,EAAY,4BAAD,YAAC,eACPsG,GADM,IAETW,UAAW5a,EAAEvE,OAAOjT,SAEtB2tB,EAAgB,yCAElB7tB,MAAM,cACNE,MAAOyxB,EAA0BW,UACjC3xB,UAAQ,EACRD,MACEitB,EAAgB,sCAEX,GAEP9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,wCACHC,KAAK,wCACLH,SAAU,SAACyX,GACT2T,EAAY,4BAAD,YAAC,eACPsG,GADM,IAETY,WAAY7a,EAAEvE,OAAOjT,SAEvB2tB,EAAgB,0CAElB7tB,MAAM,eACNE,MAAOyxB,EAA0BY,WACjC5xB,UAAQ,EACRD,MACEitB,EAAgB,uCAEX,GAEP9sB,IAAI,QAGR,qBAAKxE,UAAWhB,EAAQu2B,kBAAxB,SACE,cAACzD,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,qCACHC,KAAK,qCACLH,SAAU,SAACyX,GACT2T,EAAY,4BAAD,YAAC,eACPsG,GADM,IAETa,QAAS9a,EAAEvE,OAAOjT,SAEpB2tB,EAAgB,uCAElB7tB,MAAM,UACNE,MAAOyxB,EAA0Ba,QACjC7xB,UAAQ,EACRD,MACEitB,EAAgB,oCAChB,GAEF9sB,IAAI,aAKZ,cAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQu2B,kBAAtC,SACE,qBACEv1B,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ82B,eADlD,SAGE,cAACO,EAAA,EAAD,CACExyB,MAAM,wCACNC,GAAG,0CACHC,KAAK,0CACLmE,QAASotB,EAA0BgB,aACnC1yB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,4BAAD,YAAC,eACPsG,GADM,IAETgB,aAAcpuB,MAGlBvE,MAAO,wC,8GCvRnB5H,GAAYC,aA1CD,SAACC,GAAD,MAAsB,CACrCs6B,aAAct6B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBD,aACjEE,WAAYx6B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBC,WAC/DC,WAAYz6B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBE,WAC/DC,uBACE16B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBG,uBACrDC,eACE36B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBI,eACrDC,eACE56B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBK,eACrDC,kBACE76B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBM,kBACrDC,gBACE96B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBO,gBACrDC,aAAc/6B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBQ,aACjEC,MAAOh7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBS,MAC1DC,UAAWj7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBU,UAC9DC,iBACEl7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBW,iBACrDC,uBACEn7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBY,uBACrDC,oBACEp7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBa,oBACrDC,oBACEr7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBc,oBACrDC,qBACEt7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBe,qBACrDC,UAAWv7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBgB,UAC9DC,iBACEx7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBiB,iBACrDC,eACEz7B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBkB,eACrDC,qBACE17B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBmB,qBACrDC,qBACE37B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBoB,qBACrDC,qBACE57B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBqB,qBACrDC,iBACE77B,EAAMmxB,QAAQC,aAAaG,OAAOgJ,iBAAiBsB,oBAGnB,CAClC3mB,mBACAK,kBAGanV,gBA5rBA,SAACC,GAAD,OACbC,YAAa,iDACXw7B,UAAW,CACTC,oBAAqB,sBACrBp6B,QAAS,OACTq6B,QAAS,GACT1vB,aAAc,GACd,UAAW,CACTvK,WAAY,MAGhBk6B,WAAY,CACVj6B,WAAY,GACZL,QAAS,OACTQ,OAAQ,GACR,WAAY,CACVsM,WAAY,YAGhBlH,cAAe,CACbvF,WAAY,GACZ,QAAS,CACP4C,SAAU,GACV6C,UAAW,IAEb,WAAY,CACVgH,WAAY,YAGhBytB,qBAAsB,CACpBv6B,QAAS,OACT4iB,SAAU,SACVjY,aAAc,GAEd,UAAW,CACT9K,SAAU,IAEZ,QAAS,CACPG,QAAS,OACT4iB,SAAU,SACV3iB,WAAY,aAGhBu6B,aAAc,CACZx6B,QAAS,SAER+3B,KACAtE,KACA9E,KACAgC,QA2oBQlyB,CAAmBN,IAxoBT,SAAC,GA2BK,IA1B7BiD,EA0B4B,EA1B5BA,QACAu3B,EAyB4B,EAzB5BA,aACAE,EAwB4B,EAxB5BA,WACAC,EAuB4B,EAvB5BA,WACAC,EAsB4B,EAtB5BA,uBACAC,EAqB4B,EArB5BA,eACAC,EAoB4B,EApB5BA,eACAC,EAmB4B,EAnB5BA,kBACAC,EAkB4B,EAlB5BA,gBACAC,EAiB4B,EAjB5BA,aACAC,EAgB4B,EAhB5BA,MACAC,EAe4B,EAf5BA,UACAC,EAc4B,EAd5BA,iBACAC,EAa4B,EAb5BA,uBACAC,EAY4B,EAZ5BA,oBACAC,EAW4B,EAX5BA,oBACAC,EAU4B,EAV5BA,qBACAC,EAS4B,EAT5BA,UACAC,EAQ4B,EAR5BA,iBACAC,EAO4B,EAP5BA,eACAC,EAM4B,EAN5BA,qBACAC,EAK4B,EAL5BA,qBACAC,EAI4B,EAJ5BA,qBACAC,EAG4B,EAH5BA,iBACA3mB,EAE4B,EAF5BA,eACAK,EAC4B,EAD5BA,YAEA,EAAgDtS,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KAEMvC,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,mBAAoBI,EAAO1N,KAE5C,CAACsN,IAEGknB,EAAkB,SAACj0B,EAAeP,GACtC,IAAMy0B,EAAY,YAAO7B,GACzB6B,EAAal0B,GAASP,EACtBmrB,EAAY,aAAcsJ,IAEtBC,EAAmB,SAACn0B,EAAeP,GACvC,IAAMy0B,EAAY,YAAO5B,GACzB4B,EAAal0B,GAASP,EACtBmrB,EAAY,aAAcsJ,IAEtBE,EAAoB,SAACp0B,EAAeP,GACxC,IAAM40B,EAAiB,YAAOjB,GAC9BiB,EAAkBr0B,GAASP,EAC3BmrB,EAAY,YAAayJ,IAErBjH,EAAkB,SAACngB,GACvBkgB,EAAoBE,YAAqBH,EAAkBjgB,KAK7D5R,qBAAU,WACR,IAAIi5B,EAAqC,GAEzC,GAAqB,aAAjBnC,EAA6B,CAC/BmC,EAAmB,YAAOA,GAC1B,IAAK,IAAI7hB,EAAI,EAAGA,EAAI4f,EAAW90B,OAAQkV,IACrC6hB,EAAoBjiB,KAAK,CACvBmV,SAAS,aAAD,OAAe/U,EAAEiI,YACzBxa,UAAU,EACVT,MAAO4yB,EAAW5f,GAClBkV,QAAS,uBACTC,qBAAsB,mCAExB0M,EAAoBjiB,KAAK,CACvBmV,SAAS,aAAD,OAAe/U,EAAEiI,YACzBxa,UAAU,EACVT,MAAO6yB,EAAW7f,GAClBkV,QAAS,uBACTC,qBAAsB,mCA+B5B,GA1BqB,WAAjBuK,IACFmC,EAAmB,sBACdA,GADc,CAEjB,CACE9M,SAAU,2BACVtnB,UAAU,EACVT,MAAO8yB,GAET,CACE/K,SAAU,kBACVtnB,UAAU,EACVT,MAAO+yB,GAET,CACEhL,SAAU,kBACVtnB,UAAU,EACVT,MAAOgzB,GAET,CACEjL,SAAU,mBACVtnB,UAAU,EACVT,MAAOkzB,MAKQ,OAAjBR,EAAuB,CACzBmC,EAAmB,sBACdA,GADc,CAEjB,CACE9M,SAAU,SACVtnB,UAAU,EACVT,MAAOozB,KAIX,IAAK,IAAIpgB,EAAI,EAAGA,EAAI2gB,EAAU71B,OAAQkV,IACpC6hB,EAAoBjiB,KAAK,CACvBmV,SAAS,aAAD,OAAe/U,EAAEiI,YACzBxa,UAAU,EACVT,MAAO2zB,EAAU3gB,KAKvB,IAAMuf,EAAY5K,EAAqBkN,GAEvClnB,EAAY,mBAAsD,IAAlC2D,OAAOe,KAAKkgB,GAAWz0B,QAEvD4vB,EAAoB6E,KACnB,CACDG,EACAE,EACAC,EACAE,EACAC,EACAI,EACAG,EACAC,EACAC,EACAC,EACAC,EACAhmB,EACAmlB,EACAI,IAEF,IAAI4B,EAAS,KA8Ib,MA7IqB,aAAjBpC,IACFoC,EAASlC,EAAWrrB,KAAI,SAACwtB,EAAGx0B,GAC1B,OACE,cAAC,WAAD,UACE,sBAAKpE,UAAWhB,EAAQ+4B,UAAxB,UACE,cAACjG,EAAA,EAAD,CACEhuB,GAAE,oBAAeM,EAAM0a,YACvBnb,MAAO,GACPY,YAAa,aACbR,KAAI,oBAAeK,EAAM0a,YACzBjb,MAAO4yB,EAAWryB,GAClBR,SAAU,SAACyX,GACTgd,EAAgBj0B,EAAOiX,EAAEvE,OAAOjT,OAChC2tB,EAAgB,aAAD,OAAcptB,EAAM0a,cAErC1a,MAAOA,EAEPC,MAAOitB,EAAiB,aAAD,OAAcltB,EAAM0a,cAAiB,IAZ9D,wBAWwB1a,EAAM0a,aAG9B,cAACgT,EAAA,EAAD,CACEhuB,GAAE,oBAAeM,EAAM0a,YACvBnb,MAAO,GACPY,YAAa,aACbR,KAAI,oBAAeK,EAAM0a,YACzBjb,MAAO6yB,EAAWtyB,GAClBR,SAAU,SAACyX,GACTkd,EAAiBn0B,EAAOiX,EAAEvE,OAAOjT,OACjC2tB,EAAgB,aAAD,OAAcptB,EAAM0a,cAErC1a,MAAOA,EAEPC,MAAOitB,EAAiB,aAAD,OAAcltB,EAAM0a,cAAiB,IAZ9D,wBAWwB1a,EAAM0a,aAG9B,sBAAK9e,UAAWhB,EAAQk5B,WAAxB,UACE,cAACha,EAAA,EAAD,CAASjd,MAAM,WAAW,aAAW,MAArC,SACE,qBAAKjB,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACPo2B,EAAWhgB,KAAK,IAChBigB,EAAWjgB,KAAK,IAChB4hB,EAAgB5B,EAAW90B,OAAS,EAAG,IACvC42B,EAAiB7B,EAAW/0B,OAAS,EAAG,KAN5C,SASE,cAAC,KAAD,UAIN,cAACuc,EAAA,EAAD,CAASjd,MAAM,SAAS,aAAW,MAAnC,SACE,qBAAKjB,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACHo2B,EAAW90B,OAAS,IACtB80B,EAAWoC,OAAOz0B,EAAO,GACzBsyB,EAAWmC,OAAOz0B,EAAO,GACzBi0B,EACE5B,EAAW90B,OAAS,EACpB80B,EAAWA,EAAW90B,OAAS,MARvC,SAaE,cAACm3B,GAAA,EAAD,UAIN,cAAC5a,EAAA,EAAD,CAASjd,MAAM,wBAAwB,aAAW,MAAlD,SACE,qBAAKjB,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACE/B,QAAS,WACPg4B,EAAgBj0B,EAAO20B,YAAgB,KACvCR,EAAiBn0B,EAAO20B,YAAgB,MAE1Cz2B,KAAM,QALR,SAOE,cAAC,KAAD,iBA1EZ,wBAAgC8B,EAAM0a,iBAoFvB,OAAjByX,IACFoC,EAASnB,EAAUpsB,KAAI,SAACwtB,EAAGx0B,GACzB,OACE,cAAC,WAAD,UACE,sBAAKpE,UAAWhB,EAAQo5B,aAAxB,UACE,cAACtG,EAAA,EAAD,CACEhuB,GAAE,oBAAeM,EAAM0a,YACvBnb,MAAO,GACPY,YAAY,GACZR,KAAI,oBAAeK,EAAM0a,YACzBjb,MAAO2zB,EAAUpzB,GACjBR,SAAU,SAACyX,GACTmd,EAAkBp0B,EAAOiX,EAAEvE,OAAOjT,OAClC2tB,EAAgB,aAAD,OAAcptB,EAAM0a,cAErC1a,MAAOA,EAEPC,MAAOitB,EAAiB,aAAD,OAAcltB,EAAM0a,cAAiB,IAZ9D,wBAWwB1a,EAAM0a,aAG9B,sBAAK9e,UAAWhB,EAAQk5B,WAAxB,UACE,cAACha,EAAA,EAAD,CAASjd,MAAM,WAAW,aAAW,MAArC,SACE,cAACmB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACPm3B,EAAU/gB,KAAK,IACf+hB,EAAkBhB,EAAU71B,OAAS,EAAG,KAJ5C,SAOE,cAAC,KAAD,QAGJ,cAACuc,EAAA,EAAD,CAASjd,MAAM,SAAS,aAAW,MAAnC,SACE,cAACmB,EAAA,EAAD,CACEE,KAAM,QACNrC,MAAO,CAAEhC,WAAY,IACrBoC,QAAS,WACHm3B,EAAU71B,OAAS,IACrB61B,EAAUqB,OAAOz0B,EAAO,GACxBi0B,EACEb,EAAU71B,OAAS,EACnB61B,EAAUA,EAAU71B,OAAS,MARrC,SAaE,cAAC,KAAD,eA1CV,wBAAgCyC,EAAM0a,iBAoD1C,eAACyU,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,sBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,+BACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,yFAKF,eAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQm5B,qBAAtC,UACE,6CACA,cAACa,GAAA,EAAD,CACE/oB,iBAAkBsmB,EAClBzyB,GAAG,cACHC,KAAK,cACLJ,MAAM,IACNC,SAAU,SAACyX,GACT2T,EAAY,eAAgB3T,EAAEvE,OAAOjT,QAEvCmM,gBAAiB,CACf,CAAErM,MAAO,WAAYE,MAAO,YAC5B,CAAEF,MAAO,SAAUE,MAAO,UAC1B,CAAEF,MAAO,mBAAoBE,MAAO,YAIxB,aAAjB0yB,GACC,eAAC,WAAD,kCAEGoC,KAGa,WAAjBpC,GACC,eAAC,WAAD,WACE,cAACzY,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,2BACHC,KAAK,2BACLH,SAAU,SAACyX,GACT2T,EAAY,yBAA0B3T,EAAEvE,OAAOjT,OAC/C2tB,EAAgB,6BAElB7tB,MAAM,oBACNE,MAAO8yB,EACPpyB,YAAY,sEACZF,MAAOitB,EAAgB,0BAAgC,GACvDhtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,EAAY,iBAAkB3T,EAAEvE,OAAOjT,OACvC2tB,EAAgB,oBAElB7tB,MAAM,YACNE,MAAO+yB,EACPvyB,MAAOitB,EAAgB,iBAAuB,GAC9ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,EAAY,iBAAkB3T,EAAEvE,OAAOjT,OACvC2tB,EAAgB,oBAElB7tB,MAAM,YACNE,MAAOgzB,EACPxyB,MAAOitB,EAAgB,iBAAuB,GAC9ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,qBACHC,KAAK,qBACLH,SAAU,SAACyX,GACT2T,EAAY,oBAAqB3T,EAAEvE,OAAOjT,OAC1C2tB,EAAgB,uBAElB7tB,MAAM,eACNE,MAAOizB,EACPvyB,YAAY,oDACZF,MAAOitB,EAAgB,oBAA0B,OAGrD,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,mBACHC,KAAK,mBACLH,SAAU,SAACyX,GACT2T,EAAY,kBAAmB3T,EAAEvE,OAAOjT,OACxC2tB,EAAgB,qBAElB7tB,MAAM,aACNE,MAAOkzB,EACP1yB,MAAOitB,EAAgB,kBAAwB,GAC/ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,EAAY,eAAgB3T,EAAEvE,OAAOjT,OACrC2tB,EAAgB,kBAElB7tB,MAAM,SACNE,MAAOmzB,SAKG,OAAjBT,GACC,eAAC,WAAD,WACE,cAACzY,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,SACHC,KAAK,SACLH,SAAU,SAACyX,GACT2T,EAAY,QAAS3T,EAAEvE,OAAOjT,OAC9B2tB,EAAgB,WAElB7tB,MAAM,sBACNE,MAAOozB,EACP1yB,YAAY,kBACZF,MAAOitB,EAAgB,QAAc,GACrChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACwE,EAAA,EAAD,CACExyB,MAAM,aACNC,GAAG,aACHC,KAAK,aACLmE,QAASgvB,EACTtzB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,YAAa9mB,IAE3BvE,MAAO,4BAGX,cAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACwE,EAAA,EAAD,CACExyB,MAAM,oBACNC,GAAG,oBACHC,KAAK,oBACLmE,QAASivB,EACTvzB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,mBAAoB9mB,IAElCvE,MAAO,sBAGVwzB,EACC,eAACrZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,cAACgyB,GAAA,EAAD,CACEj5B,UAAWhB,EAAQqF,MACnBgD,QAAQ,UACRzJ,QAAQ,QACRs7B,cAAY,EAJd,4EAQA,0BAEA,KACJ,cAACpb,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACwE,EAAA,EAAD,CACExyB,MAAM,oBACNC,GAAG,oBACHC,KAAK,oBACLmE,QAAS4vB,EACTl0B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,EAAY,mBAAoB9mB,IAElCvE,MAAO,6CAGX,cAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,oBACHC,KAAK,oBACLH,SAAU,SAACyX,GACT2T,EAAY,mBAAoB3T,EAAEvE,OAAOjT,QAE3CF,MAAM,kBACNE,MAAO4zB,EACPlzB,YAAY,gDAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,oBACHC,KAAK,oBACLH,SAAU,SAACyX,GACT2T,EAAY,yBAA0B3T,EAAEvE,OAAOjT,QAEjDF,MAAM,yBACNE,MAAOuzB,EACP7yB,YAAY,4CAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,uBACHC,KAAK,uBACLH,SAAU,SAACyX,GACT2T,EAAY,sBAAuB3T,EAAEvE,OAAOjT,QAE9CF,MAAM,uBACNE,MAAOwzB,EACP9yB,YAAY,oDAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,uBACHC,KAAK,uBACLH,SAAU,SAACyX,GACT2T,EAAY,sBAAuB3T,EAAEvE,OAAOjT,QAE9CF,MAAM,sBACNE,MAAOyzB,EACP/yB,YAAY,+CAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,wBACHC,KAAK,wBACLH,SAAU,SAACyX,GACT2T,EAAY,uBAAwB3T,EAAEvE,OAAOjT,QAE/CF,MAAM,uBACNE,MAAO0zB,EACPhzB,YAAY,SAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,EAAY,iBAAkB3T,EAAEvE,OAAOjT,QAEzCF,MAAM,iBACNE,MAAO6zB,EACPnzB,YAAY,4BAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,wBACHC,KAAK,wBACLH,SAAU,SAACyX,GACT2T,EAAY,uBAAwB3T,EAAEvE,OAAOjT,QAE/CF,MAAM,uBACNE,MAAO8zB,EACPpzB,YAAY,YAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,wBACHC,KAAK,wBACLH,SAAU,SAACyX,GACT2T,EAAY,uBAAwB3T,EAAEvE,OAAOjT,QAE/CF,MAAM,yBACNE,MAAO+zB,EACPrzB,YAAY,mBAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,wBACHC,KAAK,wBACLH,SAAU,SAACyX,GACT2T,EAAY,uBAAwB3T,EAAEvE,OAAOjT,QAE/CF,MAAM,wBACNE,MAAOg0B,EACPtzB,YAAY,eAGhB,2BAAUvE,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,gFAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACG0xB,iB,UC9UT58B,GAAYC,aATD,SAACC,GAAD,MAAsB,CACrCk9B,UAAWl9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASD,UACtDE,eAAgBp9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASC,eAC3DC,kBACEr9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASE,kBAC7CC,kBAAmBt9B,EAAMmxB,QAAQC,aAAamM,aAAaD,kBAC3DE,eAAgBx9B,EAAMmxB,QAAQC,aAAamM,aAAaC,kBAGtB,CAClCtoB,mBACAK,gBACAa,4BACAF,wBACAF,qBACAQ,eACAI,qBACAF,oBAGatW,gBA5UA,SAACC,GAAD,OACbC,YAAa,qCACXm9B,qBAAsB,CACpB97B,QAAS,OACTC,WAAY,SACZyI,eAAgB,aAChByf,aAAc,oBACd,eAAgB,CACdA,aAAc,GAEhB,4BAA6B,CAC3BrB,KAAM,IAGViV,SAAU,CACRz7B,YAAa,GACbN,QAAS,OACT,cAAe,CACbg8B,SAAU,IAGZ,4BAA6B,CAC3BpZ,SAAU,WAGdqZ,oBAAqB,CACnBtxB,aAAc,IAEhBuxB,gBAAiB,CACfl8B,QAAS,OACTC,WAAY,SACZyI,eAAgB,aAEhByf,aAAc,oBACd,eAAgB,CACdA,aAAc,GAEhB,4BAA6B,CAC3BrB,KAAM,EAEN,cAAe,CACbkV,SAAU,MAIhBG,WAAY,CACVn8B,QAAS,OACT0I,eAAgB,WAChB,4BAA6B,CAC3Boe,KAAM,IAGVlhB,cAAe,CACbvF,WAAY,GACZ,QAAS,CACP4C,SAAU,GACV6C,UAAW,IAEb,WAAY,CACVgH,WAAY,aAIbirB,KACApJ,KACAgC,QA2QQlyB,CAAmBN,IAxQjB,SAAC,GAeK,IAdrBiD,EAcoB,EAdpBA,QACAm6B,EAaoB,EAbpBA,UACAE,EAYoB,EAZpBA,eACAC,EAWoB,EAXpBA,kBACAC,EAUoB,EAVpBA,kBACAE,EASoB,EATpBA,eACAtoB,EAQoB,EARpBA,eACAK,EAOoB,EAPpBA,YACAa,EAMoB,EANpBA,wBACAF,EAKoB,EALpBA,oBACAF,EAIoB,EAJpBA,iBACAQ,EAGoB,EAHpBA,WACAI,EAEoB,EAFpBA,iBACAF,EACoB,EADpBA,cAGMqc,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,WAAYI,EAAO1N,KAEpC,CAACsN,IAqBH,OAhBA1R,qBAAU,WAMN+R,EAAY,YALT2nB,MAIDE,KAIAC,MAKH,CAACH,EAAWE,EAAgBC,EAAmB9nB,IAGhD,eAAC+hB,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,qBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,SACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,wBAEF,eAAC7T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,cAACovB,EAAA,EAAD,CACExyB,MAAM,YACNC,GAAG,YACHC,KAAK,YACLmE,QAASixB,EACTv1B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,YAAa9mB,IAE3BvE,MAAO,eAZX,2EAeGw1B,GACC,eAAC,WAAD,WACE,uBACA,uBACA,cAACF,GAAA,EAAD,CAAY5xB,QAAQ,UAAUzJ,QAAQ,QAAQs7B,cAAY,EAA1D,uFAIA,cAACD,GAAA,EAAD,CAAY5xB,QAAQ,UAAUzJ,QAAQ,QAAQs7B,cAAY,EAA1D,8EAGA,6BAILC,GACC,eAAC,WAAD,WACE,eAACrb,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,cAACovB,EAAA,EAAD,CACExyB,MAAM,iBACNC,GAAG,iBACHC,KAAK,iBACLmE,QAASmxB,EACTz1B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,iBAAkB9mB,IAEhCvE,MAAO,oBAET,cAAC0yB,EAAA,EAAD,CACExyB,MAAM,oBACNC,GAAG,oBACHC,KAAK,oBACLmE,QAASoxB,EACT11B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,oBAAqB9mB,IAEnCvE,MAAO,2BAGV21B,GACC,eAAC,WAAD,WACE,cAACxb,EAAA,EAAD,CAAM9Y,WAAS,EAAf,SACE,cAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ66B,oBAAtC,SACE,2BAAU75B,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,gCAGC2H,EAAkBnuB,KAAI,SAAC4uB,GAAD,OACrB,eAAClc,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GAEJjH,UAAWhB,EAAQ06B,qBAJrB,UAME,eAAC5b,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ26B,SAAtC,UACE,cAACM,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBM,EACEmnB,EAAQl2B,GACR,OACAyO,EACA2nB,IAGJvc,OAAO,uBACP7Z,GAAG,UACHC,KAAK,UACLJ,MAAM,OACNE,MAAOm2B,EAAQG,OAEjB,cAACF,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBM,EACEmnB,EAAQl2B,GACR,MACAyO,EACA2nB,IAGJvc,OAAO,YACP7Z,GAAG,SACHC,KAAK,SACLJ,MAAM,MACNE,MAAOm2B,EAAQ1nB,SAInB,eAACwL,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGjH,UAAWhB,EAAQ+6B,WAArC,UACE,qBAAK/5B,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CAAYE,KAAM,QAASjC,QAASoS,EAApC,SACE,cAACghB,EAAA,EAAD,QAGJ,qBAAKzzB,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACPsS,EAAcqnB,EAAQl2B,KAH1B,SAME,cAACg1B,GAAA,EAAD,aAjDDkB,EAAQl2B,cA2DvB,cAACga,EAAA,EAAD,CAAM9Y,WAAS,EAAf,SACE,cAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ66B,oBAAtC,SACE,2BAAU75B,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,mCAIC6H,EAAeruB,KAAI,SAAC4uB,GAAD,OAClB,eAAClc,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GAEJjH,UAAWhB,EAAQ86B,gBAJrB,UAME,cAAChc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAf,SACE,cAACgzB,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBF,EACE2nB,EAAQl2B,GACR,OACAyO,EACA2nB,IAGJvc,OAAO,uBACP7Z,GAAG,UACHC,KAAK,UACLJ,MAAM,OACNE,MAAOm2B,EAAQG,SAGnB,cAACrc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAf,SACE,sBAAKjH,UAAWhB,EAAQ+6B,WAAxB,UACE,qBAAK/5B,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS4R,EAFX,SAIE,cAACwhB,EAAA,EAAD,QAGJ,qBAAKzzB,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACP8R,EAAoB6nB,EAAQl2B,KAHhC,SAME,cAACg1B,GAAA,EAAD,eArCHkB,EAAQl2B,2BC26B/B/H,GAAYC,aApDD,SAACC,GAAD,MAAsB,CACrCm+B,SAAUn+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWD,SACvDE,iBACEr+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWC,iBAC/CC,eAAgBt+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWE,eAC7DC,gBAAiBv+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWG,gBAC9DC,aAAcx+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWI,aAC3DC,cAAez+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWK,cAC5DC,aAAc1+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWM,aAC3DC,YAAa3+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWO,YAC1DC,UAAW5+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWQ,UACxDC,UAAW7+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWS,UACxDC,aAAc9+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWU,aAC3DC,aAAc/+B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWW,aAC3DC,SAAUh/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWY,SACvDC,cAAej/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWa,cAC5DC,YAAal/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWc,YAC1DC,eAAgBn/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWe,eAC7DC,YAAap/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWgB,YAC1DC,mBACEr/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWiB,mBAC/CC,QAASt/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWkB,QACtDC,YAAav/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWmB,YAC1DC,WAAYx/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWoB,WACzDC,UAAWz/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWqB,UACxDC,cAAe1/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWsB,cAC5DC,cAAe3/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWuB,cAC5DC,cAAe5/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWwB,cAC5DC,kBACE7/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWyB,kBAC/CC,aAAc9/B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW0B,aAC3DC,YAAa//B,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW2B,YAC1DC,eAAgBhgC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW4B,eAC7DC,YAAajgC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW6B,YAC1DC,gBAAiBlgC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW8B,gBAC9DC,cAAengC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAW+B,cAC5DC,wBACEpgC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWgC,wBAC/ChD,eAAgBp9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASC,eAC3DF,UAAWl9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASD,UACtDI,kBAAmBt9B,EAAMmxB,QAAQC,aAAamM,aAAaD,kBAC3D+C,kBAAmBrgC,EAAMmxB,QAAQC,aAAamM,aAAa8C,kBAC3DC,kBAAmBtgC,EAAMmxB,QAAQC,aAAamM,aAAa+C,kBAC3DC,iBAAkBvgC,EAAMmxB,QAAQC,aAAamM,aAAagD,iBAC1DC,QAASxgC,EAAMmxB,QAAQC,aAAamM,aAAaiD,QACjDC,UAAWzgC,EAAMmxB,QAAQC,aAAamM,aAAakD,UACnDpD,kBACEr9B,EAAMmxB,QAAQC,aAAaG,OAAO4L,SAASE,kBAC7CqD,mBACE1gC,EAAMmxB,QAAQC,aAAaG,OAAO6M,WAAWsC,sBAGb,CAClCxrB,mBACAK,gBACAuB,sBACAE,sBACAE,qBACAE,mBACAE,uBAGalX,gBA1oCA,SAACC,GAAD,OACbC,YAAa,iDACXqgC,sBAAuB,CACrBr0B,aAAc,IAEhBs0B,gBAAiB,CACfngC,UAAW,GACX,aAAc,CACZgoB,KAAM,IAGVoY,YAAa,CACX5+B,YAAa,IAEf6+B,oBAAqB,CACnB,4BAA6B,CAC3Bn/B,QAAS,OACT4iB,SAAU,YAGXmV,KACAtE,KACA9E,KACAgC,QAmnCQlyB,CAAmBN,IAhnCf,SAAC,GAoDK,IAnDvBiD,EAmDsB,EAnDtBA,QACAmS,EAkDsB,EAlDtBA,eACAK,EAiDsB,EAjDtBA,YACAuB,EAgDsB,EAhDtBA,kBACAE,EA+CsB,EA/CtBA,kBACAE,EA8CsB,EA9CtBA,iBACAE,EA6CsB,EA7CtBA,eACAE,EA4CsB,EA5CtBA,iBACA+mB,EA2CsB,EA3CtBA,iBACAhB,EA0CsB,EA1CtBA,kBACAiB,EAyCsB,EAzCtBA,eACAC,EAwCsB,EAxCtBA,gBACAC,EAuCsB,EAvCtBA,aACAC,EAsCsB,EAtCtBA,cACAC,EAqCsB,EArCtBA,aACAC,EAoCsB,EApCtBA,YACAC,EAmCsB,EAnCtBA,UACAC,EAkCsB,EAlCtBA,UACAC,EAiCsB,EAjCtBA,aACAC,EAgCsB,EAhCtBA,aACAC,EA+BsB,EA/BtBA,SACAC,EA8BsB,EA9BtBA,cACAC,EA6BsB,EA7BtBA,YACAC,EA4BsB,EA5BtBA,eACAC,EA2BsB,EA3BtBA,YACAC,EA0BsB,EA1BtBA,mBACAC,EAyBsB,EAzBtBA,QACAC,EAwBsB,EAxBtBA,YACAC,EAuBsB,EAvBtBA,WACAC,EAsBsB,EAtBtBA,UACAC,EAqBsB,EArBtBA,cACAC,EAoBsB,EApBtBA,cACAC,EAmBsB,EAnBtBA,cACAC,EAkBsB,EAlBtBA,kBACAC,EAiBsB,EAjBtBA,aACAC,EAgBsB,EAhBtBA,YACAC,EAesB,EAftBA,eACAC,EAcsB,EAdtBA,YACAC,EAasB,EAbtBA,gBACAC,EAYsB,EAZtBA,cACAC,EAWsB,EAXtBA,wBACAhD,EAUsB,EAVtBA,eACAF,GASsB,EATtBA,UACAI,GAQsB,EARtBA,kBACA+C,GAOsB,EAPtBA,kBACAC,GAMsB,EANtBA,kBACAC,GAKsB,EALtBA,iBACAC,GAIsB,EAJtBA,QACAC,GAGsB,EAHtBA,UACAC,GAEsB,EAFtBA,mBACAvC,GACsB,EADtBA,SAEA,GAAgDl7B,mBAAc,IAA9D,qBAAOoyB,GAAP,MAAyBC,GAAzB,MAEIyL,IAAsB,EAExB7D,KACCE,GACEE,IACCA,GAAkBljB,QAChB,SAACjP,GAAD,OAAUA,EAAK61B,aAAe71B,EAAK81B,gBACnCv7B,OAAS,KAEfq7B,IAAsB,GAIxB,IAAMhO,GAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,aAAcI,EAAO1N,KAEtC,CAACsN,IAGGqgB,GAAkB,SAACngB,GACvBkgB,GAAoBE,YAAqBH,GAAkBjgB,KAuO7D,OAnOA5R,qBAAU,WACR,IAAI09B,EAAsC,GAEtC7C,IACF6C,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,WACVtnB,UAAU,EACVT,MAAOu2B,GACPvO,iBAAkB/a,SAASspB,IAAY,EACvCtO,wBAAyB,qCAE3B,CACEF,SAAU,gCACVtnB,UAAU,EACVT,MAAO84B,GAAmB1G,UAC1BpK,iBACmC,KAAjC8Q,GAAmB1G,WACnBnlB,SAAS6rB,GAAmB1G,WAAa,EAC3CnK,wBAAwB,8CAE1B,CACEF,SAAU,iCACVtnB,UAAU,EACVT,MAAO84B,GAAmBzG,WAC1BrK,iBACoC,KAAlC8Q,GAAmBzG,YACnBplB,SAAS6rB,GAAmBzG,YAAc,EAC5CpK,wBAAwB,+CAE1B,CACEF,SAAU,8BACVtnB,UAAU,EACVT,MAAO84B,GAAmBxG,QAC1BtK,iBACiC,KAA/B8Q,GAAmBxG,SACnBrlB,SAAS6rB,GAAmBxG,SAAW,EACzCrK,wBAAwB,8CAIxBwN,IACF6D,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,YACVtnB,UAAW+0B,EACXx1B,MAAOy4B,GAAkBW,aAE3B,CACErR,SAAU,aACVtnB,UAAW+0B,EACXx1B,MAAOy4B,GAAkBY,cAE3B,CACEtR,SAAU,YACVtnB,UAAW+0B,EACXx1B,MAAO04B,GAAkBU,aAE3B,CACErR,SAAU,aACVtnB,UAAW+0B,EACXx1B,MAAO04B,GAAkBW,iBAKR,UAAnB3C,IACF4C,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,iBACVtnB,UAAU,EACVT,MAAOq3B,GAET,CACEtP,SAAU,WACVtnB,UAAU,EACVT,MAAO03B,GAET,CACE3P,SAAU,eACVtnB,UAAU,EACVT,MAAO23B,GAET,CACE5P,SAAU,aACVtnB,UAAU,EACVT,MAAO63B,EACP7P,iBAAkB/a,SAAS4qB,GAAa,EACxC5P,wBAAyB,kCAE3B,CACEF,SAAU,cACVtnB,UAAU,EACVT,MAAO43B,EACP5P,iBAAkB/a,SAAS2qB,GAAc,EACzC3P,wBAAyB,qCAKR,QAAnByO,IACF4C,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,eACVtnB,UAAU,EACVT,MAAO+2B,GAET,CACEhP,SAAU,aACVtnB,UAAU,EACVT,MAAOg3B,GAET,CACEjP,SAAU,gBACVtnB,UAAU,EACVT,MAAOk3B,GAET,CACEnP,SAAU,gBACVtnB,UAAU,EACVT,MAAOm3B,MAKU,YAAnBT,IACF4C,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,mBACVtnB,UAAU,EACVT,MAAO22B,GAET,CACE5O,SAAU,gBACVtnB,UAAU,EACVT,MAAO42B,GAET,CACE7O,SAAU,iBACVtnB,UAAU,EACVT,MAAO62B,GAET,CACE9O,SAAU,gBACVtnB,UAAU,EACVT,MAAO82B,EACP9O,iBAAkB/a,SAAS6pB,GAAgB,EAC3C7O,wBAAyB,qCAKR,UAAnByO,IACF4C,EAAoB,sBACfA,GADe,CAElB,CACEvR,SAAU,iBACVtnB,UAAU,EACVT,MAAO83B,GAET,CACE/P,SAAU,kBACVtnB,UAAU,EACVT,MAAO+3B,GAET,CACEhQ,SAAU,kBACVtnB,UAAU,EACVT,MAAOg4B,GAET,CACEjQ,SAAU,sBACVtnB,UAAU,EACVT,MAAOi4B,OAMf,IAAM1F,EAAY5K,EAAqB2R,GAEvC3rB,EAAY,aAAgD,IAAlC2D,OAAOe,KAAKkgB,GAAWz0B,QAEjD4vB,GAAoB6E,KACnB,CACDkE,EACAC,EACAW,EACAC,EACAI,EACAC,EACAE,EACAD,EACAb,EACAC,EACAG,EACAD,EACAP,EACAC,EACAC,EACAC,EACAoB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAT,EACAC,EACAC,EACAC,EACAtqB,EACA6nB,EACAC,EACAgD,GAAkBW,YAClBX,GAAkBY,aAClBX,GAAkBU,YAClBV,GAAkBW,aAClBP,GACAvC,KAIA,eAAC7G,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,sBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,wBACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,uEAIF,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAACovB,EAAA,EAAD,CACExyB,MAAM,mBACNC,GAAG,mBACHC,KAAK,mBACLmE,QAASoyB,EACT12B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,GAAY,mBAAoB9mB,IAElCvE,MAAO,gCACPM,UAAW+4B,OAGd1C,GACC,eAAC,WAAD,WACE,cAACxc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ49B,sBAAtC,SACE,cAAC5D,GAAA,EAAD,CACE/oB,iBAAkBsqB,EAClBz2B,GAAG,iBACHC,KAAK,iBACLJ,MAAM,qBACNC,SAAU,SAACyX,GACT2T,GAAY,iBAAkB3T,EAAEvE,OAAOjT,QAEzCmM,gBAAiB,CACf,CAAErM,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,MAAOE,MAAO,OACvB,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,MAAOE,MAAO,OACvB,CAAEF,MAAO,QAASE,MAAO,cAIX,UAAnB02B,GACC,eAAC,WAAD,WACE,cAACzc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAACovB,EAAA,EAAD,CACExyB,MAAM,0BACNC,GAAG,0BACHC,KAAK,0BACLmE,QAASm0B,IAA4BhD,EACrCz1B,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,GAAY,0BAA2B9mB,IAEzCvE,MAAO,sBACPM,UAAWo1B,OAGbgD,IAA4BhD,IAC5B,eAAC,WAAD,WACE,cAACvb,EAAA,EAAD,CAAM9Y,WAAS,EAAf,SACE,cAAC8Y,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIhH,MAAO,CAAEsI,aAAc,IAA1C,SACE,2BAAUvI,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,6CAGA,cAACqI,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBQ,EAAkB,MAAOR,EAAU2nB,GACnC1I,GAAgB,cAElB7T,OAAO,YACP7Z,GAAG,YACHC,KAAK,YACLJ,MAAM,MACNU,MAAOitB,GAAgB,WAAiB,GACxCztB,MAAOy4B,GAAkBhqB,IACzBhO,UAAW+0B,IAEb,cAACY,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBQ,EAAkB,OAAQR,EAAU2nB,GACpC1I,GAAgB,eAElB7T,OAAO,uBACP7Z,GAAG,aACHC,KAAK,aACLJ,MAAM,OACNU,MAAOitB,GAAgB,YAAkB,GACzCztB,MAAOy4B,GAAkBnC,KACzB71B,UAAW+0B,WAMnB,cAACvb,EAAA,EAAD,CAAM9Y,WAAS,EAAC/E,MAAO,CAAEsI,aAAc,IAAvC,SACE,cAACuV,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,2BAAUjH,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,uCAGA,cAACqI,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBU,EAAkB,MAAOV,EAAU2nB,GACnC1I,GAAgB,cAElB7T,OAAO,YACP7Z,GAAG,YACHC,KAAK,YACLJ,MAAM,MACNU,MAAOitB,GAAgB,WAAiB,GACxCztB,MAAO04B,GAAkBjqB,IACzBhO,UAAW+0B,IAEb,cAACY,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBU,EAAkB,OAAQV,EAAU2nB,GACpC1I,GAAgB,eAElB7T,OAAO,uBACP7Z,GAAG,aACHC,KAAK,aACLJ,MAAM,OACNU,MAAOitB,GAAgB,YAAkB,GACzCztB,MAAO04B,GAAkBpC,KACzB71B,UAAW+0B,cAOvB,cAACvb,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,iBACHC,KAAK,iBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,OACtC2tB,GAAgB,mBAElB7tB,MAAM,WACNE,MAAOq3B,EACP72B,MAAOitB,GAAgB,gBAAsB,GAC7ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,eACHC,KAAK,eACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,OACpC2tB,GAAgB,iBAElB7tB,MAAM,SACNE,MAAOs3B,MAGX,cAACrd,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,GAAY,iBAAkB3T,EAAEvE,OAAOjT,QAEzCF,MAAM,YACNE,MAAOu3B,MAGX,cAACtd,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,eACHC,KAAK,eACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,QAEtCF,MAAM,SACNE,MAAOw3B,MAIX,cAACvd,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,2BAAUjH,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,sBACA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,uBACHC,KAAK,uBACLH,SAAU,SAACyX,GACT2T,GAAY,qBAAsB3T,EAAEvE,OAAOjT,QAE7CF,MAAM,SACNE,MAAOy3B,MAGX,cAACxd,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,WACHC,KAAK,WACLH,SAAU,SAACyX,GACT2T,GAAY,UAAW3T,EAAEvE,OAAOjT,OAChC2tB,GAAgB,aAElB7tB,MAAM,aACNE,MAAO03B,EACPl3B,MAAOitB,GAAgB,UAAgB,GACvChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,eACHC,KAAK,eACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,OACpC2tB,GAAgB,iBAElB7tB,MAAM,iBACNE,MAAO23B,EACPn3B,MAAOitB,GAAgB,cAAoB,GAC3ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEjyB,KAAK,SACL2E,IAAI,IACJV,GAAG,cACHC,KAAK,cACLH,SAAU,SAACyX,GACT2T,GAAY,aAAc3T,EAAEvE,OAAOjT,OACnC2tB,GAAgB,gBAElB7tB,MAAM,kBACNE,MAAO43B,EACPp3B,MAAOitB,GAAgB,aAAmB,YAMlD,cAACxT,EAAA,EAAD,CAAM9Y,WAAS,EAAChF,UAAWhB,EAAQ69B,gBAAnC,SACE,2BAAU78B,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,kDAGA,cAACqI,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBY,EAAiB,MAAOZ,EAAU2nB,GAClC1I,GAAgB,cAElB7T,OAAO,YACP7Z,GAAG,YACHC,KAAK,YACLJ,MAAM,MACNE,MAAO24B,GAAiBlqB,MAE1B,cAAC2nB,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBY,EAAiB,OAAQZ,EAAU2nB,GACnC1I,GAAgB,eAElB7T,OAAO,uBACP7Z,GAAG,aACHC,KAAK,aACLJ,MAAM,OACNE,MAAO24B,GAAiBrC,OAE1B,cAACF,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBc,EAAed,EAAU2nB,GACzB1I,GAAgB,aAElB7T,OAAO,uBACP7Z,GAAG,WACHC,KAAK,WACLJ,MAAM,KACNE,MAAO44B,GAAQtC,YAIrB,cAACrc,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJjH,UAAWhB,EAAQ6yB,aACnB5xB,MAAO,CAAEvD,UAAW,IAJtB,SAME,2BAAUsD,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,oBACA,cAACE,EAAA,EAAD,CACEjyB,KAAK,SACL2E,IAAI,IACJV,GAAG,aACHC,KAAK,aACLH,SAAU,SAACyX,GACT2T,GAAY,YAAa3T,EAAEvE,OAAOjT,OAClC2tB,GAAgB,eAElB7tB,MAAM,iBACNE,MAAO63B,EACPr3B,MAAOitB,GAAgB,YAAkB,aAM/B,UAAnBiJ,GACC,eAAC,WAAD,WACE,cAACzc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,iBACHC,KAAK,iBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,OACtC2tB,GAAgB,mBAElB7tB,MAAM,WACNE,MAAO83B,EACPt3B,MAAOitB,GAAgB,gBAAsB,OAGjD,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,2BAAUjH,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,yBAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,OACtC2tB,GAAgB,oBAElB7tB,MAAM,YACNE,MAAO+3B,EACPv3B,MAAOitB,GAAgB,iBAAuB,OAGlD,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,OACtC2tB,GAAgB,oBAElB7tB,MAAM,YACNE,MAAOg4B,EACPx3B,MAAOitB,GAAgB,iBAAuB,OAGlD,cAACxT,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,sBACHC,KAAK,sBACLH,SAAU,SAACyX,GACT2T,GAAY,oBAAqB3T,EAAEvE,OAAOjT,OAC1C2tB,GAAgB,wBAElB7tB,MAAM,gBACNE,MAAOi4B,EACPz3B,MAAOitB,GAAgB,qBAA2B,eAO1C,QAAnBiJ,GACC,eAAC,WAAD,WACE,cAACzc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,iBACHC,KAAK,iBACLH,SAAU,SAACyX,GACT2T,GAAY,eAAgB3T,EAAEvE,OAAOjT,QAEvCF,MAAM,aACNE,MAAOk4B,MAGX,cAACje,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,eACHC,KAAK,eACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,QAEtCF,MAAM,WACNE,MAAOm4B,MAGX,cAACle,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,2BAAUjH,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,yBAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,mBACHC,KAAK,mBACLH,SAAU,SAACyX,GACT2T,GAAY,iBAAkB3T,EAAEvE,OAAOjT,QAEzCF,MAAM,eACNE,MAAOo4B,MAGX,cAACne,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,QAEtCF,MAAM,YACNE,MAAOq4B,MAGX,cAACpe,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,qBACHC,KAAK,qBACLH,SAAU,SAACyX,GACT2T,GAAY,kBAAmB3T,EAAEvE,OAAOjT,QAE1CF,MAAM,iBACNE,MAAOs4B,MAGX,cAACre,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,QAExCF,MAAM,cACNE,MAAOu4B,cAOC,QAAnB7B,GACC,eAAC,WAAD,WACE,cAACzc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,eACHC,KAAK,eACLH,SAAU,SAACyX,GACT2T,GAAY,cAAe3T,EAAEvE,OAAOjT,OACpC2tB,GAAgB,iBAElB7tB,MAAM,WACNE,MAAO+2B,EACPv2B,MAAOitB,GAAgB,cAAoB,GAC3ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,aACHC,KAAK,aACLH,SAAU,SAACyX,GACT2T,GAAY,YAAa3T,EAAEvE,OAAOjT,OAClC2tB,GAAgB,eAElB7tB,MAAM,SACNE,MAAOg3B,EACPx2B,MAAOitB,GAAgB,YAAkB,GACzChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,aACHC,KAAK,aACLH,SAAU,SAACyX,GACT2T,GAAY,YAAa3T,EAAEvE,OAAOjT,QAEpCF,MAAM,UACNE,MAAOi3B,MAGX,cAAChd,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,2BAAUjH,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,yBAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,GAAY,eAAgB3T,EAAEvE,OAAOjT,OACrC2tB,GAAgB,kBAElB7tB,MAAM,aACNE,MAAOk3B,EACP12B,MAAOitB,GAAgB,eAAqB,GAC5ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,GAAY,eAAgB3T,EAAEvE,OAAOjT,OACrC2tB,GAAgB,kBAElB7tB,MAAM,aACNE,MAAOm3B,EACP32B,MAAOitB,GAAgB,eAAqB,GAC5ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,YACHC,KAAK,YACLH,SAAU,SAACyX,GACT2T,GAAY,WAAY3T,EAAEvE,OAAOjT,QAEnCF,MAAM,QACNE,MAAOo3B,cAOC,YAAnBV,GACC,eAAC,WAAD,WACE,cAACzc,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,mBACHC,KAAK,mBACLH,SAAU,SAACyX,GACT2T,GAAY,kBAAmB3T,EAAEvE,OAAOjT,OACxC2tB,GAAgB,qBAElB7tB,MAAM,WACNE,MAAO22B,EACPn2B,MAAOitB,GAAgB,kBAAwB,GAC/ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJhH,MAAO,CACLsI,aAAc,IAJlB,SAOE,2BAAUvI,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,yBAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,GAAY,eAAgB3T,EAAEvE,OAAOjT,OACrC2tB,GAAgB,kBAElB7tB,MAAM,QACNE,MAAO42B,EACPp2B,MAAOitB,GAAgB,eAAqB,GAC5ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,iBACHC,KAAK,iBACLH,SAAU,SAACyX,GACT2T,GAAY,gBAAiB3T,EAAEvE,OAAOjT,OACtC2tB,GAAgB,mBAElB7tB,MAAM,SACNE,MAAO62B,EACPr2B,MAAOitB,GAAgB,gBAAsB,GAC7ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEjyB,KAAK,SACL2E,IAAI,IACJV,GAAG,gBACHC,KAAK,gBACLH,SAAU,SAACyX,GACT2T,GAAY,eAAgB3T,EAAEvE,OAAOjT,OACrC2tB,GAAgB,kBAElB7tB,MAAM,kBACNE,MAAO82B,EACPt2B,MAAOitB,GAAgB,eAAqB,YAKpD,cAACxT,EAAA,EAAD,CACE1W,MAAI,EACJH,GAAI,GACJhH,MAAO,CACLsI,aAAc,IAJlB,SAOE,2BAAUvI,UAAWhB,EAAQ02B,WAA7B,UACE,wBAAQ11B,UAAWhB,EAAQ4yB,gBAA3B,qDAIA,cAACqI,GAAA,EAAD,CACEr2B,SAAU,SAACs2B,EAAc3nB,GACvBgB,EAAiBhB,EAAU2nB,GAC3B1I,GAAgB,eAElB7T,OAAO,uBACP7Z,GAAG,aACHC,KAAK,aACLJ,MAAM,KACNE,MAAO64B,GAAUvC,eAM3B,qBAAKn6B,UAAWhB,EAAQ0yB,cAAxB,SACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,yCAEF,eAAC7T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,cAAC6W,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjI,QAASA,EAAQ6yB,aAApC,SACE,cAACC,EAAA,EAAD,CACEjyB,KAAK,SACL2E,IAAI,IACJV,GAAG,WACHC,KAAK,WACLH,SAAU,SAACyX,GACT2T,GAAY,WAAY3T,EAAEvE,OAAOjT,OACjC2tB,GAAgB,aAElB7tB,MAAM,WACNE,MAAOu2B,GACP91B,UAAQ,EACRD,MAAOitB,GAAgB,UAAgB,OAI3C,2BAAUtxB,UAAWhB,EAAQ02B,WAAYz1B,MAAO,CAAEvD,UAAW,IAA7D,UACE,wBAAQsD,UAAWhB,EAAQ4yB,gBAA3B,0CAGA,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ29B,mBAAtC,SACE,sBACE38B,UAAS,UAAKhB,EAAQ+yB,eAAb,YAA+B/yB,EAAQ+9B,qBADlD,UAGE,qBACE/8B,UAAS,UAAKhB,EAAQ6yB,aAAb,YAA6B7yB,EAAQ89B,aADhD,SAGE,cAAChL,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,gCACHC,KAAK,gCACLH,SAAU,SAACyX,GACT2T,GAAY,qBAAD,YAAC,eACP2N,IADM,IAET1G,UAAW5a,EAAEvE,OAAOjT,SAEtB2tB,GAAgB,kCAElB7tB,MAAM,cACNE,MAAO84B,GAAmB1G,UAC1B3xB,UAAQ,EACRD,MACEitB,GAAgB,+BAAqC,GAEvD9sB,IAAI,QAGR,qBACExE,UAAS,UAAKhB,EAAQ6yB,aAAb,YAA6B7yB,EAAQ89B,aADhD,SAGE,cAAChL,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,iCACHC,KAAK,iCACLH,SAAU,SAACyX,GACT2T,GAAY,qBAAD,YAAC,eACP2N,IADM,IAETzG,WAAY7a,EAAEvE,OAAOjT,SAEvB2tB,GAAgB,mCAElB7tB,MAAM,eACNE,MAAO84B,GAAmBzG,WAC1B5xB,UAAQ,EACRD,MACEitB,GAAgB,gCAAsC,GAExD9sB,IAAI,QAGR,qBACExE,UAAS,UAAKhB,EAAQ6yB,aAAb,YAA6B7yB,EAAQ89B,aADhD,SAGE,cAAChL,EAAA,EAAD,CACEjyB,KAAK,SACLiE,GAAG,8BACHC,KAAK,8BACLH,SAAU,SAACyX,GACT2T,GAAY,qBAAD,YAAC,eACP2N,IADM,IAETxG,QAAS9a,EAAEvE,OAAOjT,SAEpB2tB,GAAgB,gCAElB7tB,MAAM,UACNE,MAAO84B,GAAmBxG,QAC1B7xB,UAAQ,EACRD,MACEitB,GAAgB,6BAAmC,GAErD9sB,IAAI,aAKZ,uBACA,cAACsZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,qBAAKjH,UAAWhB,EAAQ+yB,eAAxB,SACE,cAACsE,EAAA,EAAD,CACExyB,MAAM,iCACNC,GAAG,mCACHC,KAAK,mCACLmE,QAASy0B,GAAmBrG,aAC5B1yB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QACxB8mB,GAAY,qBAAD,YAAC,eACP2N,IADM,IAETrG,aAAcpuB,MAGlBvE,MAAO,2CCxvBrB5H,GAAYC,aARD,SAACC,GAAD,MAAsB,CACrCmhC,YAAanhC,EAAMmxB,QAAQC,aAAaG,OAAO6P,SAASD,YACxDE,mBACErhC,EAAMmxB,QAAQC,aAAaG,OAAO6P,SAASC,mBAC7CtZ,oBACE/nB,EAAMmxB,QAAQC,aAAaG,OAAO6P,SAASrZ,uBAGX,CAClCloB,8BACAqV,mBACAK,kBAGanV,gBAnYA,SAACC,GAAD,OACbC,YAAa,yBACXiH,cAAe,CACbvF,WAAY,GACZ,QAAS,CACP4C,SAAU,GACV6C,UAAW,IAEb,WAAY,CACVgH,WAAY,YAGhB6yB,oBAAqB,CACnB3/B,QAAS,QAEX4/B,mBAAoB,CAClB5/B,QAAS,OACT4iB,SAAU,SACVkE,KAAM,GAER+Y,WAAY,CACV7/B,QAAS,OACTC,WAAY,aACZnB,UAAW,GACX,oBAAqB,CACnBkB,QAAS,OACT4iB,SAAU,SACV3iB,WAAY,WACZ4I,UAAW,oBAGfi3B,iBAAkB,CAChB,oBAAqB,CACnBn1B,aAAc,IAGlBo1B,mBAAoB,CAClB1/B,WAAY,GACZ,oBAAqB,CACnBsK,aAAc,IAGlBwxB,WAAY,CACVn8B,QAAS,OACTC,WAAY,UAEdsN,eAAgB,CACd5C,aAAc,GAEhBq1B,YAAa,CACXr1B,aAAc,GACd3K,QAAS,SAER2uB,KACAgC,QA6UQlyB,CAAmBN,IAhUjB,SAAC,GAQK,IAPrBiD,EAOoB,EAPpBA,QACAo+B,EAMoB,EANpBA,YACAE,EAKoB,EALpBA,mBACAtZ,EAIoB,EAJpBA,oBACAloB,EAGoB,EAHpBA,0BACAqV,EAEoB,EAFpBA,eACAK,EACoB,EADpBA,YAEA,EAAgDtS,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KACA,EAA8BryB,oBAAkB,GAAhD,mBAAO2K,EAAP,KAAgBg0B,EAAhB,KACA,EAAsC3+B,mBACpC,IADF,mBAAO4+B,EAAP,KAAoBC,EAApB,KAGA,EAA0C7+B,mBAAyB,CACjE,CAAEoT,IAAK,GAAIzO,MAAO,MADpB,mBAAOm6B,EAAP,KAAsBC,EAAtB,KAIA,EAAoC/+B,mBAAuB,IAA3D,mBAAOg/B,EAAP,KAAmBC,EAAnB,KAGMnP,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,WAAYI,EAAO1N,KAEpC,CAACsN,IAsFH,OAnFA1R,qBAAU,WACJoK,GACF+iB,IACGC,OAAO,MADV,wBAEGC,MAAK,SAACC,GACL8Q,GAAW,GACXE,EAAehR,GACf,IAAI7W,EAAqB,GACzB,IAAK,IAAIkoB,KAAKrR,EACZ7W,EAAKO,KAAK,CACR9S,MAAOy6B,EACPv6B,MAAOu6B,IAGXD,EAAcjoB,GACd+nB,EAAiB,CAAC,CAAE3rB,IAAK4D,EAAK,GAAGrS,MAAOA,MAAOqS,EAAK,GAAGrS,YAExDmpB,OAAM,SAAC3Q,GACNwhB,GAAW,GACX/hC,EAA0BugB,GAC1B0hB,EAAe,SAGpB,CAACjiC,EAA2B+N,IAE/BpK,qBAAU,WACR,GAAIu+B,EAAe,CACjB,IAIMK,EAJML,EACT3nB,QAAO,SAACioB,GAAD,MAAqB,KAAZA,EAAIhsB,OACpBlH,KAAI,SAACkzB,GAAD,gBAAYA,EAAIhsB,IAAhB,YAAuBgsB,EAAIz6B,UAC/BwS,QAAO,SAACkoB,EAAK1nB,EAAG2nB,GAAT,OAAeA,EAAExnB,QAAQunB,KAAS1nB,KAC7B4nB,KAAK,KACpBzP,EAAY,qBAAsBqP,MAEnC,CAACL,EAAehP,IAGnBvvB,qBAAU,WACR,IAAIu2B,EAAyC,GAE7C,GAAoB,iBAAhBoH,EAAgC,CAClC,IAAI3rB,GAAQ,EAENwS,EAAiBqZ,EAAmBve,MAAM,KAElB,IAA1BkF,EAAetiB,QAAsC,KAAtBsiB,EAAe,KAChDxS,GAAQ,GAGVwS,EAAetK,SAAQ,SAACvS,EAAchD,GACpC,IAAMs6B,EAAYt3B,EAAK2X,MAAM,KAEJ,IAArB2f,EAAU/8B,SACZ8P,GAAQ,GAGNrN,EAAQ,IAAM6f,EAAetiB,SACV,KAAjB+8B,EAAU,IAA8B,KAAjBA,EAAU,KACnCjtB,GAAQ,OAKdukB,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,SACVtnB,UAAU,EACVT,MAAOy5B,EACPzR,kBAAmBpa,EACnBqa,wBACE,iDAKR,IAAMsK,EAAY5K,EAAqBwK,GAEvCxkB,EAAY,WAA8C,IAAlC2D,OAAOe,KAAKkgB,GAAWz0B,QAE/C4vB,EAAoB6E,KACnB,CAAC5kB,EAAa4rB,EAAaE,IAG5B,eAAC/J,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,sBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,2BACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,6DAIF,cAAC9T,EAAA,EAAD,CAAM7W,GAAI,GAAIjH,UAAWhB,EAAQu+B,oBAAjC,SACE,eAACzf,EAAA,EAAD,CAAM1W,MAAI,EAACpH,UAAWhB,EAAQw+B,mBAA9B,UACE,qBAAKx9B,UAAWhB,EAAQ2E,MAAxB,kBACA,qBACE3D,UAAS,UAAKhB,EAAQ4yB,gBAAb,YAAgC5yB,EAAQ2/B,kBADnD,qEAKA,cAAC7gB,EAAA,EAAD,CAAM1W,MAAI,EAACpH,UAAWhB,EAAQy+B,WAA9B,SACE,cAACzE,GAAA,EAAD,CACE/oB,iBAAkBmtB,EAClBt5B,GAAG,mBACHC,KAAK,mBACLJ,MAAO,IACPC,SAAU,SAACyX,GACT2T,EAAY,cAAe3T,EAAEvE,OAAOjT,QAEtCmM,gBAAiB,CACf,CAAErM,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,+BAAgCE,MAAO,WAChD,CAAEF,MAAO,gBAAiBE,MAAO,0BAM1B,iBAAhBu5B,GACC,eAAC,WAAD,WACE,uBACA,cAACtf,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAACovB,EAAA,EAAD,CACExyB,MAAM,yBACNC,GAAG,yBACHC,KAAK,yBACLmE,QAAS8b,EACTpgB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,sBAAuB9mB,IAErCvE,MAAO,6BAGX,eAACma,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,UACE,wCACA,sBAAMjH,UAAWhB,EAAQqF,MAAzB,SAAiCitB,EAAgB,SACjD,cAACxT,EAAA,EAAD,CAAM9Y,WAAS,EAAf,SACGg5B,GACCA,EAAc5yB,KAAI,SAACkzB,EAAKznB,GACtB,OACE,eAACiH,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ4+B,YAAtC,UACE,eAAC9f,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGjH,UAAWhB,EAAQ0+B,iBAArC,UACGQ,EAAWv8B,OAAS,GACnB,cAACqwB,EAAA,EAAD,CACEpuB,SAAU,SAACyX,GACT,IAAMujB,EAASvjB,EAAEvE,OAAOjT,MAClBg7B,EAAwB1pB,OAAO2pB,OACnC,GACAd,GAGFa,EAAMhoB,GAAGvE,IAAM+I,EAAEvE,OAAOjT,MACxBg7B,EAAMhoB,GAAGhT,MAAQi6B,EAAYc,GAAQ,GACrCX,EAAiBY,IAEnB/6B,GAAG,uBACHC,KAAK,uBACLJ,MAAO,GACPE,MAAOy6B,EAAIhsB,IACXpH,QAASgzB,EACTl/B,QAASA,EAAQmM,iBAGE,IAAtB+yB,EAAWv8B,QACV,cAACmwB,EAAA,EAAD,CACEhuB,GAAE,2BAAsB+S,EAAEiI,YAC1Bnb,MAAO,GACPI,KAAI,uBAAkB8S,EAAEiI,YACxBjb,MAAOy6B,EAAIhsB,IACX1O,SAAU,SAACyX,GACT,IAAMwjB,EAAwB1pB,OAAO2pB,OACnC,GACAd,GAEFa,EAAMhoB,GAAGvE,IAAM+I,EAAEvE,OAAOjT,MACxBo6B,EAAiBY,IAEnBz6B,MAAOyS,EACPtS,YAAa,MACbvF,QAASA,EAAQmM,oBAIvB,eAAC2S,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGjH,UAAWhB,EAAQ2+B,mBAArC,UACGO,EAAWv8B,OAAS,GACnB,cAACqwB,EAAA,EAAD,CACEpuB,SAAU,SAACyX,GACT,IAAMwjB,EAAwB1pB,OAAO2pB,OACnC,GACAd,GAEFa,EAAMhoB,GAAGhT,MAAQwX,EAAEvE,OAAOjT,MAC1Bo6B,EAAiBY,IAEnB/6B,GAAG,uBACHC,KAAK,uBACLJ,MAAO,GACPE,MAAOy6B,EAAIz6B,MACXqH,QACE4yB,EAAYQ,EAAIhsB,KACZwrB,EAAYQ,EAAIhsB,KAAKlH,KAAI,SAAC2zB,GACxB,MAAO,CAAEp7B,MAAOo7B,EAAGl7B,MAAOk7B,MAE5B,GAEN//B,QAASA,EAAQmM,iBAGE,IAAtB+yB,EAAWv8B,QACV,cAACmwB,EAAA,EAAD,CACEhuB,GAAE,6BAAwB+S,EAAEiI,YAC5Bnb,MAAO,GACPI,KAAI,uBAAkB8S,EAAEiI,YACxBjb,MAAOy6B,EAAIz6B,MACXD,SAAU,SAACyX,GACT,IAAMwjB,EAAwB1pB,OAAO2pB,OACnC,GACAd,GAEFa,EAAMhoB,GAAGhT,MAAQwX,EAAEvE,OAAOjT,MAC1Bo6B,EAAiBY,IAEnBz6B,MAAOyS,EACPtS,YAAa,QACbvF,QAASA,EAAQmM,oBAIvB,eAAC2S,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,EAAGjH,UAAWhB,EAAQ+6B,WAArC,UACE,qBAAK/5B,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACP,IAAMw+B,EAAQ1pB,OAAO2pB,OAAO,GAAId,GAC5BE,EAAWv8B,OAAS,EACtBk9B,EAAMpoB,KAAK,CACTnE,IAAK4rB,EAAW,GAAGr6B,MACnBA,MAAOi6B,EAAYI,EAAW,GAAGr6B,OAAO,KAG1Cg7B,EAAMpoB,KAAK,CAAEnE,IAAK,GAAIzO,MAAO,KAG/Bo6B,EAAiBY,IAbrB,SAgBE,cAACpL,EAAA,EAAD,QAGHuK,EAAcr8B,OAAS,GACtB,qBAAK3B,UAAWhB,EAAQwE,cAAxB,SACE,cAACpB,EAAA,EAAD,CACEE,KAAM,QACNjC,QAAS,WACP,IAAMw+B,EAAQb,EAAc3nB,QAC1B,SAACjP,EAAMhD,GAAP,OAAiBA,IAAUyS,KAE7BonB,EAAiBY,IANrB,SASE,cAAC/F,GAAA,EAAD,gC,mBCqIxB/8B,GAAYC,aA3CD,SAACC,GAAD,MAAsB,CACrC2V,eAAgB3V,EAAMmxB,QAAQC,aAAazb,eAC3C8hB,YAAaz3B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUD,YACzDE,UAAW33B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUC,UACvDC,gBAAiB53B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUE,gBAC7DC,cAAe73B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUG,cAC3DC,sBACE93B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUI,sBAC9CC,sBACE/3B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUK,sBAC9CC,YAAah4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUM,YACzDC,cAAej4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUO,cAC3DC,iBACEl4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUQ,iBAC9CC,aAAcn4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUS,aAC1DC,gBAAiBp4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUU,gBAC7DC,oBACEr4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUW,oBAC9CC,oBACEt4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUY,oBAC9CC,qBACEv4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUa,qBAC9CC,qBACEx4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUc,qBAC9CC,8BACEz4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUe,8BAC9CC,eAAgB14B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUgB,eAC5DC,SAAU34B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUiB,SACtDC,uBACE54B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUkB,uBAC9CC,2BACE74B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUmB,2BAC9CC,+BACE94B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUoB,+BAC9CC,gBAAiB/4B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUqB,gBAC7DC,uBACEh5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUsB,uBAC9CC,oBACEj5B,EAAMmxB,QAAQC,aAAaG,OAAOmG,UAAUuB,oBAC9C7G,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,wBAGb,CAClCld,mBACAK,kBAGanV,gBA9dA,SAACC,GAAD,OACbC,YAAa,uCACR80B,KACA9E,KACAgC,QA0dQlyB,CAAmBN,IAvdnB,SAAC,GA8BK,IA7BnBiD,EA6BkB,EA7BlBA,QACA4S,EA4BkB,EA5BlBA,eACA8hB,EA2BkB,EA3BlBA,YACAE,EA0BkB,EA1BlBA,UACAC,EAyBkB,EAzBlBA,gBACAC,EAwBkB,EAxBlBA,cACAC,EAuBkB,EAvBlBA,sBACAC,EAsBkB,EAtBlBA,sBAGAG,GAmBkB,EArBlBF,YAqBkB,EApBlBC,cAoBkB,EAnBlBC,kBACAC,EAkBkB,EAlBlBA,aACAC,EAiBkB,EAjBlBA,gBACAC,EAgBkB,EAhBlBA,oBAEAK,GAckB,EAflBJ,oBAekB,EAdlBI,gBACAC,EAakB,EAblBA,SACAC,EAYkB,EAZlBA,uBACAC,EAWkB,EAXlBA,2BACAN,EAUkB,EAVlBA,qBAEAE,GAQkB,EATlBD,qBASkB,EARlBC,+BACAK,EAOkB,EAPlBA,+BACAC,EAMkB,EANlBA,gBACAC,EAKkB,EALlBA,uBACAC,EAIkB,EAJlBA,oBACA/jB,EAGkB,EAHlBA,eACAK,EAEkB,EAFlBA,YACA6c,EACkB,EADlBA,qBAEA,EAAgDnvB,mBAAc,IAA9D,mBAAOoyB,EAAP,KAAyBC,EAAzB,KAGMvC,EAAcxvB,uBAClB,SAAC+R,EAAe1N,GACdsN,EAAe,YAAaI,EAAO1N,KAErC,CAACsN,IAIH1R,qBAAU,WACR,IAAIu2B,EAAyC,GAEzC7B,IACF6B,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,2BACVtnB,UAAU,EACVT,MAAOkxB,EACPlJ,iBAAqD,KAAnCkJ,EAClBjJ,wBAAyB,yBAE3B,CACEF,SAAU,yBACVtnB,UAAU,EACVT,MAAO2wB,EACP3I,iBAC2B,KAAzB2I,GAA+B1jB,SAAS0jB,IAAyB,EACnE1I,wBAAwB,yDAI1BuI,IACF2B,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,2BACVtnB,UAAU,EACVT,MAAO6wB,EACP7I,iBAAoD,KAAlC6I,EAClB5I,wBAAyB,yBAE3B,CACEF,SAAU,yBACVtnB,UAAU,EACVT,MAAOywB,EACPzI,iBAC0B,KAAxByI,GAA8BxjB,SAASwjB,IAAwB,EACjExI,wBAAwB,yDAK1B4H,IACFsC,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,QACVtnB,UAAU,EACVT,MAAO+vB,EACP7H,QAAS,wBACTC,qBAAsB,iDAExB,CACEJ,SAAU,iBACVtnB,UAAU,EACVT,MAAO8wB,EACP5I,QAAS,wBACTC,qBACE,wDAEJ,CACEJ,SAAU,WACVtnB,UAAU,EACVT,MAAO+wB,EACP7I,QAAS,wBACTC,qBAAsB,+CAExB,CACEJ,SAAU,yBACVtnB,UAAU,EACVT,MAAOgxB,EACP9I,QAAS,wBACTC,qBACE,sDAEJ,CACEJ,SAAU,6BACVtnB,UAAU,EACVT,MAAOixB,EACP/I,QAAS,wBACTC,qBACE,qDAEJ,CACEJ,SAAU,kBACVtnB,UAAU,EACVT,MAAOmxB,EACPjJ,QAAS,wBACTC,qBACE,sDAEJ,CACEJ,SAAU,yBACVtnB,UAAU,EACVT,MAAOoxB,EACPlJ,QAAS,wBACTC,qBACE,uDAEJ,CACEJ,SAAU,sBACVtnB,UAAU,EACVT,MAAOqxB,EACPnJ,QAAS,wBACTC,qBACE,uDAGF6H,IACFmC,EAAuB,sBAClBA,GADkB,CAErB,CACEpK,SAAU,WACVtnB,UAAU,EACVT,MAAOiwB,GAET,CACElI,SAAU,mBACVtnB,UAAU,EACVT,MAAOkwB,GAET,CACEnI,SAAU,mBACVtnB,UAAU,EACVT,MAAOmwB,OAMf,IAAMoC,EAAY5K,EAAqBwK,GAEvCxkB,EAAY,YAA+C,IAAlC2D,OAAOe,KAAKkgB,GAAWz0B,QAEhD4vB,EAAoB6E,KACnB,CACD1C,EACAE,EACAe,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACArB,EACAC,EACAC,EACAC,EACAxiB,EACA2iB,EACAC,EACAC,EACAU,EACAP,EACAE,EACAJ,IAGF70B,qBAAU,WAEJmS,EAAejQ,OAAS,IAIM,IAHPiQ,EAAeyE,QACtC,SAACjP,GAAD,OAAeA,EAAKvD,QAAUkxB,KAEXpzB,QACnBqtB,EAAY,iCAAkCX,GAMjB,IAHPzc,EAAeyE,QACrC,SAACjP,GAAD,OAAeA,EAAKvD,QAAU6wB,KAEZ/yB,QAClBqtB,EAAY,gCAAiCX,MAGhD,CACDqG,EACAK,EACA1G,EACAzc,EACAod,IAGF,IAAMwC,EAAkB,SAACngB,GACvBkgB,EAAoBE,YAAqBH,EAAkBjgB,KAG7D,OACE,eAACkiB,EAAA,EAAD,CAAOvzB,UAAWhB,EAAQw0B,aAA1B,UACE,sBAAKxzB,UAAWhB,EAAQ0yB,cAAxB,UACE,oBAAI1xB,UAAWhB,EAAQ2yB,UAAvB,8BACA,sBAAM3xB,UAAWhB,EAAQ4yB,gBAAzB,qDAKF,eAAC,WAAD,WACE,cAAC9T,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,QACHC,KAAK,QACLH,SAAU,SAACyX,GACT2T,EAAY,YAAa3T,EAAEvE,OAAOjT,OAClC2tB,EAAgB,UAElB7tB,MAAM,gBACNE,MAAO+vB,EACPvvB,MAAOitB,EAAgB,OAAa,GACpC/sB,YAAY,oDAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,iBACHC,KAAK,iBACLH,SAAU,SAACyX,GACT2T,EAAY,iBAAkB3T,EAAEvE,OAAOjT,OACvC2tB,EAAgB,mBAElB7tB,MAAM,yBACNE,MAAO8wB,EACPtwB,MAAOitB,EAAgB,gBAAsB,GAC7C/sB,YAAY,qCAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,WACHC,KAAK,WACLH,SAAU,SAACyX,GACT2T,EAAY,WAAY3T,EAAEvE,OAAOjT,OACjC2tB,EAAgB,aAElB7tB,MAAM,YACNE,MAAO+wB,EACPvwB,MAAOitB,EAAgB,UAAgB,GACvC/sB,YAAY,6BAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,yBACHC,KAAK,yBACLH,SAAU,SAACyX,GACT2T,EAAY,yBAA0B3T,EAAEvE,OAAOjT,OAC/C2tB,EAAgB,2BAElB7tB,MAAM,8BACNE,MAAOgxB,EACPxwB,MAAOitB,EAAgB,wBAA8B,GACrD/sB,YAAY,+BAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,6BACHC,KAAK,6BACLH,SAAU,SAACyX,GACT2T,EAAY,6BAA8B3T,EAAEvE,OAAOjT,OACnD2tB,EAAgB,+BAElB7tB,MAAM,mCACNE,MAAOixB,EACPzwB,MAAOitB,EAAgB,4BAAkC,GACzD/sB,YAAY,kCAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,kBACHC,KAAK,kBACLH,SAAU,SAACyX,GACT2T,EAAY,kBAAmB3T,EAAEvE,OAAOjT,OACxC2tB,EAAgB,oBAElB7tB,MAAM,mBACNE,MAAOmxB,EACP3wB,MAAOitB,EAAgB,iBAAuB,GAC9C/sB,YAAY,gDAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,yBACHC,KAAK,yBACLH,SAAU,SAACyX,GACT2T,EAAY,yBAA0B3T,EAAEvE,OAAOjT,OAC/C2tB,EAAgB,2BAElB7tB,MAAM,2BACNE,MAAOoxB,EACP5wB,MAAOitB,EAAgB,wBAA8B,GACrD/sB,YAAY,gDAGhB,cAACuZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,sBACHC,KAAK,sBACLH,SAAU,SAACyX,GACT2T,EAAY,sBAAuB3T,EAAEvE,OAAOjT,OAC5C2tB,EAAgB,wBAElB7tB,MAAM,wBACNE,MAAOqxB,EACP7wB,MAAOitB,EAAgB,qBAA2B,GAClD/sB,YAAY,mDAKjBmvB,GACC,cAAC,WAAD,UACE,cAAC5V,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACwE,EAAA,EAAD,CACExyB,MAAM,oBACNC,GAAG,oBACHC,KAAK,oBACLmE,QAAS2rB,EACTjwB,SAAU,SAACyX,GACT,IACMnT,EADUmT,EAAEvE,OACM5O,QAExB8mB,EAAY,kBAAmB9mB,IAEjCvE,MAAO,kCAKdkwB,GACC,eAAC,WAAD,WACE,cAAC/V,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,WACHC,KAAK,WACLH,SAAU,SAACyX,GACT2T,EAAY,gBAAiB3T,EAAEvE,OAAOjT,QAExCF,MAAM,WACNE,MAAOiwB,EACPzvB,MAAOitB,EAAgB,UAAgB,GACvC/sB,YAAY,mCACZD,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,mBACHC,KAAK,mBACLH,SAAU,SAACyX,GACT2T,EAAY,wBAAyB3T,EAAEvE,OAAOjT,QAEhDF,MAAM,WACNE,MAAOkwB,EACP1vB,MAAOitB,EAAgB,kBAAwB,GAC/ChtB,UAAQ,MAGZ,cAACwZ,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQ6yB,aAAtC,SACE,cAACC,EAAA,EAAD,CACEhuB,GAAG,mBACHC,KAAK,mBACLH,SAAU,SAACyX,GACT2T,EAAY,wBAAyB3T,EAAEvE,OAAOjT,QAEhDF,MAAM,WACNE,MAAOmwB,EACP3vB,MAAOitB,EAAgB,kBAAwB,GAC/ChtB,UAAQ,gB,oBC0QhBvI,GAAYC,aATD,SAACC,GAAD,MAAsB,CACrCgY,UAAWhY,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWra,UACxD+qB,WAAY/iC,EAAMmxB,QAAQC,aAAa2R,WACvCxR,OAAQvxB,EAAMmxB,QAAQC,aAAaG,OACnCgM,aAAcv9B,EAAMmxB,QAAQC,aAAamM,aACzCnL,qBACEpyB,EAAMmxB,QAAQC,aAAaG,OAAOc,WAAWD,wBAGb,CAClCjC,yBACAjb,mBACAsC,yBAGapX,uBAtrBA,SAACC,GAAD,OACbC,YAAa,qCACX0iC,QAAS,CACPpiC,OAAQ,sBAEP0vB,KACAgC,KACA2Q,QA+qBQ7iC,CAAmBN,IA5qBhB,SAAC,GASK,IARtBiD,EAQqB,EARrBA,QACAwuB,EAOqB,EAPrBA,OACAgM,EAMqB,EANrBA,aACAnL,EAKqB,EALrBA,qBACApa,EAIqB,EAJrBA,UACA+qB,EAGqB,EAHrBA,WACA5S,EAEqB,EAFrBA,qBACA3Y,EACqB,EADrBA,mBAGA,EAAoDvU,oBAAkB,GAAtE,mBAAOigC,EAAP,KAA2BC,EAA3B,KACA,EACElgC,mBAAmC,MADrC,mBAAOmgC,EAAP,KAAuBC,EAAvB,KAIA,EAAoCpgC,oBAAkB,GAAtD,mBAAOqgC,EAAP,KAAmBC,EAAnB,KAGA//B,qBAAU,WACR,IAAMqU,EAAa0Z,EAAOc,WAAWxa,WAC/Bua,EAAuBb,EAAOc,WAAWD,qBACzCuF,EAAYpG,EAAOmG,UAAUC,UAC7BC,EAAkBrG,EAAOmG,UAAUE,gBACnCC,EAAgBtG,EAAOmG,UAAUG,cACjCC,EAAwBvG,EAAOmG,UAAUI,sBACzCC,EAAwBxG,EAAOmG,UAAUK,sBACzCC,EAAczG,EAAOmG,UAAUM,YAC/BC,EAAgB1G,EAAOmG,UAAUO,cACjCqC,EAAe/I,EAAOgJ,iBAAiBD,aACvCI,EACJnJ,EAAOgJ,iBAAiBG,uBACpBC,EAAiBpJ,EAAOgJ,iBAAiBI,eACzCG,EAAkBvJ,EAAOgJ,iBAAiBO,gBAC1CD,EAAoBtJ,EAAOgJ,iBAAiBM,kBAC5CE,EAAexJ,EAAOgJ,iBAAiBQ,aACvCH,EAAiBrJ,EAAOgJ,iBAAiBK,eACzCI,EAAQzJ,EAAOgJ,iBAAiBS,MAChCC,EAAY1J,EAAOgJ,iBAAiBU,UACpCC,EAAmB3J,EAAOgJ,iBAAiBW,iBAC3CC,EACJ5J,EAAOgJ,iBAAiBY,uBACpBC,EAAsB7J,EAAOgJ,iBAAiBa,oBAC9CC,EAAsB9J,EAAOgJ,iBAAiBc,oBAC9CC,EAAuB/J,EAAOgJ,iBAAiBe,qBAC/CC,EAAYhK,EAAOgJ,iBAAiBgB,UACpCC,EAAmBjK,EAAOgJ,iBAAiBiB,iBAC3CC,EAAiBlK,EAAOgJ,iBAAiBkB,eACzCC,EAAuBnK,EAAOgJ,iBAAiBmB,qBAC/CC,EAAuBpK,EAAOgJ,iBAAiBoB,qBAC/CC,EAAuBrK,EAAOgJ,iBAAiBqB,qBAC/CC,EAAmBtK,EAAOgJ,iBAAiBsB,iBAC3CrB,EAAajJ,EAAOgJ,iBAAiBC,WACrCC,EAAalJ,EAAOgJ,iBAAiBE,WACrC6C,EAAoBC,EAAaD,kBACjCE,EAAiBD,EAAaC,eAC9BgG,EAAwBjG,EAAaiG,sBACrCC,EAAqBlG,EAAakG,mBAClCpD,EAAoB9C,EAAa8C,kBACjCC,EAAoB/C,EAAa+C,kBACjCC,EAAmBhD,EAAagD,iBAChCC,EAAUjD,EAAaiD,QACvBC,EAAYlD,EAAakD,UACzBpC,GAAmB9M,EAAO6M,WAAWC,iBACrCC,GAAiB/M,EAAO6M,WAAWE,eACnCC,GAAkBhN,EAAO6M,WAAWG,gBACpCC,GAAejN,EAAO6M,WAAWI,aACjCC,GAAgBlN,EAAO6M,WAAWK,cAClCC,GAAenN,EAAO6M,WAAWM,aACjCC,GAAcpN,EAAO6M,WAAWO,YAChCC,GAAYrN,EAAO6M,WAAWQ,UAC9BC,GAAYtN,EAAO6M,WAAWS,UAC9BC,GAAevN,EAAO6M,WAAWU,aACjCC,GAAexN,EAAO6M,WAAWW,aACjCC,GAAWzN,EAAO6M,WAAWY,SAC7BC,GAAgB1N,EAAO6M,WAAWa,cAClCC,GAAc3N,EAAO6M,WAAWc,YAChCC,GAAiB5N,EAAO6M,WAAWe,eACnCC,GAAc7N,EAAO6M,WAAWgB,YAChCC,GAAqB9N,EAAO6M,WAAWiB,mBACvCC,GAAU/N,EAAO6M,WAAWkB,QAC5BC,GAAchO,EAAO6M,WAAWmB,YAChCC,GAAajO,EAAO6M,WAAWoB,WAC/BC,GAAYlO,EAAO6M,WAAWqB,UAC9BC,GAAgBnO,EAAO6M,WAAWsB,cAClCC,GAAgBpO,EAAO6M,WAAWuB,cAClCC,GAAgBrO,EAAO6M,WAAWwB,cAClCC,GAAoBtO,EAAO6M,WAAWyB,kBACtCC,GAAevO,EAAO6M,WAAW0B,aACjCC,GAAcxO,EAAO6M,WAAW2B,YAChCC,GAAiBzO,EAAO6M,WAAW4B,eACnCC,GAAc1O,EAAO6M,WAAW6B,YAChCC,GAAkB3O,EAAO6M,WAAW8B,gBACpCC,GAAgB5O,EAAO6M,WAAW+B,cAClC/C,GAAiB7L,EAAO4L,SAASC,eACjCF,GAAY3L,EAAO4L,SAASD,UAC5BrL,GAAWN,EAAOC,WAAWK,SAC7BK,GAAeX,EAAOC,WAAWU,aACjCD,GAAaV,EAAOC,WAAWS,WAC/BkG,GAAe5G,EAAOmG,UAAUS,aAChCC,GAAkB7G,EAAOmG,UAAUU,gBACnCF,GAAmB3G,EAAOmG,UAAUQ,iBACpCG,GAAsB9G,EAAOmG,UAAUW,oBACvCI,GACJlH,EAAOmG,UAAUe,8BACbC,GAAiBnH,EAAOmG,UAAUgB,eAClCC,GAAWpH,EAAOmG,UAAUiB,SAC5BC,GAAyBrH,EAAOmG,UAAUkB,uBAC1CC,GACJtH,EAAOmG,UAAUmB,2BACbE,GAAkBxH,EAAOmG,UAAUqB,gBACnCC,GAAyBzH,EAAOmG,UAAUsB,uBAC1CC,GAAsB1H,EAAOmG,UAAUuB,oBACvCH,GACJvH,EAAOmG,UAAUoB,+BACbP,GAAuBhH,EAAOmG,UAAUa,qBACxCmL,GAAenS,EAAO6P,SAASD,YAC/BE,GAAqB9P,EAAO6P,SAASC,mBACrCtZ,GAAsBwJ,EAAO6P,SAASrZ,oBAEtCmR,GAAwB3H,EAAOmG,UAAUwB,sBACzCC,GAA2B5H,EAAOmG,UAAUyB,yBAC5CC,GACJ7H,EAAOmG,UAAU0B,iCACbC,GACJ9H,EAAOmG,UAAU2B,0BACbqH,GAAqBnP,EAAO6M,WAAWsC,mBACvCiD,GAAcpS,EAAO6M,WAAWD,SAEtC,GAAImF,EAAY,CACd,IAAMjc,GAAWuc,YAAiB,IAE9BC,GAAiB,GAErB,OAAQH,IACN,IAAK,UACHG,GAAiB,CACfzC,SAAUha,YAAmBvP,EAAYwP,KAE3C,MACF,IAAK,eACHwc,GAAiB,CACfzC,SAAUvZ,YACRwZ,GACAtZ,GACAlQ,EACAwP,KAMR,IAAMyL,GAAcjB,GAAS/O,MAAM,KAAK,GAEpCghB,GAA2B,CAC7Bh8B,KAAM+P,EACNG,UAAWA,EACXyO,WAAY,GACZC,WAAY,GACZqd,YAAa,GACbC,YAAa,GACbC,WAAY/G,IAAaE,GACzB8G,gBAAgB,EAChBC,mBAAmB,EACnBC,aAAc,GACdC,MAAO1M,EACP2M,aAActM,EACduM,eAAgBtM,EAChBuM,MAAO,CAAC,aAEJ18B,KAAMuf,GACNod,QAASvS,GAAaP,MACtB+S,mBAAoBxS,GAAa2C,MACjC8P,qBAAsB,CACpBt+B,KAAM6rB,GAAa0B,OACnBgR,mBAAoBxS,GAEtByS,UAAW,CACTC,SAAU,CACRC,OAAQ9S,GAAW+S,SAErBC,OAAQ,CACNF,OAAQ9S,GAAWiT,QAGvBC,gBAAiBhN,GAAee,GAAwB,MACrD2K,KAGPuB,oBAAqBvwB,SAASie,GAAa,KAGzC8E,IACFkM,GAAQ,2BACHA,IADG,IAENuB,eAAgB,CACdC,SAAUzN,EACV0N,SAAUzN,EACV0N,SAAUzN,MAMd+L,GADE1L,GACM,2BACH0L,IADG,IAEN2B,uBAAwB,CACtB3O,aAAc2B,GACdiN,YAAa7wB,SAASwjB,IACtBgM,MAAO3L,GACPiN,eAAgB/M,GAChBgN,oBAAqB/M,GACrBsM,gBAAiBhM,GACjB0M,yBAA0BzM,MAItB,2BACH0K,IADG,IAEN2B,uBAAwB,CACtBpB,MAAO3L,GACPiN,eAAgB/M,GAChBgN,oBAAqB/M,MAMzBiL,GADE5L,GACM,2BACH4L,IADG,IAENgC,wBAAyB,CACvBhP,aAAcgC,GACd4M,YAAa7wB,SAAS0jB,IACtB8L,MAAOtL,GACPgN,cAAe/M,GACfgN,WAAY/M,GACZkM,gBAAiB9L,MAIb,2BACHyK,IADG,IAENgC,wBAAyB,CACvBzB,MAAOtL,GACPgN,cAAe/M,GACfgN,WAAY/M,MAKlB,IAAIgN,GAAmB,KACnBC,GAAoB,KACpBC,GAAe,KACfC,GAAsB,KAsD1B,GApDI5I,EAAe93B,OAAS,IAC1BygC,GAAU,CACRE,gBAAiB7I,EACdruB,KAAI,SAAC4uB,GAAD,OAAsBA,EAAQkD,gBAClC7mB,QAAO,SAAC2jB,GAAD,OAAaA,OAIvByF,EAAsB99B,OAAS,IACjC0gC,GAAiB,CACfE,wBAAyB9C,EACtBr0B,KAAI,SAAC4uB,GAAD,OAAsBA,EAAQkD,gBAClC7mB,QAAO,SAAC2jB,GAAD,OAAaA,OAIvBb,IAAaI,EAAkB53B,OAAS,IAC1CugC,GAAc,CACZM,MAAOjJ,EACJnuB,KAAI,SAAC4uB,GAAD,MAAuB,CAC1ByI,IAAKzI,EAAQkD,aACb5qB,IAAK0nB,EAAQiD,gBAEd5mB,QAAO,SAAC2jB,GAAD,OAAaA,EAAQyI,KAAOzI,EAAQ1nB,SAKhD6mB,IACoC,KAApCuG,EAAmBxC,cACgB,KAAnCwC,EAAmBzC,cAEnBkF,GAAe,CACbzmB,QAAS,CACP+mB,IAAK/C,EAAmBxC,aACxB5qB,IAAKotB,EAAmBzC,gBAK1BiF,IAAeC,IAAgBC,IAAWC,MAC5CtC,GAAQ,2BACHA,IADG,IAEN2C,IAAI,mDACCR,IACAC,IACAC,IACAC,OAKL/H,GAAkB,CACpB,IAAIqI,GAAgB,GAEpB,OAAQpI,IACN,IAAK,UACH,IAAIqI,GAAqB,GAEM,KAA3BlG,EAAUQ,eACZ0F,GAAqB,CACnBC,GAAInG,EAAUQ,eAGlByF,GAAgB,CACdG,QAAS,CACPC,UAAW,CACTC,SAAUxI,GACVyI,YAAa,CACXC,MAAOzI,GACP0I,OAAQzI,GACR0I,MAAOtyB,SAAS6pB,KAElB+H,IAAI,eACCE,OAKX,MACF,IAAK,MACHD,GAAgB,CACdU,IAAK,CACHC,eAAgB,CACdN,SAAUpI,GACV2I,OAAQ1I,GACR2I,OAAQ1I,GACRmI,YAAa,CACXQ,UAAW1I,GACX2I,UAAW1I,GACXkI,MAAOjI,OAKf,MACF,IAAK,QACH0H,GAAgB,CACdgB,MAAO,CACLC,SAAU,CACRZ,SAAUrH,GACVsH,YAAa,CACXY,UAAWjI,GACXkI,UAAWjI,GACXkI,cAAejI,OAKvB,MACF,IAAK,MACH6G,GAAgB,CACdqB,IAAK,CACHC,cAAe,CACbC,WAAYnI,GACZiH,SAAUhH,GACViH,YAAa,CACXkB,aAAclI,GACd6H,UAAW5H,GACXkI,eAAgBjI,GAChBkI,YAAajI,OAKrB,MACF,IAAK,QACH,IAAIkI,GAAe,KACfC,GAAgB,KAEe,KAAjC/H,EAAiBS,aACiB,KAAlCT,EAAiBU,eAEjBoH,GAAe,CACbhyB,IAAKkqB,EAAiBS,YACtBwF,IAAKjG,EAAiBU,eAGG,KAAzBT,EAAQS,eACVqH,GAAgB,CACd1B,GAAIpG,EAAQS,eAGhB,IAAIsH,GAAW,MACXF,IAAgB7H,KAClB+H,GAAW,CACT9B,IAAI,2BACC4B,IACAC,MAIT5B,GAAgB,CACd8B,MAAM,yBACJzB,SAAU9H,GACVwJ,OAAQvJ,GACRlnB,UAAWmnB,GACXuJ,OAAQtJ,GACRuJ,QAAS,CACPF,OAAQpJ,GACRx3B,GAAIy3B,GACJsJ,OAAQrJ,GACR4H,MAAOtyB,SAAS2qB,MAEf+I,IAXA,IAYHxkB,OAAQ,CACN8kB,KAAMh0B,SAAS4qB,QAOzB,IAAIqJ,GAA+B,GAC/BC,GAA+B,GAGC,KAAlCzI,EAAkBU,aACiB,KAAnCV,EAAkBW,eAElB8H,GAA0B,CACxBC,OAAQ,CACN3yB,IAAKiqB,EAAkBU,YACvBwF,IAAKlG,EAAkBW,gBAMO,KAAlCZ,EAAkBW,aACiB,KAAnCX,EAAkBY,eAElB6H,GAA0B,CACxBG,OAAQ,CACN5yB,IAAKgqB,EAAkBW,YACvBwF,IAAKnG,EAAkBY,gBAK7B6C,GAAQ,2BACHA,IADG,IAEN1F,WAAW,qCACTD,SAAUwF,GACVwB,gBAAiBzE,GACjB2D,MAAO1L,IACJoQ,IACAD,IACApC,MAKT,IAAIwC,GAAe,GACnB,OAAQ5O,GACN,IAAK,WAEH,IADA,IAAI6O,GAAW,GACNvuB,GAAI,EAAGA,GAAI4f,EAAW90B,OAAQkV,KACrCuuB,GAAS3uB,KAAK,CACZiM,WAAY+T,EAAW5f,IACvB8L,WAAY+T,EAAW7f,MAG3BsuB,GAAU,CACRjvB,KAAMkvB,IAER,MACF,IAAK,SACHD,GAAU,CACRE,KAAM,CACJC,kBAAmB3O,EACnBmN,UAAWlN,EACX2O,UAAW1O,EACX2O,WAAYzO,EACZ0O,aAAc3O,EACd4O,OAAQ1O,IAGZ,MACF,IAAK,KACHmO,GAAU,CACRQ,iBAAkB,CAChBC,IAAK3O,EACL4O,sBAAuB3O,EACvB4O,gBAAiB3O,EACjB4O,gBAAiBtO,EACjBuO,uBAAwB5O,EACxB6O,qBAAsB5O,EACtB6O,oBAAqB5O,EACrB6O,qBAAsB5O,EACtB6O,SAAU5O,EACV6O,eAAgB3O,EAChB4O,qBAAsB3O,EACtB4O,uBAAwB3O,EACxB4O,sBAAuB3O,EACvB4O,iBAAkB3O,IAM1BiI,GAAQ,2BACHA,IADG,IAENle,IAAI,eAAMsjB,MAEZvY,IACGC,OAAO,OADV,kBACqCkT,IAClCjT,MAAK,SAACC,GACL,IAAM2Z,EAAgB5mC,IAAIitB,EAAK,UAAW,IAEtC4Z,EAA+B,CACjC9kB,IAAK/hB,IAAIitB,EAAK,eAAe,GAC7BrR,QAAS,IAGX,GAAIgrB,EACF,GAAI/tB,MAAMsJ,QAAQykB,GAAgB,CAChC,IAAME,EAAcF,EAAct7B,KAAI,SAACy7B,GACrC,MAAO,CACL1kB,UAAW0kB,EAAWnkB,WACtBN,UAAWykB,EAAWlkB,eAI1BgkB,EAAUjrB,QAAUkrB,OAEpBD,EAAY,CACVjrB,QAAS,CACPyG,UAAW4K,EAAIrR,QAAQgH,WACvBN,UAAW2K,EAAIrR,QAAQiH,aAK/B6c,GAAc,GACdJ,GAAsB,GACtBE,EAAkBqH,MAEnB3Z,OAAM,SAAC3Q,GACNmjB,GAAc,GACdpT,EAAqB/P,SAI1B,CAACkjB,IAEJ,IAAM51B,EAAe,CACnBhG,MAAO,SACP9D,KAAM,QACN8lB,SAAS,EACTF,OAAQ,WACNqhB,KAAQrwB,KAAK,cAYXswB,EAAe,CACnBpjC,MAAO,SACP9D,KAAM,SACN8lB,SACG4Z,GACwB,KAAzBlR,GAdkB,CACpB,aACA,aACA,YACA,WACA,mBACA,WACA,cAQgB2Y,OAAM,SAACjI,GAAD,OAAOC,EAAWiI,SAASlI,MACjDtZ,OAAQ,WACN+Z,GAAc,KAgDd0H,EA5CkC,CACpC,CACEvjC,MAAO,QACPyhB,gBAAiB,cAAC,EAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,YACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,EAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,SACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,GAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,gBACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,GAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,oBACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,GAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,WACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,GAAD,IACjBE,QAAS,CAAC3b,EAAco9B,IAE1B,CACEpjC,MAAO,aACPwjC,cAAc,EACd/hB,gBAAiB,cAAC,GAAD,IACjBE,QAAS,CAAC3b,EAAco9B,KAW5B,OACE,eAAC,WAAD,WACG5H,GACC,cAACiI,EAAA,QAAD,CACE3lB,kBAAmB4d,EACnBx9B,KAAMs9B,EACNzd,WAAY,WAVlBjO,IACAqzB,KAAQrwB,KAAK,aAYPkL,OAAO,WAGX,cAAC0lB,GAAA,EAAD,CAAY1jC,MAAO,sBACnB,cAAC2jC,GAAA,EAAD,CAAUj9B,GAAI,WAAY1G,MAAO,0BACjC,eAAC4jC,GAAA,EAAD,WACGhI,GACC,cAACzhB,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAf,SACE,cAACoe,EAAA,EAAD,MAGJ,cAACvH,EAAA,EAAD,CAAM1W,MAAI,EAACH,GAAI,GAAIjH,UAAWhB,EAAQigC,QAAtC,SACE,cAACuI,EAAA,EAAD,CAAe7gB,YAAaugB","file":"static/js/24.761bb5f1.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  process.env.NODE_ENV !== \"production\" ? Box.propTypes\n  /* remove-proptypes */\n  = {\n    // ----------------------------- Warning --------------------------------\n    // | These PropTypes are generated from the TypeScript type definitions |\n    // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n    // ----------------------------------------------------------------------\n\n    /**\n     * @ignore\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component used for the root node.\n     * Either a string to use a HTML element or a component.\n     */\n    component: PropTypes.elementType,\n\n    /**\n     * @ignore\n     */\n    sx: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.func])\n  } : void 0;\n  return Box;\n}","import { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../utils';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\n/**\n * @ignore - do not document.\n */\n\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nexport default Box;","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"./ListTenants/types\";\nimport { Opts } from \"./ListTenants/utils\";\nimport {\n  ADD_TENANT_SET_ADVANCED_MODE,\n  ADD_TENANT_SET_CURRENT_PAGE,\n  ADD_TENANT_UPDATE_FIELD,\n  ADD_TENANT_SET_PAGE_VALID,\n  ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n  ADD_TENANT_SET_LIMIT_SIZE,\n  ADD_TENANT_ADD_CA_KEYPAIR,\n  ADD_TENANT_DELETE_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n  ADD_TENANT_ADD_MINIO_KEYPAIR,\n  ADD_TENANT_DELETE_MINIO_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n  ADD_TENANT_ADD_CONSOLE_CERT,\n  ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ENCRYPTION_SERVER_CERT,\n  ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n  ADD_TENANT_ENCRYPTION_VAULT_CERT,\n  ADD_TENANT_ENCRYPTION_VAULT_CA,\n  ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n  ADD_TENANT_RESET_FORM,\n  TENANT_DETAILS_SET_LOADING,\n  TENANT_DETAILS_SET_TENANT,\n  TENANT_DETAILS_SET_CURRENT_TENANT,\n  TENANT_DETAILS_SET_TAB,\n} from \"./types\";\n\n// Basic actions\nexport const setWizardPage = (page: number) => {\n  return {\n    type: ADD_TENANT_SET_CURRENT_PAGE,\n    page,\n  };\n};\n\nexport const setAdvancedMode = (state: boolean) => {\n  return {\n    type: ADD_TENANT_SET_ADVANCED_MODE,\n    state,\n  };\n};\n\nexport const updateAddField = (\n  pageName: string,\n  fieldName: string,\n  value: any\n) => {\n  return {\n    type: ADD_TENANT_UPDATE_FIELD,\n    pageName,\n    field: fieldName,\n    value,\n  };\n};\n\nexport const isPageValid = (pageName: string, valid: boolean) => {\n  return {\n    type: ADD_TENANT_SET_PAGE_VALID,\n    pageName,\n    valid,\n  };\n};\n\n// Name Tenant actions\n\nexport const setStorageClassesList = (storageClasses: Opts[]) => {\n  return {\n    type: ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n    storageClasses,\n  };\n};\n\nexport const setLimitSize = (limitSize: any) => {\n  return {\n    type: ADD_TENANT_SET_LIMIT_SIZE,\n    limitSize,\n  };\n};\n\n// Security actions\n\nexport const addCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CA_KEYPAIR,\n  };\n};\n\nexport const deleteCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  };\n};\n\nexport const deleteConsoleCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToConsoleCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addKeyPair = () => {\n  return {\n    type: ADD_TENANT_ADD_MINIO_KEYPAIR,\n  };\n};\n\nexport const deleteKeyPair = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_MINIO_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToKeyPair = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCertificate = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileServerCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_SERVER_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileClientCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileGemaltoCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const resetAddTenantForm = () => {\n  return {\n    type: ADD_TENANT_RESET_FORM,\n  };\n};\n\nexport const setTenantDetailsLoad = (loading: boolean) => {\n  return {\n    type: TENANT_DETAILS_SET_LOADING,\n    state: loading,\n  };\n};\n\nexport const setTenantName = (tenantName: string, tenantNamespace: string) => {\n  return {\n    type: TENANT_DETAILS_SET_CURRENT_TENANT,\n    name: tenantName,\n    namespace: tenantNamespace,\n  };\n};\n\nexport const setTenantInfo = (tenant: ITenant | null) => {\n  return {\n    type: TENANT_DETAILS_SET_TENANT,\n    tenant,\n  };\n};\n\nexport const setTenantTab = (tab: string) => {\n  return {\n    type: TENANT_DETAILS_SET_TAB,\n    tab,\n  };\n};\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, [\"text\", \"onCopy\", \"options\", \"children\"]);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return _react[\"default\"].cloneElement(elem, _objectSpread({}, props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n    },\n    ...fileInputStyles,\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"large\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"large\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      fontSize: \".8rem\",\n      fontWeight: 600,\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport { Button } from \"@mui/material\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport NewAccountIcon from \"../../../../icons/NewAccountIcon\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n    promptIcon: {\n      marginRight: \".1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"2rem\",\n      width: \"2rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div className={classes.promptIcon}>\n            <NewAccountIcon />\n          </div>{\" \"}\n          <div>New {entity} Created</div>\n        </div>\n      }\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          <Button\n            variant=\"outlined\"\n            className={classes.buttonSpacer}\n            onClick={() => {\n              closeModal();\n            }}\n            color=\"primary\"\n          >\n            Done\n          </Button>\n\n          {!idp && (\n            <Button\n              onClick={() => {\n                let consoleExtras = {};\n\n                if (consoleCreds) {\n                  if (!Array.isArray(consoleCreds)) {\n                    consoleExtras = {\n                      console: [\n                        {\n                          access_key: consoleCreds.accessKey,\n                          secret_key: consoleCreds.secretKey,\n                        },\n                      ],\n                    };\n                  } else {\n                    const cCreds = consoleCreds.map((itemMap) => {\n                      return {\n                        access_key: itemMap.accessKey,\n                        secret_key: itemMap.secretKey,\n                      };\n                    });\n\n                    consoleExtras = {\n                      console: [...cCreds],\n                    };\n                  }\n                }\n\n                download(\n                  \"credentials.json\",\n                  JSON.stringify({\n                    ...consoleExtras,\n                  })\n                );\n              }}\n              endIcon={<DownloadIcon />}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Download\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { IAffinityModel } from \"../../../../common/types\";\n\nexport const getDefaultAffinity = (tenantName: string, poolName: string) => {\n  const defaultAffinity: IAffinityModel = {\n    podAntiAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n          labelSelector: {\n            matchExpressions: [\n              {\n                key: \"v1.min.io/tenant\",\n                operator: \"In\",\n                values: [tenantName],\n              },\n              {\n                key: \"v1.min.io/pool\",\n                operator: \"In\",\n                values: [poolName],\n              },\n            ],\n          },\n          topologyKey: \"kubernetes.io/hostname\",\n        },\n      ],\n    },\n  };\n  return defaultAffinity;\n};\n\nexport const getNodeSelector = (\n  labels: string,\n  withPodAntiAffinity: boolean,\n  tenantName: string,\n  poolName: string\n) => {\n  // Labels in the form of key1=value1&key2=value2&key3=value3...\n  const splittedLabels = labels.split(\"&\");\n  let matchExpressions: any = [];\n\n  splittedLabels.forEach((label: string) => {\n    const splitKeyValue = label.split(\"=\");\n    if (splitKeyValue.length === 2) {\n      matchExpressions.push({\n        key: splitKeyValue[0],\n        operator: \"In\",\n        values: [splitKeyValue[1]],\n      });\n    }\n  });\n\n  const nodeSelector: IAffinityModel = {\n    nodeAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [\n          {\n            matchExpressions: matchExpressions,\n          },\n        ],\n      },\n    },\n  };\n  if (withPodAntiAffinity) {\n    const def = getDefaultAffinity(tenantName, poolName);\n    nodeSelector.podAntiAffinity = def.podAntiAffinity;\n  }\n  console.log(nodeSelector);\n  return nodeSelector;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardButton, IWizardPage } from \"./types\";\nimport { Button, LinearProgress } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizardStepContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    wizardComponent: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 100px - 80px)\",\n      minHeight: 400,\n      flex: 1,\n      width: \"100%\",\n    },\n    wizardModal: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 515px)\",\n    },\n    buttonsContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\" as const,\n      padding: \"10px 0\",\n      borderTop: \"#EAEAEA 1px solid\",\n      \"& button\": {\n        marginLeft: 10,\n      },\n      \"&.forModal\": {\n        paddingBottom: 0,\n      },\n    },\n    buttonInnerContainer: {\n      width: \"100%\",\n      textAlign: \"right\" as const,\n      marginRight: 15,\n    },\n  });\n\nconst WizardPage = ({\n  classes,\n  page,\n  pageChange,\n  loadingStep,\n  forModal,\n}: IWizardPage) => {\n  const buttonAction = (btn: IWizardButton) => {\n    switch (btn.type) {\n      case \"next\":\n        pageChange(\"++\");\n        break;\n      case \"back\":\n        pageChange(\"--\");\n        break;\n      case \"to\":\n        pageChange(btn.toPage || 0);\n        break;\n      case \"custom\":\n      default:\n    }\n\n    if (btn.action) {\n      btn.action(pageChange);\n    }\n  };\n\n  return (\n    <div className={classes.wizardStepContainer}>\n      <div className={forModal ? classes.wizardModal : classes.wizardComponent}>\n        {page.componentRender}\n      </div>\n      {loadingStep && (\n        <div>\n          <LinearProgress />\n        </div>\n      )}\n      <div\n        className={`${classes.buttonsContainer} ${forModal ? \"forModal\" : \"\"}`}\n      >\n        <div className={classes.buttonInnerContainer}>\n          {page.buttons.map((btn) => {\n            return (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  buttonAction(btn);\n                }}\n                disabled={!btn.enabled}\n                key={`button-${page.label}-${btn.label}`}\n              >\n                {btn.label}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WizardPage);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardMain } from \"./types\";\nimport WizardPage from \"./WizardPage\";\nimport { Grid, List } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizFromContainer: {},\n    wizFromModal: {\n      position: \"relative\",\n    },\n    modalWizardSteps: {\n      padding: 5,\n      borderBottom: \"#eaeaea 1px solid\",\n      \"& ul\": {\n        padding: 0,\n        marginTop: 0,\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n\n        \"& li\": {\n          listStyle: \"lower-roman\",\n          \"&::marker\": {\n            paddingLeft: 15,\n          },\n        },\n      },\n    },\n    buttonList: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      cursor: \"pointer\",\n      \"&:not(:disabled):hover\": {\n        textDecoration: \"underline\",\n      },\n      \"&:selected, &:active, &:focus, &:focus:active\": {\n        border: \"none\",\n        outline: 0,\n        boxShadow: \"none\",\n      },\n    },\n    paddedContentGrid: {\n      marginTop: 8,\n      padding: \"0 10px\",\n      minHeight: 400,\n    },\n    stepsLabel: {\n      fontSize: 20,\n      color: \"#393939\",\n      fontWeight: 600,\n      margin: \"15px 12px\",\n      \"&.stepsModalTitle\": {\n        textAlign: \"center\",\n        width: \"100%\",\n        marginTop: 0,\n        marginBottom: 10,\n      },\n    },\n    stepsMasterContainer: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#FFFFFF\",\n      width: \"100%\",\n      maxHeight: 90,\n    },\n    verticalSteps: {\n      borderRight: \"1px solid #EAEAEA\",\n      background: \"#FBFAFA\",\n    },\n    stepsContainer: {\n      paddingTop: 0,\n      \"& .MuiButtonBase-root.Mui-selected\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    stepItem: {\n      \"&:hover\": {\n        background: \"rgba(247,247,247,0.7)\",\n      },\n    },\n  });\n\nconst GenericWizard = ({\n  classes,\n  wizardSteps,\n  loadingStep,\n  forModal,\n}: IWizardMain) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  const pageChange = (toElement: string | number) => {\n    const lastPage = wizardSteps.length - 1;\n\n    if (toElement === \"++\") {\n      let nextPage = currentStep + 1;\n\n      if (nextPage > lastPage) {\n        nextPage = lastPage;\n      }\n\n      setCurrentStep(nextPage);\n    }\n\n    if (toElement === \"--\") {\n      let prevPage = currentStep - 1;\n\n      if (prevPage < 0) {\n        prevPage = 0;\n      }\n\n      setCurrentStep(prevPage);\n    }\n\n    if (typeof toElement === \"number\") {\n      let pg = toElement;\n      if (toElement < 0) {\n        pg = 0;\n      }\n\n      if (toElement > lastPage) {\n        pg = lastPage;\n      }\n\n      setCurrentStep(pg);\n    }\n  };\n\n  if (wizardSteps.length === 0) {\n    return null;\n  }\n\n  const stepsList = () => {\n    return (\n      <Fragment>\n        <List\n          component=\"nav\"\n          dense={true}\n          classes={{\n            root: classes.stepsContainer,\n          }}\n        >\n          {wizardSteps.map((step, index) => {\n            return (\n              <ListItem\n                button\n                disableRipple\n                onClick={() => pageChange(index)}\n                key={`wizard-${index.toString()}`}\n                selected={currentStep === index}\n                classes={{\n                  root: classes.stepItem,\n                }}\n              >\n                <ListItemText primary={step.label} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Fragment>\n    );\n  };\n  const stepsListModal = () => {\n    return (\n      <ul>\n        {wizardSteps.map((step, index) => {\n          return (\n            <li key={`wizard-${index.toString()}`}>\n              <button\n                onClick={() => pageChange(index)}\n                disabled={index > currentStep}\n                className={classes.buttonList}\n              >\n                {step.label}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Grid\n      container\n      className={forModal ? classes.wizFromModal : classes.wizFromContainer}\n    >\n      {forModal ? (\n        <Fragment>\n          <div className={classes.stepsMasterContainer}>\n            <div className={`${classes.stepsLabel} stepsModalTitle`}>Steps</div>\n            <div className={classes.modalWizardSteps}>{stepsListModal()}</div>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Grid\n            item\n            xs={12}\n            sm={2}\n            md={2}\n            lg={2}\n            xl={2}\n            className={classes.verticalSteps}\n          >\n            {stepsList()}\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        item\n        xs={12}\n        sm={forModal ? 12 : 10}\n        md={forModal ? 12 : 10}\n        lg={forModal ? 12 : 10}\n        xl={forModal ? 12 : 10}\n        className={forModal ? \"\" : classes.paddedContentGrid}\n      >\n        <WizardPage\n          page={wizardSteps[currentStep]}\n          pageChange={pageChange}\n          loadingStep={loadingStep}\n          forModal={forModal}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(GenericWizard);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TableContext from './TableContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\n\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\n\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"hover\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableRowClasses, { getTableRowUtilityClass } from './tableRowClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\n\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n}));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n\n  const ownerState = _extends({}, props, {\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: theme.palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: theme.palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: theme.palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: theme.palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport interface IValidation {\n  fieldKey: string;\n  required: boolean;\n  pattern?: RegExp;\n  customPatternMessage?: string;\n  customValidation?: boolean; // The validation to trigger the error\n  customValidationMessage?: string;\n  value: string;\n}\n\nexport const commonFormValidation = (fieldsValidate: IValidation[]) => {\n  let returnErrors: any = {};\n\n  fieldsValidate.forEach((field) => {\n    if (field.required && field.value.trim() === \"\") {\n      returnErrors[field.fieldKey] = \"Field cannot be empty\";\n      return;\n    }\n    // if it's not required and the value is empty, we are done here\n    if (!field.required && field.value.trim() === \"\") {\n      return;\n    }\n\n    if (field.customValidation && field.customValidationMessage) {\n      returnErrors[field.fieldKey] = field.customValidationMessage;\n      return;\n    }\n\n    if (field.pattern && field.customPatternMessage) {\n      const rgx = new RegExp(field.pattern, \"g\");\n\n      if (!field.value.match(rgx)) {\n        returnErrors[field.fieldKey] = field.customPatternMessage;\n      }\n      return;\n    }\n  });\n\n  return returnErrors;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport api from \"../../../../../../common/api\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  });\n\ninterface IAddNamespace {\n  classes: any;\n  namespace: string;\n  addNamespaceOpen: boolean;\n  closeAddNamespaceModalAndRefresh: (reloadNamespaceData: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst AddNamespaceModal = ({\n  classes,\n  namespace,\n  addNamespaceOpen,\n  closeAddNamespaceModalAndRefresh,\n  setErrorSnackMessage,\n}: IAddNamespace) => {\n  const [addNamespaceLoading, setAddNamespaceLoading] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    if (addNamespaceLoading) {\n      api\n        .invoke(\"POST\", \"/api/v1/namespace\", {\n          name: namespace,\n        })\n        .then((res) => {\n          setAddNamespaceLoading(false);\n          closeAddNamespaceModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddNamespaceLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    addNamespaceLoading,\n    closeAddNamespaceModalAndRefresh,\n    namespace,\n    setErrorSnackMessage,\n  ]);\n\n  const addNamespace = () => {\n    setAddNamespaceLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      isOpen={addNamespaceOpen}\n      isLoading={addNamespaceLoading}\n      onConfirm={addNamespace}\n      onClose={() => {\n        closeAddNamespaceModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddNamespaceModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport {\n  calculateDistribution,\n  erasureCodeCalc,\n  getBytes,\n  niceBytes,\n  setMemoryResource,\n} from \"../../../../../common/utils\";\nimport { ecListTransform, Opts } from \"../../ListTenants/utils\";\nimport { IMemorySize } from \"../../ListTenants/types\";\nimport {\n  ErrorResponseHandler,\n  ICapacity,\n  IErasureCodeCalc,\n} from \"../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport api from \"../../../../../common/api\";\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  advancedMode: boolean;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  maxAllocableMemo: number;\n  memorySize: IMemorySize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  advancedMode,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  maxAllocableMemo,\n  memorySize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n}: ISizePreviewProps) => {\n  const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  const [nodeError, setNodeError] = useState<string>(\"\");\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n\n  const validateMemorySize = useCallback(() => {\n    const memSize = parseInt(memoryNode) || 0;\n    const clusterSize = volumeSize || 0;\n    const maxMemSize = maxAllocableMemo || 0;\n    const clusterSizeFactor = sizeFactor;\n\n    const clusterSizeBytes = getBytes(\n      clusterSize.toString(10),\n      clusterSizeFactor\n    );\n    const memoSize = setMemoryResource(memSize, clusterSizeBytes, maxMemSize);\n    updateField(\"memorySize\", memoSize);\n  }, [maxAllocableMemo, memoryNode, sizeFactor, updateField, volumeSize]);\n\n  const getMaxAllocableMemory = (nodes: string) => {\n    if (nodes !== \"\" && !isNaN(parseInt(nodes))) {\n      setNodeError(\"\");\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/cluster/max-allocatable-memory?num_nodes=${nodes}`\n        )\n        .then((res: { max_memory: number }) => {\n          const maxMemory = res.max_memory ? res.max_memory : 0;\n          updateField(\"maxAllocableMemo\", maxMemory);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorFlag(true);\n          setNodeError(err.errorMessage);\n        });\n    }\n  };\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [memoryNode, validateMemorySize]);\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [maxAllocableMemo, validateMemorySize]);\n\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n      updateField(\"ecParity\", ecCodeValidated.defaultEC);\n    }\n  }, [ecParityChoices.length, distribution, cleanECChoices, updateField]);\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    validateClusterSize();\n    getECValue();\n    getMaxAllocableMemory(nodes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, volumeSize, sizeFactor, drivesPerServer]);\n\n  const validateClusterSize = () => {\n    const size = volumeSize;\n    const factor = sizeFactor;\n    const limitSize = getBytes(\"12\", \"Ti\", true);\n\n    const clusterCapacity: ICapacity = {\n      unit: factor,\n      value: size.toString(),\n    };\n\n    const distrCalculate = calculateDistribution(\n      clusterCapacity,\n      parseInt(nodes),\n      parseInt(limitSize),\n      parseInt(drivesPerServer)\n    );\n\n    updateField(\"distribution\", distrCalculate);\n  };\n\n  const getECValue = () => {\n    updateField(\"ecParity\", \"\");\n\n    if (nodes.trim() !== \"\" && drivesPerServer.trim() !== \"\") {\n      api\n        .invoke(\"GET\", `/api/v1/get-parity/${nodes}/${drivesPerServer}`)\n        .then((ecList: string[]) => {\n          updateField(\"ecParityChoices\", ecListTransform(ecList));\n          updateField(\"cleanECChoices\", ecList);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          updateField(\"ecparityChoices\", []);\n          isPageValid(\"tenantSize\", false);\n          updateField(\"ecParity\", \"\");\n        });\n    }\n  };\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const parsedSize = getBytes(volumeSize, sizeFactor, true);\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: errorFlag,\n        customValidationMessage: nodeError,\n      },\n      {\n        fieldKey: \"volume_size\",\n        required: true,\n        value: volumeSize,\n        customValidation:\n          parseInt(parsedSize) < 1073741824 ||\n          parseInt(parsedSize) > limitSize[selectedStorageClass],\n        customValidationMessage: `Volume size must be greater than 1Gi and less than ${niceBytes(\n          limitSize[selectedStorageClass],\n          true\n        )}`,\n      },\n      {\n        fieldKey: \"memory_per_node\",\n        required: true,\n        value: memoryNode,\n        customValidation: parseInt(memoryNode) < 2,\n        customValidationMessage: \"Memory size must be greater than 2Gi\",\n      },\n      {\n        fieldKey: \"drivesps\",\n        required: true,\n        value: drivesPerServer,\n        customValidation: parseInt(drivesPerServer) < 1,\n        customValidationMessage: \"There must be at least one drive\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        !(\"volume_size\" in commonValidation) &&\n        !(\"memory_per_node\" in commonValidation) &&\n        !(\"drivesps\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        memorySize.error === \"\"\n    );\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    drivesPerServer,\n    ecParityCalc,\n    memorySize,\n    limitSize,\n    selectedStorageClass,\n    isPageValid,\n    errorFlag,\n    nodeError,\n  ]);\n\n  /* End Validation of pages */\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Drives per Server</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.disks : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Drive Capacity</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {!advancedMode && (\n            <TableRow>\n              <TableCell scope=\"row\">Memory per Node</TableCell>\n              <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  advancedMode: state.tenants.createTenant.advancedModeOn,\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n  maxAllocableMemo:\n    state.tenants.createTenant.fields.tenantSize.maxAllocableMemo,\n  memorySize: state.tenants.createTenant.fields.tenantSize.memorySize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.fields.tenantSize.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(SizePreview));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  calculateDistribution,\n  erasureCodeCalc,\n  getBytes,\n  k8sfactorForDropdown,\n  niceBytes,\n  setMemoryResource,\n} from \"../../../../../common/utils\";\nimport { clearValidationError } from \"../../utils\";\nimport { ecListTransform, Opts } from \"../../ListTenants/utils\";\nimport { IMemorySize } from \"../../ListTenants/types\";\nimport {\n  ErrorResponseHandler,\n  ICapacity,\n  IErasureCodeCalc,\n} from \"../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { SelectChangeEvent } from \"@mui/material\";\n\ninterface ITenantSizeProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  advancedMode: boolean;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  maxAllocableMemo: number;\n  memorySize: IMemorySize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    compositeFieldContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    compositeAddOn: {\n      marginLeft: 10,\n      \"& div\": {\n        marginBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        \"& div\": {\n          marginTop: 5,\n        },\n      },\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSize = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  advancedMode,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  maxAllocableMemo,\n  memorySize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n}: ITenantSizeProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  const [nodeError, setNodeError] = useState<string>(\"\");\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n\n  const validateMemorySize = useCallback(() => {\n    const memSize = parseInt(memoryNode) || 0;\n    const clusterSize = volumeSize || 0;\n    const maxMemSize = maxAllocableMemo || 0;\n    const clusterSizeFactor = sizeFactor;\n\n    const clusterSizeBytes = getBytes(\n      clusterSize.toString(10),\n      clusterSizeFactor\n    );\n    const memoSize = setMemoryResource(memSize, clusterSizeBytes, maxMemSize);\n    updateField(\"memorySize\", memoSize);\n  }, [maxAllocableMemo, memoryNode, sizeFactor, updateField, volumeSize]);\n\n  const getMaxAllocableMemory = (nodes: string) => {\n    if (nodes !== \"\" && !isNaN(parseInt(nodes))) {\n      setNodeError(\"\");\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/cluster/max-allocatable-memory?num_nodes=${nodes}`\n        )\n        .then((res: { max_memory: number }) => {\n          const maxMemory = res.max_memory ? res.max_memory : 0;\n          updateField(\"maxAllocableMemo\", maxMemory);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorFlag(true);\n          setNodeError(err.errorMessage);\n        });\n    }\n  };\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [memoryNode, validateMemorySize]);\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [maxAllocableMemo, validateMemorySize]);\n\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n      updateField(\"ecParity\", ecCodeValidated.defaultEC);\n    }\n  }, [ecParityChoices.length, distribution, cleanECChoices, updateField]);\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    validateClusterSize();\n    getECValue();\n    getMaxAllocableMemory(nodes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, volumeSize, sizeFactor, drivesPerServer]);\n\n  const validateClusterSize = () => {\n    const size = volumeSize;\n    const factor = sizeFactor;\n    const limitSize = getBytes(\"12\", \"Ti\", true);\n\n    const clusterCapacity: ICapacity = {\n      unit: factor,\n      value: size.toString(),\n    };\n\n    const distrCalculate = calculateDistribution(\n      clusterCapacity,\n      parseInt(nodes),\n      parseInt(limitSize),\n      parseInt(drivesPerServer)\n    );\n\n    updateField(\"distribution\", distrCalculate);\n  };\n\n  const getECValue = () => {\n    updateField(\"ecParity\", \"\");\n\n    if (nodes.trim() !== \"\" && drivesPerServer.trim() !== \"\") {\n      api\n        .invoke(\"GET\", `/api/v1/get-parity/${nodes}/${drivesPerServer}`)\n        .then((ecList: string[]) => {\n          updateField(\"ecParityChoices\", ecListTransform(ecList));\n          updateField(\"cleanECChoices\", ecList);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          updateField(\"ecparityChoices\", []);\n          isPageValid(\"tenantSize\", false);\n          updateField(\"ecParity\", \"\");\n        });\n    }\n  };\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const parsedSize = getBytes(volumeSize, sizeFactor, true);\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: errorFlag,\n        customValidationMessage: nodeError,\n      },\n      {\n        fieldKey: \"volume_size\",\n        required: true,\n        value: volumeSize,\n        customValidation:\n          parseInt(parsedSize) < 1073741824 ||\n          parseInt(parsedSize) > limitSize[selectedStorageClass],\n        customValidationMessage: `Volume size must be greater than 1Gi and less than ${niceBytes(\n          limitSize[selectedStorageClass],\n          true\n        )}`,\n      },\n      {\n        fieldKey: \"memory_per_node\",\n        required: true,\n        value: memoryNode,\n        customValidation: parseInt(memoryNode) < 2,\n        customValidationMessage: \"Memory size must be greater than 2Gi\",\n      },\n      {\n        fieldKey: \"drivesps\",\n        required: true,\n        value: drivesPerServer,\n        customValidation: parseInt(drivesPerServer) < 1,\n        customValidationMessage: \"There must be at least one drive\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        !(\"volume_size\" in commonValidation) &&\n        !(\"memory_per_node\" in commonValidation) &&\n        !(\"drivesps\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        memorySize.error === \"\"\n    );\n\n    setValidationErrors(commonValidation);\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    drivesPerServer,\n    ecParityCalc,\n    memorySize,\n    limitSize,\n    selectedStorageClass,\n    isPageValid,\n    errorFlag,\n    nodeError,\n  ]);\n\n  /* End Validation of pages */\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <div className={classes.headerElement}>\n          <h3 className={classes.h3Section}>Tenant Size</h3>\n          <span className={classes.descriptionText}>\n            Please select the desired capacity\n          </span>\n        </div>\n      </Grid>\n      {distribution.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{distribution.error}</div>\n        </Grid>\n      )}\n      {memorySize.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{memorySize.error}</div>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"nodes\"\n          name=\"nodes\"\n          type=\"number\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"nodes\", e.target.value);\n            cleanValidation(\"nodes\");\n          }}\n          label=\"Number of Servers\"\n          disabled={selectedStorageClass === \"\"}\n          value={nodes}\n          min=\"4\"\n          required\n          error={validationErrors[\"nodes\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"drivesps\"\n          name=\"drivesps\"\n          type=\"number\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"drivesPerServer\", e.target.value);\n            cleanValidation(\"drivesps\");\n          }}\n          label=\"Number of Drives per Server\"\n          value={drivesPerServer}\n          disabled={selectedStorageClass === \"\"}\n          min=\"1\"\n          required\n          error={validationErrors[\"drivesps\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <div className={classes.multiContainer}>\n          <div className={classes.formFieldRow}>\n            <div className={classes.compositeFieldContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"volume_size\"\n                name=\"volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"volumeSize\", e.target.value);\n                  cleanValidation(\"volume_size\");\n                }}\n                label=\"Total Size\"\n                value={volumeSize}\n                disabled={selectedStorageClass === \"\"}\n                required\n                error={validationErrors[\"volume_size\"] || \"\"}\n                min=\"0\"\n              />\n              <div className={classes.compositeAddOn}>\n                <SelectWrapper\n                  label={\"\"}\n                  id=\"size_factor\"\n                  name=\"size_factor\"\n                  value={sizeFactor}\n                  disabled={selectedStorageClass === \"\"}\n                  onChange={(e: SelectChangeEvent<string>) => {\n                    updateField(\"sizeFactor\", e.target.value as string);\n                  }}\n                  options={k8sfactorForDropdown()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Grid>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            type=\"number\"\n            id=\"memory_per_node\"\n            name=\"memory_per_node\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"memoryNode\", e.target.value);\n              cleanValidation(\"memory_per_node\");\n            }}\n            label=\"Memory per Node [Gi]\"\n            value={memoryNode}\n            disabled={selectedStorageClass === \"\"}\n            required\n            error={validationErrors[\"memory_per_node\"] || \"\"}\n            min=\"2\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <SelectWrapper\n            id=\"ec_parity\"\n            name=\"ec_parity\"\n            onChange={(e: SelectChangeEvent<string>) => {\n              updateField(\"ecParity\", e.target.value as string);\n            }}\n            label=\"Erasure Code Parity\"\n            disabled={selectedStorageClass === \"\"}\n            value={ecParity}\n            options={ecParityChoices}\n          />\n          <span className={classes.descriptionText}>\n            Please select the desired parity. This setting will change the max\n            usable capacity in the cluster\n          </span>\n        </Grid>\n      </Fragment>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  advancedMode: state.tenants.createTenant.advancedModeOn,\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n  maxAllocableMemo:\n    state.tenants.createTenant.fields.tenantSize.maxAllocableMemo,\n  memorySize: state.tenants.createTenant.fields.tenantSize.memorySize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.fields.tenantSize.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(TenantSize));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\nimport {\n  isPageValid,\n  setLimitSize,\n  setStorageClassesList,\n  updateAddField,\n} from \"../../actions\";\nimport {\n  getLimitSizes,\n  IQuotaElement,\n  IQuotas,\n  Opts,\n} from \"../../ListTenants/utils\";\nimport { AppState } from \"../../../../../store\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport AddNamespaceModal from \"./helpers/AddNamespaceModal\";\nimport SizePreview from \"./SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      position: \"fixed\",\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface INameTenantScreen {\n  classes: any;\n  storageClasses: Opts[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  setStorageClassesList: typeof setStorageClassesList;\n  setLimitSize: typeof setLimitSize;\n  tenantName: string;\n  namespace: string;\n  selectedStorageClass: string;\n}\n\nconst NameTenant = ({\n  classes,\n  storageClasses,\n  tenantName,\n  namespace,\n  selectedStorageClass,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n  setModalErrorSnackMessage,\n}: INameTenantScreen) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [emptyNamespace, setEmptyNamespace] = useState<boolean>(true);\n  const [loadingNamespaceInfo, setLoadingNamespaceInfo] =\n    useState<boolean>(false);\n  const [showCreateButton, setShowCreateButton] = useState<boolean>(false);\n  const [openAddNSConfirm, setOpenAddNSConfirm] = useState<boolean>(false);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      updateAddField(\"nameTenant\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Storage classes retrieval\n  const getNamespaceInformation = useCallback(() => {\n    setShowCreateButton(false);\n    updateField(\"selectedStorageClass\", \"\");\n\n    setStorageClassesList([]);\n\n    // Empty tenantValidation\n    api\n      .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants`)\n      .then((res: any[]) => {\n        const tenantsList = get(res, \"tenants\", []);\n\n        if (tenantsList && tenantsList.length > 0) {\n          setEmptyNamespace(false);\n          setLoadingNamespaceInfo(false);\n          return;\n        }\n        setEmptyNamespace(true);\n\n        // Storagequotas retrieval\n        api\n          .invoke(\n            \"GET\",\n            `/api/v1/namespaces/${namespace}/resourcequotas/${namespace}-storagequota`\n          )\n          .then((res: IQuotas) => {\n            const elements: IQuotaElement[] = get(res, \"elements\", []);\n            setLimitSize(getLimitSizes(res));\n\n            const newStorage = elements.map((storageClass: any) => {\n              const name = get(storageClass, \"name\", \"\").split(\n                \".storageclass.storage.k8s.io/requests.storage\"\n              )[0];\n\n              return { label: name, value: name };\n            });\n\n            setStorageClassesList(newStorage);\n            if (newStorage.length > 0) {\n              updateField(\"selectedStorageClass\", newStorage[0].value);\n            }\n            setLoadingNamespaceInfo(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingNamespaceInfo(false);\n            setShowCreateButton(true);\n            console.error(\"Namespace error: \", err);\n          });\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage({\n          errorMessage: \"Error validating if namespace already has tenants\",\n          detailedError: err.detailedError,\n        });\n      });\n  }, [\n    namespace,\n    setLimitSize,\n    setModalErrorSnackMessage,\n    setStorageClassesList,\n    updateField,\n  ]);\n\n  const debounceNamespace = useMemo(\n    () => debounce(getNamespaceInformation, 500),\n    [getNamespaceInformation]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      setLoadingNamespaceInfo(true);\n\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  // Validation\n  useEffect(() => {\n    let customNamespaceError = false;\n    let errorMessage = \"\";\n\n    if (!emptyNamespace && !loadingNamespaceInfo) {\n      customNamespaceError = true;\n      errorMessage = \"You can only create one tenant per namespace\";\n    } else if (\n      storageClasses.length < 1 &&\n      emptyNamespace &&\n      !loadingNamespaceInfo\n    ) {\n      customNamespaceError = true;\n      errorMessage = \"Please enter a valid namespace\";\n    }\n\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"tenant-name\",\n        required: true,\n        pattern: /^[a-z0-9-]{3,63}$/,\n        customPatternMessage:\n          \"Name only can contain lowercase letters, numbers and '-'. Min. Length: 3\",\n        value: tenantName,\n      },\n      {\n        fieldKey: \"namespace\",\n        required: true,\n        value: namespace,\n        customValidation: customNamespaceError,\n        customValidationMessage: errorMessage,\n      },\n    ]);\n\n    const isValid =\n      !(\"tenant-name\" in commonValidation) &&\n      !(\"namespace\" in commonValidation) &&\n      storageClasses.length > 0;\n\n    isPageValid(\"nameTenant\", isValid);\n\n    setValidationErrors(commonValidation);\n  }, [\n    storageClasses,\n    namespace,\n    tenantName,\n    isPageValid,\n    emptyNamespace,\n    loadingNamespaceInfo,\n  ]);\n\n  const frmValidationCleanup = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const addNamespace = () => {\n    setOpenAddNSConfirm(true);\n  };\n\n  const closeAddNamespace = (refresh: boolean) => {\n    setOpenAddNSConfirm(false);\n\n    if (refresh) {\n      debounceNamespace();\n    }\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && (\n        <AddNamespaceModal\n          addNamespaceOpen={openAddNSConfirm}\n          closeAddNamespaceModalAndRefresh={closeAddNamespace}\n          namespace={namespace}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={8} md={9}>\n          <Paper className={classes.paperWrapper}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name Tenant</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"tenant-name\"\n                    name=\"tenant-name\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantName\", e.target.value);\n                      frmValidationCleanup(\"tenant-name\");\n                    }}\n                    label=\"Name\"\n                    value={tenantName}\n                    required\n                    error={validationErrors[\"tenant-name\"] || \"\"}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"namespace\"\n                  name=\"namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"namespace\", e.target.value);\n                    frmValidationCleanup(\"namespace\");\n                  }}\n                  label=\"Namespace\"\n                  value={namespace}\n                  error={validationErrors[\"namespace\"] || \"\"}\n                  overlayIcon={showCreateButton ? <AddIcon /> : null}\n                  overlayAction={addNamespace}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <SelectWrapper\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  onChange={(e: SelectChangeEvent<string>) => {\n                    updateField(\n                      \"selectedStorageClass\",\n                      e.target.value as string\n                    );\n                  }}\n                  label=\"Storage Class\"\n                  value={selectedStorageClass}\n                  options={storageClasses}\n                  disabled={storageClasses.length < 1}\n                />\n              </Grid>\n              <TenantSize />\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} md={3}>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  tenantName: state.tenants.createTenant.fields.nameTenant.tenantName,\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  storageClasses: state.tenants.createTenant.storageClasses,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(NameTenant));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IConfigureProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n  tenantSecurityContext: ISecurityContext;\n  logSearchSecurityContext: ISecurityContext;\n  logSearchPostgresSecurityContext: ISecurityContext;\n  prometheusSecurityContext: ISecurityContext;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchCustomFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusCustomFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Configure = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n  tenantSecurityContext,\n  logSearchSecurityContext,\n  logSearchPostgresSecurityContext,\n  prometheusSecurityContext,\n}: IConfigureProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values is current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", selectedStorageClass);\n      }\n\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", selectedStorageClass);\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Expose Services</h3>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MiniO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Configurations</h3>\n        <span className={classes.descriptionText}>\n          Configure SecurityContext, Storage Classes & Storage size for Log\n          Search, Prometheus add-ons and your Tenant\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Override Tenant defaults\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"logSearchConfig\"\n          id=\"log_search_configuration\"\n          name=\"log_search_configuration\"\n          checked={logSearchCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"logSearchCustom\", checked);\n          }}\n          label={\"Override Log Search defaults\"}\n        />\n      </Grid>\n      {logSearchCustom && (\n        <Grid xs={12} className={classes.logSearchCustomFields}>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"log_search_storage_class\"\n              name=\"log_search_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"logSearchSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Log Search Storage Class\"\n              value={logSearchSelectedStorageClass}\n              options={storageClasses}\n              disabled={storageClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"log_search_volume_size\"\n                name=\"log_search_volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"logSearchVolumeSize\", e.target.value);\n                  cleanValidation(\"log_search_volume_size\");\n                }}\n                label=\"Storage Size [Gi]\"\n                value={logSearchVolumeSize}\n                required\n                error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                min=\"0\"\n              />\n            </div>\n          </Grid>\n\n          <fieldset\n            className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n          >\n            <legend className={classes.descriptionText}>\n              SecurityContext for LogSearch\n            </legend>\n\n            <Grid item xs={12}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsUser\"\n                    name=\"logSearch_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsGroup\"\n                    name=\"logSearch_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"logSearch_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_fsGroup\"\n                    name=\"logSearch_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"logSearchSecurityContextRunAsNonRoot\"\n                  id=\"logSearch_securityContext_runAsNonRoot\"\n                  name=\"logSearch_securityContext_runAsNonRoot\"\n                  checked={logSearchSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchSecurityContext\", {\n                      ...logSearchSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for PostgreSQL\n            </legend>\n\n            <Grid item xs={12}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsUser\"\n                    name=\"postgres_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchPostgresSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsGroup\"\n                    name=\"postgres_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchPostgresSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_fsGroup\"\n                    name=\"postgres_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchPostgresSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"postgresSecurityContextRunAsNonRoot\"\n                  id=\"postgres_securityContext_runAsNonRoot\"\n                  name=\"postgres_securityContext_runAsNonRoot\"\n                  checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchPostgresSecurityContext\", {\n                      ...logSearchPostgresSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"prometheusConfig\"\n          id=\"prometheus_configuration\"\n          name=\"prometheus_configuration\"\n          checked={prometheusCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"prometheusCustom\", checked);\n          }}\n          label={\"Override Prometheus defaults\"}\n        />\n      </Grid>\n      {prometheusCustom && (\n        <Grid xs={12} className={classes.prometheusCustomFields}>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"prometheus_storage_class\"\n              name=\"prometheus_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"prometheusSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Prometheus Storage Class\"\n              value={prometheusSelectedStorageClass}\n              options={storageClasses}\n              disabled={storageClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"prometheus_volume_size\"\n                name=\"prometheus_volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"prometheusVolumeSize\", e.target.value);\n                  cleanValidation(\"prometheus_volume_size\");\n                }}\n                label=\"Storage Size [Gi]\"\n                value={prometheusVolumeSize}\n                required\n                error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                min=\"0\"\n              />\n            </div>\n          </Grid>\n          <fieldset\n            className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n          >\n            <legend className={classes.descriptionText}>\n              SecurityContext for Prometheus\n            </legend>\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsUser\"\n                    name=\"prometheus_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={prometheusSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsUser\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsGroup\"\n                    name=\"prometheus_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={prometheusSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_fsGroup\"\n                    name=\"prometheus_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={prometheusSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"prometheus_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div\n                className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n              >\n                <FormSwitchWrapper\n                  value=\"prometheusSecurityContextRunAsNonRoot\"\n                  id=\"prometheus_securityContext_runAsNonRoot\"\n                  name=\"prometheus_securityContext_runAsNonRoot\"\n                  checked={prometheusSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"prometheusSecurityContext\", {\n                      ...prometheusSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  tenantSecurityContext:\n    state.tenants.createTenant.fields.configure.tenantSecurityContext,\n  logSearchSecurityContext:\n    state.tenants.createTenant.fields.configure.logSearchSecurityContext,\n  logSearchPostgresSecurityContext:\n    state.tenants.createTenant.fields.configure\n      .logSearchPostgresSecurityContext,\n  prometheusSecurityContext:\n    state.tenants.createTenant.fields.configure.prometheusSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Configure));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, Tooltip, Typography } from \"@mui/material\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError, getRandomString } from \"../../utils\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\n\ninterface IIdentityProviderProps {\n  classes: any;\n  idpSelection: string;\n  accessKeys: string[];\n  secretKeys: string[];\n  openIDConfigurationURL: string;\n  openIDClientID: string;\n  openIDSecretID: string;\n  openIDCallbackURL: string;\n  openIDClaimName: string;\n  openIDScopes: string;\n  ADURL: string;\n  ADSkipTLS: boolean;\n  ADServerInsecure: boolean;\n  ADUserNameSearchFilter: string;\n  ADGroupSearchBaseDN: string;\n  ADGroupSearchFilter: string;\n  ADGroupNameAttribute: string;\n  ADUserDNs: string[];\n  ADUserNameFormat: string;\n  ADLookupBindDN: string;\n  ADLookupBindPassword: string;\n  ADUserDNSearchBaseDN: string;\n  ADUserDNSearchFilter: string;\n  ADServerStartTLS: boolean;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 14,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n      },\n    },\n    adUserDnRows: {\n      display: \"flex\",\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst IdentityProvider = ({\n  classes,\n  idpSelection,\n  accessKeys,\n  secretKeys,\n  openIDConfigurationURL,\n  openIDClientID,\n  openIDSecretID,\n  openIDCallbackURL,\n  openIDClaimName,\n  openIDScopes,\n  ADURL,\n  ADSkipTLS,\n  ADServerInsecure,\n  ADUserNameSearchFilter,\n  ADGroupSearchBaseDN,\n  ADGroupSearchFilter,\n  ADGroupNameAttribute,\n  ADUserDNs,\n  ADUserNameFormat,\n  ADLookupBindDN,\n  ADLookupBindPassword,\n  ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter,\n  ADServerStartTLS,\n  updateAddField,\n  isPageValid,\n}: IIdentityProviderProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"identityProvider\", field, value);\n    },\n    [updateAddField]\n  );\n  const updateUserField = (index: number, value: string) => {\n    const newUserField = [...accessKeys];\n    newUserField[index] = value;\n    updateField(\"accessKeys\", newUserField);\n  };\n  const updatePwordField = (index: number, value: string) => {\n    const newUserField = [...secretKeys];\n    newUserField[index] = value;\n    updateField(\"secretKeys\", newUserField);\n  };\n  const updateADUserField = (index: number, value: string) => {\n    const newADUserDNsField = [...ADUserDNs];\n    newADUserDNsField[index] = value;\n    updateField(\"ADUserDNs\", newADUserDNsField);\n  };\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n      ];\n      // validate user DNs\n      for (let i = 0; i < ADUserDNs.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `ad-userdn-${i.toString()}`,\n          required: true,\n          value: ADUserDNs[i],\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    isPageValid(\"identityProvider\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    accessKeys,\n    secretKeys,\n    openIDClientID,\n    openIDSecretID,\n    ADURL,\n    ADUserNameSearchFilter,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADGroupNameAttribute,\n    ADUserDNs,\n    isPageValid,\n    openIDConfigurationURL,\n    openIDClaimName,\n  ]);\n  let inputs = null;\n  if (idpSelection === \"Built-in\") {\n    inputs = accessKeys.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`accesskey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Access Key\"}\n              name={`accesskey-${index.toString()}`}\n              value={accessKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateUserField(index, e.target.value);\n                cleanValidation(`accesskey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-accesskey-${index.toString()}`}\n              error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n            />\n            <InputBoxWrapper\n              id={`secretkey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Secret Key\"}\n              name={`secretkey-${index.toString()}`}\n              value={secretKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updatePwordField(index, e.target.value);\n                cleanValidation(`secretkey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-secretkey-${index.toString()}`}\n              error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      accessKeys.push(\"\");\n                      secretKeys.push(\"\");\n                      updateUserField(accessKeys.length - 1, \"\");\n                      updatePwordField(secretKeys.length - 1, \"\");\n                    }}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      if (accessKeys.length > 1) {\n                        accessKeys.splice(index, 1);\n                        secretKeys.splice(index, 1);\n                        updateUserField(\n                          accessKeys.length - 1,\n                          accessKeys[accessKeys.length - 1]\n                        );\n                      }\n                    }}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    onClick={() => {\n                      updateUserField(index, getRandomString(16));\n                      updatePwordField(index, getRandomString(32));\n                    }}\n                    size={\"small\"}\n                  >\n                    <CasinoIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  if (idpSelection === \"AD\") {\n    inputs = ADUserDNs.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.adUserDnRows}>\n            <InputBoxWrapper\n              id={`ad-userdn-${index.toString()}`}\n              label={\"\"}\n              placeholder=\"\"\n              name={`ad-userdn-${index.toString()}`}\n              value={ADUserDNs[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateADUserField(index, e.target.value);\n                cleanValidation(`ad-userdn-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-ad-userdn-${index.toString()}`}\n              error={validationErrors[`ad-userdn-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    ADUserDNs.push(\"\");\n                    updateADUserField(ADUserDNs.length - 1, \"\");\n                  }}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  style={{ marginLeft: 16 }}\n                  onClick={() => {\n                    if (ADUserDNs.length > 1) {\n                      ADUserDNs.splice(index, 1);\n                      updateUserField(\n                        ADUserDNs.length - 1,\n                        ADUserDNs[ADUserDNs.length - 1]\n                      );\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.protocolRadioOptions}>\n        <label>Protocol</label>\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\" \"\n          onChange={(e) => {\n            updateField(\"idpSelection\", e.target.value);\n          }}\n          selectorOptions={[\n            { label: \"Built-in\", value: \"Built-in\" },\n            { label: \"OpenID\", value: \"OpenID\" },\n            { label: \"Active Directory\", value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && (\n        <Fragment>\n          Add additional users\n          {inputs}\n        </Fragment>\n      )}\n      {idpSelection === \"OpenID\" && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_CONFIGURATION_URL\"\n              name=\"openID_CONFIGURATION_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDConfigurationURL\", e.target.value);\n                cleanValidation(\"openID_CONFIGURATION_URL\");\n              }}\n              label=\"Configuration URL\"\n              value={openIDConfigurationURL}\n              placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n              error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_clientID\"\n              name=\"openID_clientID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClientID\", e.target.value);\n                cleanValidation(\"openID_clientID\");\n              }}\n              label=\"Client ID\"\n              value={openIDClientID}\n              error={validationErrors[\"openID_clientID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_secretID\"\n              name=\"openID_secretID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDSecretID\", e.target.value);\n                cleanValidation(\"openID_secretID\");\n              }}\n              label=\"Secret ID\"\n              value={openIDSecretID}\n              error={validationErrors[\"openID_secretID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_callbackURL\"\n              name=\"openID_callbackURL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDCallbackURL\", e.target.value);\n                cleanValidation(\"openID_callbackURL\");\n              }}\n              label=\"Callback URL\"\n              value={openIDCallbackURL}\n              placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n              error={validationErrors[\"openID_callbackURL\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_claimName\"\n              name=\"openID_claimName\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClaimName\", e.target.value);\n                cleanValidation(\"openID_claimName\");\n              }}\n              label=\"Claim Name\"\n              value={openIDClaimName}\n              error={validationErrors[\"openID_claimName\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_scopes\"\n              name=\"openID_scopes\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDScopes\", e.target.value);\n                cleanValidation(\"openID_scopes\");\n              }}\n              label=\"Scopes\"\n              value={openIDScopes}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {idpSelection === \"AD\" && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"AD_URL\"\n              name=\"AD_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADURL\", e.target.value);\n                cleanValidation(\"AD_URL\");\n              }}\n              label=\"LDAP Server Address\"\n              value={ADURL}\n              placeholder=\"ldap-server:636\"\n              error={validationErrors[\"AD_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_skipTLS\"\n              id=\"ad_skipTLS\"\n              name=\"ad_skipTLS\"\n              checked={ADSkipTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADSkipTLS\", checked);\n              }}\n              label={\"Skip TLS Verification\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_serverInsecure\"\n              id=\"ad_serverInsecure\"\n              name=\"ad_serverInsecure\"\n              checked={ADServerInsecure}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerInsecure\", checked);\n              }}\n              label={\"Server Insecure\"}\n            />\n          </Grid>\n          {ADServerInsecure ? (\n            <Grid item xs={12}>\n              <Typography\n                className={classes.error}\n                variant=\"caption\"\n                display=\"block\"\n                gutterBottom\n              >\n                Warning: All traffic with Active Directory will be unencrypted\n              </Typography>\n              <br />\n            </Grid>\n          ) : null}\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_serverStartTLS\"\n              id=\"ad_serverStartTLS\"\n              name=\"ad_serverStartTLS\"\n              checked={ADServerStartTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerStartTLS\", checked);\n              }}\n              label={\"Start TLS connection to AD/LDAP server\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userNameFormat\"\n              name=\"ad_userNameFormat\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameFormat\", e.target.value);\n              }}\n              label=\"Username Format\"\n              value={ADUserNameFormat}\n              placeholder=\"uid=%s,cn=accounts,dc=myldapserver,dc=com\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userNameFilter\"\n              name=\"ad_userNameFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameSearchFilter\", e.target.value);\n              }}\n              label=\"Username Search Filter\"\n              value={ADUserNameSearchFilter}\n              placeholder=\"(|(objectclass=posixAccount)(uid=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchBaseDN\"\n              name=\"ad_groupSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchBaseDN\", e.target.value);\n              }}\n              label=\"Group Search Base DN\"\n              value={ADGroupSearchBaseDN}\n              placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchFilter\"\n              name=\"ad_groupSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchFilter\", e.target.value);\n              }}\n              label=\"Group Search Filter\"\n              value={ADGroupSearchFilter}\n              placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupNameAttribute\"\n              name=\"ad_groupNameAttribute\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupNameAttribute\", e.target.value);\n              }}\n              label=\"Group Name Attribute\"\n              value={ADGroupNameAttribute}\n              placeholder=\"cn\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindDN\"\n              name=\"ad_lookupBindDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindDN\", e.target.value);\n              }}\n              label=\"Lookup Bind DN\"\n              value={ADLookupBindDN}\n              placeholder=\"cn=admin,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindPassword\"\n              name=\"ad_lookupBindPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindPassword\", e.target.value);\n              }}\n              label=\"Lookup Bind Password\"\n              value={ADLookupBindPassword}\n              placeholder=\"admin\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchBaseDN\"\n              name=\"ad_userDNSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n              }}\n              label=\"User DN Search Base DN\"\n              value={ADUserDNSearchBaseDN}\n              placeholder=\"dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchFilter\"\n              name=\"ad_userDNSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchFilter\", e.target.value);\n              }}\n              label=\"User DN Search Filter\"\n              value={ADUserDNSearchFilter}\n              placeholder=\"(uid=%s)\"\n            />\n          </Grid>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              List of user DNs (Distinguished Names) to be Tenant Administrators\n            </legend>\n            <Grid item xs={12}>\n              {inputs}\n            </Grid>\n          </fieldset>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  idpSelection: state.tenants.createTenant.fields.identityProvider.idpSelection,\n  accessKeys: state.tenants.createTenant.fields.identityProvider.accessKeys,\n  secretKeys: state.tenants.createTenant.fields.identityProvider.secretKeys,\n  openIDConfigurationURL:\n    state.tenants.createTenant.fields.identityProvider.openIDConfigurationURL,\n  openIDClientID:\n    state.tenants.createTenant.fields.identityProvider.openIDClientID,\n  openIDSecretID:\n    state.tenants.createTenant.fields.identityProvider.openIDSecretID,\n  openIDCallbackURL:\n    state.tenants.createTenant.fields.identityProvider.openIDCallbackURL,\n  openIDClaimName:\n    state.tenants.createTenant.fields.identityProvider.openIDClaimName,\n  openIDScopes: state.tenants.createTenant.fields.identityProvider.openIDScopes,\n  ADURL: state.tenants.createTenant.fields.identityProvider.ADURL,\n  ADSkipTLS: state.tenants.createTenant.fields.identityProvider.ADSkipTLS,\n  ADServerInsecure:\n    state.tenants.createTenant.fields.identityProvider.ADServerInsecure,\n  ADUserNameSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameSearchFilter,\n  ADGroupSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchBaseDN,\n  ADGroupSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchFilter,\n  ADGroupNameAttribute:\n    state.tenants.createTenant.fields.identityProvider.ADGroupNameAttribute,\n  ADUserDNs: state.tenants.createTenant.fields.identityProvider.ADUserDNs,\n  ADUserNameFormat:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameFormat,\n  ADLookupBindDN:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindDN,\n  ADLookupBindPassword:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindPassword,\n  ADUserDNSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchFilter,\n  ADServerStartTLS:\n    state.tenants.createTenant.fields.identityProvider.ADServerStartTLS,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(IdentityProvider));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, Typography } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\n\ninterface ISecurityProps {\n  classes: any;\n  enableTLS: boolean;\n  enableAutoCert: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  caCertificates: KeyPair[];\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileToCaCertificates: typeof addFileToCaCertificates;\n  deleteCaCertificate: typeof deleteCaCertificate;\n  addCaCertificate: typeof addCaCertificate;\n  addKeyPair: typeof addKeyPair;\n  addFileToKeyPair: typeof addFileToKeyPair;\n  deleteKeyPair: typeof deleteKeyPair;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({\n  classes,\n  enableTLS,\n  enableAutoCert,\n  enableCustomCerts,\n  minioCertificates,\n  caCertificates,\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n}: ISecurityProps) => {\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"security\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableAutoCert) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableCustomCerts) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    isPageValid(\"security\", false);\n  }, [enableTLS, enableAutoCert, enableCustomCerts, isPageValid]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableTLS\"\n          id=\"enableTLS\"\n          name=\"enableTLS\"\n          checked={enableTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableTLS\", checked);\n          }}\n          label={\"Enable TLS\"}\n        />\n        Enable TLS for the tenant, this is required for Encryption Configuration\n        {enableTLS && (\n          <Fragment>\n            <br />\n            <br />\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              AutoCert: MinIO Operator will generate all TLS certificates\n              automatically\n            </Typography>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Custom certificates: Allow user to provide your own certificates\n            </Typography>\n            <br />\n          </Fragment>\n        )}\n      </Grid>\n      {enableTLS && (\n        <Fragment>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"enableAutoCert\"\n              id=\"enableAutoCert\"\n              name=\"enableAutoCert\"\n              checked={enableAutoCert}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableAutoCert\", checked);\n              }}\n              label={\"Enable AutoCert\"}\n            />\n            <FormSwitchWrapper\n              value=\"enableCustomCerts\"\n              id=\"enableCustomCerts\"\n              name=\"enableCustomCerts\"\n              checked={enableCustomCerts}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableCustomCerts\", checked);\n              }}\n              label={\"Custom Certificates\"}\n            />\n          </Grid>\n          {enableCustomCerts && (\n            <Fragment>\n              <Grid container>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      MinIO Certificates\n                    </legend>\n                    {minioCertificates.map((keyPair: KeyPair) => (\n                      <Grid\n                        item\n                        xs={12}\n                        key={keyPair.id}\n                        className={classes.minioCertificateRows}\n                      >\n                        <Grid item xs={10} className={classes.fileItem}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToKeyPair(\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToKeyPair(\n                                keyPair.id,\n                                \"key\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".key,.pem\"\n                            id=\"tlsKey\"\n                            name=\"tlsKey\"\n                            label=\"Key\"\n                            value={keyPair.key}\n                          />\n                        </Grid>\n\n                        <Grid item xs={2} className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton size={\"small\"} onClick={addKeyPair}>\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                deleteKeyPair(keyPair.id);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    ))}\n                  </fieldset>\n                </Grid>\n              </Grid>\n\n              <Grid container>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      MinIO CA Certificates\n                    </legend>\n\n                    {caCertificates.map((keyPair: KeyPair) => (\n                      <Grid\n                        item\n                        xs={12}\n                        key={keyPair.id}\n                        className={classes.minioCACertsRow}\n                      >\n                        <Grid item xs={6}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToCaCertificates(\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <div className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={addCaCertificate}\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => {\n                                  deleteCaCertificate(keyPair.id);\n                                }}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    ))}\n                  </fieldset>\n                </Grid>\n              </Grid>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  caCertificates: state.tenants.createTenant.certificates.caCertificates,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n});\n\nexport default withStyles(styles)(connector(Security));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  addFileClientCert,\n  addFileGemaltoCa,\n  addFileServerCert,\n  addFileVaultCa,\n  addFileVaultCert,\n  isPageValid,\n  updateAddField,\n} from \"../../actions\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IEncryptionProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileServerCert: typeof addFileServerCert;\n  addFileClientCert: typeof addFileClientCert;\n  addFileVaultCert: typeof addFileVaultCert;\n  addFileVaultCa: typeof addFileVaultCa;\n  addFileGemaltoCa: typeof addFileGemaltoCa;\n  enableEncryption: boolean;\n  encryptionType: string;\n  gemaltoEndpoint: string;\n  gemaltoToken: string;\n  gemaltoDomain: string;\n  gemaltoRetry: string;\n  awsEndpoint: string;\n  awsRegion: string;\n  awsKMSKey: string;\n  awsAccessKey: string;\n  awsSecretKey: string;\n  awsToken: string;\n  vaultEndpoint: string;\n  vaultEngine: string;\n  vaultNamespace: string;\n  vaultPrefix: string;\n  vaultAppRoleEngine: string;\n  vaultId: string;\n  vaultSecret: string;\n  vaultRetry: string;\n  vaultPing: string;\n  azureEndpoint: string;\n  azureTenantID: string;\n  azureClientID: string;\n  azureClientSecret: string;\n  gcpProjectID: string;\n  gcpEndpoint: string;\n  gcpClientEmail: string;\n  gcpClientID: string;\n  gcpPrivateKeyID: string;\n  gcpPrivateKey: string;\n  enableCustomCertsForKES: boolean;\n  enableAutoCert: boolean;\n  enableTLS: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  serverCertificate: KeyPair;\n  clientCertificate: KeyPair;\n  vaultCertificate: KeyPair;\n  vaultCA: KeyPair;\n  gemaltoCA: KeyPair;\n  kesSecurityContext: ISecurityContext;\n  replicas: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n  enableEncryption,\n  enableCustomCerts,\n  encryptionType,\n  gemaltoEndpoint,\n  gemaltoToken,\n  gemaltoDomain,\n  gemaltoRetry,\n  awsEndpoint,\n  awsRegion,\n  awsKMSKey,\n  awsAccessKey,\n  awsSecretKey,\n  awsToken,\n  vaultEndpoint,\n  vaultEngine,\n  vaultNamespace,\n  vaultPrefix,\n  vaultAppRoleEngine,\n  vaultId,\n  vaultSecret,\n  vaultRetry,\n  vaultPing,\n  azureEndpoint,\n  azureTenantID,\n  azureClientID,\n  azureClientSecret,\n  gcpProjectID,\n  gcpEndpoint,\n  gcpClientEmail,\n  gcpClientID,\n  gcpPrivateKeyID,\n  gcpPrivateKey,\n  enableCustomCertsForKES,\n  enableAutoCert,\n  enableTLS,\n  minioCertificates,\n  serverCertificate,\n  clientCertificate,\n  vaultCertificate,\n  vaultCA,\n  gemaltoCA,\n  kesSecurityContext,\n  replicas,\n}: IEncryptionProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioCertificates &&\n        minioCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"encryption\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n\n      if (encryptionType === \"vault\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"vault_endpoint\",\n            required: true,\n            value: vaultEndpoint,\n          },\n          {\n            fieldKey: \"vault_id\",\n            required: true,\n            value: vaultId,\n          },\n          {\n            fieldKey: \"vault_secret\",\n            required: true,\n            value: vaultSecret,\n          },\n          {\n            fieldKey: \"vault_ping\",\n            required: false,\n            value: vaultPing,\n            customValidation: parseInt(vaultPing) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n          {\n            fieldKey: \"vault_retry\",\n            required: false,\n            value: vaultRetry,\n            customValidation: parseInt(vaultRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"aws\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"aws_endpoint\",\n            required: true,\n            value: awsEndpoint,\n          },\n          {\n            fieldKey: \"aws_region\",\n            required: true,\n            value: awsRegion,\n          },\n          {\n            fieldKey: \"aws_accessKey\",\n            required: true,\n            value: awsAccessKey,\n          },\n          {\n            fieldKey: \"aws_secretKey\",\n            required: true,\n            value: awsSecretKey,\n          },\n        ];\n      }\n\n      if (encryptionType === \"gemalto\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"gemalto_endpoint\",\n            required: true,\n            value: gemaltoEndpoint,\n          },\n          {\n            fieldKey: \"gemalto_token\",\n            required: true,\n            value: gemaltoToken,\n          },\n          {\n            fieldKey: \"gemalto_domain\",\n            required: true,\n            value: gemaltoDomain,\n          },\n          {\n            fieldKey: \"gemalto_retry\",\n            required: false,\n            value: gemaltoRetry,\n            customValidation: parseInt(gemaltoRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"azure\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"azure_endpoint\",\n            required: true,\n            value: azureEndpoint,\n          },\n          {\n            fieldKey: \"azure_tenant_id\",\n            required: true,\n            value: azureTenantID,\n          },\n          {\n            fieldKey: \"azure_client_id\",\n            required: true,\n            value: azureClientID,\n          },\n          {\n            fieldKey: \"azure_client_secret\",\n            required: true,\n            value: azureClientSecret,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    isPageValid(\"encryption\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    enableEncryption,\n    encryptionType,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    isPageValid,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Encryption</h3>\n        <span className={classes.descriptionText}>\n          How would you like to encrypt the information at rest.\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableEncryption\"\n          id=\"enableEncryption\"\n          name=\"enableEncryption\"\n          checked={enableEncryption}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableEncryption\", checked);\n          }}\n          label={\"Enable Server Side Encryption\"}\n          disabled={!encryptionAvailable}\n        />\n      </Grid>\n      {enableEncryption && (\n        <Fragment>\n          <Grid item xs={12} className={classes.encryptionTypeOptions}>\n            <RadioGroupSelector\n              currentSelection={encryptionType}\n              id=\"encryptionType\"\n              name=\"encryptionType\"\n              label=\"Encryption Options\"\n              onChange={(e) => {\n                updateField(\"encryptionType\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"Vault\", value: \"vault\" },\n                { label: \"AWS\", value: \"aws\" },\n                { label: \"Gemalto\", value: \"gemalto\" },\n                { label: \"GCP\", value: \"gcp\" },\n                { label: \"Azure\", value: \"azure\" },\n              ]}\n            />\n          </Grid>\n          {encryptionType === \"vault\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <FormSwitchWrapper\n                  value=\"enableCustomCertsForKES\"\n                  id=\"enableCustomCertsForKES\"\n                  name=\"enableCustomCertsForKES\"\n                  checked={enableCustomCertsForKES || !enableAutoCert}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n\n                    updateField(\"enableCustomCertsForKES\", checked);\n                  }}\n                  label={\"Custom Certificates\"}\n                  disabled={!enableAutoCert}\n                />\n              </Grid>\n              {(enableCustomCertsForKES || !enableAutoCert) && (\n                <Fragment>\n                  <Grid container>\n                    <Grid item xs={12} style={{ marginBottom: 15 }}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Encryption Service Certificates\n                        </legend>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileServerCert(\"key\", fileName, encodedValue);\n                            cleanValidation(\"serverKey\");\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"serverKey\"\n                          name=\"serverKey\"\n                          label=\"Key\"\n                          error={validationErrors[\"serverKey\"] || \"\"}\n                          value={serverCertificate.key}\n                          required={!enableAutoCert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileServerCert(\"cert\", fileName, encodedValue);\n                            cleanValidation(\"serverCert\");\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"serverCert\"\n                          name=\"serverCert\"\n                          label=\"Cert\"\n                          error={validationErrors[\"serverCert\"] || \"\"}\n                          value={serverCertificate.cert}\n                          required={!enableAutoCert}\n                        />\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container style={{ marginBottom: 15 }}>\n                    <Grid item xs={12}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Mutual TLS authentication\n                        </legend>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileClientCert(\"key\", fileName, encodedValue);\n                            cleanValidation(\"clientKey\");\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"clientKey\"\n                          name=\"clientKey\"\n                          label=\"Key\"\n                          error={validationErrors[\"clientKey\"] || \"\"}\n                          value={clientCertificate.key}\n                          required={!enableAutoCert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileClientCert(\"cert\", fileName, encodedValue);\n                            cleanValidation(\"clientCert\");\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"clientCert\"\n                          name=\"clientCert\"\n                          label=\"Cert\"\n                          error={validationErrors[\"clientCert\"] || \"\"}\n                          value={clientCertificate.cert}\n                          required={!enableAutoCert}\n                        />\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              )}\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_endpoint\"\n                  name=\"vault_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEndpoint\", e.target.value);\n                    cleanValidation(\"vault_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={vaultEndpoint}\n                  error={validationErrors[\"vault_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_engine\"\n                  name=\"vault_engine\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEngine\", e.target.value);\n                    cleanValidation(\"vault_engine\");\n                  }}\n                  label=\"Engine\"\n                  value={vaultEngine}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_namespace\"\n                  name=\"vault_namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultNamespace\", e.target.value);\n                  }}\n                  label=\"Namespace\"\n                  value={vaultNamespace}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_prefix\"\n                  name=\"vault_prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultPrefix\", e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={vaultPrefix}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>App Role</legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_approle_engine\"\n                      name=\"vault_approle_engine\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultAppRoleEngine\", e.target.value);\n                      }}\n                      label=\"Engine\"\n                      value={vaultAppRoleEngine}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_id\"\n                      name=\"vault_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultId\", e.target.value);\n                        cleanValidation(\"vault_id\");\n                      }}\n                      label=\"AppRole ID\"\n                      value={vaultId}\n                      error={validationErrors[\"vault_id\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_secret\"\n                      name=\"vault_secret\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultSecret\", e.target.value);\n                        cleanValidation(\"vault_secret\");\n                      }}\n                      label=\"AppRole Secret\"\n                      value={vaultSecret}\n                      error={validationErrors[\"vault_secret\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      min=\"0\"\n                      id=\"vault_retry\"\n                      name=\"vault_retry\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultRetry\", e.target.value);\n                        cleanValidation(\"vault_retry\");\n                      }}\n                      label=\"Retry (Seconds)\"\n                      value={vaultRetry}\n                      error={validationErrors[\"vault_retry\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n\n              <Grid container className={classes.mutualTlsConfig}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Mutual TLS authentication (optional)\n                  </legend>\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"key\", fileName, encodedValue);\n                      cleanValidation(\"vault_key\");\n                    }}\n                    accept=\".key,.pem\"\n                    id=\"vault_key\"\n                    name=\"vault_key\"\n                    label=\"Key\"\n                    value={vaultCertificate.key}\n                  />\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"cert\", fileName, encodedValue);\n                      cleanValidation(\"vault_cert\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"vault_cert\"\n                    name=\"vault_cert\"\n                    label=\"Cert\"\n                    value={vaultCertificate.cert}\n                  />\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCa(fileName, encodedValue);\n                      cleanValidation(\"vault_ca\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"vault_ca\"\n                    name=\"vault_ca\"\n                    label=\"CA\"\n                    value={vaultCA.cert}\n                  />\n                </fieldset>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={classes.formFieldRow}\n                style={{ marginTop: 15 }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>Status</legend>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    min=\"0\"\n                    id=\"vault_ping\"\n                    name=\"vault_ping\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"vaultPing\", e.target.value);\n                      cleanValidation(\"vault_ping\");\n                    }}\n                    label=\"Ping (Seconds)\"\n                    value={vaultPing}\n                    error={validationErrors[\"vault_ping\"] || \"\"}\n                  />\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"azure\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"azure_endpoint\"\n                  name=\"azure_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureEndpoint\", e.target.value);\n                    cleanValidation(\"azure_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={azureEndpoint}\n                  error={validationErrors[\"azure_endpoint\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_tenant_id\"\n                      name=\"azure_tenant_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureTenantID\", e.target.value);\n                        cleanValidation(\"azure_tenant_id\");\n                      }}\n                      label=\"Tenant ID\"\n                      value={azureTenantID}\n                      error={validationErrors[\"azure_tenant_id\"] || \"\"}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_client_id\"\n                      name=\"azure_client_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureClientID\", e.target.value);\n                        cleanValidation(\"azure_client_id\");\n                      }}\n                      label=\"Client ID\"\n                      value={azureClientID}\n                      error={validationErrors[\"azure_client_id\"] || \"\"}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_client_secret\"\n                      name=\"azure_client_secret\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureClientSecret\", e.target.value);\n                        cleanValidation(\"azure_client_secret\");\n                      }}\n                      label=\"Client Secret\"\n                      value={azureClientSecret}\n                      error={validationErrors[\"azure_client_secret\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gcp\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gcp_project_id\"\n                  name=\"gcp_project_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpProjectID\", e.target.value);\n                  }}\n                  label=\"Project ID\"\n                  value={gcpProjectID}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gcp_endpoint\"\n                  name=\"gcp_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpEndpoint\", e.target.value);\n                  }}\n                  label=\"Endpoint\"\n                  value={gcpEndpoint}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_client_email\"\n                      name=\"gcp_client_email\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpClientEmail\", e.target.value);\n                      }}\n                      label=\"Client Email\"\n                      value={gcpClientEmail}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_client_id\"\n                      name=\"gcp_client_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpClientID\", e.target.value);\n                      }}\n                      label=\"Client ID\"\n                      value={gcpClientID}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_private_key_id\"\n                      name=\"gcp_private_key_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpPrivateKeyID\", e.target.value);\n                      }}\n                      label=\"Private Key ID\"\n                      value={gcpPrivateKeyID}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_private_key\"\n                      name=\"gcp_private_key\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpPrivateKey\", e.target.value);\n                      }}\n                      label=\"Private Key\"\n                      value={gcpPrivateKey}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"aws\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_endpoint\"\n                  name=\"aws_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsEndpoint\", e.target.value);\n                    cleanValidation(\"aws_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={awsEndpoint}\n                  error={validationErrors[\"aws_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_region\"\n                  name=\"aws_region\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsRegion\", e.target.value);\n                    cleanValidation(\"aws_region\");\n                  }}\n                  label=\"Region\"\n                  value={awsRegion}\n                  error={validationErrors[\"aws_region\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_kmsKey\"\n                  name=\"aws_kmsKey\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsKMSKey\", e.target.value);\n                  }}\n                  label=\"KMS Key\"\n                  value={awsKMSKey}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_accessKey\"\n                      name=\"aws_accessKey\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsAccessKey\", e.target.value);\n                        cleanValidation(\"aws_accessKey\");\n                      }}\n                      label=\"Access Key\"\n                      value={awsAccessKey}\n                      error={validationErrors[\"aws_accessKey\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_secretKey\"\n                      name=\"aws_secretKey\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsSecretKey\", e.target.value);\n                        cleanValidation(\"aws_secretKey\");\n                      }}\n                      label=\"Secret Key\"\n                      value={awsSecretKey}\n                      error={validationErrors[\"aws_secretKey\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_token\"\n                      name=\"aws_token\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsToken\", e.target.value);\n                      }}\n                      label=\"Token\"\n                      value={awsToken}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gemalto\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gemalto_endpoint\"\n                  name=\"gemalto_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoEndpoint\", e.target.value);\n                    cleanValidation(\"gemalto_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={gemaltoEndpoint}\n                  error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  marginBottom: 15,\n                }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gemalto_token\"\n                      name=\"gemalto_token\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoToken\", e.target.value);\n                        cleanValidation(\"gemalto_token\");\n                      }}\n                      label=\"Token\"\n                      value={gemaltoToken}\n                      error={validationErrors[\"gemalto_token\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gemalto_domain\"\n                      name=\"gemalto_domain\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoDomain\", e.target.value);\n                        cleanValidation(\"gemalto_domain\");\n                      }}\n                      label=\"Domain\"\n                      value={gemaltoDomain}\n                      error={validationErrors[\"gemalto_domain\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      min=\"0\"\n                      id=\"gemalto_retry\"\n                      name=\"gemalto_retry\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoRetry\", e.target.value);\n                        cleanValidation(\"gemalto_retry\");\n                      }}\n                      label=\"Retry (seconds)\"\n                      value={gemaltoRetry}\n                      error={validationErrors[\"gemalto_retry\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  marginBottom: 15,\n                }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Custom CA Root certificate verification\n                  </legend>\n\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileGemaltoCa(fileName, encodedValue);\n                      cleanValidation(\"gemalto_ca\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"gemalto_ca\"\n                    name=\"gemalto_ca\"\n                    label=\"CA\"\n                    value={gemaltoCA.cert}\n                  />\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          <div className={classes.headerElement}>\n            <h4 className={classes.h3Section}>Additional Configurations</h4>\n          </div>\n          <Grid item xs={12}>\n            <Grid item xs={12} classes={classes.formFieldRow}>\n              <InputBoxWrapper\n                type=\"number\"\n                min=\"1\"\n                id=\"replicas\"\n                name=\"replicas\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"replicas\", e.target.value);\n                  cleanValidation(\"replicas\");\n                }}\n                label=\"Replicas\"\n                value={replicas}\n                required\n                error={validationErrors[\"replicas\"] || \"\"}\n              />\n            </Grid>\n\n            <fieldset className={classes.fieldGroup} style={{ marginTop: 15 }}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for KES pods\n              </legend>\n              <Grid item xs={12} className={classes.kesSecurityContext}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                >\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsUser\"\n                      name=\"kes_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={kesSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsUser\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsGroup\"\n                      name=\"kes_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={kesSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_fsGroup\"\n                      name=\"kes_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={kesSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"kesSecurityContextRunAsNonRoot\"\n                    id=\"kes_securityContext_runAsNonRoot\"\n                    name=\"kes_securityContext_runAsNonRoot\"\n                    checked={kesSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"kesSecurityContext\", {\n                        ...kesSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  replicas: state.tenants.createTenant.fields.encryption.replicas,\n  enableEncryption:\n    state.tenants.createTenant.fields.encryption.enableEncryption,\n  encryptionType: state.tenants.createTenant.fields.encryption.encryptionType,\n  gemaltoEndpoint: state.tenants.createTenant.fields.encryption.gemaltoEndpoint,\n  gemaltoToken: state.tenants.createTenant.fields.encryption.gemaltoToken,\n  gemaltoDomain: state.tenants.createTenant.fields.encryption.gemaltoDomain,\n  gemaltoRetry: state.tenants.createTenant.fields.encryption.gemaltoRetry,\n  awsEndpoint: state.tenants.createTenant.fields.encryption.awsEndpoint,\n  awsRegion: state.tenants.createTenant.fields.encryption.awsRegion,\n  awsKMSKey: state.tenants.createTenant.fields.encryption.awsKMSKey,\n  awsAccessKey: state.tenants.createTenant.fields.encryption.awsAccessKey,\n  awsSecretKey: state.tenants.createTenant.fields.encryption.awsSecretKey,\n  awsToken: state.tenants.createTenant.fields.encryption.awsToken,\n  vaultEndpoint: state.tenants.createTenant.fields.encryption.vaultEndpoint,\n  vaultEngine: state.tenants.createTenant.fields.encryption.vaultEngine,\n  vaultNamespace: state.tenants.createTenant.fields.encryption.vaultNamespace,\n  vaultPrefix: state.tenants.createTenant.fields.encryption.vaultPrefix,\n  vaultAppRoleEngine:\n    state.tenants.createTenant.fields.encryption.vaultAppRoleEngine,\n  vaultId: state.tenants.createTenant.fields.encryption.vaultId,\n  vaultSecret: state.tenants.createTenant.fields.encryption.vaultSecret,\n  vaultRetry: state.tenants.createTenant.fields.encryption.vaultRetry,\n  vaultPing: state.tenants.createTenant.fields.encryption.vaultPing,\n  azureEndpoint: state.tenants.createTenant.fields.encryption.azureEndpoint,\n  azureTenantID: state.tenants.createTenant.fields.encryption.azureTenantID,\n  azureClientID: state.tenants.createTenant.fields.encryption.azureClientID,\n  azureClientSecret:\n    state.tenants.createTenant.fields.encryption.azureClientSecret,\n  gcpProjectID: state.tenants.createTenant.fields.encryption.gcpProjectID,\n  gcpEndpoint: state.tenants.createTenant.fields.encryption.gcpEndpoint,\n  gcpClientEmail: state.tenants.createTenant.fields.encryption.gcpClientEmail,\n  gcpClientID: state.tenants.createTenant.fields.encryption.gcpClientID,\n  gcpPrivateKeyID: state.tenants.createTenant.fields.encryption.gcpPrivateKeyID,\n  gcpPrivateKey: state.tenants.createTenant.fields.encryption.gcpPrivateKey,\n  enableCustomCertsForKES:\n    state.tenants.createTenant.fields.encryption.enableCustomCertsForKES,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  serverCertificate: state.tenants.createTenant.certificates.serverCertificate,\n  clientCertificate: state.tenants.createTenant.certificates.clientCertificate,\n  vaultCertificate: state.tenants.createTenant.certificates.vaultCertificate,\n  vaultCA: state.tenants.createTenant.certificates.vaultCA,\n  gemaltoCA: state.tenants.createTenant.certificates.gemaltoCA,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  kesSecurityContext:\n    state.tenants.createTenant.fields.encryption.kesSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n});\n\nexport default withStyles(styles)(connector(Encryption));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IAffinityProps {\n  classes: any;\n  podAffinity: string;\n  nodeSelectorLabels: string;\n  withPodAntiAffinity: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    fieldContainer: {\n      marginBottom: 0,\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface LabelKeyPair {\n  key: string;\n  value: string;\n}\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({\n  classes,\n  podAffinity,\n  nodeSelectorLabels,\n  withPodAntiAffinity,\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n}: IAffinityProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyValuePairs, setKeyValuePairs] = useState<LabelKeyPair[]>([\n    { key: \"\", value: \"\" },\n  ]);\n\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"affinity\", field, value);\n    },\n    [updateAddField]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n          setKeyValuePairs([{ key: keys[0].value, value: keys[0].value }]);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n          setKeyValueMap({});\n        });\n    }\n  }, [setModalErrorSnackMessage, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"affinity\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [isPageValid, podAffinity, nodeSelectorLabels]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinnity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid item xs={12} className={classes.affinityRow}>\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n\n                              arrCp[i].key = e.target.value as string;\n                              arrCp[i].value = keyValueMap[newKey][0];\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].key = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value as string;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = Object.assign([], keyValuePairs);\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              setKeyValuePairs(arrCp);\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                setKeyValuePairs(arrCp);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  podAffinity: state.tenants.createTenant.fields.affinity.podAffinity,\n  nodeSelectorLabels:\n    state.tenants.createTenant.fields.affinity.nodeSelectorLabels,\n  withPodAntiAffinity:\n    state.tenants.createTenant.fields.affinity.withPodAntiAffinity,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Affinity));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\ninterface IImagesProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n}: IImagesProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  useEffect(() => {\n    // New default values is current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", selectedStorageClass);\n      }\n\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", selectedStorageClass);\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Images used by the Tenant Deployment\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO's Image\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"E.g. minio/minio:RELEASE.2021-08-20T18-32-01Z\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"Log Search API's Image\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"E.g. minio/logsearchapi:v4.1.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES Image\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"E.g. minio/kes:v0.14.0\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"Log Search Postgres's Image\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"E.g. library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"Log Search Postgres's Init Image\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"E.g. library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus Image\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar Image\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init Image\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Set/Update Image Registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"E.g. https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Images));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../../common/api\";\nimport { generatePoolName } from \"../../../../common/utils\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../Common/GenericWizard/types\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport { ErrorResponseHandler, ITenantCreator } from \"../../../../common/types\";\nimport { KeyPair } from \"../ListTenants/utils\";\n\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { getDefaultAffinity, getNodeSelector } from \"../TenantDetails/utils\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport NameTenant from \"./Steps/NameTenant\";\nimport { AppState } from \"../../../../store\";\nimport { ICertificatesItems, IFieldStore } from \"../types\";\nimport { resetAddTenantForm, updateAddField } from \"../actions\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport history from \"../../../../history\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\n\ninterface IAddTenantProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  resetAddTenantForm: typeof resetAddTenantForm;\n  updateAddField: typeof updateAddField;\n  fields: IFieldStore;\n  certificates: ICertificatesItems;\n  selectedStorageClass: string;\n  namespace: string;\n  validPages: string[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  });\n\nconst AddTenant = ({\n  classes,\n  fields,\n  certificates,\n  selectedStorageClass,\n  namespace,\n  validPages,\n  setErrorSnackMessage,\n  resetAddTenantForm,\n}: IAddTenantProps) => {\n  // Modals\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n\n  // Fields\n  const [addSending, setAddSending] = useState<boolean>(false);\n\n  /* Send Information to backend */\n  useEffect(() => {\n    const tenantName = fields.nameTenant.tenantName;\n    const selectedStorageClass = fields.nameTenant.selectedStorageClass;\n    const imageName = fields.configure.imageName;\n    const customDockerhub = fields.configure.customDockerhub;\n    const imageRegistry = fields.configure.imageRegistry;\n    const imageRegistryUsername = fields.configure.imageRegistryUsername;\n    const imageRegistryPassword = fields.configure.imageRegistryPassword;\n    const exposeMinIO = fields.configure.exposeMinIO;\n    const exposeConsole = fields.configure.exposeConsole;\n    const idpSelection = fields.identityProvider.idpSelection;\n    const openIDConfigurationURL =\n      fields.identityProvider.openIDConfigurationURL;\n    const openIDClientID = fields.identityProvider.openIDClientID;\n    const openIDClaimName = fields.identityProvider.openIDClaimName;\n    const openIDCallbackURL = fields.identityProvider.openIDCallbackURL;\n    const openIDScopes = fields.identityProvider.openIDScopes;\n    const openIDSecretID = fields.identityProvider.openIDSecretID;\n    const ADURL = fields.identityProvider.ADURL;\n    const ADSkipTLS = fields.identityProvider.ADSkipTLS;\n    const ADServerInsecure = fields.identityProvider.ADServerInsecure;\n    const ADUserNameSearchFilter =\n      fields.identityProvider.ADUserNameSearchFilter;\n    const ADGroupSearchBaseDN = fields.identityProvider.ADGroupSearchBaseDN;\n    const ADGroupSearchFilter = fields.identityProvider.ADGroupSearchFilter;\n    const ADGroupNameAttribute = fields.identityProvider.ADGroupNameAttribute;\n    const ADUserDNs = fields.identityProvider.ADUserDNs;\n    const ADUserNameFormat = fields.identityProvider.ADUserNameFormat;\n    const ADLookupBindDN = fields.identityProvider.ADLookupBindDN;\n    const ADLookupBindPassword = fields.identityProvider.ADLookupBindPassword;\n    const ADUserDNSearchBaseDN = fields.identityProvider.ADUserDNSearchBaseDN;\n    const ADUserDNSearchFilter = fields.identityProvider.ADUserDNSearchFilter;\n    const ADServerStartTLS = fields.identityProvider.ADServerStartTLS;\n    const accessKeys = fields.identityProvider.accessKeys;\n    const secretKeys = fields.identityProvider.secretKeys;\n    const minioCertificates = certificates.minioCertificates;\n    const caCertificates = certificates.caCertificates;\n    const consoleCaCertificates = certificates.consoleCaCertificates;\n    const consoleCertificate = certificates.consoleCertificate;\n    const serverCertificate = certificates.serverCertificate;\n    const clientCertificate = certificates.clientCertificate;\n    const vaultCertificate = certificates.vaultCertificate;\n    const vaultCA = certificates.vaultCA;\n    const gemaltoCA = certificates.gemaltoCA;\n    const enableEncryption = fields.encryption.enableEncryption;\n    const encryptionType = fields.encryption.encryptionType;\n    const gemaltoEndpoint = fields.encryption.gemaltoEndpoint;\n    const gemaltoToken = fields.encryption.gemaltoToken;\n    const gemaltoDomain = fields.encryption.gemaltoDomain;\n    const gemaltoRetry = fields.encryption.gemaltoRetry;\n    const awsEndpoint = fields.encryption.awsEndpoint;\n    const awsRegion = fields.encryption.awsRegion;\n    const awsKMSKey = fields.encryption.awsKMSKey;\n    const awsAccessKey = fields.encryption.awsAccessKey;\n    const awsSecretKey = fields.encryption.awsSecretKey;\n    const awsToken = fields.encryption.awsToken;\n    const vaultEndpoint = fields.encryption.vaultEndpoint;\n    const vaultEngine = fields.encryption.vaultEngine;\n    const vaultNamespace = fields.encryption.vaultNamespace;\n    const vaultPrefix = fields.encryption.vaultPrefix;\n    const vaultAppRoleEngine = fields.encryption.vaultAppRoleEngine;\n    const vaultId = fields.encryption.vaultId;\n    const vaultSecret = fields.encryption.vaultSecret;\n    const vaultRetry = fields.encryption.vaultRetry;\n    const vaultPing = fields.encryption.vaultPing;\n    const azureEndpoint = fields.encryption.azureEndpoint;\n    const azureTenantID = fields.encryption.azureTenantID;\n    const azureClientID = fields.encryption.azureClientID;\n    const azureClientSecret = fields.encryption.azureClientSecret;\n    const gcpProjectID = fields.encryption.gcpProjectID;\n    const gcpEndpoint = fields.encryption.gcpEndpoint;\n    const gcpClientEmail = fields.encryption.gcpClientEmail;\n    const gcpClientID = fields.encryption.gcpClientID;\n    const gcpPrivateKeyID = fields.encryption.gcpPrivateKeyID;\n    const gcpPrivateKey = fields.encryption.gcpPrivateKey;\n    const enableAutoCert = fields.security.enableAutoCert;\n    const enableTLS = fields.security.enableTLS;\n    const ecParity = fields.tenantSize.ecParity;\n    const distribution = fields.tenantSize.distribution;\n    const memorySize = fields.tenantSize.memorySize;\n    const tenantCustom = fields.configure.tenantCustom;\n    const logSearchCustom = fields.configure.logSearchCustom;\n    const prometheusCustom = fields.configure.prometheusCustom;\n    const logSearchVolumeSize = fields.configure.logSearchVolumeSize;\n    const logSearchSelectedStorageClass =\n      fields.configure.logSearchSelectedStorageClass;\n    const logSearchImage = fields.configure.logSearchImage;\n    const kesImage = fields.configure.kesImage;\n    const logSearchPostgresImage = fields.configure.logSearchPostgresImage;\n    const logSearchPostgresInitImage =\n      fields.configure.logSearchPostgresInitImage;\n    const prometheusImage = fields.configure.prometheusImage;\n    const prometheusSidecarImage = fields.configure.prometheusSidecarImage;\n    const prometheusInitImage = fields.configure.prometheusInitImage;\n    const prometheusSelectedStorageClass =\n      fields.configure.prometheusSelectedStorageClass;\n    const prometheusVolumeSize = fields.configure.prometheusVolumeSize;\n    const affinityType = fields.affinity.podAffinity;\n    const nodeSelectorLabels = fields.affinity.nodeSelectorLabels;\n    const withPodAntiAffinity = fields.affinity.withPodAntiAffinity;\n\n    const tenantSecurityContext = fields.configure.tenantSecurityContext;\n    const logSearchSecurityContext = fields.configure.logSearchSecurityContext;\n    const logSearchPostgresSecurityContext =\n      fields.configure.logSearchPostgresSecurityContext;\n    const prometheusSecurityContext =\n      fields.configure.prometheusSecurityContext;\n    const kesSecurityContext = fields.encryption.kesSecurityContext;\n    const kesReplicas = fields.encryption.replicas;\n\n    if (addSending) {\n      const poolName = generatePoolName([]);\n\n      let affinityObject = {};\n\n      switch (affinityType) {\n        case \"default\":\n          affinityObject = {\n            affinity: getDefaultAffinity(tenantName, poolName),\n          };\n          break;\n        case \"nodeSelector\":\n          affinityObject = {\n            affinity: getNodeSelector(\n              nodeSelectorLabels,\n              withPodAntiAffinity,\n              tenantName,\n              poolName\n            ),\n          };\n          break;\n      }\n\n      const erasureCode = ecParity.split(\":\")[1];\n\n      let dataSend: ITenantCreator = {\n        name: tenantName,\n        namespace: namespace,\n        access_key: \"\",\n        secret_key: \"\",\n        access_keys: [],\n        secret_keys: [],\n        enable_tls: enableTLS && enableAutoCert,\n        enable_console: true,\n        enable_prometheus: true,\n        service_name: \"\",\n        image: imageName,\n        expose_minio: exposeMinIO,\n        expose_console: exposeConsole,\n        pools: [\n          {\n            name: poolName,\n            servers: distribution.nodes,\n            volumes_per_server: distribution.disks,\n            volume_configuration: {\n              size: distribution.pvSize,\n              storage_class_name: selectedStorageClass,\n            },\n            resources: {\n              requests: {\n                memory: memorySize.request,\n              },\n              limits: {\n                memory: memorySize.limit,\n              },\n            },\n            securityContext: tenantCustom ? tenantSecurityContext : null,\n            ...affinityObject,\n          },\n        ],\n        erasureCodingParity: parseInt(erasureCode, 10),\n      };\n\n      if (customDockerhub) {\n        dataSend = {\n          ...dataSend,\n          image_registry: {\n            registry: imageRegistry,\n            username: imageRegistryUsername,\n            password: imageRegistryPassword,\n          },\n        };\n      }\n\n      if (logSearchCustom) {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            storageClass: logSearchSelectedStorageClass,\n            storageSize: parseInt(logSearchVolumeSize),\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n            securityContext: logSearchSecurityContext,\n            postgres_securityContext: logSearchPostgresSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n          },\n        };\n      }\n\n      if (prometheusCustom) {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            storageClass: prometheusSelectedStorageClass,\n            storageSize: parseInt(prometheusVolumeSize),\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n            securityContext: prometheusSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n          },\n        };\n      }\n\n      let tenantCerts: any = null;\n      let consoleCerts: any = null;\n      let caCerts: any = null;\n      let consoleCaCerts: any = null;\n\n      if (caCertificates.length > 0) {\n        caCerts = {\n          ca_certificates: caCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (consoleCaCertificates.length > 0) {\n        consoleCaCerts = {\n          console_ca_certificates: consoleCaCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (enableTLS && minioCertificates.length > 0) {\n        tenantCerts = {\n          minio: minioCertificates\n            .map((keyPair: KeyPair) => ({\n              crt: keyPair.encoded_cert,\n              key: keyPair.encoded_key,\n            }))\n            .filter((keyPair) => keyPair.crt && keyPair.key),\n        };\n      }\n\n      if (\n        enableTLS &&\n        consoleCertificate.encoded_cert !== \"\" &&\n        consoleCertificate.encoded_key !== \"\"\n      ) {\n        consoleCerts = {\n          console: {\n            crt: consoleCertificate.encoded_cert,\n            key: consoleCertificate.encoded_key,\n          },\n        };\n      }\n\n      if (tenantCerts || consoleCerts || caCerts || consoleCaCerts) {\n        dataSend = {\n          ...dataSend,\n          tls: {\n            ...tenantCerts,\n            ...consoleCerts,\n            ...caCerts,\n            ...consoleCaCerts,\n          },\n        };\n      }\n\n      if (enableEncryption) {\n        let insertEncrypt = {};\n\n        switch (encryptionType) {\n          case \"gemalto\":\n            let gemaltoCAIntroduce = {};\n\n            if (gemaltoCA.encoded_cert !== \"\") {\n              gemaltoCAIntroduce = {\n                ca: gemaltoCA.encoded_cert,\n              };\n            }\n            insertEncrypt = {\n              gemalto: {\n                keysecure: {\n                  endpoint: gemaltoEndpoint,\n                  credentials: {\n                    token: gemaltoToken,\n                    domain: gemaltoDomain,\n                    retry: parseInt(gemaltoRetry),\n                  },\n                  tls: {\n                    ...gemaltoCAIntroduce,\n                  },\n                },\n              },\n            };\n            break;\n          case \"aws\":\n            insertEncrypt = {\n              aws: {\n                secretsmanager: {\n                  endpoint: awsEndpoint,\n                  region: awsRegion,\n                  kmskey: awsKMSKey,\n                  credentials: {\n                    accesskey: awsAccessKey,\n                    secretkey: awsSecretKey,\n                    token: awsToken,\n                  },\n                },\n              },\n            };\n            break;\n          case \"azure\":\n            insertEncrypt = {\n              azure: {\n                keyvault: {\n                  endpoint: azureEndpoint,\n                  credentials: {\n                    tenant_id: azureTenantID,\n                    client_id: azureClientID,\n                    client_secret: azureClientSecret,\n                  },\n                },\n              },\n            };\n            break;\n          case \"gcp\":\n            insertEncrypt = {\n              gcp: {\n                secretmanager: {\n                  project_id: gcpProjectID,\n                  endpoint: gcpEndpoint,\n                  credentials: {\n                    client_email: gcpClientEmail,\n                    client_id: gcpClientID,\n                    private_key_id: gcpPrivateKeyID,\n                    private_key: gcpPrivateKey,\n                  },\n                },\n              },\n            };\n            break;\n          case \"vault\":\n            let vaultKeyPair = null;\n            let vaultCAInsert = null;\n            if (\n              vaultCertificate.encoded_key !== \"\" &&\n              vaultCertificate.encoded_cert !== \"\"\n            ) {\n              vaultKeyPair = {\n                key: vaultCertificate.encoded_key,\n                crt: vaultCertificate.encoded_cert,\n              };\n            }\n            if (vaultCA.encoded_cert !== \"\") {\n              vaultCAInsert = {\n                ca: vaultCA.encoded_cert,\n              };\n            }\n            let vaultTLS = null;\n            if (vaultKeyPair || vaultCA) {\n              vaultTLS = {\n                tls: {\n                  ...vaultKeyPair,\n                  ...vaultCAInsert,\n                },\n              };\n            }\n            insertEncrypt = {\n              vault: {\n                endpoint: vaultEndpoint,\n                engine: vaultEngine,\n                namespace: vaultNamespace,\n                prefix: vaultPrefix,\n                approle: {\n                  engine: vaultAppRoleEngine,\n                  id: vaultId,\n                  secret: vaultSecret,\n                  retry: parseInt(vaultRetry),\n                },\n                ...vaultTLS,\n                status: {\n                  ping: parseInt(vaultPing),\n                },\n              },\n            };\n            break;\n        }\n\n        let encryptionServerKeyPair: any = {};\n        let encryptionClientKeyPair: any = {};\n\n        if (\n          clientCertificate.encoded_key !== \"\" &&\n          clientCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionClientKeyPair = {\n            client: {\n              key: clientCertificate.encoded_key,\n              crt: clientCertificate.encoded_cert,\n            },\n          };\n        }\n\n        if (\n          serverCertificate.encoded_key !== \"\" &&\n          serverCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionServerKeyPair = {\n            server: {\n              key: serverCertificate.encoded_key,\n              crt: serverCertificate.encoded_cert,\n            },\n          };\n        }\n\n        dataSend = {\n          ...dataSend,\n          encryption: {\n            replicas: kesReplicas,\n            securityContext: kesSecurityContext,\n            image: kesImage,\n            ...encryptionClientKeyPair,\n            ...encryptionServerKeyPair,\n            ...insertEncrypt,\n          },\n        };\n      }\n\n      let dataIDP: any = {};\n      switch (idpSelection) {\n        case \"Built-in\":\n          let keyarray = [];\n          for (let i = 0; i < accessKeys.length; i++) {\n            keyarray.push({\n              access_key: accessKeys[i],\n              secret_key: secretKeys[i],\n            });\n          }\n          dataIDP = {\n            keys: keyarray,\n          };\n          break;\n        case \"OpenID\":\n          dataIDP = {\n            oidc: {\n              configuration_url: openIDConfigurationURL,\n              client_id: openIDClientID,\n              secret_id: openIDSecretID,\n              claim_name: openIDClaimName,\n              callback_url: openIDCallbackURL,\n              scopes: openIDScopes,\n            },\n          };\n          break;\n        case \"AD\":\n          dataIDP = {\n            active_directory: {\n              url: ADURL,\n              skip_tls_verification: ADSkipTLS,\n              server_insecure: ADServerInsecure,\n              username_format: ADUserNameFormat,\n              username_search_filter: ADUserNameSearchFilter,\n              group_search_base_dn: ADGroupSearchBaseDN,\n              group_search_filter: ADGroupSearchFilter,\n              group_name_attribute: ADGroupNameAttribute,\n              user_dns: ADUserDNs,\n              lookup_bind_dn: ADLookupBindDN,\n              lookup_bind_password: ADLookupBindPassword,\n              user_dn_search_base_dn: ADUserDNSearchBaseDN,\n              user_dn_search_filter: ADUserDNSearchFilter,\n              server_start_tls: ADServerStartTLS,\n            },\n          };\n          break;\n      }\n\n      dataSend = {\n        ...dataSend,\n        idp: { ...dataIDP },\n      };\n      api\n        .invoke(\"POST\", `/api/v1/tenants`, dataSend)\n        .then((res) => {\n          const consoleSAList = get(res, \"console\", []);\n\n          let newSrvAcc: NewServiceAccount = {\n            idp: get(res, \"externalIDP\", false),\n            console: [],\n          };\n\n          if (consoleSAList) {\n            if (Array.isArray(consoleSAList)) {\n              const consoleItem = consoleSAList.map((consoleKey) => {\n                return {\n                  accessKey: consoleKey.access_key,\n                  secretKey: consoleKey.secret_key,\n                };\n              });\n\n              newSrvAcc.console = consoleItem;\n            } else {\n              newSrvAcc = {\n                console: {\n                  accessKey: res.console.access_key,\n                  secretKey: res.console.secret_key,\n                },\n              };\n            }\n          }\n          setAddSending(false);\n          setShowNewCredentials(true);\n          setCreatedAccount(newSrvAcc);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          setErrorSnackMessage(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addSending]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      history.push(\"/tenants\");\n    },\n  };\n  const requiredPages = [\n    \"nameTenant\",\n    \"tenantSize\",\n    \"configure\",\n    \"affinity\",\n    \"identityProvider\",\n    \"security\",\n    \"encryption\",\n  ];\n  const createButton = {\n    label: \"Create\",\n    type: \"submit\",\n    enabled:\n      !addSending &&\n      selectedStorageClass !== \"\" &&\n      requiredPages.every((v) => validPages.includes(v)),\n    action: () => {\n      setAddSending(true);\n    },\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <NameTenant />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  const closeCredentialsModal = () => {\n    resetAddTenantForm();\n    history.push(\"/tenants\");\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeader label={\"Create New Tenant\"} />\n      <BackLink to={\"/tenants\"} label={\"Return to Tenant List\"} />\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  validPages: state.tenants.createTenant.validPages,\n  fields: state.tenants.createTenant.fields,\n  certificates: state.tenants.createTenant.certificates,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  updateAddField,\n  resetAddTenantForm,\n});\n\nexport default withStyles(styles)(connector(AddTenant));\n"],"sourceRoot":""}