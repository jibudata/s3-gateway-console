{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","utils/validationFunctions.ts","screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/TenantDetails/EditTenantMonitoringModal.tsx","screens/Console/Tenants/TenantDetails/KeyPairView.tsx","screens/Console/Tenants/TenantDetails/TenantMonitoring.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","unSelected","selected","CloudIcon","active","xmlns","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","spacing","margin","buttonDisabled","filter","valueToSend","idField","to","sendOnlyId","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","e","stopPropagation","preventDefault","Tooltip","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","calculateColumnRest","map","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","flexDirection","boxShadow","minHeight","overflowY","noBackground","defaultPaperHeight","loadingBox","paddingTop","overlayColumnSelection","popoverContent","shownColumnsLabel","borderBottom","checkAllWrapper","outline","userSelect","borderColor","textTransform","textAlign","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","currentTarget","closeColumnSelector","Grid","item","xs","Paper","LinearProgress","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CheckboxWrapper","checked","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","fieldContainer","justifyContent","marginBottom","flexBasis","StyledSwitch","switchBase","palette","common","white","thumb","track","transitions","create","focusVisible","switchContainer","Switch","divContainer","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","sm","md","isOpen","onCancel","onConfirm","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","sx","cancelButton","confirmButton","loading","loadingPosition","startIcon","commonFormValidation","fieldsValidate","returnErrors","forEach","field","trim","fieldKey","customValidation","customValidationMessage","customPatternMessage","rgx","RegExp","match","buttonContainer","multiContainer","sizeFactorContainer","bottomContainer","factorElements","sizeNumber","sizeDescription","shortened","gridTemplateColumns","gridGap","modalBasic","paramName","newValues","setNewValues","setError","cleanValidation","fieldName","clearValidationError","keyPairValidation","i","key","commonVal","keyValueInputs","_","InputBoxWrapper","tempLabels","splice","tenant","image","sidecarImage","initImage","labels","annotations","nodeSelector","diskCapacityGB","serviceAccountName","storageClassName","tenantName","tenantNamespace","validationErrors","setValidationErrors","newLabels","setNewLabels","newAnnotations","setNewAnnotations","newNodeSelector","setNewNodeSelector","newImage","setNewImage","newSidecarImage","setNewSidecarImage","newInitImage","setNewInitImage","newDiskCapacityGB","setNewDiskCapacityGB","newServiceAccountName","setNewServiceAccountName","newStorageClassName","setNewStorageClassName","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","x","retval","tenantMonitoringValidation","ModalWrapper","noValidate","onSubmit","api","invoke","then","catch","err","Button","Object","keys","checkValid","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","logEnabled","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","centerAlign","listHeight","containerForHeader","recordName","TableWrapper","setErrorSnackMessage","headerLabel","breadcrumLink","textDecoration","tableWrapper","paperContainer","searchField","prometheusMonitoringEnabled","setPrometheusMonitoringEnabled","edit","setEdit","monitoringInfo","setMonitoringInfo","confirmOpen","setConfirmOpen","refreshMonitoringInfo","setRefreshMonitoringInfo","params","res","prometheusEnabled","parseInt","ConfirmDialog","configInfo","toggle","DialogContentText","sectionTitle","FormSwitchWrapper","colSpan","titleCol"],"mappings":"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","file":"static/js/68.81bdb3f4.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport interface IValidation {\n  fieldKey: string;\n  required: boolean;\n  pattern?: RegExp;\n  customPatternMessage?: string;\n  customValidation?: boolean; // The validation to trigger the error\n  customValidationMessage?: string;\n  value: string;\n}\n\nexport const commonFormValidation = (fieldsValidate: IValidation[]) => {\n  let returnErrors: any = {};\n\n  fieldsValidate.forEach((field) => {\n    if (\n      field.required &&\n      typeof field.value !== \"undefined\" &&\n      field.value.trim() === \"\"\n    ) {\n      returnErrors[field.fieldKey] = \"Field cannot be empty\";\n      return;\n    }\n    // if it's not required and the value is empty, we are done here\n    if (\n      !field.required &&\n      typeof field.value !== \"undefined\" &&\n      field.value.trim() === \"\"\n    ) {\n      return;\n    }\n\n    if (field.customValidation && field.customValidationMessage) {\n      returnErrors[field.fieldKey] = field.customValidationMessage;\n      return;\n    }\n\n    if (field.pattern && field.customPatternMessage) {\n      const rgx = new RegExp(field.pattern, \"g\");\n\n      if (\n        !field.value.match(rgx) &&\n        typeof field.value !== \"undefined\" &&\n        field.value.trim() !== \"\"\n      ) {\n        returnErrors[field.fieldKey] = field.customPatternMessage;\n      }\n      return;\n    }\n  });\n\n  return returnErrors;\n};\n","import React, { Fragment, useEffect } from \"react\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../utils\";\n\ninterface IKeyPairEditProps {\n  classes: any;\n  paramName: string;\n  error: any;\n  setError: (e: any) => void;\n  newValues: IKeyValue[];\n  setNewValues: (vals: IKeyValue[]) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\" as const,\n      justifyContent: \"flex-start\" as const,\n    },\n    sizeFactorContainer: {\n      marginLeft: 8,\n    },\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      \"& div\": {\n        flexGrow: 1,\n        width: \"100%\",\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 20px 20px\",\n      display: \"grid\",\n      gridGap: 20,\n    },\n    ...modalBasic,\n  });\n\nconst KeyPairEdit = ({\n  classes,\n  paramName,\n  newValues,\n  setNewValues,\n  error,\n  setError,\n}: IKeyPairEditProps) => {\n  const cleanValidation = (fieldName: string) => {\n    setError(clearValidationError(error, fieldName));\n  };\n\n  useEffect(() => {\n    let keyPairValidation: IValidation[] = [];\n\n    for (var i = 0; i < newValues.length; i++) {\n      keyPairValidation.push({\n        fieldKey: `key-${i.toString()}`,\n        required: false,\n        value: newValues[i].key,\n        customPatternMessage: \"Invalid key\",\n      });\n      keyPairValidation.push({\n        fieldKey: `val-${i.toString()}`,\n        required: false,\n        value: newValues[i].value,\n        customPatternMessage: \"Invalid value\",\n      });\n    }\n\n    const commonVal = commonFormValidation(keyPairValidation);\n    setError(commonVal);\n  }, [newValues, setError]);\n\n  let keyValueInputs = newValues.map((_, index) => {\n    return (\n      <Fragment key={`keyvalue-${index.toString()}`}>\n        <div className={classes.shortened}>\n          <InputBoxWrapper\n            id={`key-${index.toString()}`}\n            label={\"\"}\n            placeholder={\"Key\"}\n            name={`key-${index.toString()}`}\n            value={newValues[index].key}\n            onChange={(e) => {\n              let tempLabels = [...newValues];\n              tempLabels[index].key = e.target.value;\n              setNewValues(tempLabels);\n              cleanValidation(`key-${index.toString()}`);\n            }}\n            index={index}\n            key={`csv-key-${index.toString()}`}\n            error={error[`key-${index.toString()}`] || \"\"}\n          />\n          <InputBoxWrapper\n            id={`val-${index.toString()}`}\n            label={\"\"}\n            placeholder={\"Value\"}\n            name={`val-${index.toString()}`}\n            value={newValues[index].value}\n            onChange={(e) => {\n              let tempLabels = [...newValues];\n              tempLabels[index].value = e.target.value;\n              setNewValues(tempLabels);\n              cleanValidation(`val-${index.toString()}`);\n            }}\n            index={index}\n            key={`csv-val-${index.toString()}`}\n            error={error[`val-${index.toString()}`] || \"\"}\n          />\n          <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\n            <IconButton\n              size={\"small\"}\n              onClick={() => {\n                let tempLabels = [...newValues];\n                tempLabels.push({ key: \"\", value: \"\" });\n                setNewValues(tempLabels);\n              }}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\n            <IconButton\n              size={\"small\"}\n              style={{ marginLeft: 16 }}\n              onClick={() => {\n                if (newValues.length === 1) {\n                  setNewValues([{ key: \"\", value: \"\" }]);\n                }\n                if (newValues.length > 1) {\n                  let tempLabels = [...newValues];\n                  tempLabels.splice(index, 1);\n                  setNewValues(tempLabels);\n                }\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Fragment>\n    );\n  });\n\n  return <Fragment>{keyValueInputs}</Fragment>;\n};\n\nexport default withStyles(styles)(KeyPairEdit);\n","import React, { useEffect, useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Button } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport KeyPairEdit from \"./KeyPairEdit\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\n\ninterface IEditTenantMonitoringProps {\n  tenant: ITenant;\n  classes: any;\n  open: boolean;\n  onClose: (shouldReload: boolean) => void;\n  image: string;\n  sidecarImage: string;\n  initImage: string;\n  labels: IKeyValue[];\n  annotations: IKeyValue[];\n  nodeSelector: IKeyValue[];\n  diskCapacityGB: number;\n  serviceAccountName: string;\n  tenantName: string;\n  tenantNamespace: string;\n  storageClassName: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n  });\n\nconst EditTenantMonitoringModal = ({\n  tenant,\n  classes,\n  open,\n  onClose,\n  image,\n  sidecarImage,\n  initImage,\n  labels,\n  annotations,\n  nodeSelector,\n  diskCapacityGB,\n  serviceAccountName,\n  storageClassName,\n  tenantName,\n  tenantNamespace,\n}: IEditTenantMonitoringProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [newLabels, setNewLabels] = useState<IKeyValue[]>(\n    labels.length > 0 ? [...labels] : [{ key: \"\", value: \"\" }]\n  );\n  const [newAnnotations, setNewAnnotations] = useState<IKeyValue[]>(\n    annotations.length > 0 ? [...annotations] : [{ key: \"\", value: \"\" }]\n  );\n  const [newNodeSelector, setNewNodeSelector] = useState<IKeyValue[]>(\n    nodeSelector.length > 0 ? [...nodeSelector] : [{ key: \"\", value: \"\" }]\n  );\n  const [newImage, setNewImage] = useState<string>(image);\n  const [newSidecarImage, setNewSidecarImage] = useState<string>(sidecarImage);\n  const [newInitImage, setNewInitImage] = useState<string>(initImage);\n  const [newDiskCapacityGB, setNewDiskCapacityGB] = useState<string>(\n    diskCapacityGB.toString()\n  );\n  const [newServiceAccountName, setNewServiceAccountName] =\n    useState<string>(serviceAccountName);\n  const [newStorageClassName, setNewStorageClassName] =\n    useState<string>(storageClassName);\n\n  const [labelsError, setLabelsError] = useState<any>({});\n  const [annotationsError, setAnnotationsError] = useState<any>({});\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\n\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\n    let retval: IKeyValue[] = [];\n    for (let i = 0; i < x.length; i++) {\n      if (x[i].key !== \"\") {\n        retval.push(x[i]);\n      }\n    }\n    return retval;\n  };\n\n  useEffect(() => {\n    let tenantMonitoringValidation: IValidation[] = [];\n\n    tenantMonitoringValidation.push({\n      fieldKey: `image`,\n      required: false,\n      value: newImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `sidecarImage`,\n      required: false,\n      value: newSidecarImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `initImage`,\n      required: false,\n      value: newInitImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `diskCapacityGB`,\n      required: true,\n      value: newDiskCapacityGB as any as string,\n      pattern: /^[0-9]?(10)?$/,\n      customPatternMessage: \"Must be an integer between 0 and 10\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `serviceAccountName`,\n      required: false,\n      value: newServiceAccountName,\n      pattern: /^[a-zA-Z0-9-.]{1,253}$/,\n      customPatternMessage: \"Invalid service account name\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `storageClassName`,\n      required: false,\n      value: newStorageClassName,\n      pattern: /^[a-zA-Z0-9-.]{1,253}$/,\n      customPatternMessage: \"Invalid storage class name\",\n    });\n\n    const commonVal = commonFormValidation(tenantMonitoringValidation);\n    setValidationErrors(commonVal);\n  }, [\n    newImage,\n    newSidecarImage,\n    newInitImage,\n    newDiskCapacityGB,\n    newServiceAccountName,\n    newStorageClassName,\n    setValidationErrors,\n  ]);\n\n  const checkValid = (): boolean => {\n    if (\n      Object.keys(validationErrors).length !== 0 ||\n      Object.keys(labelsError).length !== 0 ||\n      Object.keys(annotationsError).length !== 0 ||\n      Object.keys(nodeSelectorError).length !== 0\n    ) {\n      let err: ErrorResponseHandler = {\n        errorMessage: \"Invalid entry\",\n        detailedError: \"\",\n      };\n      setModalErrorSnackMessage(err);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const submitMonitoringInfo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        {\n          labels: trim(newLabels),\n          annotations: trim(newAnnotations),\n          nodeSelector: trim(newNodeSelector),\n          image: newImage,\n          sidecarImage: newSidecarImage,\n          initImage: newInitImage,\n          diskCapacityGB: newDiskCapacityGB,\n          serviceAccountName: newServiceAccountName,\n          storageClassName: newStorageClassName,\n        }\n      )\n      .then(() => {\n        onClose(true);\n      })\n      .catch((err: ErrorResponseHandler) => {});\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => onClose(true)}\n      modalOpen={open}\n      title=\"Edit Prometheus Monitoring Configuration\"\n    >\n      <form noValidate autoComplete=\"off\" onSubmit={submitMonitoringInfo}>\n        <h4>Image</h4>\n        <InputBoxWrapper\n          id={`image`}\n          label={\"\"}\n          placeholder={\"Image\"}\n          name={`image`}\n          value={newImage}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewImage(event.target.value);\n          }}\n          key={`image`}\n          error={validationErrors[`image`] || \"\"}\n        />\n        <h4>Sidecar Image</h4>\n        <InputBoxWrapper\n          id={`sidecarImage`}\n          label={\"\"}\n          placeholder={\"Sidecar Image\"}\n          name={`sidecarImage`}\n          value={newSidecarImage}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewSidecarImage(event.target.value);\n          }}\n          key={`sidecarImage`}\n          error={validationErrors[`sidecarImage`] || \"\"}\n        />\n        <h4>Init Image</h4>\n        <InputBoxWrapper\n          id={`initImage`}\n          label={\"\"}\n          placeholder={\"Init Image\"}\n          name={`initImage`}\n          value={newInitImage}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewInitImage(event.target.value);\n          }}\n          key={`initImage`}\n          error={validationErrors[`initImage`] || \"\"}\n        />\n        <h4>Disk Capacity (GB)</h4>\n        <InputBoxWrapper\n          id={`diskCapacityGB`}\n          label={\"\"}\n          placeholder={\"Disk Capacity (GB)\"}\n          name={`diskCapacityGB`}\n          value={newDiskCapacityGB.toString()}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewDiskCapacityGB(event.target.value);\n          }}\n          key={`diskCapacityGB`}\n          error={validationErrors[`diskCapacityGB`] || \"\"}\n        />\n        <h4>Service Account Name</h4>\n        <InputBoxWrapper\n          id={`serviceAccountName`}\n          label={\"\"}\n          placeholder={\"Service Account Name\"}\n          name={`serviceAccountName`}\n          value={newServiceAccountName}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewServiceAccountName(event.target.value);\n          }}\n          key={`serviceAccountName`}\n          error={validationErrors[`serviceAccountName`] || \"\"}\n        />\n        <h4>Storage Class Name</h4>\n        <InputBoxWrapper\n          id={`storageClassName`}\n          label={\"\"}\n          placeholder={\"Storage Class Name\"}\n          name={`storageClassName`}\n          value={newStorageClassName}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setNewStorageClassName(event.target.value);\n          }}\n          key={`storageClassName`}\n          error={validationErrors[`storageClassName`] || \"\"}\n        />\n        <h4>Labels</h4>\n        <KeyPairEdit\n          newValues={newLabels}\n          setNewValues={setNewLabels}\n          paramName={\"Labels\"}\n          error={labelsError}\n          setError={setLabelsError}\n        />\n        <h4>Annotations</h4>\n        <KeyPairEdit\n          newValues={newAnnotations}\n          setNewValues={setNewAnnotations}\n          paramName={\"Annotations\"}\n          error={annotationsError}\n          setError={setAnnotationsError}\n        />\n        <h4>Node Selector</h4>\n        <KeyPairEdit\n          newValues={newNodeSelector}\n          setNewValues={setNewNodeSelector}\n          paramName={\"Node Selector\"}\n          error={nodeSelectorError}\n          setError={setNodeSelectorError}\n        />\n\n        <div className={classes.buttonContainer}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!checkValid()}\n          >\n            Save\n          </Button>\n        </div>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EditTenantMonitoringModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport { IKeyValue } from \"../ListTenants/types\";\n\ninterface IKeyPairView {\n  classes: any;\n  records: IKeyValue[];\n  recordName: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    listHeight: {\n      height: \"50\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst KeyPairView = ({ classes, records, recordName }: IKeyPairView) => {\n  return (\n    <Fragment>\n      <TableWrapper\n        columns={[\n          { label: \"Key\", elementKey: \"key\" },\n          { label: \"Value\", elementKey: \"value\" },\n        ]}\n        isLoading={false}\n        records={records}\n        itemActions={[]}\n        entityName={recordName}\n        idField=\"name\"\n        customPaperHeight={classes.listHeight}\n      />\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(KeyPairView));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Button, CircularProgress, DialogContentText } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport EditTenantMonitoringModal from \"./EditTenantMonitoringModal\";\n\nimport api from \"../../../../common/api\";\nimport { EditIcon } from \"../../../../icons\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { ITenantMonitoringStruct } from \"../ListTenants/types\";\nimport KeyPairView from \"./KeyPairView\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface ITenantMonitoring {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    headerLabel: {\n      fontSize: 22,\n      fontWeight: 600,\n      color: \"#000\",\n      marginTop: 4,\n    },\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    tableWrapper: {\n      height: \"calc(100vh - 267px)\",\n    },\n    paperContainer: {\n      padding: \"15px 15px 15px 50px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantMonitoring = ({\n  classes,\n  match,\n  tenant,\n  loadingTenant,\n}: ITenantMonitoring) => {\n  const [prometheusMonitoringEnabled, setPrometheusMonitoringEnabled] =\n    useState<boolean>(false);\n  const [edit, setEdit] = useState<boolean>(false);\n  const [monitoringInfo, setMonitoringInfo] =\n    useState<ITenantMonitoringStruct>();\n  const [confirmOpen, setConfirmOpen] = useState<boolean>(false);\n  const [refreshMonitoringInfo, setRefreshMonitoringInfo] =\n    useState<boolean>(true);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  const onCloseEditAndRefresh = () => {\n    setEdit(false);\n    setRefreshMonitoringInfo(true);\n  };\n\n  useEffect(() => {\n    if (refreshMonitoringInfo) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`\n        )\n        .then((res: ITenantMonitoringStruct) => {\n          setPrometheusMonitoringEnabled(res.prometheusEnabled);\n          setMonitoringInfo(res);\n          setRefreshMonitoringInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setRefreshMonitoringInfo(false);\n        });\n    }\n  }, [refreshMonitoringInfo]);\n\n  const togglePrometheus = () => {\n    const configInfo = {\n      prometheusEnabled: prometheusMonitoringEnabled,\n      toggle: true,\n    };\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        configInfo\n      )\n      .then(() => {\n        setPrometheusMonitoringEnabled(!prometheusMonitoringEnabled);\n        setRefreshMonitoringInfo(true);\n        setConfirmOpen(false);\n        setRefreshMonitoringInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      {edit && tenant !== null && prometheusMonitoringEnabled && (\n        <EditTenantMonitoringModal\n          classes={classes}\n          open={edit}\n          onClose={onCloseEditAndRefresh}\n          tenant={tenant}\n          image={monitoringInfo?.image || \"\"}\n          sidecarImage={monitoringInfo?.sidecarImage || \"\"}\n          initImage={monitoringInfo?.initImage || \"\"}\n          diskCapacityGB={\n            monitoringInfo?.diskCapacityGB\n              ? parseInt(monitoringInfo?.diskCapacityGB)\n              : 5\n          }\n          labels={monitoringInfo?.labels || []}\n          annotations={monitoringInfo?.annotations || []}\n          nodeSelector={monitoringInfo?.nodeSelector || []}\n          serviceAccountName={monitoringInfo?.serviceAccountName || \"\"}\n          tenantName={tenantName}\n          tenantNamespace={tenantNamespace}\n          storageClassName={monitoringInfo?.storageClassName || \"\"}\n        />\n      )}\n      {confirmOpen && (\n        <ConfirmDialog\n          isOpen={confirmOpen}\n          title={\n            prometheusMonitoringEnabled\n              ? \"Disable Prometheus monitoring?\"\n              : \"Enable Prometheus monitoring?\"\n          }\n          confirmText={prometheusMonitoringEnabled ? \"Disable\" : \"Enable\"}\n          cancelText=\"Cancel\"\n          onClose={() => setConfirmOpen(false)}\n          onConfirm={togglePrometheus}\n          confirmationContent={\n            <DialogContentText>\n              {prometheusMonitoringEnabled\n                ? \"Disabling monitoring will erase any custom values you have used to configure Prometheus monitoring\"\n                : \"Prometheus monitoring will be enabled with default values\"}\n            </DialogContentText>\n          }\n        />\n      )}\n\n      <h1 className={classes.sectionTitle}>Monitoring</h1>\n      <div className={classes.actionsTray}>\n        <FormSwitchWrapper\n          label={\"Prometheus Monitoring\"}\n          indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          checked={prometheusMonitoringEnabled}\n          value={\"monitoring_status\"}\n          id=\"monitoring-status\"\n          name=\"monitoring-status\"\n          onChange={(e) => {\n            setConfirmOpen(true);\n          }}\n          description=\"\"\n        />\n        {prometheusMonitoringEnabled && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<EditIcon />}\n            onClick={() => {\n              setEdit(true);\n            }}\n          >\n            Edit\n          </Button>\n        )}\n      </div>\n      {prometheusMonitoringEnabled && monitoringInfo !== undefined && (\n        <Paper className={classes.paperContainer}>\n          <Grid container>\n            <Grid item xs={12}>\n              <table width={\"100%\"}>\n                <tbody>\n                  {loadingTenant ? (\n                    <tr>\n                      <td className={classes.centerAlign} colSpan={4}>\n                        <CircularProgress />\n                      </td>\n                    </tr>\n                  ) : (\n                    monitoringInfo !== undefined && (\n                      <Fragment>\n                        {monitoringInfo.image != null && (\n                          <tr>\n                            <td className={classes.titleCol}>Image:</td>\n                            <td>{monitoringInfo.image}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.sidecarImage != null && (\n                          <tr>\n                            <td className={classes.titleCol}>Sidecar Image:</td>\n                            <td>{monitoringInfo?.sidecarImage}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.initImage != null && (\n                          <tr>\n                            <td className={classes.titleCol}>Init Image:</td>\n                            <td>{monitoringInfo?.initImage}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.diskCapacityGB != null && (\n                          <tr>\n                            <td className={classes.titleCol}>\n                              Disk Capacity (GB):\n                            </td>\n                            <td>{monitoringInfo?.diskCapacityGB}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.serviceAccountName != null && (\n                          <tr>\n                            <td className={classes.titleCol}>\n                              Service Account Name:\n                            </td>\n                            <td>{monitoringInfo?.serviceAccountName}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.storageClassName != null && (\n                          <tr>\n                            <td className={classes.titleCol}>\n                              Storage Class Name:\n                            </td>\n                            <td>{monitoringInfo?.storageClassName}</td>\n                          </tr>\n                        )}\n                        {monitoringInfo.labels != null &&\n                          monitoringInfo.labels.length > 0 && (\n                            <tr>\n                              <h4>Labels</h4>\n                              <td className={classes.titleCol}>\n                                <KeyPairView\n                                  records={monitoringInfo.labels}\n                                  recordName=\"Labels\"\n                                />\n                              </td>\n                            </tr>\n                          )}\n                        {monitoringInfo.annotations != null &&\n                          monitoringInfo.annotations.length > 0 && (\n                            <tr>\n                              <h4>Annotations</h4>\n                              <td className={classes.titleCol}>\n                                <KeyPairView\n                                  records={monitoringInfo.annotations}\n                                  recordName=\"Annotations\"\n                                />\n                              </td>\n                            </tr>\n                          )}\n                        {monitoringInfo.nodeSelector != null &&\n                          monitoringInfo.nodeSelector.length > 0 && (\n                            <tr>\n                              <h4>Node Seletor</h4>\n                              <td className={classes.titleCol}>\n                                <KeyPairView\n                                  records={monitoringInfo.nodeSelector}\n                                  recordName=\"Node Selector\"\n                                />\n                              </td>\n                            </tr>\n                          )}\n                      </Fragment>\n                    )\n                  )}\n                </tbody>\n              </table>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantMonitoring));\n"],"sourceRoot":""}