{"version":3,"file":"static/js/8916.08d63a3e.chunk.js","mappings":"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","sources":["screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useLocation } from \"react-router-dom\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const theme = useTheme();\n  const { pathname = \"\" } = useLocation();\n\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [value, setValue] = useState(selectedTab);\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  useEffect(() => {\n    if (isRouteTabs) {\n      const tabConfigElement = children.find(\n        (item) => item.tabConfig.to === pathname\n      );\n\n      if (tabConfigElement) {\n        setValue(tabConfigElement.tabConfig.value);\n      }\n    }\n  }, [isRouteTabs, children, pathname]);\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {resetLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b className={classes.wrapText}>\n              Please note that this may cause your system to not be accessible\n            </b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(ResetConfigurationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/${type}`, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.restart));\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </Grid>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { DialogContentText } from \"@mui/material\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n  type,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${selectedARN}/reset`)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, ConsoleIcon, Grid, Tooltip } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { overrideFields } from \"../../Configurations/utils\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\"\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\"\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\"\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/${name}`, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.restart));\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        {hasOverride.length > 0 ? (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Enabled\"}\n                content={overrideValues.enable?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.enable.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Endpoint\"}\n                content={overrideValues.endpoint?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.endpoint.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Auth Token\"}\n                content={overrideValues.auth_token?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.auth_token.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <FormSwitchWrapper\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n            </Grid>\n            {saving && (\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 10,\n                }}\n              >\n                <LinearProgress />\n              </Grid>\n            )}\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={saving}\n                onClick={onCloseEndpoint}\n                label={\"Cancel\"}\n                sx={{\n                  marginRight: 10,\n                }}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={saving || invalidInputs.length !== 0}\n                label={\"Update\"}\n                onClick={updateWebhook}\n              />\n            </Grid>\n          </Fragment>\n        )}\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: IConfigurationSys[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values.filter(\n            (itm) => !!itm.env_override\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Button, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\n\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IConfigurationSys,\n  IElementValue,\n  IOverrideEnv,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport { useSelector } from \"react-redux\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    settingsFormContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gridGap: \"10px\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  classes,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<IConfigurationSys[]>(\n    []\n  );\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api\n          .invoke(\"GET\", `/api/v1/configs/${configId}`)\n          .then((res) => {\n            setConfigSubsysList(res);\n            const keyVals = get(res[0], \"key_values\", []);\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(err));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.restart));\n          dispatch(configurationIsLoading(true));\n          if (!res.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      {resetConfigurationOpen && (\n        <ResetConfigurationModal\n          configurationName={selectedConfiguration.configuration_id}\n          closeResetModalAndRefresh={continueReset}\n          resetOpen={resetConfigurationOpen}\n        />\n      )}\n      {loadingConfig ? (\n        <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n          <Loader />\n        </Grid>\n      ) : (\n        <Box\n          sx={{\n            padding: \"15px\",\n            height: \"100%\",\n          }}\n        >\n          {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n          selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n            <WebhookSettings\n              WebhookSettingslist={configSubsysList}\n              setResetConfigurationOpen={resetConfigurationMOpen}\n              type={selectedConfiguration.configuration_id}\n            />\n          ) : (\n            <Fragment>\n              <form\n                noValidate\n                onSubmit={submitForm}\n                className={className}\n                style={{\n                  height: \"100%\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                }}\n              >\n                <Grid item xs={12} className={classes.settingsFormContainer}>\n                  <ConfTargetGeneric\n                    fields={\n                      fieldsConfigurations[\n                        selectedConfiguration.configuration_id\n                      ]\n                    }\n                    onChange={onValueChange}\n                    defaultVals={configValues}\n                    overrideEnv={overrideEnvs}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    paddingTop: \"15px \",\n                    textAlign: \"right\" as const,\n                    maxHeight: \"60px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <Button\n                    id={\"restore-defaults\"}\n                    variant=\"secondary\"\n                    onClick={resetConfigurationMOpen}\n                    label={\"Restore Defaults\"}\n                  />\n                  &nbsp; &nbsp;\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={saving}\n                    label={\"Save\"}\n                  />\n                </Grid>\n              </form>\n            </Fragment>\n          )}\n        </Box>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","import React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\"\n        )}.conf`\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning!. The resulting file would contain server configuration information in plain text.\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { HelpBox, SettingsIcon } from \"mds\";\nimport { Link, Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport VerticalTabs from \"../../Common/VerticalTabs/VerticalTabs\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\nimport { Box } from \"@mui/material\";\n\ninterface IConfigurationOptions {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    settingsOptionsContainer: {\n      display: \"flex\" as const,\n      flexDirection: \"row\" as const,\n      justifyContent: \"flex-start\" as const,\n      flexWrap: \"wrap\" as const,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      backgroundColor: \"#fff\",\n    },\n    ...searchField,\n    ...actionsTray,\n    ...containerForHeader,\n  });\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\nconst ConfigurationOptions = ({ classes }: IConfigurationOptions) => {\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Settings\"} />\n\n      <PageLayout>\n        <Grid item xs={12}>\n          <div\n            id=\"settings-container\"\n            className={classes.settingsOptionsContainer}\n          >\n            <ScreenTitle\n              icon={<SettingsIcon />}\n              title={\"MinIO Configuration:\"}\n              actions={\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    gap: 2,\n                  }}\n                >\n                  <ImportConfigButton />\n                  <ExportConfigButton />\n                </Box>\n              }\n            />\n            <VerticalTabs\n              selectedTab={selConfigTab}\n              isRouteTabs\n              routes={\n                <Routes>\n                  {configurationElements.map((element) => (\n                    <Route\n                      key={`configItem-${element.configuration_label}`}\n                      path={`${element.configuration_id}`}\n                      element={<ConfigurationForm />}\n                    />\n                  ))}\n                  <Route\n                    path={\"/\"}\n                    element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                  />\n                </Routes>\n              }\n            >\n              {configurationElements.map((element) => {\n                const { configuration_id, configuration_label, icon } = element;\n                return {\n                  tabConfig: {\n                    label: configuration_label,\n                    value: configuration_id,\n                    icon: icon,\n                    component: Link,\n                    to: getRoutePath(configuration_id),\n                  },\n                };\n              })}\n            </VerticalTabs>\n          </div>\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationOptions);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport CompressIcon from \"@mui/icons-material/Compress\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport FindReplaceIcon from \"@mui/icons-material/FindReplace\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <LocalHospitalIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <VpnKeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <CallToActionIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingActionsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\",\".log\" or \".csv\", you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\",\"application/json\" or \"application/xml\", you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation. eg. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation. eg. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\", you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[]\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value,\n        overrideEnv: envItem.env_override.name,\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n"],"names":["useStyles","makeStyles","theme","headerBarIcon","marginRight","color","palette","primary","main","width","height","display","headerBarSubheader","maxWidth","stContainer","alignItems","justifyContent","padding","borderBottom","flexFlow","titleColumn","fontSize","leftItems","rightItems","marginLeft","icon","title","subTitle","actions","className","classes","container","item","xs","style","margin","tabStripStyle","minHeight","withStyles","createStyles","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","fontWeight","tabContentContainer","tabPanel","flexDirection","children","selectedTab","routes","isRouteTabs","useTheme","useLocation","pathname","isSmallScreen","useMediaQuery","breakpoints","down","useState","value","setValue","headerList","contentList","useEffect","tabConfigElement","find","tabConfig","to","forEach","child","push","content","onChange","event","newValue","orientation","variant","scrollButtons","tabList","map","index","tabHeader","disableRipple","disableTouchRipple","focusRipple","wrapText","whiteSpace","wordWrap","deleteDialogStyles","configurationName","closeResetModalAndRefresh","resetOpen","dispatch","useAppDispatch","resetLoading","setResetLoading","api","then","res","catch","err","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmationContent","LinearProgress","DialogContentText","open","type","onCloseEndpoint","name","setName","endpoint","setEndpoint","authToken","setAuthToken","saving","setSaving","invalidInputs","setInvalidInput","initialInputs","setInitialInputs","initializeInput","filter","validateInput","valid","includes","Webhook","CallToAction","PendingActions","Fragment","ModalWrapper","modalOpen","sx","formFieldStyles","InputBoxWrapper","id","target","validity","error","label","pattern","required","disabled","onClick","length","trim","payload","key_values","key","arn_resource_id","setServerNeedsRestart","restart","setSnackBarMessage","configurationIsLoading","selectedARN","deleteLoading","setDeleteLoading","defaultWH","message","endpointInfo","endpointState","setEndpointState","endpointLocate","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","PredefinedList","actionButton","paddingRight","tooltip","overrideEnv","placement","auth_token","FormSwitchWrapper","e","checked","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","disableButtonFunction","wHook","element","EditWebhookEndpoint","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","justifyItems","fill","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","fieldBasic","settingsCommon","settingsFormContainer","gridTemplateColumns","gridGap","selectedConfiguration","navigate","useNavigate","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","get","keyVals","removeEmptyFields","configuration_id","onValueChange","useCallback","resetConfigurationMOpen","Grid","textAlign","paddingTop","Box","noValidate","onSubmit","preventDefault","ConfTargetGeneric","fields","fieldsConfigurations","defaultVals","maxHeight","configName","validActiveConfig","configurationElements","containerClassName","minWidth","useDispatch","useApi","performDownload","Blob","window","atob","DateTime","toFormat","isReqLoading","invokeApi","TooltipWrapper","needsRestart","serverNeedsRestart","undefined","refreshPage","setRefreshPage","fileUpload","useRef","files","fileToUpload","formData","FormData","blobFile","append","ref","current","click","settingsOptionsContainer","flexWrap","border","borderRadius","backgroundColor","searchField","actionsTray","containerForHeader","PageHeaderWrapper","PageLayout","ScreenTitle","gap","VerticalTabs","path","ConfigurationForm","configuration_label","IAM_PAGES","component","Link","iconComponent","help","href","rel","region","placeholder","compression","withBorder","heal","scanner","etcd","multiline","logger_webhook","audit_webhook","formFields","field","selectSAs","setSelectedSAs","selectedSAs","targetD","elements","overrideReturn","envItem"],"sourceRoot":""}