{"version":3,"file":"static/js/471.35e9288a.chunk.js","mappings":"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","sources":["screens/Console/Support/RegisterHelpBox.tsx","screens/Console/Support/Register.tsx","screens/Console/Support/RegistrationStatusBanner.tsx","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport {\n  CallHomeFeatureIcon,\n  DiagnosticsFeatureIcon,\n  HelpIconFilled,\n  PerformanceFeatureIcon,\n} from \"../../../icons\";\nimport React from \"react\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst RegisterHelpBox = ({ hasMargin = true }: { hasMargin?: boolean }) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginLeft: {\n          xs: \"0px\",\n          sm: \"0px\",\n          md: hasMargin ? \"30px\" : \"\",\n        },\n        marginTop: {\n          xs: \"0px\",\n          sm: hasMargin ? \"30px\" : \"\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Why should I register?</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        Registering this cluster with the MinIO Subscription Network (SUBNET)\n        provides the following benefits in addition to the commercial license\n        and SLA backed support.\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CallHomeFeatureIcon />}\n          description={`Call Home Monitoring`}\n        />\n        <FeatureItem\n          icon={<DiagnosticsFeatureIcon />}\n          description={`Health Diagnostics`}\n        />\n        <FeatureItem\n          icon={<PerformanceFeatureIcon />}\n          description={`Performance Analysis`}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default RegisterHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Button, Grid, Link } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { CopyIcon, UsersIcon } from \"../../../icons\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport OnlineRegistrationIcon from \"../../../icons/OnlineRegistrationIcon\";\nimport OfflineRegistrationIcon from \"../../../icons/OfflineRegistrationIcon\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport OfflineRegistrationBackIcon from \"../../../icons/OfflineRegistrationBackIcon\";\nimport api from \"../../../common/api\";\n\nimport {\n  SubnetInfo,\n  SubnetLoginRequest,\n  SubnetLoginResponse,\n  SubnetLoginWithMFARequest,\n  SubnetOrganization,\n  SubnetRegisterRequest,\n  SubnetRegTokenResponse,\n} from \"../License/types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { hasPermission } from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PAGES_PERMISSIONS,\n} from \"../../../common/SecureComponent/permissions\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport SettingsIcon from \"../../../icons/SettingsIcon\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { AppState } from \"../../../store\";\n\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport RegistrationStatusBanner from \"./RegistrationStatusBanner\";\nimport BackLink from \"../../../common/BackLink\";\n\ninterface IRegister {\n  classes: any;\n  displayErrorMessage: typeof setErrorSnackMessage;\n  operatorMode: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    registerActivationIcon: {\n      color: theme.palette.primary.main,\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      \"& .min-icon\": {\n        width: 32.12,\n        height: 25,\n        marginRight: 10,\n        verticalAlign: \"middle\",\n      },\n    },\n    registerActivationMode: {\n      textAlign: \"right\",\n      \"& a\": {\n        cursor: \"pointer\",\n      },\n    },\n    subnetDescription: {\n      textAlign: \"left\",\n      Font: \"normal normal normal 14px/17px Lato\",\n      letterSpacing: 0,\n      color: \"#000000\",\n      \"& span\": {\n        fontWeight: \"bold\",\n      },\n    },\n    registeredStatus: {\n      border: \"1px solid #E2E2E2\",\n      padding: \"24px 24px 24px 24px\",\n      borderRadius: 2,\n      marginBottom: 25,\n      backgroundColor: \"#FBFAFA\",\n      \"& .min-icon\": {\n        width: 20,\n        height: 20,\n        marginLeft: 48,\n        marginRight: 13,\n        verticalAlign: \"middle\",\n        marginTop: -3,\n      },\n      \"& span\": {\n        fontWeight: \"bold\",\n      },\n    },\n    copyInputBox: {\n      \"& button\": {\n        border: \"1px solid #5E5E5E\",\n        borderRadius: 2,\n      },\n    },\n    link: {\n      color: \"#2781B0\",\n      cursor: \"pointer\",\n    },\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...spacingUtils,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst FormTitle = ({ icon = null, title }: { icon?: any; title: any }) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      {icon}\n      <div className=\"title-text\">{title}</div>\n    </Box>\n  );\n};\n\nconst Register = ({\n  classes,\n  displayErrorMessage,\n  operatorMode,\n}: IRegister) => {\n  const [license, setLicense] = useState<string>(\"\");\n  const [subnetPassword, setSubnetPassword] = useState<string>(\"\");\n  const [subnetEmail, setSubnetEmail] = useState<string>(\"\");\n  const [subnetMFAToken, setSubnetMFAToken] = useState<string>(\"\");\n  const [subnetOTP, setSubnetOTP] = useState<string>(\"\");\n  const [subnetAccessToken, setSubnetAccessToken] = useState<string>(\"\");\n  const [selectedSubnetOrganization, setSelectedSubnetOrganization] =\n    useState<string>(\"\");\n  const [subnetRegToken, setSubnetRegToken] = useState<string>(\"\");\n  const [subnetOrganizations, setSubnetOrganizations] = useState<\n    SubnetOrganization[]\n  >([]);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [onlineActivation, setOnlineActivation] = useState<boolean>(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(false);\n  const [clusterRegistered, setClusterRegistered] = useState<boolean>(false);\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo | undefined>();\n\n  const [initialLicenseLoading, setInitialLicenseLoading] =\n    useState<boolean>(true);\n  const [displaySubnetProxy, setDisplaySubnetProxy] = useState<boolean>(false);\n  const clearForm = () => {\n    setSubnetAccessToken(\"\");\n    setSelectedSubnetOrganization(\"\");\n    setSubnetRegToken(\"\");\n    setShowPassword(false);\n    setOnlineActivation(true);\n    setSubnetOrganizations([]);\n    setLicense(\"\");\n    setSubnetPassword(\"\");\n    setSubnetEmail(\"\");\n    setSubnetMFAToken(\"\");\n    setSubnetOTP(\"\");\n  };\n\n  const getSubnetInfo = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    IAM_PAGES_PERMISSIONS[IAM_PAGES.LICENSE],\n    true\n  );\n\n  const fetchLicenseInfo = useCallback(() => {\n    if (loadingLicenseInfo) {\n      return;\n    }\n    if (getSubnetInfo) {\n      setLoadingLicenseInfo(true);\n      api\n        .invoke(\"GET\", `/api/v1/subnet/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setClusterRegistered(true);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          if (err.errorMessage !== \"License not found\") {\n            displayErrorMessage(err);\n          }\n          setClusterRegistered(false);\n          setLoadingLicenseInfo(false);\n        });\n    } else {\n      setLoadingLicenseInfo(false);\n    }\n  }, [loadingLicenseInfo, getSubnetInfo, displayErrorMessage]);\n\n  const fetchSubnetRegToken = () => {\n    if (loading || subnetRegToken) {\n      return;\n    }\n    setLoading(true);\n    api\n      .invoke(\"GET\", \"/api/v1/subnet/registration-token\")\n      .then((resp: SubnetRegTokenResponse) => {\n        setLoading(false);\n        if (resp && resp.regToken) {\n          setSubnetRegToken(resp.regToken);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.log(err);\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  };\n\n  const callRegister = (token: string, account_id: string) => {\n    const request: SubnetRegisterRequest = {\n      token: token,\n      account_id: account_id,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/register\", request)\n      .then(() => {\n        setLoading(false);\n        clearForm();\n        fetchLicenseInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  };\n  const subnetRegister = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    if (subnetAccessToken && selectedSubnetOrganization) {\n      callRegister(subnetAccessToken, selectedSubnetOrganization);\n    }\n  };\n\n  const subnetLoginWithMFA = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    const request: SubnetLoginWithMFARequest = {\n      username: subnetEmail,\n      otp: subnetOTP,\n      mfa_token: subnetMFAToken,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login/mfa\", request)\n      .then((resp: SubnetLoginResponse) => {\n        setLoading(false);\n        if (resp && resp.access_token && resp.organizations.length > 0) {\n          if (resp.organizations.length === 1) {\n            callRegister(\n              resp.access_token,\n              resp.organizations[0].accountId.toString()\n            );\n          } else {\n            setSubnetAccessToken(resp.access_token);\n            setSubnetOrganizations(resp.organizations);\n            setSelectedSubnetOrganization(\n              resp.organizations[0].accountId.toString()\n            );\n          }\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n        setSubnetOTP(\"\");\n      });\n  };\n\n  const subnetLogin = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    let request: SubnetLoginRequest = {\n      username: subnetEmail,\n      password: subnetPassword,\n      apiKey: license,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login\", request)\n      .then((resp: SubnetLoginResponse) => {\n        setLoading(false);\n        if (resp && resp.registered) {\n          clearForm();\n          fetchLicenseInfo();\n        } else if (resp && resp.mfa_token) {\n          setSubnetMFAToken(resp.mfa_token);\n        } else if (resp && resp.access_token && resp.organizations.length > 0) {\n          setSubnetAccessToken(resp.access_token);\n          setSubnetOrganizations(resp.organizations);\n          setSelectedSubnetOrganization(\n            resp.organizations[0].accountId.toString()\n          );\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n        clearForm();\n      });\n  };\n\n  useEffect(() => {\n    if (initialLicenseLoading) {\n      fetchLicenseInfo();\n      setInitialLicenseLoading(false);\n    }\n  }, [fetchLicenseInfo, initialLicenseLoading, setInitialLicenseLoading]);\n\n  const formTitle = onlineActivation ? (\n    <Box\n      sx={{\n        \"& .title-text\": {\n          marginLeft: \"27px\",\n          fontWeight: 600,\n        },\n      }}\n    >\n      <FormTitle\n        icon={<OnlineRegistrationIcon />}\n        title={`Register with MinIO Subscription Network`}\n      />\n    </Box>\n  ) : (\n    <Box\n      sx={{\n        \"& .title-text\": {\n          marginLeft: \"27px\",\n          fontWeight: 600,\n        },\n      }}\n    >\n      <FormTitle\n        icon={<OfflineRegistrationIcon />}\n        title={` Offline Activation of SUBNET License`}\n      />\n    </Box>\n  );\n\n  let clusterRegistrationForm: JSX.Element;\n\n  if (onlineActivation) {\n    if (subnetAccessToken && subnetOrganizations.length > 0) {\n      clusterRegistrationForm = (\n        <Box\n          sx={{\n            display: \"flex\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: \"column\",\n              flex: \"2\",\n            }}\n          >\n            <Box\n              sx={{\n                marginTop: \"15px\",\n                marginBottom: \"15px\",\n                \"& .title-text\": {\n                  marginLeft: \"0px\",\n                },\n              }}\n            >\n              <FormTitle title={`Register MinIO cluster`} />\n            </Box>\n            <Box>\n              <SelectWrapper\n                id=\"subnet-organization\"\n                name=\"subnet-organization\"\n                onChange={(e) =>\n                  setSelectedSubnetOrganization(e.target.value as string)\n                }\n                label=\"Select an organization\"\n                value={selectedSubnetOrganization}\n                options={subnetOrganizations.map((organization) => ({\n                  label: organization.company,\n                  value: organization.accountId.toString(),\n                }))}\n              />\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"15px\",\n                }}\n              >\n                <Button\n                  className={classes.button}\n                  color=\"primary\"\n                  onClick={() => subnetRegister()}\n                  disabled={loading || subnetAccessToken.trim().length === 0}\n                  variant=\"contained\"\n                >\n                  Register\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n          <RegisterHelpBox />\n        </Box>\n      );\n    } else if (subnetMFAToken) {\n      clusterRegistrationForm = (\n        <Box\n          sx={{\n            display: \"flex\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: \"column\",\n              flex: \"2\",\n            }}\n          >\n            <Box\n              sx={{\n                fontSize: \"16px\",\n                display: \"flex\",\n                flexFlow: \"column\",\n                marginTop: \"30px\",\n                marginBottom: \"30px\",\n              }}\n            >\n              Two-Factor Authentication\n            </Box>\n\n            <Box>\n              Please enter the 6-digit verification code that was sent to your\n              email address. This code will be valid for 5 minutes.\n            </Box>\n\n            <Box\n              sx={{\n                flex: \"1\",\n                marginTop: \"30px\",\n              }}\n            >\n              <InputBoxWrapper\n                overlayIcon={<LockOutlinedIcon />}\n                id=\"subnet-otp\"\n                name=\"subnet-otp\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setSubnetOTP(event.target.value)\n                }\n                placeholder=\"\"\n                label=\"\"\n                value={subnetOTP}\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={() => subnetLoginWithMFA()}\n                disabled={\n                  loading ||\n                  subnetOTP.trim().length === 0 ||\n                  subnetMFAToken.trim().length === 0\n                }\n                variant=\"contained\"\n              >\n                Verify\n              </Button>\n            </Box>\n          </Box>\n\n          <RegisterHelpBox />\n        </Box>\n      );\n    } else {\n      clusterRegistrationForm = (\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: {\n              xs: \"column\",\n              md: \"row\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: \"column\",\n              flex: \"2\",\n            }}\n          >\n            <Box\n              sx={{\n                fontSize: \"16px\",\n                display: \"flex\",\n                flexFlow: \"column\",\n                marginTop: \"30px\",\n                marginBottom: \"30px\",\n              }}\n            >\n              Use your MinIO Subscription Network login credentials to register\n              this cluster.\n            </Box>\n            <Box\n              sx={{\n                flex: \"1\",\n              }}\n            >\n              <InputBoxWrapper\n                className={classes.spacerBottom}\n                classes={{\n                  inputLabel: classes.sizedLabel,\n                }}\n                id=\"subnet-email\"\n                name=\"subnet-email\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setSubnetEmail(event.target.value)\n                }\n                label=\"Email\"\n                value={subnetEmail}\n                overlayIcon={<UsersIcon />}\n              />\n              <InputBoxWrapper\n                className={classes.spacerBottom}\n                classes={{\n                  inputLabel: classes.sizedLabel,\n                }}\n                id=\"subnet-password\"\n                name=\"subnet-password\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setSubnetPassword(event.target.value)\n                }\n                label=\"Password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={subnetPassword}\n                overlayIcon={\n                  showPassword ? <VisibilityOffIcon /> : <RemoveRedEyeIcon />\n                }\n                overlayAction={() => setShowPassword(!showPassword)}\n              />\n\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  type=\"submit\"\n                  className={classes.spacerRight}\n                  variant=\"outlined\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    window.open(\n                      `https://min.io/signup?ref=${\n                        operatorMode ? \"op\" : \"con\"\n                      }`,\n                      \"_blank\"\n                    );\n                  }}\n                >\n                  Sign up\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={\n                    loading ||\n                    subnetEmail.trim().length === 0 ||\n                    subnetPassword.trim().length === 0\n                  }\n                  onClick={() => subnetLogin()}\n                >\n                  Register\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n          <RegisterHelpBox />\n        </Box>\n      );\n    }\n  } else {\n    clusterRegistrationForm = (\n      <Box\n        sx={{\n          display: \"flex\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n            marginTop: \"15px\",\n            \"& .step-number\": {\n              color: \"#ffffff\",\n              height: \"25px\",\n              width: \"25px\",\n              background: \"#081C42\",\n              marginRight: \"10px\",\n              textAlign: \"center\",\n              fontWeight: 600,\n              borderRadius: \"50%\",\n            },\n\n            \"& .step-row\": {\n              fontSize: \"16px\",\n              display: \"flex\",\n              marginTop: \"15px\",\n              marginBottom: \"15px\",\n            },\n          }}\n        >\n          <Box>\n            <Box className=\"step-row\">\n              <div className=\"step-number\">1</div>{\" \"}\n              <div className=\"step-text\">\n                Copy the following registration token\n              </div>\n            </Box>\n\n            <Box\n              sx={{\n                flex: \"1\",\n                marginTop: \"15px\",\n                marginLeft: \"35px\",\n                \"& input\": {\n                  color: \"#737373\",\n                },\n              }}\n            >\n              <InputBoxWrapper\n                id=\"registration-token\"\n                name=\"registration-token\"\n                placeholder=\"\"\n                label=\"\"\n                type=\"text\"\n                onChange={() => {}}\n                value={subnetRegToken}\n                overlayIcon={<CopyIcon />}\n                extraInputProps={{\n                  readOnly: true,\n                }}\n                overlayAction={() =>\n                  navigator.clipboard.writeText(subnetRegToken)\n                }\n              />\n            </Box>\n          </Box>\n\n          <Box>\n            <Box className=\"step-row\">\n              <div className=\"step-number\">2</div>\n              <div className=\"step-text\">\n                Navigate to SUBNET and register your cluster\n              </div>\n            </Box>\n\n            <Box\n              sx={{\n                flex: \"1\",\n                marginLeft: \"35px\",\n              }}\n            >\n              <Link\n                className={classes.link}\n                color=\"inherit\"\n                href=\"https://subnet.min.io/cluster/register\"\n                target=\"_blank\"\n              >\n                https://subnet.min.io/cluster/register\n              </Link>\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"15px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <Box className=\"step-row\">\n              <div className=\"step-number\">3</div>{\" \"}\n              <div className=\"step-text\">\n                Enter the API key generated by SUBNET\n              </div>\n            </Box>\n\n            <Box\n              sx={{\n                flex: \"1\",\n                marginTop: \"15px\",\n                marginLeft: \"35px\",\n              }}\n            >\n              <InputBoxWrapper\n                value={license}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setLicense(event.target.value)\n                }\n                id=\"api-key\"\n                name=\"api-key\"\n                placeholder=\"\"\n                label=\"\"\n                type=\"text\"\n              />\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              marginTop: \"15px\",\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => subnetLogin()}\n              disabled={loading || license.trim().length === 0}\n            >\n              Register\n            </Button>\n          </Box>\n        </Box>\n\n        <RegisterHelpBox />\n      </Box>\n    );\n  }\n\n  const proxyConfigurationCommand =\n    \"mc admin config set {alias} subnet proxy={proxy}\";\n\n  const regUi = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && (\n          <RegistrationStatusBanner email={licenseInfo?.email} />\n        )}\n        {clusterRegistered ? (\n          <Grid item xs={12} marginTop={\"25px\"}>\n            <Box\n              sx={{\n                padding: \"20px\",\n                //  border: \"1px solid #eaeaea\",\n                \"& a\": {\n                  color: \"#2781B0\",\n                  cursor: \"pointer\",\n                },\n              }}\n            >\n              Login to{\" \"}\n              <Link\n                href=\"https://subnet.min.io\"\n                target=\"_blank\"\n                className={classes.link}\n              >\n                SUBNET\n              </Link>{\" \"}\n              to avail support for this MinIO cluster\n            </Box>\n          </Grid>\n        ) : null}\n\n        {clusterRegistered ? null : formTitle}\n\n        {clusterRegistered ? null : clusterRegistrationForm}\n      </Box>\n\n      {!clusterRegistered && onlineActivation && (\n        <React.Fragment>\n          <Box\n            sx={{\n              border: \"1px solid #eaeaea\",\n              borderRadius: \"2px\",\n              display: \"flex\",\n              padding: \"23px\",\n              marginTop: \"40px\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  \"& .min-icon\": {\n                    height: \"22px\",\n                    width: \"22px\",\n                  },\n                }}\n              >\n                <SettingsIcon />\n                <div style={{ marginLeft: \"10px\", fontWeight: 600 }}>\n                  Proxy Configuration\n                </div>\n              </Box>\n              <Box\n                sx={{\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                For airgap/firewalled environments it is possible to{\" \"}\n                <Link\n                  className={classes.link}\n                  href=\"https://docs.min.io/docs/minio-server-configuration-guide.html?ref=con\"\n                  target=\"_blank\"\n                >\n                  configure a proxy\n                </Link>{\" \"}\n                to connect to SUBNET .\n              </Box>\n              <Box>\n                {displaySubnetProxy && (\n                  <InputBoxWrapper\n                    disabled\n                    id=\"subnetProxy\"\n                    name=\"subnetProxy\"\n                    placeholder=\"\"\n                    onChange={() => {}}\n                    label=\"\"\n                    value={proxyConfigurationCommand}\n                    overlayIcon={<CopyIcon />}\n                    extraInputProps={{\n                      readOnly: true,\n                    }}\n                    overlayAction={() =>\n                      navigator.clipboard.writeText(proxyConfigurationCommand)\n                    }\n                  />\n                )}\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n              }}\n            >\n              <FormSwitchWrapper\n                value=\"enableProxy\"\n                id=\"enableProxy\"\n                name=\"enableProxy\"\n                checked={displaySubnetProxy}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setDisplaySubnetProxy(event.target.checked);\n                }}\n              />\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              border: \"1px solid #eaeaea\",\n              borderRadius: \"2px\",\n              display: \"flex\",\n              padding: \"23px\",\n              marginTop: \"40px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <OfflineRegistrationBackIcon /> Cluster does not have internet\n              access? Use{\" \"}\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"8px\",\n              }}\n            >\n              <Link\n                className={classes.link}\n                onClick={() => {\n                  fetchSubnetRegToken();\n                  setOnlineActivation(!onlineActivation);\n                }}\n              >\n                Offline Activation.\n              </Link>\n            </Box>\n          </Box>\n        </React.Fragment>\n      )}\n    </Fragment>\n  );\n\n  const loadingUi = <div>Loading..</div>;\n  const uiToShow = loadingLicenseInfo ? loadingUi : regUi;\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            {!onlineActivation ? (\n              <BackLink\n                to={IAM_PAGES.REGISTER_SUPPORT}\n                label={\"Offline Registration\"}\n                executeOnClick={() => {\n                  fetchSubnetRegToken();\n                  setOnlineActivation(!onlineActivation);\n                }}\n              />\n            ) : (\n              \"Register\"\n            )}\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>{uiToShow}</PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(Register));\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport VerifiedIcon from \"../../../icons/VerifiedIcon\";\n\nconst RegistrationStatusBanner = ({ email = \"\" }: { email?: string }) => {\n  return (\n    <Box\n      sx={{\n        height: \"67px\",\n        color: \"#ffffff\",\n        display: \"flex\",\n        position: \"relative\",\n        top: \"-30px\",\n        left: \"-32px\",\n        width: \"calc(100% + 64px)\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#2781B0\",\n        padding: \"0 25px 0 25px\",\n        \"& .registered-box, .reg-badge-box\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        },\n\n        \"& .reg-badge-box\": {\n          marginLeft: \"20px\",\n\n          \"& .min-icon\": {\n            fill: \"#2781B0\",\n          },\n        },\n      }}\n    >\n      <Box className=\"registered-box\">\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Register status:</Box>\n        <Box className=\"reg-badge-box\">\n          <VerifiedIcon />\n          <Box\n            sx={{\n              fontWeight: 600,\n            }}\n          >\n            Registered\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        className=\"registered-acc-box\"\n        sx={{\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          display: {\n            sm: \"flex\",\n            xs: \"none\",\n          },\n        }}\n      >\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Registered to:</Box>\n        <Box sx={{ marginLeft: \"8px\", fontWeight: 600 }}>{email}</Box>\n      </Box>\n    </Box>\n  );\n};\nexport default RegistrationStatusBanner;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;"],"names":["FeatureItem","icon","description","Box","sx","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","hasMargin","flex","border","borderRadius","flexFlow","padding","marginLeft","xs","sm","md","marginTop","fontWeight","alignItems","FormTitle","title","justifyContent","className","connector","connect","state","operatorMode","system","displayErrorMessage","setErrorSnackMessage","withStyles","theme","createStyles","registerActivationIcon","palette","primary","main","verticalAlign","registerActivationMode","textAlign","cursor","subnetDescription","Font","letterSpacing","registeredStatus","backgroundColor","copyInputBox","link","sizedLabel","minWidth","actionsTray","searchField","spacingUtils","containerForHeader","spacing","classes","useState","license","setLicense","subnetPassword","setSubnetPassword","subnetEmail","setSubnetEmail","subnetMFAToken","setSubnetMFAToken","subnetOTP","setSubnetOTP","subnetAccessToken","setSubnetAccessToken","selectedSubnetOrganization","setSelectedSubnetOrganization","subnetRegToken","setSubnetRegToken","subnetOrganizations","setSubnetOrganizations","showPassword","setShowPassword","onlineActivation","setOnlineActivation","loading","setLoading","loadingLicenseInfo","setLoadingLicenseInfo","clusterRegistered","setClusterRegistered","licenseInfo","setLicenseInfo","initialLicenseLoading","setInitialLicenseLoading","displaySubnetProxy","setDisplaySubnetProxy","clearForm","getSubnetInfo","hasPermission","CONSOLE_UI_RESOURCE","IAM_PAGES_PERMISSIONS","IAM_PAGES","fetchLicenseInfo","useCallback","api","then","res","catch","err","errorMessage","fetchSubnetRegToken","resp","regToken","console","log","callRegister","token","account_id","request","subnetLogin","username","password","apiKey","registered","mfa_token","access_token","organizations","length","accountId","toString","useEffect","clusterRegistrationForm","formTitle","OnlineRegistrationIcon","OfflineRegistrationIcon","SelectWrapper","id","name","onChange","e","target","value","label","options","map","organization","company","Button","button","onClick","disabled","trim","variant","InputBoxWrapper","overlayIcon","LockOutlined","event","placeholder","otp","subnetLoginWithMFA","spacerBottom","inputLabel","type","VisibilityOff","RemoveRedEye","overlayAction","spacerRight","preventDefault","window","open","background","extraInputProps","readOnly","navigator","clipboard","writeText","Link","href","proxyConfigurationCommand","regUi","Fragment","RegistrationStatusBanner","email","Grid","item","SettingsIcon","FormSwitchWrapper","checked","OfflineRegistrationBackIcon","uiToShow","PageHeader","BackLink","to","executeOnClick","actions","PageLayout","position","top","left","fill","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}