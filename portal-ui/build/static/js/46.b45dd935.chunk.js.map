{"version":3,"sources":["../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/Dialog/dialogClasses.js","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx"],"names":["DialogContext","createContext","getDialogTitleUtilityClass","slot","generateUtilityClass","dialogTitleClasses","generateUtilityClasses","getDialogUtilityClass","dialogClasses","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","_excluded","DialogBackdrop","styled","Backdrop","name","overrides","props","styles","backdrop","DialogRoot","Modal","overridesResolver","DialogContainer","ownerState","container","capitalize","_extends","outline","justifyContent","overflowY","overflowX","textAlign","verticalAlign","DialogPaper","Paper","String","paperFullWidth","fullScreen","paperFullScreen","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","paperScrollBody","down","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","React","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","TransitionProps","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","as","closeAfterTransition","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","value","DialogTitleRoot","Typography","flex","idProp","id","component","variant","getDialogContentUtilityClass","DialogContentRoot","dividers","WebkitOverflowScrolling","borderTop","palette","divider","borderBottom","paddingTop","predefinedList","label","multiLine","prefinedContainer","item","predefinedTitle","innerContentMultiline","innerContent","noFound","searchBox","fieldLabel","tableBlock","tableStyles","filterBox","marginBottom","searchField","actionsTray","selectorsCommon","selectedPolicy","setSelectedPolicy","records","setRecords","loading","isLoading","filter","setFilter","fetchPolicies","api","invoke","then","res","policies","sort","policySort","catch","err","filteredRecords","elementItem","includes","Fragment","placeholder","onChange","columns","elementKey","onSelect","e","targetD","checked","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable","modalBasic","spacingUtils","buttonContainer","closeModalAndRefresh","selectedUser","selectedGroup","setLoading","actualPolicy","setActualPolicy","encodeURI","groupPolicy","split","userPolicy","userName","join","spacerRight","disabled","entity","accessKey","entityType"],"mappings":"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","file":"static/js/46.b45dd935.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Kubernetes Cloud\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  setSelectedPolicy: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n  setSelectedPolicy,\n  setModalErrorSnackMessage,\n}: ISelectPolicyProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedPolicy]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    setSelectedPolicy(elements);\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Filter Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selectedPolicy}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PolicySelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroup: string | null;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroup,\n  setModalErrorSnackMessage,\n  open,\n}: ISetPolicyProps) => {\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n\n  const setPolicyAction = () => {\n    let entity = \"user\";\n    let value = null;\n    if (selectedGroup !== null) {\n      entity = \"group\";\n      value = selectedGroup;\n    } else {\n      if (selectedUser !== null) {\n        value = selectedUser.accessKey;\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy`, {\n        name: selectedPolicy,\n        entityName: value,\n        entityType: entity,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroup) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroup !== null) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroup, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid item xs={12}>\n        <PredefinedList\n          label={`Selected ${selectedGroup !== null ? \"Group\" : \"User\"}`}\n          content={selectedGroup !== null ? selectedGroup : userName}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PredefinedList\n          label={\"Current Policy\"}\n          content={actualPolicy.join(\", \")}\n        />\n      </Grid>\n      <div className={classes.tableBlock}>\n        <PolicySelectors\n          selectedPolicy={selectedPolicy}\n          setSelectedPolicy={setSelectedPolicy}\n        />\n      </div>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n        >\n          Reset\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(SetPolicy));\n"],"sourceRoot":""}