{"version":3,"file":"static/js/6137.8b758e88.chunk.js","mappings":"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","sources":["common/BackLink.tsx","screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/NotificationEndpoints/AddNotificationEndpoint.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"block\",\n      textDecoration: \"none\",\n      \"&:active\": {\n        color: theme.palette.primary.light,\n      },\n    },\n    iconBox: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      \"&:hover\": {\n        background: \"rgba(234,237,238)\",\n      },\n      height: \"30px\",\n      paddingBottom: 4,\n      paddingTop: 8,\n      paddingRight: 16,\n      paddingLeft: 0,\n      borderRadius: 4,\n    },\n    icon: {\n      lineHeight: 1,\n      marginRight: \"14px\",\n      alignItems: \"center\",\n      width: \"22px\",\n      \"& .min-icon\": {\n        color: theme.palette.primary.light,\n        width: \"16px\",\n        height: \"16px\",\n      },\n    },\n    label: {\n      lineHeight: 1,\n      alignItems: \"center\",\n      paddingTop: 1,\n      fontSize: \"14px\",\n      fontWeight: 600,\n      color: theme.palette.primary.light,\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n  executeOnClick?: () => void;\n}\n\nconst BackLink = ({\n  to,\n  label,\n  classes,\n  className,\n  executeOnClick,\n}: IBackLink) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <Link\n        to={to}\n        className={`${classes.link} ${className ? className : \"\"}`}\n        onClick={() => {\n          if (executeOnClick) {\n            executeOnClick();\n          }\n        }}\n      >\n        <div className={classes.iconBox}>\n          <div className={classes.icon}>\n            <BackSettingsIcon />\n          </div>\n          <div className={classes.label}>{label}</div>\n        </div>\n      </Link>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...props} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n  features: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 21,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n  features,\n}: IPageHeader) => {\n  if (features.includes(\"hide-menu\")) {\n    return <Fragment />;\n  }\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            id=\"object-manager-toggle\"\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n  features: state.console.session.features,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\n\nimport api from \"../../../common/api\";\nimport { serverNeedsRestart, setErrorSnackMessage } from \"../../../actions\";\nimport {\n  notificationEndpointsFields,\n  notifyMysql,\n  notifyPostgres,\n  removeEmptyFields,\n} from \"./utils\";\nimport {\n  modalBasic,\n  settingsCommon,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { servicesList } from \"./utils\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { IElementValue } from \"../Configurations/types\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport history from \"../../../history\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\nconst ConfMySql = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfMySql\"))\n);\n\nconst ConfTargetGeneric = withSuspense(\n  React.lazy(() => import(\"./ConfTargetGeneric\"))\n);\n\nconst ConfPostgres = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfPostgres\"))\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    formBox: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  match: any;\n  saveAndRefresh: any;\n  serverNeedsRestart: typeof serverNeedsRestart;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n}\n\nconst AddNotificationEndpoint = ({\n  match,\n  saveAndRefresh,\n  serverNeedsRestart,\n  classes,\n  setErrorSnackMessage,\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const service = match.params[\"service\"];\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesArr),\n      };\n      api\n        .invoke(\"PUT\", `/api/v1/configs/${service}`, payload)\n        .then(() => {\n          setSaving(false);\n          serverNeedsRestart(true);\n          history.push(IAM_PAGES.NOTIFICATIONS_ENDPOINTS);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    saving,\n    serverNeedsRestart,\n    service,\n    valuesArr,\n    saveAndRefresh,\n    setErrorSnackMessage,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue) => {\n      setValueArr(newValue);\n    },\n    [setValueArr]\n  );\n\n  let srvComponent;\n  switch (service) {\n    case notifyPostgres: {\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\n      break;\n    }\n    case notifyMysql: {\n      srvComponent = <ConfMySql onChange={onValueChange} />;\n      break;\n    }\n    default: {\n      const fields = get(notificationEndpointsFields, service, []);\n\n      srvComponent = (\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\n      );\n    }\n  }\n\n  const targetElement = servicesList.find(\n    (element) => element.actionTrigger === service\n  );\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}\n              label=\"Notification Endpoint\"\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <form noValidate onSubmit={submitForm}>\n          {service !== \"\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                {targetElement && (\n                  <div\n                    key={`icon-${targetElement.targetTitle}`}\n                    className={classes.lambdaNotif}\n                  >\n                    <div className={classes.lambdaNotifIcon}>\n                      <img\n                        src={targetElement.logo}\n                        className={classes.logoButton}\n                        alt={targetElement.targetTitle}\n                      />\n                    </div>\n\n                    <div className={classes.lambdaNotifTitle}>\n                      <b>\n                        {targetElement ? targetElement.targetTitle : \"\"}\n                        Notification Endpoint\n                      </b>\n                    </div>\n                  </div>\n                )}\n              </Grid>\n              <div className={classes.formBox}>\n                <Grid item xs={12} className={classes.configForm}>\n                  {srvComponent}\n                </Grid>\n                <Grid item xs={12} className={classes.settingsButtonContainer}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={saving}\n                  >\n                    Save Notification Target\n                  </Button>\n                </Grid>\n              </div>\n            </Fragment>\n          )}\n        </form>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  serverNeedsRestart,\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(AddNotificationEndpoint));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: \"Queue Directory\",\n    required: true,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue-limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n"],"names":["withStyles","theme","createStyles","link","display","textDecoration","color","palette","primary","light","iconBox","flexDirection","background","height","paddingBottom","paddingTop","paddingRight","paddingLeft","borderRadius","icon","lineHeight","marginRight","alignItems","width","label","fontSize","fontWeight","to","classes","className","executeOnClick","sx","onClick","WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","pageContentStyles","children","contentSpacer","container","item","xs","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","features","console","session","headerContainer","minHeight","backgroundColor","left","boxShadow","justifyContent","labelStyle","marginLeft","marginTop","rightMenu","textAlign","logo","fill","main","middleComponent","actions","includes","Fragment","direction","sm","md","variant","length","component","id","size","ConfMySql","withSuspense","React","ConfTargetGeneric","ConfPostgres","serverNeedsRestart","setErrorSnackMessage","modalBasic","settingsCommon","lambdaNotif","border","marginBottom","cursor","padding","overflow","lambdaNotifIcon","maxWidth","maxHeight","lambdaNotifTitle","fontFamily","formBox","match","saveAndRefresh","useState","valuesArr","setValueArr","saving","setSaving","service","params","useEffect","payload","key_values","removeEmptyFields","api","then","history","IAM_PAGES","catch","err","srvComponent","onValueChange","useCallback","newValue","notifyPostgres","onChange","notifyMysql","fields","get","notificationEndpointsFields","targetElement","servicesList","element","actionTrigger","noValidate","onSubmit","event","preventDefault","src","logoButton","alt","targetTitle","configForm","settingsButtonContainer","type","disabled","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","map","service_name","account_id","status","commonFields","name","required","tooltip","placeholder","formFields","filter","field","value"],"sourceRoot":""}