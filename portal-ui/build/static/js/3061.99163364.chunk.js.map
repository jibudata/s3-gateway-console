{"version":3,"file":"static/js/3061.99163364.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Tenants/ListTenants/InformationItem.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx","screens/Console/Common/UsageBar/UsageBar.tsx","screens/Console/Tenants/ListTenants/TenantCapacity.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...props} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface IInformationItemProps {\n  label: string;\n  value: string;\n  unit?: string;\n  variant?: \"normal\" | \"faded\";\n}\n\nconst InformationItem = ({\n  label,\n  value,\n  unit,\n  variant = \"normal\",\n}: IInformationItemProps) => {\n  return (\n    <div style={{ margin: \"0px 20px\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <span\n          style={{\n            fontSize: 18,\n            color: variant === \"normal\" ? \"#000\" : \"#999\",\n            fontWeight: 400,\n          }}\n        >\n          {value}\n        </span>\n        {unit && (\n          <Fragment>\n            {\" \"}\n            <span\n              style={{ fontSize: 12, color: \"#8F9090\", fontWeight: \"bold\" }}\n            >\n              {unit}\n            </span>\n          </Fragment>\n        )}\n      </div>\n      <div\n        style={{\n          textAlign: \"center\",\n          color: variant === \"normal\" ? \"#767676\" : \"#bababa\",\n          fontSize: 12,\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {label}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { CapacityValues, ITenant, ValueUnit } from \"./types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport Grid from \"@mui/material/Grid\";\nimport history from \"../../../../history\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\nimport InformationItem from \"./InformationItem\";\nimport TenantCapacity from \"./TenantCapacity\";\nimport { DrivesIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    tenantIcon: { width: 40, height: 40, position: \"relative\" },\n    tenantItem: {\n      border: \"1px solid #EAEAEA\",\n      marginBottom: 16,\n      padding: \"15px 30px\",\n      \"&:hover\": {\n        backgroundColor: \"#FAFAFA\",\n        cursor: \"pointer\",\n      },\n    },\n    titleContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n    },\n    title: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n    },\n    namespaceLabel: {\n      display: \"inline-flex\",\n      backgroundColor: \"#EAEDEF\",\n      borderRadius: 2,\n      padding: \"4px 8px\",\n      fontSize: 10,\n      marginRight: 20,\n    },\n    status: {\n      fontSize: 12,\n      color: \"#8F9090\",\n    },\n  });\n\ninterface ITenantListItem {\n  tenant: ITenant;\n  classes: any;\n}\n\nconst TenantListItem = ({ tenant, classes }: ITenantListItem) => {\n  const healthStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"red\":\n        return classes.redState;\n      case \"yellow\":\n        return classes.yellowState;\n      case \"green\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  let raw: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let used: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let localUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let tieredUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (tenant.capacity_raw) {\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\n    const parts = b.split(\" \");\n    raw.value = parts[0];\n    raw.unit = parts[1];\n  }\n  if (tenant.capacity) {\n    const b = niceBytes(`${tenant.capacity}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (tenant.capacity_usage) {\n    const b = niceBytesInt(tenant.capacity_usage, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let spaceVariants: CapacityValues[] = [];\n  if (!tenant.tiers || tenant.tiers.length === 0) {\n    spaceVariants = [\n      { value: tenant.capacity_usage || 0, variant: \"STANDARD\" },\n    ];\n  } else {\n    spaceVariants = tenant.tiers.map((itemTenant) => {\n      return { value: itemTenant.size, variant: itemTenant.name };\n    });\n    let internalUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type === \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n    let tieredUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type !== \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n\n    const t = niceBytesInt(tieredUsage, true);\n    const parts = t.split(\" \");\n    tieredUse.value = parts[0];\n    tieredUse.unit = parts[1];\n\n    const is = niceBytesInt(internalUsage, true);\n    const partsInternal = is.split(\" \");\n    localUse.value = partsInternal[0];\n    localUse.unit = partsInternal[1];\n  }\n\n  const openTenantDetails = () => {\n    history.push(`/namespaces/${tenant.namespace}/tenants/${tenant.name}`);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={classes.tenantItem}\n        id={`list-tenant-${tenant.name}`}\n        onClick={openTenantDetails}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.titleContainer}>\n            <div className={classes.title}>\n              <span>{tenant.name}</span>\n            </div>\n            <div>\n              <span className={classes.namespaceLabel}>\n                Namespace:&nbsp;{tenant.namespace}\n              </span>\n            </div>\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: 2 }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <TenantCapacity\n                  totalCapacity={tenant.capacity_raw || 0}\n                  usedSpaceVariants={spaceVariants}\n                  statusClass={healthStatusToClass(tenant.health_status)}\n                />\n              </Grid>\n              <Grid item xs>\n                <Grid\n                  item\n                  xs\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <InformationItem\n                    label={\"Raw Capacity\"}\n                    value={raw.value}\n                    unit={raw.unit}\n                  />\n                  <InformationItem\n                    label={\"Usable Capacity\"}\n                    value={capacity.value}\n                    unit={capacity.unit}\n                  />\n                  <InformationItem\n                    label={\"Pools\"}\n                    value={tenant.pool_count.toString()}\n                    variant={\"faded\"}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ paddingLeft: \"20px\", marginTop: \"15px\" }}\n                >\n                  <span className={classes.status}>\n                    <strong>State:</strong> {tenant.currentState}\n                  </span>\n                </Grid>\n              </Grid>\n              <Grid item xs={3}>\n                <Fragment>\n                  <Grid container>\n                    <Grid\n                      item\n                      xs={2}\n                      textAlign={\"center\"}\n                      justifyContent={\"center\"}\n                      justifyItems={\"center\"}\n                    >\n                      <DrivesIcon\n                        style={{ width: 25, color: \"rgb(91,91,91)\" }}\n                      />\n                      <div\n                        style={{\n                          color: \"rgb(118, 118, 118)\",\n                          fontSize: 12,\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Usage\n                      </div>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item style={{ paddingTop: 8 }}>\n                      {(!tenant.tiers || tenant.tiers.length === 0) && (\n                        <div\n                          style={{\n                            fontSize: 14,\n                            fontWeight: 400,\n                          }}\n                        >\n                          <span\n                            style={{\n                              color: \"rgb(62,62,62)\",\n                            }}\n                          >\n                            Internal:{\" \"}\n                          </span>{\" \"}\n                          {`${used.value} ${used.unit}`}\n                        </div>\n                      )}\n\n                      {tenant.tiers && tenant.tiers.length > 0 && (\n                        <Fragment>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Internal:{\" \"}\n                            </span>{\" \"}\n                            {`${localUse.value} ${localUse.unit}`}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Tiered:{\" \"}\n                            </span>{\" \"}\n                            {`${tieredUse.value} ${tieredUse.unit}`}\n                          </div>\n                        </Fragment>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(TenantListItem));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ITenant, ITenantsResponse } from \"./types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AddIcon, TenantsIcon } from \"../../../../icons\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport history from \"../../../../history\";\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport TenantListItem from \"./TenantListItem\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport AButton from \"../../Common/AButton/AButton\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nconst CredentialsPrompt = withSuspense(\n  React.lazy(() => import(\"../../Common/CredentialsPrompt/CredentialsPrompt\"))\n);\n\ninterface ITenantsList {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n    theaderSearch: {\n      borderColor: theme.palette.grey[\"200\"],\n      \"& .MuiInputBase-input\": {\n        paddingTop: 10,\n        paddingBottom: 10,\n      },\n      \"& .MuiInputBase-root\": {\n        \"& .MuiInputAdornment-root\": {\n          \"& .min-icon\": {\n            color: theme.palette.grey[\"400\"],\n            height: 14,\n          },\n        },\n      },\n      actionHeaderItems: {\n        \"@media (min-width: 320px)\": {\n          marginTop: 8,\n        },\n      },\n      marginRight: 10,\n      marginLeft: 10,\n    },\n    tenantsList: {\n      height: \"calc(100vh - 195px)\",\n    },\n  });\n\nconst ListTenants = ({ classes, setErrorSnackMessage }: ITenantsList) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\n  const [records, setRecords] = useState<any[]>([]);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setCreatedAccount(null);\n  };\n\n  const filteredRecords = records.filter((b: any) => {\n    if (filterTenants === \"\") {\n      return true;\n    } else {\n      if (b.name.indexOf(filterTenants) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/tenants`)\n          .then((res: ITenantsResponse) => {\n            if (res === null) {\n              setIsLoading(false);\n              return;\n            }\n            let resTenants: ITenant[] = [];\n            if (res.tenants !== null) {\n              resTenants = res.tenants;\n            }\n\n            for (let i = 0; i < resTenants.length; i++) {\n              resTenants[i].total_capacity = niceBytes(\n                resTenants[i].total_size + \"\"\n              );\n            }\n\n            setRecords(resTenants);\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, setErrorSnackMessage]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const renderItemLine = (index: number) => {\n    const tenant = filteredRecords[index] || null;\n\n    if (tenant) {\n      return <TenantListItem tenant={tenant} />;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeader\n        label=\"Tenants\"\n        middleComponent={\n          <SearchBox\n            placeholder={\"Filter Tenants\"}\n            onChange={(val) => {\n              setFilterTenants(val);\n            }}\n            value={filterTenants}\n          />\n        }\n        actions={\n          <Grid item xs={12} marginRight={\"30px\"}>\n            <RBIconButton\n              id={\"refresh-tenant-list\"}\n              tooltip={\"Refresh Tenant List\"}\n              text={\"\"}\n              onClick={() => {\n                setIsLoading(true);\n              }}\n              icon={<RefreshIcon />}\n              color=\"primary\"\n              variant={\"outlined\"}\n            />\n            <RBIconButton\n              id={\"create-tenant\"}\n              tooltip={\"Create Tenant\"}\n              text={\"Create Tenant\"}\n              onClick={() => {\n                history.push(\"/tenants/add\");\n              }}\n              icon={<AddIcon />}\n              color=\"primary\"\n              variant={\"contained\"}\n            />\n          </Grid>\n        }\n      />\n      <PageLayout>\n        <Grid item xs={12} className={classes.tenantsList}>\n          {isLoading && <LinearProgress />}\n          {!isLoading && (\n            <Fragment>\n              {filteredRecords.length !== 0 && (\n                <VirtualizedList\n                  rowRenderFunction={renderItemLine}\n                  totalItems={filteredRecords.length}\n                />\n              )}\n              {filteredRecords.length === 0 && (\n                <Grid\n                  container\n                  justifyContent={\"center\"}\n                  alignContent={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <Grid item xs={8}>\n                    <HelpBox\n                      iconComponent={<TenantsIcon />}\n                      title={\"Tenants\"}\n                      help={\n                        <Fragment>\n                          Tenant is the logical structure to represent a MinIO\n                          deployment. A tenant can have different size and\n                          configurations from other tenants, even a different\n                          storage class.\n                          <br />\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              history.push(\"/tenants/add\");\n                            }}\n                          >\n                            Create a Tenant.\n                          </AButton>\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ListTenants));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nexport interface ISizeBarItem {\n  value: number;\n  itemName: string;\n  color: string;\n}\n\nexport interface IUsageBar {\n  totalValue: number;\n  sizeItems: ISizeBarItem[];\n  bgColor?: string;\n}\n\nconst UsageBar = ({\n  totalValue,\n  sizeItems,\n  bgColor = \"#ededed\",\n}: IUsageBar) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 12,\n        backgroundColor: bgColor,\n        borderRadius: 30,\n        display: \"flex\",\n        transitionDuration: \"0.3s\",\n        overflow: \"hidden\",\n      }}\n    >\n      {sizeItems.map((sizeElement, index) => {\n        const itemPercentage = (sizeElement.value * 100) / totalValue;\n        return (\n          <div\n            key={`itemSize-${index.toString()}`}\n            style={{\n              width: `${itemPercentage}%`,\n              height: \"100%\",\n              backgroundColor: sizeElement.color,\n              transitionDuration: \"0.3s\",\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsageBar;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport { CapacityValue, CapacityValues } from \"./types\";\nimport { niceBytesInt } from \"../../../../common/utils\";\nimport { CircleIcon } from \"../../../../icons\";\nimport UsageBar, { ISizeBarItem } from \"../../Common/UsageBar/UsageBar\";\n\ninterface ITenantCapacity {\n  totalCapacity: number;\n  usedSpaceVariants: CapacityValues[];\n  statusClass: string;\n  render?: \"pie\" | \"bar\";\n}\n\nconst TenantCapacity = ({\n  totalCapacity,\n  usedSpaceVariants,\n  statusClass,\n  render = \"pie\",\n}: ITenantCapacity) => {\n  const colors = [\n    \"#8dacd3\",\n    \"#bca1ea\",\n    \"#92e8d2\",\n    \"#efc9ac\",\n    \"#97f274\",\n    \"#f7d291\",\n    \"#71ACCB\",\n    \"#f28282\",\n    \"#e28cc1\",\n    \"#2781B0\",\n  ];\n\n  const BGColor = \"#ededed\";\n\n  const totalUsedSpace = usedSpaceVariants.reduce((acc, currValue) => {\n    return acc + currValue.value;\n  }, 0);\n\n  const emptySpace = totalCapacity - totalUsedSpace;\n\n  let tiersList: CapacityValue[] = [];\n\n  const standardTier = usedSpaceVariants.find(\n    (tier) => tier.variant === \"STANDARD\"\n  ) || {\n    value: 0,\n    variant: \"empty\",\n  };\n\n  if (usedSpaceVariants.length > 10) {\n    const totalUsedByTiers = totalUsedSpace - standardTier.value;\n\n    tiersList = [\n      { value: totalUsedByTiers, color: \"#2781B0\", label: \"Total Tiers Space\" },\n    ];\n  } else {\n    tiersList = usedSpaceVariants\n      .filter((variant) => variant.variant !== \"STANDARD\")\n      .map((variant, index) => {\n        return {\n          value: variant.value,\n          color: colors[index],\n          label: `Tier - ${variant.variant}`,\n        };\n      });\n  }\n\n  let standardTierColor = \"#07193E\";\n\n  const usedPercentage = (standardTier.value * 100) / totalCapacity;\n\n  if (usedPercentage >= 90) {\n    standardTierColor = \"#C83B51\";\n  } else if (usedPercentage >= 75) {\n    standardTierColor = \"#FFAB0F\";\n  }\n\n  const plotValues: CapacityValue[] = [\n    {\n      value: standardTier.value,\n      color: standardTierColor,\n      label: \"Used Space by Tenant\",\n    },\n    ...tiersList,\n    {\n      value: emptySpace,\n      color: render === \"bar\" ? BGColor : \"transparent\",\n      label: \"Empty Space\",\n    },\n  ];\n\n  if (render === \"bar\") {\n    const plotValuesForUsageBar: ISizeBarItem[] = plotValues.map((plotVal) => {\n      return {\n        value: plotVal.value,\n        color: plotVal.color,\n        itemName: plotVal.label,\n      };\n    });\n\n    return (\n      <div style={{ width: \"100%\", marginBottom: 15 }}>\n        <UsageBar\n          totalValue={totalCapacity}\n          sizeItems={plotValuesForUsageBar}\n          bgColor={BGColor}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ position: \"relative\", width: 110, height: 110 }}>\n      <div\n        style={{ position: \"absolute\", right: -5, top: 15, zIndex: 400 }}\n        className={statusClass}\n      >\n        <CircleIcon\n          style={{\n            border: \"#fff 2px solid\",\n            borderRadius: \"100%\",\n            width: 20,\n            height: 20,\n          }}\n        />\n      </div>\n      <span\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          fontWeight: \"bold\",\n          color: \"#000\",\n          fontSize: 12,\n        }}\n      >\n        {!isNaN(totalUsedSpace) ? niceBytesInt(totalUsedSpace) : \"N/A\"}\n      </span>\n      <div>\n        <PieChart width={110} height={110}>\n          <Pie\n            data={[{ value: 100 }]}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n            fill={BGColor}\n            isAnimationActive={false}\n            stroke={\"none\"}\n          />\n          <Pie\n            data={plotValues}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n          >\n            {plotValues.map((entry, index) => (\n              <Cell\n                key={`cellCapacity-${index}`}\n                fill={entry.color}\n                stroke={\"none\"}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\nexport default TenantCapacity;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","margin","textDecoration","cursor","color","palette","info","main","fontFamily","children","rest","WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","id","label","InputProps","e","target","variant","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","index","style","Fragment","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","itemSize","unit","textAlign","whiteSpace","connector","connect","setErrorSnackMessage","redState","error","float","yellowState","warning","greenState","success","greyState","tenantIcon","tenantItem","titleContainer","justifyContent","namespaceLabel","status","tenant","raw","capacity","used","localUse","tieredUse","capacity_raw","parts","niceBytes","split","capacity_usage","niceBytesInt","spaceVariants","tiers","length","map","itemTenant","size","name","internalUsage","filter","type","reduce","sum","tieredUsage","partsInternal","onClick","history","namespace","Grid","sx","marginTop","TenantCapacity","totalCapacity","usedSpaceVariants","statusClass","health_status","healthStatusToClass","pool_count","toString","currentState","justifyItems","CredentialsPrompt","withSuspense","React","actionsTray","containerForHeader","spacing","theaderSearch","borderColor","grey","actionHeaderItems","marginLeft","tenantsList","useState","isLoading","setIsLoading","filterTenants","setFilterTenants","records","setRecords","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","filteredRecords","b","indexOf","useEffect","api","then","res","resTenants","tenants","i","total_capacity","total_size","catch","err","newServiceAccount","open","closeModal","entity","PageHeader","middleComponent","SearchBox","val","actions","RBIconButton","tooltip","text","icon","RefreshIcon","PageLayout","LinearProgress","VirtualizedList","alignContent","HelpBox","AButton","totalValue","sizeItems","bgColor","transitionDuration","overflow","sizeElement","itemPercentage","render","colors","BGColor","totalUsedSpace","acc","currValue","emptySpace","tiersList","standardTier","find","tier","standardTierColor","usedPercentage","plotValues","plotValuesForUsageBar","plotVal","itemName","right","top","zIndex","left","transform","isNaN","PieChart","Pie","data","cx","cy","dataKey","outerRadius","innerRadius","fill","isAnimationActive","stroke","entry","Cell"],"sourceRoot":""}