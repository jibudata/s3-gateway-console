{"version":3,"file":"static/js/1865.2c84acc0.chunk.js","mappings":"uSA2HA,WAAeA,EAAAA,EAAAA,IAhFA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,kCACRC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACF,GA0EL,EAxEyB,SAAH,GAAa,EAAPC,QAA0B,IACpD,GAAgDC,EAAAA,EAAAA,WAAkB,GAAM,eAAjEC,EAAgB,KAAEC,EAAmB,KAC5C,GAA4BF,EAAAA,EAAAA,UAAiB,GAAE,eAAxCG,EAAM,KAAEC,EAAS,KAElBC,GAAkBC,EAAAA,EAAAA,cAAY,WAClCC,EAAAA,EAAAA,OACU,MAAM,8BACbC,MAAK,SAACC,GACLP,GAAoB,EACtB,IACCQ,OAAM,SAACC,GACNT,GAAoB,EACtB,GACJ,GAAG,KAEHU,EAAAA,EAAAA,YAAU,WACRP,GACF,GAAG,CAACA,IAEJ,IAAMQ,GACJ,SAAC,EAAAC,SAAQ,WACP,SAAC,IAAG,CACFC,GAAI,CACFC,OAAQ,oBACRC,aAAc,MACdC,QAAS,OACTC,SAAU,SACVC,QAAS,QACT,SAEDnB,GACC,SAAC,KAAiB,CAACoB,MAAO,cAE1B,SAAC,IAAc,CAACC,iBAAkB,uCAM1C,OACE,UAAC,EAAAR,SAAQ,YACP,SAAC,MAAU,CACTS,MAAM,yCACNC,SAAS,SAAC,WAAc,OAG1B,UAAC,IAAU,YACT,SAAC,IAAI,CACHC,MAAOtB,EACPuB,SAAU,SAACC,EAA0BC,GACnCxB,EAAUwB,EACZ,EACAC,eAAe,UACfC,UAAU,UACV,aAAW,eACXC,QAAQ,aACRC,cAAc,OAAM,UAEpB,SAAC,IAAG,CACFT,MAAM,UACNU,GAAG,eACH,gBAAc,yBAGlB,SAAC,IAAQ,CAACC,MAAO,EAAGT,MAAOtB,EAAO,SAC/BU,SAKX,G","sources":["screens/Console/Support/RegisterOperator.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public APIKey as published by\n// the Free Software Foundation, either version 3 of the APIKey, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public APIKey for more details.\n//\n// You should have received a copy of the GNU Affero General Public APIKey\n// along with this program.  If not, see <http://www.gnu.org/APIKeys/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport api from \"../../../common/api\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { TabPanel } from \"../../shared/tabs\";\nimport { ClusterRegistered } from \"./utils\";\nimport ApiKeyRegister from \"./ApiKeyRegister\";\nimport { PageHeader } from \"mds\";\n\ninterface IRegister {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...spacingUtils,\n    ...containerForHeader,\n  });\n\nconst RegisterOperator = ({ classes }: IRegister) => {\n  const [apiKeyRegistered, setAPIKeyRegistered] = useState<boolean>(false);\n  const [curTab, setCurTab] = useState<number>(0);\n\n  const fetchAPIKeyInfo = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/subnet/apikey/info`)\n      .then((res: any) => {\n        setAPIKeyRegistered(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAPIKeyRegistered(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchAPIKeyInfo();\n  }, [fetchAPIKeyInfo]);\n\n  const apiKeyRegistration = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {apiKeyRegistered ? (\n          <ClusterRegistered email={\"Operator\"} />\n        ) : (\n          <ApiKeyRegister registerEndpoint={\"/api/v1/subnet/apikey/register\"} />\n        )}\n      </Box>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <PageHeader\n        label=\"Register to MinIO Subscription Network\"\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <Tabs\n          value={curTab}\n          onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n            setCurTab(newValue);\n          }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"cluster-tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab\n            label=\"API Key\"\n            id=\"simple-tab-0\"\n            aria-controls=\"simple-tabpanel-1\"\n          />\n        </Tabs>\n        <TabPanel index={0} value={curTab}>\n          {apiKeyRegistration}\n        </TabPanel>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(RegisterOperator);\n"],"names":["withStyles","theme","createStyles","actionsTray","searchField","spacingUtils","containerForHeader","classes","useState","apiKeyRegistered","setAPIKeyRegistered","curTab","setCurTab","fetchAPIKeyInfo","useCallback","api","then","res","catch","err","useEffect","apiKeyRegistration","Fragment","sx","border","borderRadius","display","flexFlow","padding","email","registerEndpoint","label","actions","value","onChange","e","newValue","indicatorColor","textColor","variant","scrollButtons","id","index"],"sourceRoot":""}