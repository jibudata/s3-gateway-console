{"version":3,"file":"static/js/9121.c6510250.chunk.js","mappings":"sSA6CIA,EAAS,KAodb,UAldc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAe,OAAKA,EAAMC,MAAMH,QAAQ,IAChEI,GAAeH,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMC,MAAMC,YAAY,IAG/CC,GAAoCC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4BL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwBT,EAAAA,EAAAA,UAAiB,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBb,EAAAA,EAAAA,UAAiB,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkCjB,EAAAA,EAAAA,UAAiB,GAAEkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA9CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsBrB,EAAAA,EAAAA,WAAkB,GAAMsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAoBzB,EAAAA,EAAAA,WAAkB,GAAK0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAApCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBG,GAAgC7B,EAAAA,EAAAA,WAAkB,GAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BjC,EAAAA,EAAAA,WAAkB,GAAMkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAA/CE,GAAOD,EAAA,GAAEE,GAAUF,EAAA,GAC1BG,IAAoBrC,EAAAA,EAAAA,WAAkB,GAAMsC,IAAApC,EAAAA,EAAAA,GAAAmC,GAAA,GAArCE,GAAED,GAAA,GAAEE,GAAKF,GAAA,GAChBG,IAA4BzC,EAAAA,EAAAA,WAAkB,GAAM0C,IAAAxC,EAAAA,EAAAA,GAAAuC,GAAA,GAA7CE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAExBG,IAAwC7C,EAAAA,EAAAA,WAAkB,GAAM8C,IAAA5C,EAAAA,EAAAA,GAAA2C,GAAA,GAAzDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAqEpC,OALAG,EAAAA,EAAAA,YAAU,WACRzD,GAAS0D,EAAAA,EAAAA,IAAY,SAEvB,GAAG,KAGDC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAACC,MAAO,QAASC,SAASH,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,OAErDJ,EAAAA,EAAAA,KAACK,EAAAA,IAAU,CAAAN,UACTC,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CAACC,aAAW,EAAAR,UACdF,EAAAA,EAAAA,MAACW,EAAAA,IAAI,CAACC,WAAS,EAAAV,SAAA,EACbF,EAAAA,EAAAA,MAACW,EAAAA,IAAI,CACHE,MAAI,EACJC,GAAI,GACJC,GAAI,CACFC,QAAS,OACTC,SAAU,SAEV,0BAA2B,CACzBC,SAAU,OACVC,WAAY,WAEdjB,SAAA,EAEFC,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CACFM,GAAI,CACFG,SAAU,OACVC,WAAY,IACZC,QAAS,mBACTlB,SACH,oBAGDF,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFY,UAAS,GAAAC,OAAK3E,EAAe,iBAAmB,IAChDoE,GAAI,CACFC,QAAS,OACTO,WAAY,SACZC,eAAgB,iBAChBtB,SAAA,EAEFF,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFM,IAAEU,EAAAA,EAAAA,GAAA,CACAT,QAAS,OACTC,SAAU,MACV,wBAAyB,CACvBS,OAAQ,kBACT,sBAAAJ,OACsBK,EAAAA,IAAYC,GAAE,OAAQ,CAC3CC,IAAK,KAEP3B,SAAA,EAEFC,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAAS3D,EACT4D,GAAI,YACJC,KAAM,YACN5B,MAAO,MACP6B,SAAU,WACR7D,GAAQD,EACV,EACA+D,MAAO,MACPC,SAAUzF,KAEZwD,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAASvD,GAAMJ,EACf4D,GAAI,WACJC,KAAM,WACN5B,MAAO,KACP6B,SAAU,WACRzD,GAAOD,EACT,EACA2D,MAAO,KACPC,SAAUhE,GAAOzB,KAEnBwD,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAASnD,GAAYR,EACrB4D,GAAI,iBACJC,KAAM,iBACN5B,MAAO,WACP6B,SAAU,WACRrD,GAAaD,EACf,EACAuD,MAAO,WACPC,SAAUhE,GAAOzB,KAEnBwD,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAAS/C,IAAWZ,EACpB4D,GAAI,gBACJC,KAAM,gBACN5B,MAAO,UACP6B,SAAU,WACRjD,IAAYD,GACd,EACAmD,MAAO,UACPC,SAAUhE,GAAOzB,KAEnBwD,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAAS3C,IAAMhB,EACf4D,GAAI,WACJC,KAAM,WACN5B,MAAO,KACP6B,SAAU,WACR7C,IAAOD,GACT,EACA+C,MAAO,KACPC,SAAUhE,GAAOzB,QAGrBqD,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFM,GAAI,CACFC,QAAS,OACTO,WAAY,SACZC,eAAgB,gBAChBK,IAAK,QACL3B,SAAA,EAEFC,EAAAA,EAAAA,KAACkC,EAAAA,EAAc,CAACC,QAAS,sBAAsBpC,UAC7CC,EAAAA,EAAAA,KAACoC,EAAAA,IAAM,CACLP,GAAI,gBACJQ,QAAS,WACP3C,IAAiBD,GACnB,EACAS,MAAO,UACPoC,MAAMtC,EAAAA,EAAAA,KAACuC,EAAAA,IAAU,IACjBC,QAAS,UACTtB,UAAW,wBACXuB,MAAO,CACLC,MAAO,QACPC,WAAYlD,GAAe,wBAA0B,SAKzDjD,IACAwD,EAAAA,EAAAA,KAACoC,EAAAA,IAAM,CACLP,GAAI,cACJ3B,MAAO,QACP,eAAc,qBACdsC,QAAQ,aACRH,QA3MD,WACjBnG,GAAS0G,EAAAA,EAAAA,OACT,IAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,YAE9BC,EAAwBL,EAAIK,KAE9BC,EAAK,GAAAhC,OAAM9C,EAAK,MAAQ,IAAE8C,OAAG1C,EAAW,YAAc,IAAE0C,OAC1DtC,GAAU,WAAa,IAAEsC,OACxBlC,GAAK,MAAQ,IAEZhB,IACFkF,EAAQ,OAGV,IACMC,EADe,IAAIN,IAAIO,SAASC,SACTC,SAEvBC,GAASC,EAAAA,EAAAA,IAAWZ,EAAIa,UAC9BzH,EAAI,IAAI0H,EAAAA,aAAa,GAADxC,OACfqC,EAAM,OAAArC,OACP0B,EAAIe,SAAQ,KAAAzC,OACV+B,GAAI/B,OAAGiC,EAAO,mBAAAjC,OAAkBgC,EAAK,eAAAhC,OAActD,EAAS,gBAAAsD,OAC9D9B,GAAS,MAAQ,KAAI,gBAAA8B,OACRtE,EAAU,YAAAsE,OAAWlE,EAAM,cAAAkE,OAAa9D,EAAI,UAAA8D,OAAS1D,IAGtE,IAAIoG,EAAuB,KAC3B,GAAU,OAAN5H,EAqBF,OApBAA,EAAE6H,OAAS,WACTC,QAAQC,IAAI,8BACZ9H,GAAS+H,EAAAA,EAAAA,KAAgB,IACzBhI,EAAEiI,KAAK,MACPL,EAAWM,aAAY,WACrBlI,EAAEiI,KAAK,KACT,GAAG,IACL,EACAjI,EAAEmI,UAAY,SAACC,GACb,IAAIC,EAAkBC,KAAKC,MAAMH,EAAQI,KAAKxB,YAE9CqB,EAAEI,MAAQC,EAAAA,GAASC,QAAQN,EAAEO,MAAMC,WACnCR,EAAES,IAAMC,KAAKC,SACb/I,GAASgJ,EAAAA,EAAAA,IAAqBZ,GAChC,EACArI,EAAEkJ,QAAU,WACVC,cAAcvB,GACdE,QAAQC,IAAI,+BACZ9H,GAAS+H,EAAAA,EAAAA,KAAgB,GAC3B,EACO,WACLhI,EAAEoJ,MAAM,KACRD,cAAcvB,GACdE,QAAQC,IAAI,uBACZC,EAAAA,EAAAA,KAAgB,EAClB,CAEJ,EAqJoBxB,MAAO,CACLC,MAAO,WAIZlG,IACCwD,EAAAA,EAAAA,KAACoC,EAAAA,IAAM,CACLP,GAAI,aACJ3B,MAAO,aACP,eAAc,oBACdsC,QAAQ,aACRH,QA9JF,WAChBpG,EAAEoJ,MAAM,KACRnJ,GAAS+H,EAAAA,EAAAA,KAAgB,GAC3B,EA4JoBxB,MAAO,CACLC,MAAO,oBAOlBjD,IACCI,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFgF,eAAa,EACbpE,UAAS,GAAAC,OAAK3E,EAAe,iBAAmB,IAChDoE,GAAI,CACF2E,UAAW,OACX1E,QAAS,OACTC,SAAU,SACVG,QAAS,OACTyB,MAAO,OAEP,qBAAsB,CACpB5B,SAAU,SACV,UAAW,CACT0E,aAAc,OACdxE,WAAY,KAEd,iBAAkB,CAChB0B,MAAO,QAIX,0BAA2B,CACzB3B,SAAU,OACVC,WAAY,WAEdjB,SAAA,EAEFF,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFM,GAAI,CACFC,QAAS,QACTd,SAAA,EAEFC,EAAAA,EAAAA,KAACyF,EAAAA,IAAQ,CACPvE,UAAU,kBACVW,GAAG,oBACHC,KAAK,oBACL5B,MAAM,cACNwF,YAAY,WACZ1D,MAAOnF,EACPkF,SAAU,SAAC4D,GACT7I,EAAc6I,EAAEC,OAAO5D,MACzB,EACAC,SAAUzF,KAGZwD,EAAAA,EAAAA,KAACyF,EAAAA,IAAQ,CACPvE,UAAU,kBACVW,GAAG,sBACHC,KAAK,sBACL5B,MAAM,gBACNwF,YAAY,wBACZ1D,MAAO3E,EACP0E,SAAU,SAAC4D,GACTrI,EAAQqI,EAAEC,OAAO5D,MACnB,EACAC,SAAUzF,KAGZwD,EAAAA,EAAAA,KAACyF,EAAAA,IAAQ,CACPvE,UAAU,kBACVW,GAAG,eACHC,KAAK,eACL5B,MAAM,SACNwF,YAAY,mBACZ1D,MAAO/E,EACP8E,SAAU,SAAC4D,GACTzI,EAAUyI,EAAEC,OAAO5D,MACrB,EACAC,SAAUzF,QAGdqD,EAAAA,EAAAA,MAACS,EAAAA,IAAG,CACFM,GAAI,CACFc,IAAK,OACLb,QAAS,OACTgF,oBAAqB,UACrBnD,MAAO,OACP6C,UAAW,QACXxF,SAAA,EAEFC,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CACFM,GAAI,CACFkF,KAAM,EACNpD,MAAO,sBACP3C,UAEFC,EAAAA,EAAAA,KAACyF,EAAAA,IAAQ,CACPvE,UAAU,kBACVW,GAAG,aACHC,KAAK,aACL5B,MAAM,OACNwF,YAAY,6BACZ1D,MAAOvE,EACPsE,SAAU,SAAC4D,GACTjI,EAAQiI,EAAEC,OAAO5D,MACnB,EACAC,SAAUzF,OAGdwD,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CACFM,GAAI,CACFmF,WAAY,QACZhG,UAEFC,EAAAA,EAAAA,KAACyF,EAAAA,IAAQ,CACPvE,UAAU,kBACVW,GAAG,mBACHC,KAAK,mBACL5B,MAAM,qBACN8F,KAAK,SACLN,YAAY,8BACZ1D,MAAK,GAAAb,OAAKtD,GACVkE,SAAU,SAAC4D,GACT7H,EAAamI,SAASN,EAAEC,OAAO5D,OACjC,EACAC,SAAUzF,UAIhBwD,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CACFM,GAAI,CACFC,QAAS,OACTO,WAAY,SACZC,eAAgB,aAChBkE,UAAW,QACXxF,UAEFC,EAAAA,EAAAA,KAAC2B,EAAAA,IAAQ,CACPC,QAASvC,GACTwC,GAAI,cACJC,KAAM,cACN5B,MAAO,sBACP6B,SAAU,WACRzC,IAAWD,GACb,EACA2C,MAAO,cACPC,SAAUzF,SAId,MAEJwD,EAAAA,EAAAA,KAACQ,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGZ,UAChBC,EAAAA,EAAAA,KAACM,EAAAA,IAAG,CACFM,GAAI,CACFG,SAAU,OACVC,WAAY,IACZwE,aAAc,OACdD,UAAW,QACXxF,SACH,qBAIHC,EAAAA,EAAAA,KAACQ,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGZ,UAChBC,EAAAA,EAAAA,KAACkG,EAAAA,IAAS,CACRC,QAAS,CACP,CACEjG,MAAO,OACPkG,WAAY,QACZC,eAAgB,SAACxB,GACf,IAAMyB,EAAY,IAAIC,KAAK1B,GAC3B,OAAO2B,EAAAA,EAAAA,IAAaF,EACtB,EACA5D,MAAO,KAET,CAAExC,MAAO,OAAQkG,WAAY,OAC7B,CACElG,MAAO,SACPkG,WAAY,GACZC,eAAgB,SAACI,GAAyB,SAAAtF,OACrCsF,EAAY5J,WAAU,KAAAsE,OAAIsF,EAAYC,UAAS,EACpDC,kBAAkB,GAEpB,CACEzG,MAAO,WACPkG,WAAY,mBACZC,eAAgB,SAACI,GAAyB,SAAAtF,OACrCsF,EAAYG,KAAI,KAAAzF,OAAIsF,EAAYI,OAAM,EAC3CF,kBAAkB,GAEpB,CACEzG,MAAO,YACPkG,WAAY,qBACZ1D,MAAO,KAET,CACExC,MAAO,SACPkG,WAAY,eACZC,eAAgBS,EAAAA,GAChBpE,MAAO,KAET,CACExC,MAAO,WACPkG,WAAY,eACZC,eAAgBS,EAAAA,GAChBpE,MAAO,MAGXqE,WAAW,EACXC,QAAS5K,EACT6K,WAAW,SACXC,QAAQ,MACRC,mBACE3K,EACI,kCACA,2BAEN4K,kBAAmB,sBACnBC,oBAAkB,eAQlC,C,8IC9eO,IAAMC,EAAyB,KACzBC,EAAyB,KACzBC,EAA2B,KAE3B/D,EAAa,SAACC,GACzB,IAAID,EAAa,KAIjB,MAHiB,WAAbC,IACFD,EAAa,OAERA,CACT,C,oBC3BA,IAAIgE,EAAgB,WACnB,GAAoB,kBAATC,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,kBAAX3E,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI4E,MAAM,kCACjB,EAEAC,EAAOC,QAAW,WACjB,GAAIC,KAAM,OAAOA,KAKjB,GAA0B,kBAAfC,YAA2BA,WAAY,OAAOA,WAKzD,IACCC,OAAOC,eAAeD,OAAOE,UAAW,aAAc,CACrDC,IAAK,WAAc,OAAOL,IAAM,EAChCM,cAAc,GAEhB,CAAE,MAAOC,GAGR,OAAOZ,GACR,CACA,IAEC,OAAKa,YAAmBb,GAEzB,CAAE,eACMO,OAAOE,UAAUI,UACzB,CACD,CA5BkB,E,wBCNlB,IAAIC,EACJ,GAA0B,kBAAfR,WACVQ,EAAcR,gBAEd,IACCQ,EAAcC,EAAQ,MACvB,CAAE,MAAOH,GACT,CAAE,QAED,GADKE,GAAiC,qBAAXxF,SAA0BwF,EAAcxF,SAC9DwF,EAAe,MAAM,IAAIZ,MAAM,kCACrC,CAGD,IAAIc,EAAkBF,EAAYG,WAAaH,EAAYI,aACvDC,EAAoBJ,EAAQ,OAMhC,SAAS7E,EAAakF,EAAKC,GAiB1B,OAdIA,EACe,IAAIL,EAAgBI,EAAKC,GAGzB,IAAIL,EAAgBI,EAWxC,CACIJ,GACH,CAAC,aAAc,OAAQ,UAAW,UAAUM,SAAQ,SAASC,GAC5DhB,OAAOC,eAAetE,EAAcqF,EAAM,CACzCb,IAAK,WAAa,OAAOM,EAAgBO,EAAO,GAElD,IAMDpB,EAAOC,QAAU,CACb,aAAiBY,EAAkB9E,EAAe,KAClD,QAAiBiF,E,wBCpDrBhB,EAAOC,QAAU,EAAjBD,OAAAA,O","sources":["screens/Console/Trace/Trace.tsx","utils/wsUtils.ts","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { useSelector } from \"react-redux\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  Checkbox,\n  DataTable,\n  FilterIcon,\n  Grid,\n  InputBox,\n  PageLayout,\n} from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { TraceMessage } from \"./types\";\nimport { niceBytes, timeFromDate } from \"../../../common/utils\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport {\n  setTraceStarted,\n  traceMessageReceived,\n  traceResetMessages,\n} from \"./traceSlice\";\nimport { setHelpName } from \"../../../systemSlice\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nvar c: any = null;\n\nconst Trace = () => {\n  const dispatch = useAppDispatch();\n\n  const messages = useSelector((state: AppState) => state.trace.messages);\n  const traceStarted = useSelector(\n    (state: AppState) => state.trace.traceStarted,\n  );\n\n  const [statusCode, setStatusCode] = useState<string>(\"\");\n  const [method, setMethod] = useState<string>(\"\");\n  const [func, setFunc] = useState<string>(\"\");\n  const [path, setPath] = useState<string>(\"\");\n  const [threshold, setThreshold] = useState<number>(0);\n  const [all, setAll] = useState<boolean>(false);\n  const [s3, setS3] = useState<boolean>(true);\n  const [internal, setInternal] = useState<boolean>(false);\n  const [storage, setStorage] = useState<boolean>(false);\n  const [os, setOS] = useState<boolean>(false);\n  const [errors, setErrors] = useState<boolean>(false);\n\n  const [toggleFilter, setToggleFilter] = useState<boolean>(false);\n\n  const startTrace = () => {\n    dispatch(traceResetMessages());\n    const url = new URL(window.location.toString());\n    const isDev = process.env.NODE_ENV === \"development\";\n    const port = isDev ? \"9090\" : url.port;\n\n    let calls = `${s3 ? \"s3,\" : \"\"}${internal ? \"internal,\" : \"\"}${\n      storage ? \"storage,\" : \"\"\n    }${os ? \"os,\" : \"\"}`;\n\n    if (all) {\n      calls = \"all\";\n    }\n    // check if we are using base path, if not this always is `/`\n    const baseLocation = new URL(document.baseURI);\n    const baseUrl = baseLocation.pathname;\n\n    const wsProt = wsProtocol(url.protocol);\n    c = new W3CWebSocket(\n      `${wsProt}://${\n        url.hostname\n      }:${port}${baseUrl}ws/trace?calls=${calls}&threshold=${threshold}&onlyErrors=${\n        errors ? \"yes\" : \"no\"\n      }&statusCode=${statusCode}&method=${method}&funcname=${func}&path=${path}`,\n    );\n\n    let interval: any | null = null;\n    if (c !== null) {\n      c.onopen = () => {\n        console.log(\"WebSocket Client Connected\");\n        dispatch(setTraceStarted(true));\n        c.send(\"ok\");\n        interval = setInterval(() => {\n          c.send(\"ok\");\n        }, 10 * 1000);\n      };\n      c.onmessage = (message: IMessageEvent) => {\n        let m: TraceMessage = JSON.parse(message.data.toString());\n\n        m.ptime = DateTime.fromISO(m.time).toJSDate();\n        m.key = Math.random();\n        dispatch(traceMessageReceived(m));\n      };\n      c.onclose = () => {\n        clearInterval(interval);\n        console.log(\"connection closed by server\");\n        dispatch(setTraceStarted(false));\n      };\n      return () => {\n        c.close(1000);\n        clearInterval(interval);\n        console.log(\"closing websockets\");\n        setTraceStarted(false);\n      };\n    }\n  };\n\n  const stopTrace = () => {\n    c.close(1000);\n    dispatch(setTraceStarted(false));\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"trace\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Trace\"} actions={<HelpMenu />} />\n\n      <PageLayout>\n        <Box withBorders>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n\n                \"& .trace-Checkbox-label\": {\n                  fontSize: \"14px\",\n                  fontWeight: \"normal\",\n                },\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  fontWeight: 600,\n                  padding: \"20px 0px 20px 0\",\n                }}\n              >\n                Calls to Trace\n              </Box>\n              <Box\n                className={`${traceStarted ? \"inactive-state\" : \"\"}`}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"row\",\n                    \"& .trace-checked-icon\": {\n                      border: \"1px solid red\",\n                    },\n                    [`@media (min-width: ${breakPoints.md}px)`]: {\n                      gap: 30,\n                    },\n                  }}\n                >\n                  <Checkbox\n                    checked={all}\n                    id={\"all_calls\"}\n                    name={\"all_calls\"}\n                    label={\"All\"}\n                    onChange={() => {\n                      setAll(!all);\n                    }}\n                    value={\"all\"}\n                    disabled={traceStarted}\n                  />\n                  <Checkbox\n                    checked={s3 || all}\n                    id={\"s3_calls\"}\n                    name={\"s3_calls\"}\n                    label={\"S3\"}\n                    onChange={() => {\n                      setS3(!s3);\n                    }}\n                    value={\"s3\"}\n                    disabled={all || traceStarted}\n                  />\n                  <Checkbox\n                    checked={internal || all}\n                    id={\"internal_calls\"}\n                    name={\"internal_calls\"}\n                    label={\"Internal\"}\n                    onChange={() => {\n                      setInternal(!internal);\n                    }}\n                    value={\"internal\"}\n                    disabled={all || traceStarted}\n                  />\n                  <Checkbox\n                    checked={storage || all}\n                    id={\"storage_calls\"}\n                    name={\"storage_calls\"}\n                    label={\"Storage\"}\n                    onChange={() => {\n                      setStorage(!storage);\n                    }}\n                    value={\"storage\"}\n                    disabled={all || traceStarted}\n                  />\n                  <Checkbox\n                    checked={os || all}\n                    id={\"os_calls\"}\n                    name={\"os_calls\"}\n                    label={\"OS\"}\n                    onChange={() => {\n                      setOS(!os);\n                    }}\n                    value={\"os\"}\n                    disabled={all || traceStarted}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <TooltipWrapper tooltip={\"More filter options\"}>\n                    <Button\n                      id={\"filter-toggle\"}\n                      onClick={() => {\n                        setToggleFilter(!toggleFilter);\n                      }}\n                      label={\"Filters\"}\n                      icon={<FilterIcon />}\n                      variant={\"regular\"}\n                      className={\"filters-toggle-button\"}\n                      style={{\n                        width: \"118px\",\n                        background: toggleFilter ? \"rgba(8, 28, 66, 0.04)\" : \"\",\n                      }}\n                    />\n                  </TooltipWrapper>\n\n                  {!traceStarted && (\n                    <Button\n                      id={\"start-trace\"}\n                      label={\"Start\"}\n                      data-test-id={\"trace-start-button\"}\n                      variant=\"callAction\"\n                      onClick={startTrace}\n                      style={{\n                        width: \"118px\",\n                      }}\n                    />\n                  )}\n                  {traceStarted && (\n                    <Button\n                      id={\"stop-trace\"}\n                      label={\"Stop Trace\"}\n                      data-test-id={\"trace-stop-button\"}\n                      variant=\"callAction\"\n                      onClick={stopTrace}\n                      style={{\n                        width: \"118px\",\n                      }}\n                    />\n                  )}\n                </Box>\n              </Box>\n            </Grid>\n            {toggleFilter ? (\n              <Box\n                useBackground\n                className={`${traceStarted ? \"inactive-state\" : \"\"}`}\n                sx={{\n                  marginTop: \"25px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  padding: \"30px\",\n                  width: \"100%\",\n\n                  \"& .orient-vertical\": {\n                    flexFlow: \"column\",\n                    \"& label\": {\n                      marginBottom: \"10px\",\n                      fontWeight: 600,\n                    },\n                    \"& .inputRebase\": {\n                      width: \"90%\",\n                    },\n                  },\n\n                  \"& .trace-Checkbox-label\": {\n                    fontSize: \"14px\",\n                    fontWeight: \"normal\",\n                  },\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                  }}\n                >\n                  <InputBox\n                    className=\"orient-vertical\"\n                    id=\"trace-status-code\"\n                    name=\"trace-status-code\"\n                    label=\"Status Code\"\n                    placeholder=\"e.g. 503\"\n                    value={statusCode}\n                    onChange={(e) => {\n                      setStatusCode(e.target.value);\n                    }}\n                    disabled={traceStarted}\n                  />\n\n                  <InputBox\n                    className=\"orient-vertical\"\n                    id=\"trace-function-name\"\n                    name=\"trace-function-name\"\n                    label=\"Function Name\"\n                    placeholder=\"e.g. FunctionName2055\"\n                    value={func}\n                    onChange={(e) => {\n                      setFunc(e.target.value);\n                    }}\n                    disabled={traceStarted}\n                  />\n\n                  <InputBox\n                    className=\"orient-vertical\"\n                    id=\"trace-method\"\n                    name=\"trace-method\"\n                    label=\"Method\"\n                    placeholder=\"e.g. Method 2056\"\n                    value={method}\n                    onChange={(e) => {\n                      setMethod(e.target.value);\n                    }}\n                    disabled={traceStarted}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    gap: \"30px\",\n                    display: \"grid\",\n                    gridTemplateColumns: \"2fr 1fr\",\n                    width: \"100%\",\n                    marginTop: \"33px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      flex: 2,\n                      width: \"calc( 100% + 10px)\",\n                    }}\n                  >\n                    <InputBox\n                      className=\"orient-vertical\"\n                      id=\"trace-path\"\n                      name=\"trace-path\"\n                      label=\"Path\"\n                      placeholder=\"e.g. my-bucket/my-prefix/*\"\n                      value={path}\n                      onChange={(e) => {\n                        setPath(e.target.value);\n                      }}\n                      disabled={traceStarted}\n                    />\n                  </Box>\n                  <Box\n                    sx={{\n                      marginLeft: \"15px\",\n                    }}\n                  >\n                    <InputBox\n                      className=\"orient-vertical\"\n                      id=\"trace-fthreshold\"\n                      name=\"trace-fthreshold\"\n                      label=\"Response Threshold\"\n                      type=\"number\"\n                      placeholder=\"e.g. website.io.3249.114.12\"\n                      value={`${threshold}`}\n                      onChange={(e) => {\n                        setThreshold(parseInt(e.target.value));\n                      }}\n                      disabled={traceStarted}\n                    />\n                  </Box>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    marginTop: \"40px\",\n                  }}\n                >\n                  <Checkbox\n                    checked={errors}\n                    id={\"only_errors\"}\n                    name={\"only_errors\"}\n                    label={\"Display only Errors\"}\n                    onChange={() => {\n                      setErrors(!errors);\n                    }}\n                    value={\"only_errors\"}\n                    disabled={traceStarted}\n                  />\n                </Box>\n              </Box>\n            ) : null}\n\n            <Grid item xs={12}>\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  fontWeight: 600,\n                  marginBottom: \"30px\",\n                  marginTop: \"30px\",\n                }}\n              >\n                Trace Results\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <DataTable\n                columns={[\n                  {\n                    label: \"Time\",\n                    elementKey: \"ptime\",\n                    renderFunction: (time: Date) => {\n                      const timeParse = new Date(time);\n                      return timeFromDate(timeParse);\n                    },\n                    width: 100,\n                  },\n                  { label: \"Name\", elementKey: \"api\" },\n                  {\n                    label: \"Status\",\n                    elementKey: \"\",\n                    renderFunction: (fullElement: TraceMessage) =>\n                      `${fullElement.statusCode} ${fullElement.statusMsg}`,\n                    renderFullObject: true,\n                  },\n                  {\n                    label: \"Location\",\n                    elementKey: \"configuration_id\",\n                    renderFunction: (fullElement: TraceMessage) =>\n                      `${fullElement.host} ${fullElement.client}`,\n                    renderFullObject: true,\n                  },\n                  {\n                    label: \"Load Time\",\n                    elementKey: \"callStats.duration\",\n                    width: 150,\n                  },\n                  {\n                    label: \"Upload\",\n                    elementKey: \"callStats.rx\",\n                    renderFunction: niceBytes,\n                    width: 150,\n                  },\n                  {\n                    label: \"Download\",\n                    elementKey: \"callStats.tx\",\n                    renderFunction: niceBytes,\n                    width: 150,\n                  },\n                ]}\n                isLoading={false}\n                records={messages}\n                entityName=\"Traces\"\n                idField=\"api\"\n                customEmptyMessage={\n                  traceStarted\n                    ? \"No Traced elements received yet\"\n                    : \"Trace is not started yet\"\n                }\n                customPaperHeight={\"calc(100vh - 292px)\"}\n                autoScrollToBottom\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Trace;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["c","dispatch","useAppDispatch","messages","useSelector","state","trace","traceStarted","_useState","useState","_useState2","_slicedToArray","statusCode","setStatusCode","_useState3","_useState4","method","setMethod","_useState5","_useState6","func","setFunc","_useState7","_useState8","path","setPath","_useState9","_useState10","threshold","setThreshold","_useState11","_useState12","all","setAll","_useState13","_useState14","s3","setS3","_useState15","_useState16","internal","setInternal","_useState17","_useState18","storage","setStorage","_useState19","_useState20","os","setOS","_useState21","_useState22","errors","setErrors","_useState23","_useState24","toggleFilter","setToggleFilter","useEffect","setHelpName","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","Box","withBorders","Grid","container","item","xs","sx","display","flexFlow","fontSize","fontWeight","padding","className","concat","alignItems","justifyContent","_defineProperty","border","breakPoints","md","gap","Checkbox","checked","id","name","onChange","value","disabled","TooltipWrapper","tooltip","Button","onClick","icon","FilterIcon","variant","style","width","background","traceResetMessages","url","URL","window","location","toString","port","calls","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","W3CWebSocket","hostname","interval","onopen","console","log","setTraceStarted","send","setInterval","onmessage","message","m","JSON","parse","data","ptime","DateTime","fromISO","time","toJSDate","key","Math","random","traceMessageReceived","onclose","clearInterval","close","useBackground","marginTop","marginBottom","InputBox","placeholder","e","target","gridTemplateColumns","flex","marginLeft","type","parseInt","DataTable","columns","elementKey","renderFunction","timeParse","Date","timeFromDate","fullElement","statusMsg","renderFullObject","host","client","niceBytes","isLoading","records","entityName","idField","customEmptyMessage","customPaperHeight","autoScrollToBottom","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr","naiveFallback","self","Error","module","exports","this","globalThis","Object","defineProperty","prototype","get","configurable","error","__global__","_globalThis","require","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}