{"version":3,"file":"static/js/9121.813c1df9.chunk.js","mappings":"0SA8FMA,GAAcC,EAAAA,EAAAA,IAAW,SAACC,GAAY,OAC1CC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACH,IAGJ,SAASC,EAAWC,GAClB,IAAMC,EAAUR,IAEhB,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAASN,EAAAA,EAAAA,GAAA,CACRO,WAAY,CAAEH,QAAAA,IACVD,GAGV,CAwJA,KAAeK,EAAAA,EAAAA,IA7LA,SAACV,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTS,EAAAA,IACAC,EAAAA,IAAa,IAChBC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,cAAe,CACbD,SAAU,WACVE,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,MAGR,GAyKL,EAtJwB,SAAHG,GA8BC,IA7BpBC,EAAKD,EAALC,MACAC,EAAQF,EAARE,SACAC,EAAKH,EAALG,MACAC,EAAEJ,EAAFI,GACAC,EAAIL,EAAJK,KAAIC,EAAAN,EACJO,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAAR,EACbS,aAAAA,OAAY,IAAAD,EAAG,MAAKA,EAAAE,EAAAV,EACpBW,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAZ,EAChBa,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAAAd,EACjBe,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAAhB,EACZiB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAlB,EACTmB,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAApB,EACVqB,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAAtB,EAChBuB,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBE,EAAGxB,EAAHwB,IACAC,EAAGzB,EAAHyB,IACAC,EAAS1B,EAAT0B,UAASC,EAAA3B,EACT4B,YAAAA,OAAW,IAAAD,EAAG,KAAIA,EAAAE,EAAA7B,EAClB8B,cAAAA,OAAa,IAAAD,EAAG,KAAIA,EAAAE,EAAA/B,EACpBgC,gBAAAA,OAAe,IAAAD,EAAG,CAAC,EAACA,EACpBpC,EAAaK,EAAbL,cAAasC,EAAAjC,EACbkC,gBAAAA,OAAe,IAAAD,GAAQA,EAAAE,EAAAnC,EACvBoC,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAArC,EACZsC,UAAAA,OAAS,IAAAD,GAAQA,EACjBpD,EAAOe,EAAPf,QAAOsD,GAAAvC,EACPwC,UAAAA,QAAS,IAAAD,GAAG,GAAEA,GACdE,GAAUzC,EAAVyC,WACAC,GAAO1C,EAAP0C,QACAC,GAAO3C,EAAP2C,QAEIC,IAAe/D,EAAAA,EAAAA,GAAA,CAAK,aAAcoC,GAAUe,GAChDa,IAA8CC,EAAAA,EAAAA,WAAkB,GAAMC,IAAAC,EAAAA,EAAAA,GAAAH,GAAA,GAA/DI,GAAeF,GAAA,GAAEG,GAAkBH,GAAA,GAE7B,WAATxC,GAAqBiB,IACvBoB,GAAgB,IAAIpB,GAGT,WAATjB,GAAqBkB,IACvBmB,GAAgB,IAAInB,GAGN,KAAZW,IACFQ,GAAoB,QAAIR,GAG1B,IAAIe,GAAsBvB,EACtBwB,GAAsB7C,EAW1B,MATa,aAATA,GAAuC,OAAhBqB,IACzBuB,GAAsBF,IACpB/D,EAAAA,EAAAA,KAACmE,EAAAA,EAAiB,KAElBnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAgB,IAEnBF,GAAsBH,GAAkB,OAAS,aAIjD/D,EAAAA,EAAAA,KAACqE,EAAAA,SAAc,CAAAC,UACbC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACTnB,WAAWoB,EAAAA,EAAAA,GACK,KAAdpB,GAAmBA,GAAY,GACrB,KAAVrB,EAAelC,EAAQ4E,aAAe5E,EAAQ6E,mBAC9CN,SAAA,CAES,KAAVvD,IACCwD,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CACTC,QAAS5D,EACToC,UACEN,EAAkBjD,EAAQgF,gBAAkBhF,EAAQiF,WACrDV,SAAA,EAEDC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACGvD,EACAoB,EAAW,IAAM,MAEP,KAAZN,IACC7B,EAAAA,EAAAA,KAAA,OAAKsD,UAAWvD,EAAQkF,iBAAiBX,UACvCtE,EAAAA,EAAAA,KAACkF,EAAAA,EAAO,CAACC,MAAOtD,EAASuD,UAAU,YAAWd,UAC5CtE,EAAAA,EAAAA,KAAA,OAAKsD,UAAWvD,EAAQ8B,QAAQyC,UAC9BtE,EAAAA,EAAAA,KAACqF,EAAAA,IAAQ,cAQrBd,EAAAA,EAAAA,MAAA,OAAKjB,UAAWvD,EAAQO,iBAAiBgE,SAAA,EACvCtE,EAAAA,EAAAA,KAACH,EAAU,CACTqB,GAAIA,EACJC,KAAMA,EACNmE,WAAS,EACTrE,MAAOA,EACPmC,UAAWA,EACX3B,SAAUA,EACVT,SAAUA,EACVK,KAAM6C,GACNvC,UAAWA,EACXJ,aAAcA,EACdmC,WAAYA,GACZzB,MAAiB,KAAVA,EACPsD,WAAYtD,EACZI,YAAaA,EACbiB,UAAWvD,EAAQyF,YACnBjC,WAAYA,GACZC,QAASA,GACTC,QAASA,KAEVQ,KACCjE,EAAAA,EAAAA,KAAA,OACEsD,UAAS,GAAAmC,OAAK1F,EAAQU,cAAa,KAAAgF,OACvB,KAAV1E,EAAe,YAAc,IAC5BuD,UAEHtE,EAAAA,EAAAA,KAAC0F,EAAAA,EAAU,CACTC,QACElF,EACI,WACEA,GACF,EACA,kBAAMuD,IAAoBD,GAAgB,EAEhD7C,GAAIsB,EACJoD,KAAM,QACNC,oBAAoB,EACpBC,eAAe,EACfC,oBAAoB,EAAMzB,SAEzBL,OAINrB,IACC5C,EAAAA,EAAAA,KAAA,OACEsD,UAAS,GAAAmC,OAAK1F,EAAQU,cAAa,KAAAgF,OACvB,KAAV1E,EAAe,YAAc,IAC5BuD,SAEF1B,WAOf,G,ySChLIoD,EAAS,KAggBb,WAAe7F,EAAAA,EAAAA,IAniBA,SAACV,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXsG,SAAU,CACRC,MAAO,KAETC,SAAU,CACRD,MAAO,MAENE,EAAAA,IAEAC,EAAAA,IAAW,IACdC,aAAc,CACZC,OAAQ,uBAEVC,QAAS,CACPC,OAAQ,oBACRC,QAAS,GACTC,aAAc,IAEhBC,iBAAkB,CAChBV,MAAO,OACPK,OAAQ,OACRM,WAAY,OAEdC,cAAe,CACbZ,MAAO,OACPK,OAAQ,SAEPQ,EAAAA,IACF,GAsgBL,EA9fc,SAAHjG,GAA6B,IAAvBf,EAAOe,EAAPf,QACTiH,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAe,OAAKA,EAAMC,MAAMH,QAAQ,IAChEI,GAAeH,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMC,MAAMC,YAAY,IAG/C3D,GAAoCC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD4D,EAAU1D,EAAA,GAAE2D,EAAa3D,EAAA,GAChC4D,GAA4B7D,EAAAA,EAAAA,UAAiB,IAAG8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAAzCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwBjE,EAAAA,EAAAA,UAAiB,IAAGkE,GAAAhE,EAAAA,EAAAA,GAAA+D,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBrE,EAAAA,EAAAA,UAAiB,IAAGsE,GAAApE,EAAAA,EAAAA,GAAAmE,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkCzE,EAAAA,EAAAA,UAAiB,GAAE0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAA9CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAsB7E,EAAAA,EAAAA,WAAkB,GAAM8E,GAAA5E,EAAAA,EAAAA,GAAA2E,EAAA,GAAvCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,GAAoBjF,EAAAA,EAAAA,WAAkB,GAAKkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAApCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBG,IAAgCrF,EAAAA,EAAAA,WAAkB,GAAMsF,IAAApF,EAAAA,EAAAA,GAAAmF,GAAA,GAAjDE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAA8BzF,EAAAA,EAAAA,WAAkB,GAAM0F,IAAAxF,EAAAA,EAAAA,GAAAuF,GAAA,GAA/CE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAC1BG,IAAoB7F,EAAAA,EAAAA,WAAkB,GAAM8F,IAAA5F,EAAAA,EAAAA,GAAA2F,GAAA,GAArCE,GAAED,GAAA,GAAEE,GAAKF,GAAA,GAChBG,IAA4BjG,EAAAA,EAAAA,WAAkB,GAAMkG,IAAAhG,EAAAA,EAAAA,GAAA+F,GAAA,GAA7CE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAExBG,IAAwCrG,EAAAA,EAAAA,WAAkB,GAAMsG,IAAApG,EAAAA,EAAAA,GAAAmG,GAAA,GAAzDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAqEpC,OALAG,EAAAA,EAAAA,YAAU,WACRrD,GAASsD,EAAAA,EAAAA,IAAY,SAEvB,GAAG,KAGD/F,EAAAA,EAAAA,MAACgG,EAAAA,SAAQ,CAAAjG,SAAA,EACPtE,EAAAA,EAAAA,KAACwK,EAAAA,EAAiB,CAACzJ,MAAO,QAAS0J,SAASzK,EAAAA,EAAAA,KAAC0K,EAAAA,EAAQ,OAErD1K,EAAAA,EAAAA,KAAC2K,EAAAA,IAAU,CAAArG,UACTC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACmG,QAAS,EAAGtH,UAAWvD,EAAQyG,QAAQlC,SAAA,EACrDC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHqG,MAAI,EACJC,GAAI,GACJC,GAAI,CACFC,QAAS,OACTC,SAAU,SAEV,0BAA2B,CACzBC,SAAU,OACVC,WAAY,WAEd7G,SAAA,EAEFtE,EAAAA,EAAAA,KAACoL,EAAAA,EAAG,CACFL,GAAI,CACFG,SAAU,OACVC,WAAY,IACZzE,QAAS,mBACTpC,SACH,oBAGDC,EAAAA,EAAAA,MAAC6G,EAAAA,EAAG,CACF9H,UAAS,GAAAmC,OAAK6B,EAAe,iBAAmB,IAChDyD,GAAI,CACFC,QAAS,OACTK,WAAY,SACZC,eAAgB,gBAEhB,yCAA0C,CACxCC,MAAO,YAETjH,SAAA,EAEFC,EAAAA,EAAAA,MAAC6G,EAAAA,EAAG,CACFL,GAAI,CACFC,QAAS,OACTC,SAAU,MACVO,IAAK,CACHC,GAAI,QAGN,wBAAyB,CACvBhF,OAAQ,kBAEVnC,SAAA,EAEFtE,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAAShD,EACTzH,GAAI,YACJC,KAAM,YACNJ,MAAO,MACPC,SAAU,SAAC6J,GACTjC,EAAOiC,EAAKe,OAAOD,QACrB,EACA1K,MAAO,MACPQ,SAAU6F,EACVuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,kBAG3B9G,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAAS5C,GAAMJ,EACfzH,GAAI,WACJC,KAAM,WACNJ,MAAO,KACPC,SAAU,SAAC6J,GACT7B,EAAM6B,EAAKe,OAAOD,QACpB,EACA1K,MAAO,KACPQ,SAAU6F,EACVuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,kBAG3B9G,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAASxC,IAAYR,EACrBzH,GAAI,iBACJC,KAAM,iBACNJ,MAAO,WACPC,SAAU,SAAC6J,GACTzB,GAAYyB,EAAKe,OAAOD,QAC1B,EACA1K,MAAO,WACPQ,SAAUkH,GAAOrB,EACjBuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,kBAG3B9G,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAASpC,IAAWZ,EACpBzH,GAAI,gBACJC,KAAM,gBACNJ,MAAO,UACPC,SAAU,SAAC6J,GACTrB,GAAWqB,EAAKe,OAAOD,QACzB,EACA1K,MAAO,UACPQ,SAAUkH,GAAOrB,EACjBuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,kBAG3B9G,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAAShC,IAAMhB,EACfzH,GAAI,WACJC,KAAM,WACNJ,MAAO,KACPC,SAAU,SAAC6J,GACTjB,GAAMiB,EAAKe,OAAOD,QACpB,EACA1K,MAAO,KACPQ,SAAUkH,GAAOrB,EACjBuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,qBAI7BvC,EAAAA,EAAAA,MAAC6G,EAAAA,EAAG,CACFL,GAAI,CACFC,QAAS,OACTK,WAAY,SACZC,eAAgB,gBAChBE,IAAK,QACLlH,SAAA,EAEFtE,EAAAA,EAAAA,KAAC+L,EAAAA,EAAc,CAAClK,QAAS,sBAAsByC,UAC7CtE,EAAAA,EAAAA,KAACgM,EAAAA,IAAM,CACL9K,GAAI,gBACJyE,QAAS,WACPyE,IAAiBD,GACnB,EACApJ,MAAO,UACPkL,MAAMjM,EAAAA,EAAAA,KAACkM,EAAAA,IAAU,IACjBC,QAAS,UACT7I,UAAW,wBACX8I,MAAO,CACLlG,MAAO,QACPmG,WAAYlC,GAAe,wBAA0B,SAKzD7C,IACAtH,EAAAA,EAAAA,KAACgM,EAAAA,IAAM,CACL9K,GAAI,cACJH,MAAO,QACP,eAAc,qBACdoL,QAAQ,aACRxG,QAxOC,WACjBqB,GAASsF,EAAAA,EAAAA,OACT,IAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,YAE9BC,EAAwBL,EAAIK,KAE9BC,EAAK,GAAApH,OAAMsD,EAAK,MAAQ,IAAEtD,OAAG0D,GAAW,YAAc,IAAE1D,OAC1D8D,GAAU,WAAa,IAAE9D,OACxBkE,GAAK,MAAQ,IAEZhB,IACFkE,EAAQ,OAGV,IACMC,EADe,IAAIN,IAAIO,SAASC,SACTC,SAEvBC,GAASC,EAAAA,EAAAA,IAAWZ,EAAIa,UAC9BpH,EAAI,IAAIqH,EAAAA,aAAa,GAAD5H,OACfyH,EAAM,OAAAzH,OACP8G,EAAIe,SAAQ,KAAA7H,OACVmH,GAAInH,OAAGqH,EAAO,mBAAArH,OAAkBoH,EAAK,eAAApH,OAAc8C,EAAS,gBAAA9C,OAC9DsE,GAAS,MAAQ,KAAI,gBAAAtE,OACR8B,EAAU,YAAA9B,OAAWkC,EAAM,cAAAlC,OAAasC,EAAI,UAAAtC,OAAS0C,IAGtE,IAAIoF,EAAuB,KAC3B,GAAU,OAANvH,EAqBF,OApBAA,EAAEwH,OAAS,WACTC,QAAQC,IAAI,8BACZ1G,GAAS2G,EAAAA,EAAAA,KAAgB,IACzB3H,EAAE4H,KAAK,MACPL,EAAWM,aAAY,WACrB7H,EAAE4H,KAAK,KACT,GAAG,IACL,EACA5H,EAAE8H,UAAY,SAACC,GACb,IAAIC,EAAkBC,KAAKC,MAAMH,EAAQI,KAAKxB,YAE9CqB,EAAEI,MAAQC,EAAAA,GAASC,QAAQN,EAAEO,MAAMC,WACnCR,EAAES,IAAMC,KAAKC,SACb3H,GAAS4H,EAAAA,EAAAA,IAAqBZ,GAChC,EACAhI,EAAE6I,QAAU,WACVC,cAAcvB,GACdE,QAAQC,IAAI,+BACZ1G,GAAS2G,EAAAA,EAAAA,KAAgB,GAC3B,EACO,WACL3H,EAAE+I,MAAM,KACRD,cAAcvB,GACdE,QAAQC,IAAI,uBACZC,EAAAA,EAAAA,KAAgB,EAClB,CAEJ,EAkLkBvB,MAAO,CACLlG,MAAO,WAIZoB,IACCtH,EAAAA,EAAAA,KAACgM,EAAAA,IAAM,CACL9K,GAAI,aACJH,MAAO,aACP,eAAc,oBACdoL,QAAQ,aACRxG,QA3LA,WAChBK,EAAE+I,MAAM,KACR/H,GAAS2G,EAAAA,EAAAA,KAAgB,GAC3B,EAyLkBvB,MAAO,CACLlG,MAAO,oBAOlBiE,IACC5F,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHqG,MAAI,EACJvH,UAAS,GAAAmC,OAAK6B,EAAe,iBAAmB,IAChDwD,GAAI,GACJC,GAAI,CACFiE,UAAW,OACXhE,QAAS,OACTC,SAAU,SACVoB,WAAY,UACZ3F,QAAS,OAET,yBAA0B,CACxB6E,MAAO,WAGT,qBAAsB,CACpBN,SAAU,SACV,UAAW,CACTtE,aAAc,OACdwE,WAAY,MAIhB,0BAA2B,CACzBD,SAAU,OACVC,WAAY,WAEd7G,SAAA,EAEFC,EAAAA,EAAAA,MAAC6G,EAAAA,EAAG,CACFL,GAAI,CACFS,IAAK,OACLR,QAAS,OACTiE,oBAAqB,cACrB/I,MAAO,QACP5B,SAAA,EAEFtE,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACd5L,UAAU,kBACVpC,GAAG,oBACHC,KAAK,oBACLJ,MAAM,cACNhB,QAAS,CAAC,EACVsC,YAAY,WACZpB,MAAOsG,EACPvG,SAAU,SAACmO,GACT3H,EAAc2H,EAAEvD,OAAO3K,MACzB,EACAQ,SAAU6F,KAGZtH,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACd5L,UAAU,kBACVpC,GAAG,sBACHC,KAAK,sBACLJ,MAAM,gBACNhB,QAAS,CAAC,EACVsC,YAAY,wBACZpB,MAAO8G,EACP/G,SAAU,SAACmO,GACTnH,EAAQmH,EAAEvD,OAAO3K,MACnB,EACAQ,SAAU6F,KAGZtH,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACd5L,UAAU,kBACVpC,GAAG,eACHC,KAAK,eACLJ,MAAM,SACNhB,QAAS,CAAC,EACVsC,YAAY,mBACZpB,MAAO0G,EACP3G,SAAU,SAACmO,GACTvH,EAAUuH,EAAEvD,OAAO3K,MACrB,EACAQ,SAAU6F,QAGd/C,EAAAA,EAAAA,MAAC6G,EAAAA,EAAG,CACFL,GAAI,CACFS,IAAK,OACLR,QAAS,OACTiE,oBAAqB,UACrB/I,MAAO,OACP8I,UAAW,QACX1K,SAAA,EAEFtE,EAAAA,EAAAA,KAACoL,EAAAA,EAAG,CACFgE,KAAK,IACLhD,MAAO,CACLlG,MAAO,sBACP5B,UAEFtE,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACd5L,UAAU,kBACVpC,GAAG,aACHC,KAAK,aACLJ,MAAM,OACNhB,QAAS,CAAC,EACVsC,YAAY,6BACZpB,MAAOkH,EACPnH,SAAU,SAACmO,GACT/G,EAAQ+G,EAAEvD,OAAO3K,MACnB,EACAQ,SAAU6F,OAGdtH,EAAAA,EAAAA,KAACoL,EAAAA,EAAG,CACFL,GAAI,CACFlE,WAAY,QACZvC,UAEFtE,EAAAA,EAAAA,KAACkP,EAAAA,EAAe,CACd5L,UAAU,kBACVpC,GAAG,mBACHC,KAAK,mBACLJ,MAAM,qBACNM,KAAK,SACLtB,QAAS,CAAC,EACVsC,YAAY,8BACZpB,MAAK,GAAAwE,OAAK8C,GACVvH,SAAU,SAACmO,GACT3G,EAAa6G,SAASF,EAAEvD,OAAO3K,OACjC,EACAQ,SAAU6F,UAIhBtH,EAAAA,EAAAA,KAACoL,EAAAA,EAAG,CACFL,GAAI,CACFC,QAAS,OACTK,WAAY,SACZC,eAAgB,aAChB0D,UAAW,QACX1K,UAEFtE,EAAAA,EAAAA,KAAC0L,EAAAA,EAAe,CACdC,QAAS5B,GACT7I,GAAI,cACJC,KAAM,cACNJ,MAAO,sBACPC,SAAU,SAAC6J,GACTb,GAAUa,EAAKe,OAAOD,QACxB,EACA1K,MAAO,cACPQ,SAAU6F,EACVuE,qBAAqB,uBACrB9L,QAAS,CACP+L,YAAa/L,EAAQ6G,iBACrBE,cAAe/G,EAAQ+G,sBAK7B,MAEJ9G,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACqG,MAAI,EAACC,GAAI,GAAGxG,UAChBtE,EAAAA,EAAAA,KAACoL,EAAAA,EAAG,CACFL,GAAI,CACFG,SAAU,OACVC,WAAY,IACZxE,aAAc,OACdqI,UAAW,QACX1K,SACH,qBAIHtE,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACqG,MAAI,EAACC,GAAI,GAAIxH,UAAWvD,EAAQuP,WAAWhL,UAC/CtE,EAAAA,EAAAA,KAACuP,EAAAA,EAAY,CACXC,YAAa,GACbC,QAAS,CACP,CACE1O,MAAO,OACP2O,WAAY,QACZC,eAAgB,SAACpB,GACf,IAAMqB,EAAY,IAAIC,KAAKtB,GAC3B,OAAOuB,EAAAA,EAAAA,IAAaF,EACtB,EACAG,YAAahQ,EAAQoG,UAEvB,CAAEpF,MAAO,OAAQ2O,WAAY,OAC7B,CACE3O,MAAO,SACP2O,WAAY,GACZC,eAAgB,SAACK,GAAyB,SAAAvK,OACrCuK,EAAYzI,WAAU,KAAA9B,OAAIuK,EAAYC,UAAS,EACpDC,kBAAkB,GAEpB,CACEnP,MAAO,WACP2O,WAAY,mBACZC,eAAgB,SAACK,GAAyB,SAAAvK,OACrCuK,EAAYG,KAAI,KAAA1K,OAAIuK,EAAYI,OAAM,EAC3CF,kBAAkB,GAEpB,CACEnP,MAAO,YACP2O,WAAY,qBACZK,YAAahQ,EAAQoG,UAEvB,CACEpF,MAAO,SACP2O,WAAY,eACZC,eAAgBU,EAAAA,GAChBN,YAAahQ,EAAQkG,UAEvB,CACElF,MAAO,WACP2O,WAAY,eACZC,eAAgBU,EAAAA,GAChBN,YAAahQ,EAAQkG,WAGzBqK,WAAW,EACXC,QAASrJ,EACTsJ,WAAW,SACXC,QAAQ,MACRC,mBACEpJ,EACI,kCACA,2BAENqJ,kBAAmB5Q,EAAQuG,aAC3BsK,oBAAkB,aAOhC,G,iIChkBO,IAAMC,EAAyB,KACzBC,EAAyB,KACzBC,EAA2B,KAE3B5D,EAAa,SAACC,GACzB,IAAID,EAAa,KAIjB,MAHiB,WAAbC,IACFD,EAAa,OAERA,CACT,C","sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Trace/Trace.tsx","utils/wsUtils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { Box, Grid } from \"@mui/material\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Button, FilterIcon, PageLayout } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { TraceMessage } from \"./types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { niceBytes, timeFromDate } from \"../../../common/utils\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport CheckboxWrapper from \"../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\n\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  setTraceStarted,\n  traceMessageReceived,\n  traceResetMessages,\n} from \"./traceSlice\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\nimport { setHelpName } from \"../../../systemSlice\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizeItem: {\n      width: 150,\n    },\n    timeItem: {\n      width: 100,\n    },\n    ...actionsTray,\n\n    ...tableStyles,\n    tableWrapper: {\n      height: \"calc(100vh - 292px)\",\n    },\n    formBox: {\n      border: \"1px solid #EAEAEA\",\n      padding: 25,\n      marginBottom: 15,\n    },\n    traceCheckedIcon: {\n      width: \"14px\",\n      height: \"14px\",\n      marginLeft: \"0px\",\n    },\n    unCheckedIcon: {\n      width: \"14px\",\n      height: \"14px\",\n    },\n    ...containerForHeader,\n  });\n\ninterface ITrace {\n  classes: any;\n}\n\nvar c: any = null;\n\nconst Trace = ({ classes }: ITrace) => {\n  const dispatch = useAppDispatch();\n\n  const messages = useSelector((state: AppState) => state.trace.messages);\n  const traceStarted = useSelector(\n    (state: AppState) => state.trace.traceStarted\n  );\n\n  const [statusCode, setStatusCode] = useState<string>(\"\");\n  const [method, setMethod] = useState<string>(\"\");\n  const [func, setFunc] = useState<string>(\"\");\n  const [path, setPath] = useState<string>(\"\");\n  const [threshold, setThreshold] = useState<number>(0);\n  const [all, setAll] = useState<boolean>(false);\n  const [s3, setS3] = useState<boolean>(true);\n  const [internal, setInternal] = useState<boolean>(false);\n  const [storage, setStorage] = useState<boolean>(false);\n  const [os, setOS] = useState<boolean>(false);\n  const [errors, setErrors] = useState<boolean>(false);\n\n  const [toggleFilter, setToggleFilter] = useState<boolean>(false);\n\n  const startTrace = () => {\n    dispatch(traceResetMessages());\n    const url = new URL(window.location.toString());\n    const isDev = process.env.NODE_ENV === \"development\";\n    const port = isDev ? \"9090\" : url.port;\n\n    let calls = `${s3 ? \"s3,\" : \"\"}${internal ? \"internal,\" : \"\"}${\n      storage ? \"storage,\" : \"\"\n    }${os ? \"os,\" : \"\"}`;\n\n    if (all) {\n      calls = \"all\";\n    }\n    // check if we are using base path, if not this always is `/`\n    const baseLocation = new URL(document.baseURI);\n    const baseUrl = baseLocation.pathname;\n\n    const wsProt = wsProtocol(url.protocol);\n    c = new W3CWebSocket(\n      `${wsProt}://${\n        url.hostname\n      }:${port}${baseUrl}ws/trace?calls=${calls}&threshold=${threshold}&onlyErrors=${\n        errors ? \"yes\" : \"no\"\n      }&statusCode=${statusCode}&method=${method}&funcname=${func}&path=${path}`\n    );\n\n    let interval: any | null = null;\n    if (c !== null) {\n      c.onopen = () => {\n        console.log(\"WebSocket Client Connected\");\n        dispatch(setTraceStarted(true));\n        c.send(\"ok\");\n        interval = setInterval(() => {\n          c.send(\"ok\");\n        }, 10 * 1000);\n      };\n      c.onmessage = (message: IMessageEvent) => {\n        let m: TraceMessage = JSON.parse(message.data.toString());\n\n        m.ptime = DateTime.fromISO(m.time).toJSDate();\n        m.key = Math.random();\n        dispatch(traceMessageReceived(m));\n      };\n      c.onclose = () => {\n        clearInterval(interval);\n        console.log(\"connection closed by server\");\n        dispatch(setTraceStarted(false));\n      };\n      return () => {\n        c.close(1000);\n        clearInterval(interval);\n        console.log(\"closing websockets\");\n        setTraceStarted(false);\n      };\n    }\n  };\n\n  const stopTrace = () => {\n    c.close(1000);\n    dispatch(setTraceStarted(false));\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"trace\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Trace\"} actions={<HelpMenu />} />\n\n      <PageLayout>\n        <Grid container spacing={1} className={classes.formBox}>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexFlow: \"column\",\n\n              \"& .trace-checkbox-label\": {\n                fontSize: \"14px\",\n                fontWeight: \"normal\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                fontSize: \"16px\",\n                fontWeight: 600,\n                padding: \"20px 0px 20px 0\",\n              }}\n            >\n              Calls to Trace\n            </Box>\n            <Box\n              className={`${traceStarted ? \"inactive-state\" : \"\"}`}\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n\n                \"&.inactive-state .trace-checkbox-label\": {\n                  color: \"#a6a5a5\",\n                },\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexFlow: \"row\",\n                  gap: {\n                    md: \"30px\",\n                  },\n\n                  \"& .trace-checked-icon\": {\n                    border: \"1px solid red\",\n                  },\n                }}\n              >\n                <CheckboxWrapper\n                  checked={all}\n                  id={\"all_calls\"}\n                  name={\"all_calls\"}\n                  label={\"All\"}\n                  onChange={(item) => {\n                    setAll(item.target.checked);\n                  }}\n                  value={\"all\"}\n                  disabled={traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n                <CheckboxWrapper\n                  checked={s3 || all}\n                  id={\"s3_calls\"}\n                  name={\"s3_calls\"}\n                  label={\"S3\"}\n                  onChange={(item) => {\n                    setS3(item.target.checked);\n                  }}\n                  value={\"s3\"}\n                  disabled={traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n                <CheckboxWrapper\n                  checked={internal || all}\n                  id={\"internal_calls\"}\n                  name={\"internal_calls\"}\n                  label={\"Internal\"}\n                  onChange={(item) => {\n                    setInternal(item.target.checked);\n                  }}\n                  value={\"internal\"}\n                  disabled={all || traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n                <CheckboxWrapper\n                  checked={storage || all}\n                  id={\"storage_calls\"}\n                  name={\"storage_calls\"}\n                  label={\"Storage\"}\n                  onChange={(item) => {\n                    setStorage(item.target.checked);\n                  }}\n                  value={\"storage\"}\n                  disabled={all || traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n                <CheckboxWrapper\n                  checked={os || all}\n                  id={\"os_calls\"}\n                  name={\"os_calls\"}\n                  label={\"OS\"}\n                  onChange={(item) => {\n                    setOS(item.target.checked);\n                  }}\n                  value={\"os\"}\n                  disabled={all || traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  gap: \"15px\",\n                }}\n              >\n                <TooltipWrapper tooltip={\"More filter options\"}>\n                  <Button\n                    id={\"filter-toggle\"}\n                    onClick={() => {\n                      setToggleFilter(!toggleFilter);\n                    }}\n                    label={\"Filters\"}\n                    icon={<FilterIcon />}\n                    variant={\"regular\"}\n                    className={\"filters-toggle-button\"}\n                    style={{\n                      width: \"118px\",\n                      background: toggleFilter ? \"rgba(8, 28, 66, 0.04)\" : \"\",\n                    }}\n                  />\n                </TooltipWrapper>\n\n                {!traceStarted && (\n                  <Button\n                    id={\"start-trace\"}\n                    label={\"Start\"}\n                    data-test-id={\"trace-start-button\"}\n                    variant=\"callAction\"\n                    onClick={startTrace}\n                    style={{\n                      width: \"118px\",\n                    }}\n                  />\n                )}\n                {traceStarted && (\n                  <Button\n                    id={\"stop-trace\"}\n                    label={\"Stop Trace\"}\n                    data-test-id={\"trace-stop-button\"}\n                    variant=\"callAction\"\n                    onClick={stopTrace}\n                    style={{\n                      width: \"118px\",\n                    }}\n                  />\n                )}\n              </Box>\n            </Box>\n          </Grid>\n          {toggleFilter ? (\n            <Grid\n              item\n              className={`${traceStarted ? \"inactive-state\" : \"\"}`}\n              xs={12}\n              sx={{\n                marginTop: \"25px\",\n                display: \"flex\",\n                flexFlow: \"column\",\n                background: \"#FBFAFA\",\n                padding: \"30px\",\n\n                \"&.inactive-state label\": {\n                  color: \"#a6a5a5\",\n                },\n\n                \"& .orient-vertical\": {\n                  flexFlow: \"column\",\n                  \"& label\": {\n                    marginBottom: \"10px\",\n                    fontWeight: 600,\n                  },\n                },\n\n                \"& .trace-checkbox-label\": {\n                  fontSize: \"14px\",\n                  fontWeight: \"normal\",\n                },\n              }}\n            >\n              <Box\n                sx={{\n                  gap: \"30px\",\n                  display: \"grid\",\n                  gridTemplateColumns: \"1fr 1fr 1fr\",\n                  width: \"100%\",\n                }}\n              >\n                <InputBoxWrapper\n                  className=\"orient-vertical\"\n                  id=\"trace-status-code\"\n                  name=\"trace-status-code\"\n                  label=\"Status Code\"\n                  classes={{}}\n                  placeholder=\"e.g. 503\"\n                  value={statusCode}\n                  onChange={(e) => {\n                    setStatusCode(e.target.value);\n                  }}\n                  disabled={traceStarted}\n                />\n\n                <InputBoxWrapper\n                  className=\"orient-vertical\"\n                  id=\"trace-function-name\"\n                  name=\"trace-function-name\"\n                  label=\"Function Name\"\n                  classes={{}}\n                  placeholder=\"e.g. FunctionName2055\"\n                  value={func}\n                  onChange={(e) => {\n                    setFunc(e.target.value);\n                  }}\n                  disabled={traceStarted}\n                />\n\n                <InputBoxWrapper\n                  className=\"orient-vertical\"\n                  id=\"trace-method\"\n                  name=\"trace-method\"\n                  label=\"Method\"\n                  classes={{}}\n                  placeholder=\"e.g. Method 2056\"\n                  value={method}\n                  onChange={(e) => {\n                    setMethod(e.target.value);\n                  }}\n                  disabled={traceStarted}\n                />\n              </Box>\n              <Box\n                sx={{\n                  gap: \"30px\",\n                  display: \"grid\",\n                  gridTemplateColumns: \"2fr 1fr\",\n                  width: \"100%\",\n                  marginTop: \"33px\",\n                }}\n              >\n                <Box\n                  flex=\"2\"\n                  style={{\n                    width: \"calc( 100% + 10px)\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    className=\"orient-vertical\"\n                    id=\"trace-path\"\n                    name=\"trace-path\"\n                    label=\"Path\"\n                    classes={{}}\n                    placeholder=\"e.g. my-bucket/my-prefix/*\"\n                    value={path}\n                    onChange={(e) => {\n                      setPath(e.target.value);\n                    }}\n                    disabled={traceStarted}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginLeft: \"15px\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    className=\"orient-vertical\"\n                    id=\"trace-fthreshold\"\n                    name=\"trace-fthreshold\"\n                    label=\"Response Threshold\"\n                    type=\"number\"\n                    classes={{}}\n                    placeholder=\"e.g. website.io.3249.114.12\"\n                    value={`${threshold}`}\n                    onChange={(e) => {\n                      setThreshold(parseInt(e.target.value));\n                    }}\n                    disabled={traceStarted}\n                  />\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  marginTop: \"40px\",\n                }}\n              >\n                <CheckboxWrapper\n                  checked={errors}\n                  id={\"only_errors\"}\n                  name={\"only_errors\"}\n                  label={\"Display only Errors\"}\n                  onChange={(item) => {\n                    setErrors(item.target.checked);\n                  }}\n                  value={\"only_errors\"}\n                  disabled={traceStarted}\n                  overrideLabelClasses=\"trace-checkbox-label\"\n                  classes={{\n                    checkedIcon: classes.traceCheckedIcon,\n                    unCheckedIcon: classes.unCheckedIcon,\n                  }}\n                />\n              </Box>\n            </Grid>\n          ) : null}\n\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                fontSize: \"16px\",\n                fontWeight: 600,\n                marginBottom: \"30px\",\n                marginTop: \"30px\",\n              }}\n            >\n              Trace Results\n            </Box>\n          </Grid>\n          <Grid item xs={12} className={classes.tableBlock}>\n            <TableWrapper\n              itemActions={[]}\n              columns={[\n                {\n                  label: \"Time\",\n                  elementKey: \"ptime\",\n                  renderFunction: (time: Date) => {\n                    const timeParse = new Date(time);\n                    return timeFromDate(timeParse);\n                  },\n                  globalClass: classes.timeItem,\n                },\n                { label: \"Name\", elementKey: \"api\" },\n                {\n                  label: \"Status\",\n                  elementKey: \"\",\n                  renderFunction: (fullElement: TraceMessage) =>\n                    `${fullElement.statusCode} ${fullElement.statusMsg}`,\n                  renderFullObject: true,\n                },\n                {\n                  label: \"Location\",\n                  elementKey: \"configuration_id\",\n                  renderFunction: (fullElement: TraceMessage) =>\n                    `${fullElement.host} ${fullElement.client}`,\n                  renderFullObject: true,\n                },\n                {\n                  label: \"Load Time\",\n                  elementKey: \"callStats.duration\",\n                  globalClass: classes.timeItem,\n                },\n                {\n                  label: \"Upload\",\n                  elementKey: \"callStats.rx\",\n                  renderFunction: niceBytes,\n                  globalClass: classes.sizeItem,\n                },\n                {\n                  label: \"Download\",\n                  elementKey: \"callStats.tx\",\n                  renderFunction: niceBytes,\n                  globalClass: classes.sizeItem,\n                },\n              ]}\n              isLoading={false}\n              records={messages}\n              entityName=\"Traces\"\n              idField=\"api\"\n              customEmptyMessage={\n                traceStarted\n                  ? \"No Traced elements received yet\"\n                  : \"Trace is not started yet\"\n              }\n              customPaperHeight={classes.tableWrapper}\n              autoScrollToBottom\n            />\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Trace);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n"],"names":["inputStyles","makeStyles","theme","createStyles","_objectSpread","inputFieldStyles","InputField","props","classes","_jsx","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref","label","onChange","value","id","name","_ref$type","type","_ref$autoComplete","autoComplete","_ref$disabled","disabled","_ref$multiline","multiline","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","className","onKeyPress","onFocus","onPaste","inputProps","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","React","children","_jsxs","Grid","container","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","fullWidth","helperText","inputRebase","concat","IconButton","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","c","sizeItem","width","timeItem","actionsTray","tableStyles","tableWrapper","height","formBox","border","padding","marginBottom","traceCheckedIcon","marginLeft","unCheckedIcon","containerForHeader","dispatch","useAppDispatch","messages","useSelector","state","trace","traceStarted","statusCode","setStatusCode","_useState3","_useState4","method","setMethod","_useState5","_useState6","func","setFunc","_useState7","_useState8","path","setPath","_useState9","_useState10","threshold","setThreshold","_useState11","_useState12","all","setAll","_useState13","_useState14","s3","setS3","_useState15","_useState16","internal","setInternal","_useState17","_useState18","storage","setStorage","_useState19","_useState20","os","setOS","_useState21","_useState22","errors","setErrors","_useState23","_useState24","toggleFilter","setToggleFilter","useEffect","setHelpName","Fragment","PageHeaderWrapper","actions","HelpMenu","PageLayout","spacing","item","xs","sx","display","flexFlow","fontSize","fontWeight","Box","alignItems","justifyContent","color","gap","md","CheckboxWrapper","checked","target","overrideLabelClasses","checkedIcon","TooltipWrapper","Button","icon","FilterIcon","variant","style","background","traceResetMessages","url","URL","window","location","toString","port","calls","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","W3CWebSocket","hostname","interval","onopen","console","log","setTraceStarted","send","setInterval","onmessage","message","m","JSON","parse","data","ptime","DateTime","fromISO","time","toJSDate","key","Math","random","traceMessageReceived","onclose","clearInterval","close","marginTop","gridTemplateColumns","InputBoxWrapper","e","flex","parseInt","tableBlock","TableWrapper","itemActions","columns","elementKey","renderFunction","timeParse","Date","timeFromDate","globalClass","fullElement","statusMsg","renderFullObject","host","client","niceBytes","isLoading","records","entityName","idField","customEmptyMessage","customPaperHeight","autoScrollToBottom","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr"],"sourceRoot":""}