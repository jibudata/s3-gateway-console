{"version":3,"file":"static/js/889.2d66d888.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddReplicationModal.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BucketReplicationIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketReplicationRule, BulkReplicationResponse } from \"../types\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: () => any;\n  classes: any;\n  bucketName: string;\n\n  setReplicationRules: BucketReplicationRule[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    modalFormScrollable: {\n      ...modalStyleUtils.modalFormScrollable,\n      paddingRight: 10,\n    },\n  });\n\nconst AddReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n\n  setReplicationRules,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [metadataSync, setMetadataSync] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n\n  useEffect(() => {\n    if (setReplicationRules.length === 0) {\n      setPriority(\"1\");\n      return;\n    }\n\n    const greatestValue = setReplicationRules.reduce((prevAcc, currValue) => {\n      if (currValue.priority > prevAcc) {\n        return currValue.priority;\n      }\n      return prevAcc;\n    }, 0);\n\n    const nextPriority = greatestValue + 1;\n    setPriority(nextPriority.toString());\n  }, [setReplicationRules]);\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n      priority: parseInt(priority),\n      storageClass: targetStorageClass,\n      replicateMetadata: metadataSync,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = get(response, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            dispatch(\n              setModalErrorSnackMessage({\n                errorMessage: itemVal.errorString,\n                detailedError: \"\",\n              })\n            );\n            return;\n          }\n\n          closeModalAndRefresh();\n\n          return;\n        }\n        dispatch(\n          setModalErrorSnackMessage({\n            errorMessage: \"No changes applied\",\n            detailedError: \"\",\n          })\n        );\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Set Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddLoading(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"priority\"\n                name=\"priority\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.validity.valid) {\n                    setPriority(e.target.value);\n                  }\n                }}\n                label=\"Priority\"\n                value={priority}\n                pattern={\"[0-9]*\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetURL\"\n                name=\"targetURL\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetURL(e.target.value);\n                }}\n                placeholder=\"play.min.io\"\n                label=\"Target URL\"\n                value={targetURL}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                checked={useTLS}\n                id=\"useTLS\"\n                name=\"useTLS\"\n                label=\"Use TLS\"\n                onChange={(e) => {\n                  setUseTLS(e.target.checked);\n                }}\n                value=\"yes\"\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"accessKey\"\n                name=\"accessKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setAccessKey(e.target.value);\n                }}\n                label=\"Access Key\"\n                value={accessKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"secretKey\"\n                name=\"secretKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSecretKey(e.target.value);\n                }}\n                label=\"Secret Key\"\n                value={secretKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetBucket\"\n                name=\"targetBucket\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetBucket(e.target.value);\n                }}\n                label=\"Target Bucket\"\n                value={targetBucket}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"region\"\n                name=\"region\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setRegion(e.target.value);\n                }}\n                label=\"Region\"\n                value={region}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                id=\"replication_mode\"\n                name=\"replication_mode\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setReplicationMode(e.target.value as string);\n                }}\n                label=\"Replication Mode\"\n                value={replicationMode}\n                options={[\n                  { label: \"Asynchronous\", value: \"async\" },\n                  { label: \"Synchronous\", value: \"sync\" },\n                ]}\n              />\n            </Grid>\n\n            {replicationMode === \"async\" && (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <div className={classes.multiContainer}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"bandwidth_scalar\"\n                    name=\"bandwidth_scalar\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      if (e.target.validity.valid) {\n                        setBandwidthScalar(e.target.value as string);\n                      }\n                    }}\n                    label=\"Bandwidth\"\n                    value={bandwidthScalar}\n                    min=\"0\"\n                    pattern={\"[0-9]*\"}\n                    overlayObject={\n                      <InputUnitMenu\n                        id={\"quota_unit\"}\n                        onUnitChange={(newValue) => {\n                          setBandwidthUnit(newValue);\n                        }}\n                        unitSelected={bandwidthUnit}\n                        unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                        disabled={false}\n                      />\n                    }\n                  />\n                </div>\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"healthCheck\"\n                name=\"healthCheck\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setHealthCheck(e.target.value as string);\n                }}\n                label=\"Health Check Duration\"\n                value={healthCheck}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.spacerTop} ${classes.formFieldRow}`}\n            >\n              <InputBoxWrapper\n                id=\"storageClass\"\n                name=\"storageClass\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetStorageClass(e.target.value);\n                }}\n                placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n                label=\"Storage Class\"\n                value={targetStorageClass}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Object Filters\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    placeholder=\"prefix\"\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Replication Options\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={metadataSync}\n                    id=\"metadatataSync\"\n                    name=\"metadatataSync\"\n                    label=\"Metadata Sync\"\n                    onChange={(e) => {\n                      setMetadataSync(e.target.checked);\n                    }}\n                    value={metadataSync}\n                    description={\"Metadata Sync\"}\n                  />\n                  <FormSwitchWrapper\n                    checked={repDeleteMarker}\n                    id=\"deleteMarker\"\n                    name=\"deleteMarker\"\n                    label=\"Delete Marker\"\n                    onChange={(e) => {\n                      setRepDeleteMarker(e.target.checked);\n                    }}\n                    value={repDeleteMarker}\n                    description={\"Replicate soft deletes\"}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDelete}\n                    id=\"repDelete\"\n                    name=\"repDelete\"\n                    label=\"Deletes\"\n                    onChange={(e) => {\n                      setRepDelete(e.target.checked);\n                    }}\n                    value={repDelete}\n                    description={\"Replicate versioned deletes\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"submit\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddReplicationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n"],"names":["withStyles","theme","createStyles","_objectSpread","multiContainer","display","alignItems","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","modalFormScrollable","paddingRight","_ref","open","closeModalAndRefresh","classes","bucketName","setReplicationRules","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","addLoading","setAddLoading","_useState3","_useState4","priority","setPriority","_useState5","_useState6","accessKey","setAccessKey","_useState7","_useState8","secretKey","setSecretKey","_useState9","_useState10","targetURL","setTargetURL","_useState11","_useState12","targetStorageClass","setTargetStorageClass","_useState13","_useState14","prefix","setPrefix","_useState15","_useState16","targetBucket","setTargetBucket","_useState17","_useState18","region","setRegion","_useState19","_useState20","useTLS","setUseTLS","_useState21","_useState22","repDeleteMarker","setRepDeleteMarker","_useState23","_useState24","repDelete","setRepDelete","_useState25","_useState26","metadataSync","setMetadataSync","_useState27","_useState28","tags","setTags","_useState29","_useState30","replicationMode","setReplicationMode","_useState31","_useState32","bandwidthScalar","setBandwidthScalar","_useState33","_useState34","bandwidthUnit","setBandwidthUnit","_useState35","_useState36","healthCheck","setHealthCheck","useEffect","length","greatestValue","reduce","prevAcc","currValue","toString","_jsx","ModalWrapper","modalOpen","onClose","title","titleIcon","BucketReplicationIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","replicate","originBucket","destinationBucket","hc","parseInt","endURL","concat","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","storageClass","replicateMetadata","api","then","response","states","get","itemVal","errorString","setModalErrorSnackMessage","errorMessage","detailedError","catch","err","addRecord","_jsxs","Grid","container","item","xs","className","formFieldRow","InputBoxWrapper","id","name","onChange","target","validity","valid","value","label","pattern","placeholder","FormSwitchWrapper","checked","SelectWrapper","options","type","min","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","spacerTop","fieldGroup","descriptionText","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","modalButtonBar","Button","variant","onClick","color","buttonTrigger","border","borderRadius","backgroundColor","fontSize","_ref$disabled","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","Fragment","undefined","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","map","unit","MenuItem","SelectStyled","root","height","lineHeight","marginTop","spacing","input","position","fontWeight","padding","borderColor","InputBase","fieldBasic","tooltipHelper","fieldContainer","flexFlow","_ref$tooltip","tooltip","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","FormControl","fullWidth","Select","option"],"sourceRoot":""}