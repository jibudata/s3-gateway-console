{"version":3,"file":"static/js/8833.4ba5da15.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { HelpBox } from \"mds\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup.</div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, DialogContentText } from \"@mui/material\";\nimport { Button, HelpBox, InspectMenuIcon, PasswordKeyIcon } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteCookie,\n  encodeURLString,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport KeyRevealer from \"./KeyRevealer\";\nimport { selDistSet, setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\nimport { registeredCluster } from \"../../../config\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    switchLabel: {\n      fontWeight: \"normal\",\n    },\n    ...deleteDialogStyles,\n    ...modalStyleUtils,\n  });\n\nconst ExampleBlock = ({\n  volumeVal,\n  pathVal,\n}: {\n  volumeVal: string;\n  pathVal: string;\n}) => {\n  return (\n    <Box className=\"code-block-container\">\n      <Box className=\"example-code-block\">\n        <Box\n          sx={{\n            display: \"flex\",\n            marginBottom: \"5px\",\n            flexFlow: {\n              sm: \"row\",\n              xs: \"column\",\n            },\n          }}\n        >\n          <label>Volume/bucket Name :</label> <code>{volumeVal}</code>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: {\n              sm: \"row\",\n              xs: \"column\",\n            },\n          }}\n        >\n          <label>Path : </label>\n          <code>{pathVal}</code>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst Inspect = ({ classes }: { classes: any }) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const distributedSetup = useSelector(selDistSet);\n\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n  const clusterRegistered = registeredCluster();\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    const file = encodeURLString(inspectPath);\n    const volume = encodeURLString(volumeName);\n\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: resErr.message,\n              detailedError: resErr.code,\n            })\n          );\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Inspect\"} />\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n              border: \"1px solid #eaeaea\",\n              padding: {\n                lg: \"40px\",\n                xs: \"15px\",\n              },\n              flexWrap: \"wrap\",\n              gap: {\n                lg: \"55px\",\n                xs: \"20px\",\n              },\n              height: {\n                md: \"calc(100vh - 120px)\",\n                xs: \"100%\",\n              },\n              flexFlow: {\n                lg: \"row\",\n                xs: \"column\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                border: \"1px solid #eaeaea\",\n                flex: {\n                  md: 2,\n                  xs: 1,\n                },\n                width: {\n                  lg: \"auto\",\n                  xs: \"100%\",\n                },\n                padding: {\n                  lg: \"40px\",\n                  xs: \"15px\",\n                },\n              }}\n            >\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  e.preventDefault();\n                  if (!clusterRegistered) {\n                    navigate(\"/support/register\");\n                    return;\n                  }\n                  performInspect();\n                }}\n              >\n                <Box>\n                  <InputBoxWrapper\n                    id=\"inspect_volume\"\n                    name=\"inspect_volume\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_volume\",\n                    }}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setVolumeName(e.target.value);\n                    }}\n                    label=\"Volume or Bucket Name\"\n                    value={volumeName}\n                    error={volumeError}\n                    required\n                    placeholder={\"test-bucket\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"15px\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    id=\"inspect_path\"\n                    name=\"inspect_path\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_path\",\n                    }}\n                    error={pathError}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setInspectPath(e.target.value);\n                    }}\n                    label=\"File or Path to inspect\"\n                    value={inspectPath}\n                    required\n                    placeholder={\"test*/xl.meta\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"25px\",\n                  }}\n                >\n                  <FormSwitchWrapper\n                    classes={{\n                      inputLabel: classes.switchLabel,\n                    }}\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_encrypt\",\n                    }}\n                    label=\"Encrypt\"\n                    indicatorLabels={[\"True\", \"False\"]}\n                    checked={isEncrypt}\n                    value={\"true\"}\n                    id=\"inspect_encrypt\"\n                    name=\"inspect_encrypt\"\n                    onChange={(e) => {\n                      setIsEncrypt(!isEncrypt);\n                    }}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"55px\",\n                  }}\n                >\n                  <Button\n                    id={\"inspect-clear-button\"}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                    type=\"button\"\n                    variant=\"regular\"\n                    data-test-id=\"inspect-clear-button\"\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n                  <Button\n                    id={\"inspect-start\"}\n                    type=\"submit\"\n                    variant={!clusterRegistered ? \"regular\" : \"callAction\"}\n                    data-test-id=\"inspect-submit-button\"\n                    disabled={!isFormValid}\n                    label={\"Inspect\"}\n                  />\n                </Box>\n              </form>\n            </Box>\n            <Box\n              sx={{\n                flex: 1,\n                minWidth: {\n                  md: \"365px\",\n                  xs: \"100%\",\n                },\n                width: \"100%\",\n              }}\n            >\n              <HelpBox\n                title={\"\"}\n                iconComponent={null}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"-25px\",\n                        fontSize: \"16px\",\n                        fontWeight: 600,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          backgroundColor: \"#07193E\",\n                          height: \"15px\",\n                          width: \"15px\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          borderRadius: \"50%\",\n                          marginRight: \"18px\",\n                          padding: \"3px\",\n                          \"& .min-icon\": {\n                            height: \"11px\",\n                            width: \"11px\",\n                            fill: \"#ffffff\",\n                          },\n                        }}\n                      >\n                        <InspectMenuIcon />\n                      </Box>\n                      Learn more about the Inspect feature\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"16px\",\n                        fontWeight: 600,\n                        fontStyle: \"italic\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      Examples:\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        fontSize: \"14px\",\n                        flex: \"2\",\n                        \"& .step-number\": {\n                          color: \"#ffffff\",\n                          height: \"25px\",\n                          width: \"25px\",\n                          background: \"#081C42\",\n                          marginRight: \"10px\",\n                          textAlign: \"center\",\n                          fontWeight: 600,\n                          borderRadius: \"50%\",\n                        },\n\n                        \"& .step-row\": {\n                          fontSize: \"14px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n\n                          \"&.step-text\": {\n                            fontWeight: 400,\n                          },\n                          \"&:before\": {\n                            content: \"' '\",\n                            height: \"7px\",\n                            width: \"7px\",\n                            backgroundColor: \"#2781B0\",\n                            marginRight: \"10px\",\n                            marginTop: \"7px\",\n                            flexShrink: 0,\n                          },\n                        },\n\n                        \"& .code-block-container\": {\n                          flex: \"1\",\n                          marginTop: \"15px\",\n                          marginLeft: \"35px\",\n\n                          \"& input\": {\n                            color: \"#737373\",\n                          },\n                        },\n\n                        \"& .example-code-block label\": {\n                          display: \"inline-block\",\n                          width: {\n                            sm: \"160px\",\n                            xs: \"100%\",\n                          },\n                          fontWeight: 600,\n                          fontSize: \"14px\",\n                        },\n\n                        \"& code\": {\n                          width: {\n                            sm: \"100px\",\n                            xs: \"100%\",\n                          },\n                          paddingLeft: \"10px\",\n                          fontFamily: \"monospace\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"3px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          border: \"1px solid #eaeaea\",\n                          fontSize: \"10px\",\n                          color: \"#082146\",\n                          fontWeight: 500,\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test-bucket`}\n                        />\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test*/*/part.*`}\n                        />\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test/**`}\n                        />\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                        marginLeft: \"15px\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            </Box>\n          </Box>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <DialogContentText component=\"div\">\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <form\n                noValidate\n                onSubmit={() => {\n                  return false;\n                }}\n              >\n                <KeyRevealer value={decryptionKey} />\n              </form>\n            </DialogContentText>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Inspect);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button, CopyIcon } from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = useState<boolean>(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n      }}\n    >\n      <InputBoxWrapper\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        extraInputProps={{\n          readOnly: true,\n        }}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        id={\"show-hide-key\"}\n        style={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"callAction\"\n        onClick={() => setShown(!shown)}\n        label={\"Show/Hide\"}\n      />\n    </Box>\n  );\n};\n\nexport default KeyRevealer;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","inputStyles","makeStyles","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","className","onKeyPress","onFocus","onPaste","inputProps","useState","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","ExampleBlock","volumeVal","pathVal","marginBottom","sm","switchLabel","fontWeight","deleteDialogStyles","modalStyleUtils","dispatch","useAppDispatch","navigate","useNavigate","distributedSetup","useSelector","selDistSet","volumeName","setVolumeName","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","clusterRegistered","registeredCluster","useEffect","isVolValid","isPathValid","trim","length","slice","isValid","makeRequest","url","fetch","method","performInspect","file","encodeURLString","volume","urlOfInspectApi","then","res","ok","json","resErr","setErrorSnackMessage","errorMessage","message","detailedError","code","blob","filename","headers","get","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","Fragment","compactMode","justifyContent","padding","lg","flexWrap","gap","height","flex","width","noValidate","onSubmit","e","preventDefault","marginTop","indicatorLabels","checked","style","marginRight","variant","minWidth","backgroundColor","borderRadius","fill","fontStyle","background","textAlign","content","flexShrink","marginLeft","paddingLeft","fontFamily","paddingRight","paddingTop","paddingBottom","modalOpen","onClose","deleteCookie","titleIcon","component","shown","setShown","readOnly","navigator","clipboard","writeText","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}