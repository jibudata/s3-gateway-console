{"version":3,"file":"static/js/6747.add4b5cf.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Common/FormComponents/DateTimePickerWrapper/DateTimePickerWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Dashboard/BasicDashboard/StatusCountCard.tsx","screens/Console/Dashboard/Prometheus/types.ts","screens/Console/Dashboard/Prometheus/utils.tsx","screens/Console/Common/TabSelector/TabSelector.tsx","screens/Console/Dashboard/CommonCard.tsx","screens/Console/Dashboard/Prometheus/MergedWidgets.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/BarChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/BarChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/LineChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/LinearGraphWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/PieChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SimpleWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleRepWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleValueWidget.tsx","screens/Console/Dashboard/Prometheus/widgetUtils.tsx","screens/Console/Dashboard/Prometheus/ZoomWidget.tsx","screens/Console/Dashboard/Prometheus/PrDashboard.tsx","screens/Console/Dashboard/BasicDashboard/Utils.tsx","screens/Console/Dashboard/BasicDashboard/ServerInfoItem.tsx","screens/Console/Dashboard/BasicDashboard/DriveInfoItem.tsx","screens/Console/Dashboard/BasicDashboard/ServersList.tsx","screens/Console/Dashboard/BasicDashboard/CounterCard.tsx","screens/Console/Dashboard/BasicDashboard/ReportedUsage.tsx","screens/Console/Dashboard/BasicDashboard/BasicDashboard.tsx","screens/Console/Dashboard/Dashboard.tsx","screens/shared/tabs.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Button } from \"@mui/material\";\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\nimport WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport { actionsTray, widgetContainerCommon } from \"../common/styleLibrary\";\nimport DateTimePickerWrapper from \"../DateTimePickerWrapper/DateTimePickerWrapper\";\nimport SyncIcon from \"../../../../../icons/SyncIcon\";\n\ninterface IDateRangeSelector {\n  classes: any;\n  timeStart: any;\n  setTimeStart: (date: any) => void;\n  timeEnd: any;\n  setTimeEnd: (date: any) => void;\n  triggerSync?: () => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...widgetContainerCommon,\n    syncButton: {\n      \"&.MuiButton-root .MuiButton-iconSizeMedium > *:first-of-type\": {\n        fontSize: 18,\n      },\n    },\n    schedulerIcon: {\n      opacity: 0.4,\n      fontSize: 10,\n      \"& svg\": {\n        width: 18,\n        height: 18,\n      },\n    },\n    selectorLabel: {\n      color: \"#9D9E9D\",\n      fontWeight: \"bold\",\n      whiteSpace: \"nowrap\",\n      marginLeft: 10,\n      fontSize: 12,\n    },\n  });\n\nconst DateRangeSelector = ({\n  classes,\n  timeStart,\n  setTimeStart,\n  timeEnd,\n  setTimeEnd,\n  triggerSync,\n}: IDateRangeSelector) => {\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.timeContainers}>\n        <span className={classes.filterTitle}>Filter:</span>\n        <div className={classes.filterContainer}>\n          <span className={`${classes.filterTitle} ${classes.schedulerIcon}`}>\n            <ScheduleIcon />\n          </span>\n          <span className={classes.selectorLabel}>Start Time:</span>\n          <DateTimePickerWrapper\n            value={timeStart}\n            onChange={setTimeStart}\n            forFilterContained\n            id=\"stTime\"\n            noInputIcon\n          />\n          <span className={classes.divisorLine}>&nbsp;</span>\n          <span className={`${classes.filterTitle} ${classes.schedulerIcon}`}>\n            <WatchLaterIcon />\n          </span>\n          <span className={classes.selectorLabel}>End Time:</span>\n          <DateTimePickerWrapper\n            value={timeEnd}\n            onChange={setTimeEnd}\n            forFilterContained\n            id=\"endTime\"\n            noInputIcon\n          />\n        </div>\n        {triggerSync && (\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={triggerSync}\n            endIcon={<SyncIcon />}\n            className={classes.syncButton}\n          >\n            Sync\n          </Button>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DateRangeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport AdapterMoment from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport OpenListIcon from \"../../../../../icons/OpenListIcon\";\n\ninterface IDateTimePicker {\n  value: any;\n  onChange: (value: any) => any;\n  classes: any;\n  forSearchBlock?: boolean;\n  forFilterContained?: boolean;\n  label?: string;\n  required?: boolean;\n  tooltip?: string;\n  id: string;\n  disabled?: boolean;\n  noInputIcon?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelectorOverride: {\n      height: 40,\n      border: \"#EAEDEE 1px solid\",\n      marginLeft: 15,\n      backgroundColor: \"#fff\",\n      padding: \"0 16px\",\n      borderRadius: 5,\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\n        borderBottom: 0,\n      },\n      \"&:hover\": {\n        borderColor: \"#000\",\n        \"&:before, &:after\": {\n          borderColor: \"transparent\",\n          borderBottom: 0,\n        },\n      },\n      \"&:before, &:after\": {\n        borderColor: \"transparent\",\n        borderBottom: 0,\n      },\n      \"& input\": {\n        fontSize: 12,\n        fontWeight: 600,\n        color: \"#393939\",\n      },\n    },\n    dateSelectorFilterOverride: {\n      width: 180,\n      height: 42,\n      marginLeft: 20,\n      padding: 0,\n      borderRadius: 5,\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\n        borderBottom: 0,\n      },\n      \"&:hover\": {\n        \"&:before, &:after\": {\n          borderColor: \"transparent\",\n          borderBottom: 0,\n        },\n      },\n      \"&:before, &:after\": {\n        borderColor: \"transparent\",\n        borderBottom: 0,\n      },\n      \"& input\": {\n        fontSize: 12,\n        fontWeight: \"bold\",\n        color: \"#081C42\",\n      },\n      \"@media (max-width: 900px)\": {\n        width: 103,\n      },\n    },\n    dateSelectorFormOverride: {\n      width: \"100%\",\n      maxWidth: 840,\n    },\n    parentDateOverride: {\n      flexGrow: 1,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n    },\n    openListIcon: {\n      color: \"#9D9E9D\",\n      width: 8,\n      marginTop: 2,\n    },\n    paperOverride: {\n      \"& .MuiCalendarPicker-root\": {\n        padding: \"0 22px\",\n        \"& > div\": {\n          padding: 0,\n          \"& > div > div.PrivatePickersFadeTransitionGroup-root:first-of-type\":\n            {\n              color: \"#0A224C\",\n              fontWeight: \"bold\",\n            },\n          \"& > div > div.PrivatePickersFadeTransitionGroup-root:last-of-type\": {\n            color: \"#9D9E9D\",\n            \"& +  button.MuiButtonBase-root\": {\n              color: \"#9D9E9D\",\n            },\n          },\n          \"& > div:nth-child(2)\": {\n            \"& > div\": {\n              width: 0,\n            },\n            \"& > button.MuiButtonBase-root\": {\n              color: \"#0A224C\",\n            },\n          },\n        },\n      },\n      \"& .MuiTypography-root.MuiTypography-caption\": {\n        width: 26,\n        height: 26,\n        margin: 5,\n        color: \"#BCBCBC\",\n        fontSize: 10,\n      },\n      \"& button.MuiPickersDay-root\": {\n        fontWeight: \"bold\",\n        width: 26,\n        height: 26,\n        margin: 5,\n        textAlign: \"center\",\n        \"&.Mui-selected\": {\n          backgroundColor: theme.palette.primary.main,\n          color: \"#fff\",\n        },\n      },\n      \"& div.MuiPickersDay-hiddenDaySpacingFiller\": {\n        width: 26,\n        height: 26,\n        margin: 5,\n      },\n      \"& div.PrivatePickersSlideTransition-root\": {\n        minHeight: 240,\n      },\n      \"& div.MuiCalendarPicker-viewTransitionContainer\": {\n        borderTop: \"#F0F3F5 1px solid\",\n      },\n      \"& .MuiClockPicker-arrowSwitcher\": {\n        \"& > div\": {\n          width: 0,\n        },\n        \"& > button.MuiButtonBase-root\": {\n          color: \"#0A224C\",\n        },\n        \"& + div > div\": {\n          width: 255,\n          height: 255,\n          backgroundColor: \"#fff\",\n          border: \"#F0F3F5 3px solid\",\n          \"& > div:nth-child(2)\": {\n            backgroundColor: \"#B4B5B4\",\n            width: 12,\n            height: 12,\n            \"&::before\": {\n              content: \"' '\",\n              width: 35,\n              height: 35,\n              display: \"block\",\n              position: \"absolute\",\n              border: \"#F0F3F5 3px solid\",\n              top: -12,\n              left: -12,\n              borderRadius: \"100%\",\n            },\n          },\n          \"& > div:nth-child(3)\": {\n            backgroundColor: \"#B4B5B4\",\n            width: 4,\n          },\n          \"& > div:last-of-type\": {\n            marginTop: 15,\n            \"& > span\": {\n              color: \"#0A224C\",\n              \"&.Mui-selected\": {\n                color: \"#fff\",\n              },\n              \"&[aria-label='1 hours'], &[aria-label='2 hours'], &[aria-label='3 hours'], &[aria-label='4 hours'], &[aria-label='5 hours'], &[aria-label='6 hours'], &[aria-label='7 hours'], &[aria-label='8 hours'], &[aria-label='9 hours'], &[aria-label='10 hours'], &[aria-label='11 hours'], &[aria-label='12 hours']\":\n                {\n                  fontWeight: \"bold\",\n                  fontSize: 20,\n                  marginTop: -1,\n                },\n            },\n          },\n        },\n      },\n    },\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst DateTimePickerWrapper = ({\n  value,\n  onChange,\n  classes,\n  forSearchBlock = false,\n  forFilterContained = false,\n  label,\n  tooltip = \"\",\n  required,\n  id,\n  disabled = false,\n  noInputIcon = false,\n}: IDateTimePicker) => {\n  let adornment = {};\n\n  if (!noInputIcon) {\n    adornment = {\n      startAdornment: (\n        <InputAdornment position=\"start\">\n          <ScheduleIcon />\n        </InputAdornment>\n      ),\n    };\n  }\n\n  if (forFilterContained) {\n    adornment = {\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <OpenListIcon className={classes.openListIcon} />\n        </InputAdornment>\n      ),\n    };\n  }\n\n  let classOverriden = \"\";\n\n  if (forSearchBlock) {\n    classOverriden = classes.dateSelectorOverride;\n  } else if (forFilterContained) {\n    classOverriden = classes.dateSelectorFilterOverride;\n  }\n\n  const inputItem = (\n    <LocalizationProvider dateAdapter={AdapterMoment}>\n      <DateTimePicker\n        value={value}\n        onChange={onChange}\n        InputProps={{\n          ...adornment,\n          className: classOverriden,\n        }}\n        label=\"\"\n        className={\n          forSearchBlock\n            ? classes.parentDateOverride\n            : classes.dateSelectorFormOverride\n        }\n        disabled={disabled}\n        renderInput={(props) => (\n          <TextField id={id} variant=\"standard\" {...props} disabled />\n        )}\n        ampm={false}\n        PopperProps={{\n          className: classes.paperOverride,\n        }}\n      />\n    </LocalizationProvider>\n  );\n\n  if (forSearchBlock) {\n    return inputItem;\n  }\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        className={!forFilterContained ? classes.fieldContainer : \"\"}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>{inputItem}</div>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DateTimePickerWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { CircleIcon } from \"../../../../icons\";\n\nexport const StatusCountCard = ({\n  onlineCount = 0,\n  offlineCount = 0,\n  icon = null,\n  label = \"\",\n  okStatusText = \"Online\",\n  notOkStatusText = \"Offline\",\n}: {\n  icon: any;\n  onlineCount: number;\n  offlineCount: number;\n  label: string;\n  okStatusText?: string;\n  notOkStatusText?: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        fontFamily: \"Lato,sans-serif\",\n        color: \"#07193E\",\n        maxWidth: \"260px\",\n        minHeight: \"143px\",\n        display: \"flex\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        cursor: \"default\",\n      }}\n    >\n      <Box\n        sx={{\n          flex: 1,\n          display: \"flex\",\n          padding: {\n            sm: \"0 8px 0 8px\",\n            xs: \"0 10px 0 10px\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            flex: 1,\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginTop: \"22px\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              fontWeight: 600,\n            }}\n          >\n            {label}\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              paddingBottom: {\n                md: \"0px\",\n                xs: \"10px\",\n              },\n              fontSize: {\n                xl: \"55px\",\n                lg: \"50px\",\n                md: \"45px\",\n                xs: \"35px\",\n              },\n              flexFlow: \"row\",\n              fontWeight: 600,\n\n              \"& .stat-text\": {\n                color: \"#696969\",\n                fontSize: \"12px\",\n                marginTop: \"25px\",\n              },\n              \"& .stat-value\": {\n                textAlign: \"center\",\n                height: \"50px\",\n              },\n              \"& .min-icon\": {\n                marginRight: \"8px\",\n                marginTop: \"25px\",\n                height: \"10px\",\n                width: \"10px\",\n              },\n            }}\n          >\n            <Box>\n              <Box className=\"stat-value\">{onlineCount}</Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  \"& .min-icon\": {\n                    fill: \"#4CCB92\",\n                  },\n                }}\n              >\n                <CircleIcon /> <div className=\"stat-text\">{okStatusText}</div>\n              </Box>\n            </Box>\n\n            <Box>\n              <Box className=\"stat-value\">{offlineCount}</Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  \"& .min-icon\": {\n                    fill: \"#C83B51\",\n                  },\n                }}\n              >\n                <CircleIcon />{\" \"}\n                <div className=\"stat-text\">{notOkStatusText}</div>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            width: \"20px\",\n            height: \"20px\",\n            marginTop: \"26px\",\n            maxWidth: \"26px\",\n            \"& .min-icon\": {\n              width: \"16px\",\n              height: \"16px\",\n            },\n          }}\n        >\n          {icon}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default StatusCountCard;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  IBarChartConfiguration,\n  IBarChartRelation,\n  IDataSRep,\n  ILinearGraphConfiguration,\n  IPieChartConfiguration,\n} from \"./Widgets/types\";\n\nexport enum widgetType {\n  singleValue = \"singleValue\",\n  linearGraph = \"linearGraph\",\n  areaGraph = \"areaGraph\",\n  barChart = \"barChart\",\n  pieChart = \"pieChart\",\n  singleRep = \"singleRep\",\n  simpleWidget = \"simpleWidget\",\n}\n\nexport interface IDashboardPanel {\n  id: number;\n  mergedPanels?: IDashboardPanel[];\n  title: string;\n  data?: string | object[] | IDataSRep[];\n  dataOuter?: string | object[];\n  type?: widgetType;\n  widgetIcon?: any;\n  widgetConfiguration?:\n    | ILinearGraphConfiguration[]\n    | IBarChartConfiguration[]\n    | IPieChartConfiguration;\n  color?: string;\n  fillColor?: string;\n  innerLabel?: string;\n  labelDisplayFunction?: (value: string) => any;\n  disableYAxis?: boolean;\n  xAxisFormatter?: (item: string) => string;\n  yAxisFormatter?: (item: string) => string;\n  customStructure?: IBarChartRelation[];\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { IDashboardPanel, widgetType } from \"./types\";\nimport {\n  getTimeFromTimestamp,\n  niceBytes,\n  niceDays,\n  representationNumber,\n  textToRGBColor,\n  units,\n} from \"../../../../common/utils\";\nimport HealIcon from \"../../../../icons/HealIcon\";\nimport DiagnosticsIcon from \"../../../../icons/DiagnosticsIcon\";\nimport { UptimeIcon } from \"../../../../icons\";\n\nconst colorsMain = [\n  \"#C4D4E9\",\n  \"#DCD1EE\",\n  \"#D1EEE7\",\n  \"#EEDED1\",\n  \"#AAF38F\",\n  \"#F9E6C5\",\n  \"#C83B51\",\n  \"#F4CECE\",\n  \"#D6D6D6\",\n];\n\nconst niceDaysFromNS = (seconds: string) => {\n  return niceDays(seconds, \"ns\");\n};\n\nconst roundNumber = (value: string) => {\n  return parseInt(value).toString(10);\n};\n\nexport const panelsConfiguration: IDashboardPanel[] = [\n  {\n    id: 1,\n    title: \"Uptime\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <UptimeIcon />,\n    labelDisplayFunction: niceDays,\n  },\n  {\n    id: 50,\n    title: \"Capacity\",\n    data: [],\n    dataOuter: [{ name: \"outer\", value: 100 }],\n    widgetConfiguration: {\n      outerChart: {\n        colorList: [\"#9c9c9c\"],\n        innerRadius: 0,\n        outerRadius: 0,\n        startAngle: 0,\n        endAngle: 0,\n      },\n      innerChart: {\n        colorList: colorsMain,\n        innerRadius: 20,\n        outerRadius: 50,\n        startAngle: 90,\n        endAngle: -200,\n      },\n    },\n    type: widgetType.pieChart,\n    innerLabel: \"N/A\",\n    labelDisplayFunction: niceBytes,\n  },\n  {\n    id: 68,\n    title: \"Data Usage Growth\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.areaGraph,\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 52,\n    title: \"Object size distribution\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"a\",\n        color: colorsMain[0],\n        background: {\n          fill: \"#EEF1F4\",\n        },\n        greatestColor: \"#081C42\",\n      },\n    ],\n    customStructure: [\n      { originTag: \"LESS_THAN_1024_B\", displayTag: \"Less than 1024B\" },\n      {\n        originTag: \"BETWEEN_1024_B_AND_1_MB\",\n        displayTag: \"Between 1024B and 1MB\",\n      },\n      {\n        originTag: \"BETWEEN_1_MB_AND_10_MB\",\n        displayTag: \"Between 1MB and 10MB\",\n      },\n      {\n        originTag: \"BETWEEN_10_MB_AND_64_MB\",\n        displayTag: \"Between 10MB and 64MB\",\n      },\n      {\n        originTag: \"BETWEEN_64_MB_AND_128_MB\",\n        displayTag: \"Between 64MB and 128MB\",\n      },\n      {\n        originTag: \"BETWEEN_128_MB_AND_512_MB\",\n        displayTag: \"Between 128MB and 512MB\",\n      },\n      {\n        originTag: \"GREATER_THAN_512_MB\",\n        displayTag: \"Greater than 512MB\",\n      },\n    ],\n    type: widgetType.barChart,\n  },\n  {\n    id: 66,\n    title: \"Buckets\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#0071BC\",\n    fillColor: \"#ADD5E0\",\n  },\n  {\n    id: 44,\n    title: \"Objects\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#0071BC\",\n    fillColor: \"#ADD5E0\",\n  },\n  {\n    id: 63,\n    title: \"API Data Received Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 61,\n    title: \"Total Open FDs\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#22B573\",\n    fillColor: \"#A6E8C4\",\n  },\n  {\n    id: 62,\n    title: \"Total Goroutines\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#F7655E\",\n    fillColor: \"#F4CECE\",\n  },\n  {\n    id: 77,\n    title: \"Node CPU Usage\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 60,\n    title: \"API Request Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 70,\n    title: \"API Data Sent Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 17,\n    title: \"Internode Data Transfer\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 73,\n    title: \"Node IO\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 80,\n    title: \"Time Since Last Heal Activity\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <HealIcon />,\n    labelDisplayFunction: niceDaysFromNS,\n  },\n  {\n    id: 81,\n    title: \"Time Since Last Scan Activity\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <DiagnosticsIcon />,\n    labelDisplayFunction: niceDaysFromNS,\n  },\n  {\n    id: 71,\n    title: \"API Request Error Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 76,\n    title: \"Node Memory Usage\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 74,\n    title: \"Drive Used Capacity\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 82,\n    title: \"Drives Free Inodes\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    disableYAxis: true,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 11,\n    title: \"Node Syscalls\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 8,\n    title: \"Node File Descriptors\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 500,\n    mergedPanels: [\n      {\n        id: 53,\n        title: \"Online\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n      {\n        id: 69,\n        title: \"Offline\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n    ],\n    title: \"Servers\",\n  },\n  {\n    id: 501,\n    mergedPanels: [\n      {\n        id: 9,\n        title: \"Online\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n      {\n        id: 78,\n        title: \"Offline\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n    ],\n    title: \"Drives\",\n  },\n  {\n    id: 502,\n    mergedPanels: [\n      {\n        id: 65,\n        title: \"Upload\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n\n        labelDisplayFunction: niceBytes,\n      },\n      {\n        id: 64,\n        title: \"Download\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n\n        labelDisplayFunction: niceBytes,\n      },\n    ],\n    title: \"Network\",\n  },\n];\n\nconst calculateMainValue = (elements: any[], metricCalc: string) => {\n  if (elements.length === 0) {\n    return [\"\", \"0\"];\n  }\n\n  switch (metricCalc) {\n    case \"mean\":\n      const sumValues = elements.reduce((accumulator, currValue) => {\n        return accumulator + parseFloat(currValue[1]);\n      }, 0);\n\n      const mean = Math.floor(sumValues / elements.length);\n\n      return [\"\", mean.toString()];\n    default:\n      const sortResult = elements.sort(\n        (value1: any[], value2: any[]) => value1[0] - value2[0]\n      );\n\n      return sortResult[sortResult.length - 1];\n  }\n};\n\nconst constructLabelNames = (metrics: any, legendFormat: string) => {\n  const keysToReplace = Object.keys(metrics);\n  const expToReplace = new RegExp(`{{(${keysToReplace.join(\"|\")})}}`, \"g\");\n\n  let replacedLegend = legendFormat.replace(expToReplace, (matchItem) => {\n    const nwMatchItem = matchItem.replace(/({{|}})/g, \"\");\n    return metrics[nwMatchItem];\n  });\n\n  const countVarsOpen = (replacedLegend.match(/{{/g) || []).length;\n  const countVarsClose = (replacedLegend.match(/}}/g) || []).length;\n\n  let cleanLegend = replacedLegend.replace(/{{(.*?)}}/g, \"\");\n\n  if (\n    countVarsOpen === countVarsClose &&\n    countVarsOpen !== 0 &&\n    countVarsClose !== 0\n  ) {\n    keysToReplace.forEach((element) => {\n      replacedLegend = replacedLegend.replace(element, metrics[element]);\n    });\n\n    cleanLegend = replacedLegend;\n  }\n\n  // In case not all the legends were replaced, we remove the placeholders.\n  return cleanLegend;\n};\n\nexport const getWidgetsWithValue = (payload: any[]): IDashboardPanel[] => {\n  return panelsConfiguration.map((panelItem: IDashboardPanel) => {\n    const payloadData = payload.find(\n      (panelT) =>\n        panelT.title.toLowerCase().trim() ===\n        panelItem.title.toLowerCase().trim()\n    );\n    return widgetDetailsToPanel(payloadData, panelItem);\n  });\n};\n\nexport const widgetDetailsToPanel = (\n  payloadData: any,\n  panelItem: IDashboardPanel\n) => {\n  if (!payloadData) {\n    return panelItem;\n  }\n\n  const typeOfPayload = payloadData.type;\n\n  switch (panelItem.type) {\n    case widgetType.singleValue:\n    case widgetType.simpleWidget:\n      if (typeOfPayload === \"stat\" || typeOfPayload === \"singlestat\") {\n        // We sort values & get the last value\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\n\n        if (elements === null) {\n          elements = [];\n        }\n\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valueDisplay = calculateMainValue(elements, metricCalc);\n\n        const data = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\n          : valueDisplay[1];\n\n        return {\n          ...panelItem,\n          data,\n        };\n      }\n      break;\n    case widgetType.pieChart:\n      if (typeOfPayload === \"gauge\") {\n        let chartSeries = get(payloadData, \"targets[0].result\", []);\n\n        if (chartSeries === null) {\n          chartSeries = [];\n        }\n\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valuesArray = chartSeries.length > 0 ? chartSeries[0].values : [];\n\n        const totalValues = calculateMainValue(valuesArray, metricCalc);\n\n        const values = chartSeries.map((elementValue: any) => {\n          const values = get(elementValue, \"values\", []);\n          const metricKeyItem = Object.keys(elementValue.metric);\n\n          const sortResult = values.sort(\n            (value1: any[], value2: any[]) => value1[0] - value2[0]\n          );\n\n          const metricName = elementValue.metric[metricKeyItem[0]];\n          const value = sortResult[sortResult.length - 1];\n          return { name: metricName, value: parseInt(value) };\n        });\n\n        const innerLabel = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(totalValues[1])\n          : totalValues[1];\n\n        return {\n          ...panelItem,\n          data: values,\n          innerLabel,\n        };\n      }\n      break;\n    case widgetType.linearGraph:\n    case widgetType.areaGraph:\n      if (typeOfPayload === \"graph\") {\n        let targets = get(payloadData, \"targets\", []);\n        if (targets === null) {\n          targets = [];\n        }\n\n        const series: any[] = [];\n        const plotValues: any[] = [];\n\n        targets.forEach(\n          (\n            targetMaster: { legendFormat: string; result: any[] },\n            index: number\n          ) => {\n            // Add a new serie to plot variables in case it is not from multiple values\n            let results = get(targetMaster, \"result\", []);\n            const legendFormat = targetMaster.legendFormat;\n            if (results === null) {\n              results = [];\n            }\n\n            results.forEach((itemVals: { metric: object; values: any[] }) => {\n              // Label Creation\n              const labelName = constructLabelNames(\n                itemVals.metric,\n                legendFormat\n              );\n              const keyName = `key_${index}${labelName}`;\n\n              // series creation with recently created label\n              series.push({\n                dataKey: keyName,\n                keyLabel: labelName,\n                lineColor: \"\",\n                fillColor: \"\",\n              });\n\n              // we iterate over values and create elements\n              let values = get(itemVals, \"values\", []);\n              if (values === null) {\n                values = [];\n              }\n\n              values.forEach((valInfo: any[]) => {\n                const itemIndex = plotValues.findIndex(\n                  (element) => element.name === valInfo[0]\n                );\n\n                // Element not exists yet\n                if (itemIndex === -1) {\n                  let itemToPush: any = { name: valInfo[0] };\n                  itemToPush[keyName] = valInfo[1];\n\n                  plotValues.push(itemToPush);\n                } else {\n                  plotValues[itemIndex][keyName] = valInfo[1];\n                }\n              });\n            });\n          }\n        );\n\n        const sortedSeries = series.sort((series1: any, series2: any) => {\n          if (series1.keyLabel < series2.keyLabel) {\n            return -1;\n          }\n          if (series1.keyLabel > series2.keyLabel) {\n            return 1;\n          }\n          return 0;\n        });\n\n        const seriesWithColors = sortedSeries.map(\n          (serialC: any, index: number) => {\n            return {\n              ...serialC,\n              lineColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\n              fillColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\n            };\n          }\n        );\n\n        const sortedVals = plotValues.sort(\n          (value1: any, value2: any) => value1.name - value2.name\n        );\n\n        return {\n          ...panelItem,\n          widgetConfiguration: seriesWithColors,\n          data: sortedVals,\n        };\n      }\n      break;\n    case widgetType.barChart:\n      if (typeOfPayload === \"bargauge\") {\n        let chartBars = get(payloadData, \"targets[0].result\", []);\n\n        if (chartBars === null) {\n          chartBars = [];\n        }\n\n        const sortFunction = (value1: any[], value2: any[]) =>\n          value1[0] - value2[0];\n\n        let values = [];\n        if (panelItem.customStructure) {\n          values = panelItem.customStructure.map((structureItem) => {\n            const metricTake = chartBars.find((element: any) => {\n              const metricKeyItem = Object.keys(element.metric);\n\n              const metricName = element.metric[metricKeyItem[0]];\n\n              return metricName === structureItem.originTag;\n            });\n\n            const elements = get(metricTake, \"values\", []);\n\n            const sortResult = elements.sort(sortFunction);\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\n\n            return {\n              name: structureItem.displayTag,\n              a: parseInt(lastValue[1]),\n            };\n          });\n        } else {\n          // If no configuration is set, we construct the series for bar chart and return the element\n          values = chartBars.map((elementValue: any) => {\n            const metricKeyItem = Object.keys(elementValue.metric);\n\n            const metricName = elementValue.metric[metricKeyItem[0]];\n\n            const elements = get(elementValue, \"values\", []);\n\n            const sortResult = elements.sort(sortFunction);\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\n            return { name: metricName, a: parseInt(lastValue[1]) };\n          });\n        }\n\n        return {\n          ...panelItem,\n          data: values,\n        };\n      }\n      break;\n    case widgetType.singleRep:\n      if (typeOfPayload === \"stat\") {\n        // We sort values & get the last value\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\n        if (elements === null) {\n          elements = [];\n        }\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valueDisplay = calculateMainValue(elements, metricCalc);\n\n        const sortResult = elements.sort(\n          (value1: any[], value2: any[]) => value1[0] - value2[0]\n        );\n\n        let valuesForBackground = [];\n\n        if (sortResult.length === 1) {\n          valuesForBackground.push({ value: 0 });\n        }\n\n        sortResult.forEach((eachVal: any) => {\n          valuesForBackground.push({ value: parseInt(eachVal[1]) });\n        });\n\n        const innerLabel = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\n          : valueDisplay[1];\n\n        return {\n          ...panelItem,\n          data: valuesForBackground,\n          innerLabel,\n        };\n      }\n      break;\n  }\n\n  return panelItem;\n};\n\nconst verifyNumeric = (item: string) => {\n  return !isNaN(parseFloat(item));\n};\n\nexport const splitSizeMetric = (val: string) => {\n  const splittedText = val.split(\" \");\n  // Value is not a size metric, we return as common string\n\n  const singleValue = () => {\n    let vl = val;\n\n    if (verifyNumeric(val)) {\n      vl = representationNumber(parseFloat(val));\n    }\n    return <Fragment>{vl}</Fragment>;\n  };\n\n  if (splittedText.length !== 2) {\n    return singleValue();\n  }\n\n  if (!units.includes(splittedText[1])) {\n    return singleValue();\n  }\n\n  return (\n    <span className=\"commonValue\">\n      {splittedText[0]}\n      <span className=\"unitText\">{splittedText[1]}</span>\n    </span>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { ITabOption } from \"./types\";\n\ninterface ITabSelector {\n  selectedTab: number;\n  onChange: (newValue: number) => void;\n  tabOptions: ITabOption[];\n}\n\nconst tabSubStyles = makeStyles({\n  root: {\n    backgroundColor: \"transparent\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: 22,\n    textTransform: \"uppercase\",\n    color: \"#D0D0D0\",\n  },\n  selected: { \"& .MuiTab-wrapper\": { color: \"#07193E\", fontWeight: \"bold\" } },\n  indicator: {\n    background:\n      \"transparent linear-gradient(90deg, #072B4E 0%, #081C42 100%) 0% 0% no-repeat padding-box;\",\n    height: 4,\n  },\n  scroller: {\n    maxWidth: 1185,\n    position: \"relative\",\n    \"&::after\": {\n      content: '\" \"',\n      backgroundColor: \"#EEF1F4\",\n      height: 4,\n      width: \"100%\",\n      display: \"block\",\n    },\n  },\n});\n\nconst TabSelector = ({ selectedTab, onChange, tabOptions }: ITabSelector) => {\n  const subStyles = tabSubStyles();\n\n  return (\n    <Fragment>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"cluster-tabs\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        value={selectedTab}\n        onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n          onChange(newValue);\n        }}\n        classes={{\n          indicator: subStyles.indicator,\n          scroller: subStyles.scroller,\n        }}\n      >\n        {tabOptions.map((option, index) => {\n          let tabOptions: ITabOption = {\n            label: option.label,\n          };\n\n          if (option.value) {\n            tabOptions = { ...tabOptions, value: option.value };\n          }\n\n          if (option.disabled) {\n            tabOptions = { ...tabOptions, disabled: option.disabled };\n          }\n\n          return (\n            <Tab\n              {...tabOptions}\n              classes={{\n                root: subStyles.root,\n                selected: subStyles.selected,\n              }}\n              id={`simple-tab-${index}`}\n              aria-controls={`simple-tabpanel-${index}`}\n              key={`tab-${index}-${option.label}`}\n            />\n          );\n        })}\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default TabSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Card, CardHeader } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React, { Fragment } from \"react\";\nimport { widgetCommon } from \"../Common/FormComponents/common/styleLibrary\";\n\nexport interface ISubInterface {\n  message: string;\n  fontWeight?: \"normal\" | \"bold\";\n}\n\ninterface ICommonCard {\n  title: string;\n  metricValue: any;\n  metricUnit?: string;\n  subMessage?: ISubInterface;\n  moreLink?: string;\n  rightComponent?: any;\n  extraMargin?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    cardRoot: {\n      ...widgetCommon.singleValueContainer,\n      \"&.MuiPaper-root\": {\n        borderRadius: 10,\n      },\n    },\n    metricText: {\n      fontSize: 70,\n      lineHeight: 1.1,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n    },\n    unitText: {\n      fontSize: 10,\n      color: \"#767676\",\n      fontWeight: \"normal\",\n    },\n    subHearderContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    subMessage: {\n      fontSize: 10,\n      color: \"#767676\",\n      \"&.bold\": {\n        fontWeight: \"bold\",\n      },\n    },\n    headerContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    viewAll: {\n      fontSize: 10,\n      color: \"#C83B51\",\n      textTransform: \"capitalize\",\n\n      \"& a, & a:hover, & a:visited, & a:active\": {\n        color: \"#C83B51\",\n      },\n    },\n    extraMargin: {\n      margin: \"10px 20px 10px 0\",\n    },\n  });\n\nconst cardSubStyles = makeStyles({\n  root: { backgroundColor: \"#fff\", padding: 0 },\n  title: {\n    ...widgetCommon.titleContainer,\n  },\n  content: {\n    maxWidth: \"100%\",\n  },\n});\n\nconst CommonCard = ({\n  title,\n  metricValue,\n  metricUnit,\n  subMessage,\n  moreLink,\n  rightComponent,\n  extraMargin = false,\n  classes,\n}: ICommonCard) => {\n  const subStyles = cardSubStyles();\n  const SubHeader = () => {\n    return (\n      <Fragment>\n        <div className={classes.subHearderContainer}>\n          <div className={classes.leftSide}>\n            <div>\n              <span className={classes.metricText}>\n                {metricValue}\n                <span className={classes.unitText}>{metricUnit}</span>\n              </span>\n            </div>\n            {subMessage && (\n              <div\n                className={`${classes.subMessage} ${\n                  subMessage.fontWeight ? subMessage.fontWeight : \"\"\n                }`}\n              >\n                {subMessage.message}\n              </div>\n            )}\n          </div>\n          <div className={classes.rightSide}>{rightComponent}</div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  const Header = () => {\n    return (\n      <Fragment>\n        <div className={classes.headerContainer}>\n          <span className={classes.title}>{title}</span>\n          {moreLink && (\n            <Fragment>\n              <span className={classes.viewAll}>\n                <Link to={moreLink}>View All</Link>\n              </span>\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Card\n        className={`${classes.cardRoot} ${\n          extraMargin ? classes.extraMargin : \"\"\n        }`}\n      >\n        {metricValue !== \"\" && (\n          <CardHeader\n            title={<Header />}\n            subheader={\n              <Fragment>\n                <SubHeader />\n              </Fragment>\n            }\n            classes={{\n              root: subStyles.root,\n              title: subStyles.title,\n              content: subStyles.content,\n            }}\n          />\n        )}\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommonCard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CommonCard from \"../CommonCard\";\n\ninterface IMergedWidgets {\n  title: string;\n  leftComponent: any;\n  rightComponent: any;\n}\n\nconst MergedWidgets = ({\n  title,\n  leftComponent,\n  rightComponent,\n}: IMergedWidgets) => {\n  return (\n    <Fragment>\n      <CommonCard\n        title={title}\n        metricValue={leftComponent}\n        rightComponent={rightComponent}\n      />\n    </Fragment>\n  );\n};\n\nexport default MergedWidgets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tooltipCommon,\n  });\n\nconst BarChartTooltip = ({\n  active,\n  payload,\n  label,\n  barChartConfiguration,\n  classes,\n}: any) => {\n  if (active) {\n    return (\n      <div className={classes.customTooltip}>\n        <div className={classes.timeStampTitle}>{label}</div>\n        {payload &&\n          payload.map((pl: any, index: number) => {\n            return (\n              <div\n                className={classes.labelContainer}\n                key={`pltiem-${index}-${label}`}\n              >\n                <div\n                  className={classes.labelColor}\n                  style={{\n                    backgroundColor: barChartConfiguration[index].color,\n                  }}\n                />\n                <div className={classes.itemValue}>\n                  <span className={classes.valueContainer}>{pl.value}</span>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(BarChartTooltip);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport { IBarChartConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport BarChartTooltip from \"./tooltips/BarChartTooltip\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport { openZoomPage } from \"../../actions\";\nimport { useTheme } from \"@mui/styles\";\nimport Loader from \"../../../Common/Loader/Loader\";\n\ninterface IBarChartWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n  zoomActivated?: boolean;\n  openZoomPage: typeof openZoomPage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"15px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n  });\n\nconst CustomizedAxisTick = ({ y, payload }: any) => {\n  return (\n    <text\n      width={50}\n      fontSize={\"63%\"}\n      textAnchor=\"start\"\n      fill=\"#333\"\n      transform={`translate(5,${y})`}\n      fontWeight={700}\n      dy={3}\n    >\n      {payload.value}\n    </text>\n  );\n};\n\nconst BarChartWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n  zoomActivated = false,\n  openZoomPage,\n}: IBarChartWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<any>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setResult(widgetsWithValue);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  const barChartConfiguration = result\n    ? (result.widgetConfiguration as IBarChartConfiguration[])\n    : [];\n\n  let greatestIndex = 0;\n  let currentValue = 0;\n\n  if (barChartConfiguration.length === 1) {\n    const dataGraph = barChartConfiguration[0];\n    data.forEach((item: any, index: number) => {\n      if (item[dataGraph.dataKey] > currentValue) {\n        currentValue = item[dataGraph.dataKey];\n        greatestIndex = index;\n      }\n    });\n  }\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={zoomActivated ? \"\" : classes.singleValueContainer}>\n      {!zoomActivated && (\n        <div className={classes.titleContainer}>\n          {title}{\" \"}\n          <button\n            onClick={() => {\n              openZoomPage(panelItem);\n            }}\n            className={classes.zoomChartIcon}\n          >\n            <ZoomOutMapIcon />\n          </button>\n        </div>\n      )}\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <div\n          className={\n            zoomActivated ? classes.zoomChartCont : classes.contentContainer\n          }\n        >\n          <ResponsiveContainer width=\"99%\">\n            <BarChart\n              data={data as object[]}\n              layout={\"vertical\"}\n              barCategoryGap={1}\n            >\n              <XAxis type=\"number\" hide />\n              <YAxis\n                dataKey=\"name\"\n                type=\"category\"\n                interval={0}\n                tick={<CustomizedAxisTick />}\n                tickLine={false}\n                axisLine={false}\n                width={150}\n                hide={!biggerThanMd}\n              />\n              {barChartConfiguration.map((bar) => (\n                <Bar\n                  key={`bar-${bar.dataKey}`}\n                  dataKey={bar.dataKey}\n                  fill={bar.color}\n                  background={bar.background}\n                  barSize={zoomActivated ? 25 : 12}\n                >\n                  {barChartConfiguration.length === 1 ? (\n                    <Fragment>\n                      {data.map((_: any, index: number) => (\n                        <Cell\n                          key={`chart-bar-${index.toString()}`}\n                          fill={\n                            index === greatestIndex\n                              ? bar.greatestColor\n                              : bar.color\n                          }\n                        />\n                      ))}\n                    </Fragment>\n                  ) : null}\n                </Bar>\n              ))}\n              <Tooltip\n                cursor={{ fill: \"rgba(255, 255, 255, 0.3)\" }}\n                content={\n                  <BarChartTooltip\n                    barChartConfiguration={barChartConfiguration}\n                  />\n                }\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n  openZoomPage: openZoomPage,\n});\n\nexport default withStyles(styles)(connector(BarChartWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { getTimeFromTimestamp } from \"../../../../../../common/utils\";\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tooltipCommon,\n  });\n\nconst LineChartTooltip = ({\n  active,\n  payload,\n  label,\n  linearConfiguration,\n  yAxisFormatter,\n  classes,\n}: any) => {\n  if (active) {\n    return (\n      <div className={classes.customTooltip}>\n        <div className={classes.timeStampTitle}>\n          {getTimeFromTimestamp(label, true)}\n        </div>\n        {payload &&\n          payload.map((pl: any, index: number) => {\n            return (\n              <div\n                className={classes.labelContainer}\n                key={`lbPl-${index}-${linearConfiguration[index].keyLabel}`}\n              >\n                <div\n                  className={classes.labelColor}\n                  style={{\n                    backgroundColor: linearConfiguration[index].lineColor,\n                  }}\n                />\n                <div className={classes.itemValue}>\n                  <span className={classes.valueContainer}>\n                    {linearConfiguration[index].keyLabel}:{\" \"}\n                    {yAxisFormatter(pl.value)}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(LineChartTooltip);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport { ILinearGraphConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { IDashboardPanel } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport LineChartTooltip from \"./tooltips/LineChartTooltip\";\nimport { openZoomPage } from \"../../actions\";\nimport { useTheme } from \"@mui/styles\";\nimport Loader from \"../../../Common/Loader/Loader\";\n\ninterface ILinearGraphWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n  hideYAxis?: boolean;\n  yAxisFormatter?: (item: string) => string;\n  xAxisFormatter?: (item: string) => string;\n  areaWidget?: boolean;\n  zoomActivated?: boolean;\n  openZoomPage: typeof openZoomPage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    containerElements: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"100%\",\n      flexGrow: 1,\n    },\n    verticalAlignment: {\n      flexDirection: \"column\",\n    },\n    chartCont: {\n      position: \"relative\",\n      height: 140,\n      width: \"100%\",\n    },\n    legendChart: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"0 1 auto\",\n      maxHeight: 130,\n      margin: 0,\n      overflowY: \"auto\",\n      position: \"relative\",\n      textAlign: \"center\",\n      width: \"100%\",\n      justifyContent: \"flex-start\",\n      color: \"#404143\",\n      fontWeight: \"bold\",\n      fontSize: 12,\n    },\n    loadingAlign: {\n      width: 40,\n      height: 40,\n      textAlign: \"center\",\n      margin: \"15px auto\",\n    },\n  });\n\nconst LinearGraphWidget = ({\n  classes,\n  title,\n  displayErrorMessage,\n  timeStart,\n  timeEnd,\n  propLoading,\n  panelItem,\n  apiPrefix,\n  hideYAxis = false,\n  areaWidget = false,\n  yAxisFormatter = (item: string) => item,\n  xAxisFormatter = (item: string) => item,\n  zoomActivated = false,\n  openZoomPage,\n}: ILinearGraphWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<object[]>([]);\n  const [dataMax, setDataMax] = useState<number>(0);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setResult(widgetsWithValue);\n          setLoading(false);\n          let maxVal = 0;\n          for (const dp of widgetsWithValue.data) {\n            for (const key in dp) {\n              if (key === \"name\") {\n                continue;\n              }\n              let val = parseInt(dp[key]);\n\n              if (isNaN(val)) {\n                val = 0;\n              }\n\n              if (maxVal < val) {\n                maxVal = val;\n              }\n            }\n          }\n          setDataMax(maxVal);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  let intervalCount = Math.floor(data.length / 5);\n\n  const linearConfiguration = result\n    ? (result?.widgetConfiguration as ILinearGraphConfiguration[])\n    : [];\n\n  const CustomizedDot = (prop: any) => {\n    const { cx, cy, index } = prop;\n\n    if (index % 3 !== 0) {\n      return null;\n    }\n    return <circle cx={cx} cy={cy} r={3} strokeWidth={0} fill=\"#07264A\" />;\n  };\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={zoomActivated ? \"\" : classes.singleValueContainer}>\n      {!zoomActivated && (\n        <div className={classes.titleContainer}>\n          {title}{\" \"}\n          <button\n            onClick={() => {\n              openZoomPage(panelItem);\n            }}\n            className={classes.zoomChartIcon}\n          >\n            <ZoomOutMapIcon />\n          </button>\n        </div>\n      )}\n      <div\n        className={\n          zoomActivated ? classes.verticalAlignment : classes.containerElements\n        }\n      >\n        {loading && <Loader className={classes.loadingAlign} />}\n        {!loading && (\n          <React.Fragment>\n            <div\n              className={\n                zoomActivated ? classes.zoomChartCont : classes.chartCont\n              }\n            >\n              <ResponsiveContainer width=\"99%\">\n                <AreaChart\n                  data={data}\n                  margin={{\n                    top: 5,\n                    right: 20,\n                    left: hideYAxis ? 20 : 5,\n                    bottom: 0,\n                  }}\n                >\n                  {areaWidget && (\n                    <defs>\n                      <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                          offset=\"0%\"\n                          stopColor=\"#ABC8F2\"\n                          stopOpacity={0.9}\n                        />\n                        <stop\n                          offset=\"95%\"\n                          stopColor=\"#ABC8F2\"\n                          stopOpacity={0}\n                        />\n                      </linearGradient>\n                    </defs>\n                  )}\n                  <CartesianGrid\n                    strokeDasharray={areaWidget ? \"0 0\" : \"3 3\"}\n                    strokeWidth={1}\n                    strokeOpacity={0.5}\n                    stroke={\"#07264A30\"}\n                    vertical={!areaWidget}\n                  />\n                  <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={(value: any) => xAxisFormatter(value)}\n                    interval={intervalCount}\n                    tick={{\n                      fontSize: \"70%\",\n                      fontWeight: \"bold\",\n                      color: \"#404143\",\n                    }}\n                    tickCount={10}\n                    stroke={\"#082045\"}\n                  />\n                  <YAxis\n                    type={\"number\"}\n                    domain={[0, dataMax * 1.1]}\n                    hide={hideYAxis}\n                    tickFormatter={(value: any) => yAxisFormatter(value)}\n                    tick={{\n                      fontSize: \"70%\",\n                      fontWeight: \"bold\",\n                      color: \"#404143\",\n                    }}\n                    stroke={\"#082045\"}\n                  />\n                  {linearConfiguration.map((section, index) => {\n                    return (\n                      <Area\n                        key={`area-${section.dataKey}-${index.toString()}`}\n                        type=\"monotone\"\n                        dataKey={section.dataKey}\n                        stroke={section.lineColor}\n                        fill={areaWidget ? \"url(#colorUv)\" : section.fillColor}\n                        fillOpacity={areaWidget ? 0.3 : 0}\n                        strokeWidth={areaWidget ? 0 : 2}\n                        dot={areaWidget ? <CustomizedDot /> : false}\n                      />\n                    );\n                  })}\n                  <Tooltip\n                    content={\n                      <LineChartTooltip\n                        linearConfiguration={linearConfiguration}\n                        yAxisFormatter={yAxisFormatter}\n                      />\n                    }\n                    wrapperStyle={{\n                      zIndex: 5000,\n                    }}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n            {!areaWidget && (\n              <Fragment>\n                {zoomActivated && (\n                  <Fragment>\n                    <strong>Series</strong>\n                    <br />\n                    <br />\n                  </Fragment>\n                )}\n                {biggerThanMd && (\n                  <div className={classes.legendChart}>\n                    {linearConfiguration.map((section, index) => {\n                      return (\n                        <div\n                          className={classes.singleLegendContainer}\n                          key={`legend-${section.keyLabel}-${index.toString()}`}\n                        >\n                          <div\n                            className={classes.colorContainer}\n                            style={{ backgroundColor: section.lineColor }}\n                          />\n                          <div className={classes.legendLabel}>\n                            {section.keyLabel}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n  openZoomPage: openZoomPage,\n});\n\nexport default withStyles(styles)(connector(LinearGraphWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\nimport { IPieChartConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport get from \"lodash/get\";\nimport api from \"../../../../../common/api\";\nimport Loader from \"../../../Common/Loader/Loader\";\n\ninterface IPieChartWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"15px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n    pieChartLabel: {\n      fontSize: 60,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      width: \"100%\",\n      \"& .unitText\": {\n        color: \"#767676\",\n        fontSize: 12,\n      },\n    },\n    chartContainer: {\n      width: \"100%\",\n      height: 140,\n    },\n  });\n\nconst PieChartWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n}: IPieChartWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [dataInner, setDataInner] = useState<object[]>([]);\n  const [dataOuter, setDataOuter] = useState<object[]>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setDataInner(widgetsWithValue.data);\n          setDataOuter(widgetsWithValue.dataOuter as object[]);\n          setResult(widgetsWithValue);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  const pieChartConfiguration = result\n    ? (result.widgetConfiguration as IPieChartConfiguration)\n    : [];\n  const middleLabel = result?.innerLabel;\n\n  const innerColors = get(pieChartConfiguration, \"innerChart.colorList\", []);\n  const outerColors = get(pieChartConfiguration, \"outerChart.colorList\", []);\n\n  return (\n    <div className={classes.singleValueContainer}>\n      <div className={classes.titleContainer}>{title}</div>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <div className={classes.contentContainer}>\n          <span className={classes.pieChartLabel}>\n            {middleLabel && splitSizeMetric(middleLabel)}\n          </span>\n          <div className={classes.chartContainer}>\n            <ResponsiveContainer width=\"99%\">\n              <PieChart margin={{ top: 5, bottom: 5 }}>\n                {dataOuter && (\n                  <Pie\n                    data={dataOuter as object[]}\n                    cx={\"50%\"}\n                    cy={\"50%\"}\n                    dataKey=\"value\"\n                    innerRadius={get(\n                      pieChartConfiguration,\n                      \"outerChart.innerRadius\",\n                      0\n                    )}\n                    outerRadius={get(\n                      pieChartConfiguration,\n                      \"outerChart.outerRadius\",\n                      \"80%\"\n                    )}\n                    startAngle={get(\n                      pieChartConfiguration,\n                      \"outerChart.startAngle\",\n                      0\n                    )}\n                    endAngle={get(\n                      pieChartConfiguration,\n                      \"outerChart.endAngle\",\n                      360\n                    )}\n                    fill=\"#201763\"\n                  >\n                    {dataOuter.map((entry, index) => (\n                      <Cell\n                        key={`cellOuter-${index}`}\n                        fill={\n                          typeof outerColors[index] === \"undefined\"\n                            ? \"#393939\"\n                            : outerColors[index]\n                        }\n                      />\n                    ))}\n                  </Pie>\n                )}\n                {dataInner && (\n                  <Pie\n                    data={dataInner as object[]}\n                    dataKey=\"value\"\n                    cx={\"50%\"}\n                    cy={\"50%\"}\n                    innerRadius={get(\n                      pieChartConfiguration,\n                      \"innerChart.innerRadius\",\n                      0\n                    )}\n                    outerRadius={get(\n                      pieChartConfiguration,\n                      \"innerChart.outerRadius\",\n                      \"80%\"\n                    )}\n                    startAngle={get(\n                      pieChartConfiguration,\n                      \"innerChart.startAngle\",\n                      0\n                    )}\n                    endAngle={get(\n                      pieChartConfiguration,\n                      \"innerChart.endAngle\",\n                      360\n                    )}\n                    fill=\"#201763\"\n                  >\n                    {dataInner.map((entry, index) => {\n                      return (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={\n                            typeof innerColors[index] === \"undefined\"\n                              ? \"#393939\"\n                              : innerColors[index]\n                          }\n                        />\n                      );\n                    })}\n                  </Pie>\n                )}\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PieChartWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../../common/api\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { IDashboardPanel } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport Loader from \"../../../Common/Loader/Loader\";\n\ninterface ISimpleWidget {\n  classes: any;\n  iconWidget: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    mainWidgetContainer: {\n      display: \"inline-flex\",\n      color: \"#072A4D\",\n      alignItems: \"center\",\n    },\n    icon: {\n      color: \"#072A4D\",\n      fill: \"#072A4D\",\n      marginRight: 5,\n      marginLeft: 12,\n    },\n    widgetLabel: {\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      marginRight: 10,\n    },\n    widgetValue: {\n      marginRight: 25,\n    },\n  });\n\nconst SimpleWidget = ({\n  classes,\n  iconWidget,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n}: ISimpleWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  return (\n    <Fragment>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <span className={classes.mainWidgetContainer}>\n          <span className={classes.icon}>{iconWidget ? iconWidget : null}</span>\n          <span className={classes.widgetLabel}>{title}: </span>\n          <span className={classes.widgetValue}>{data}</span>\n        </span>\n      )}\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SimpleWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaChart, ResponsiveContainer, YAxis } from \"recharts\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { IDataSRep } from \"./types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { representationNumber } from \"../../../../../common/utils\";\nimport api from \"../../../../../common/api\";\nimport Loader from \"../../../Common/Loader/Loader\";\n\ninterface ISingleRepWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  color: string;\n  fillColor: string;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"5px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n  });\n\nconst SingleRepWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  color,\n  fillColor,\n  apiPrefix,\n}: ISingleRepWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<IDataSRep[]>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setResult(widgetsWithValue);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n  const gradientID = `colorGradient-${title.split(\" \").join(\"-\")}`;\n\n  let repNumber = \"\";\n\n  if (result) {\n    const resultRep = parseInt(result.innerLabel || \"0\");\n\n    if (!isNaN(resultRep)) {\n      repNumber = representationNumber(resultRep);\n    } else {\n      repNumber = \"0\";\n    }\n  }\n\n  return (\n    <div className={classes.singleValueContainer}>\n      <div className={classes.titleContainer}>{title}</div>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <div className={classes.contentContainer}>\n          <ResponsiveContainer width=\"99%\">\n            <AreaChart data={data}>\n              <defs>\n                <linearGradient id={gradientID} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={fillColor} stopOpacity={1} />\n                  <stop offset=\"95%\" stopColor={fillColor} stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <YAxis\n                domain={[0, (dataMax: number) => dataMax * 2]}\n                hide={true}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey={\"value\"}\n                stroke={color}\n                fill={`url(#${gradientID})`}\n                fillOpacity={1}\n              />\n              <text\n                x={\"0%\"}\n                y={\"80%\"}\n                textAnchor=\"start\"\n                dominantBaseline=\"auto\"\n                fontWeight={700}\n                fontSize={65}\n                fill={\"#07193E\"}\n              >\n                {result ? repNumber : \"\"}\n              </text>\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SingleRepWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../../common/api\";\nimport Loader from \"../../../Common/Loader/Loader\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\nimport { IDashboardPanel } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\n\ninterface ISingleValueWidget {\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  classes: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n    metric: {\n      fontSize: 60,\n      lineHeight: 1,\n      color: \"#07193E\",\n      fontWeight: 700,\n    },\n    titleElement: {\n      fontSize: 10,\n      color: \"#767676\",\n      fontWeight: 700,\n    },\n    containerAlignment: {\n      display: \"flex\",\n      height: 140,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      \"& .unitText\": {\n        color: \"#767676\",\n        fontSize: 12,\n      },\n    },\n  });\n\nconst SingleValueWidget = ({\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  classes,\n  apiPrefix,\n}: ISingleValueWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n  return (\n    <div className={classes.containerAlignment}>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <Fragment>\n          <div className={classes.metric}>{splitSizeMetric(data)}</div>\n          <div className={classes.titleElement}>{title}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SingleValueWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { IDashboardPanel, widgetType } from \"./types\";\nimport BarChartWidget from \"./Widgets/BarChartWidget\";\nimport LinearGraphWidget from \"./Widgets/LinearGraphWidget\";\nimport PieChartWidget from \"./Widgets/PieChartWidget\";\nimport SimpleWidget from \"./Widgets/SimpleWidget\";\nimport SingleRepWidget from \"./Widgets/SingleRepWidget\";\nimport SingleValueWidget from \"./Widgets/SingleValueWidget\";\n\nexport const componentToUse = (\n  value: IDashboardPanel,\n  timeStart: any,\n  timeEnd: any,\n  loading: boolean,\n  apiPrefix: string,\n  zoomActivated: boolean = false\n) => {\n  switch (value.type) {\n    case widgetType.singleValue:\n      return (\n        <SingleValueWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n        />\n      );\n    case widgetType.simpleWidget:\n      return (\n        <SimpleWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n          iconWidget={value.widgetIcon}\n        />\n      );\n    case widgetType.pieChart:\n      return (\n        <PieChartWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n        />\n      );\n    case widgetType.linearGraph:\n    case widgetType.areaGraph:\n      return (\n        <LinearGraphWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          hideYAxis={value.disableYAxis}\n          xAxisFormatter={value.xAxisFormatter}\n          yAxisFormatter={value.yAxisFormatter}\n          apiPrefix={apiPrefix}\n          areaWidget={value.type === widgetType.areaGraph}\n          zoomActivated={zoomActivated}\n        />\n      );\n    case widgetType.barChart:\n      return (\n        <BarChartWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n          zoomActivated={zoomActivated}\n        />\n      );\n    case widgetType.singleRep:\n      const fillColor = value.fillColor ? value.fillColor : value.color;\n      return (\n        <SingleRepWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          color={value.color as string}\n          fillColor={fillColor as string}\n          apiPrefix={apiPrefix}\n        />\n      );\n    default:\n      return null;\n  }\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { IDashboardPanel } from \"./types\";\nimport { componentToUse } from \"./widgetUtils\";\nimport { closeZoomPage } from \"../actions\";\n\ninterface IZoomWidget {\n  widgetRender: number;\n  value: IDashboardPanel | null;\n  modalOpen: boolean;\n  timeStart: any;\n  timeEnd: any;\n  apiPrefix: string;\n  onCloseAction: typeof closeZoomPage;\n}\nconst ZoomWidget = ({\n  value,\n  modalOpen,\n  timeStart,\n  timeEnd,\n  apiPrefix,\n  onCloseAction,\n}: IZoomWidget) => {\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <ModalWrapper\n      title={value.title}\n      onClose={() => {\n        onCloseAction();\n      }}\n      modalOpen={modalOpen}\n      wideLimit={false}\n      noContentPadding\n    >\n      <Fragment>\n        {componentToUse(value, timeStart, timeEnd, true, apiPrefix, true)}\n      </Fragment>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  onCloseAction: closeZoomPage,\n});\n\nexport default connector(ZoomWidget);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { GridSize, useMediaQuery } from \"@mui/material\";\nimport {\n  actionsTray,\n  widgetContainerCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IDashboardPanel } from \"./types\";\nimport { getWidgetsWithValue, panelsConfiguration } from \"./utils\";\nimport { TabPanel } from \"../../../shared/tabs\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport api from \"../../../../common/api\";\n\nimport TabSelector from \"../../Common/TabSelector/TabSelector\";\nimport MergedWidgets from \"./MergedWidgets\";\nimport { componentToUse } from \"./widgetUtils\";\nimport ZoomWidget from \"./ZoomWidget\";\nimport { AppState } from \"../../../../store\";\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\nimport { useTheme } from \"@mui/styles\";\n\ninterface IPrDashboard {\n  classes: any;\n  displayErrorMessage: typeof setErrorSnackMessage;\n  apiPrefix?: string;\n  zoomOpen: boolean;\n  zoomWidget: null | IDashboardPanel;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...widgetContainerCommon,\n    dashboardRow: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      flexWrap: \"wrap\",\n      maxWidth: 1180,\n    },\n  });\n\nconst PrDashboard = ({\n  classes,\n  displayErrorMessage,\n  apiPrefix = \"admin\",\n  zoomOpen,\n  zoomWidget,\n}: IPrDashboard) => {\n  const [timeStart, setTimeStart] = useState<any>(null);\n  const [timeEnd, setTimeEnd] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [panelInformation, setPanelInformation] =\n    useState<IDashboardPanel[]>(panelsConfiguration);\n  const [curTab, setCurTab] = useState<number>(0);\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const panels = useCallback(\n    (tabName: string, filterPanels?: number[][] | null) => {\n      return filterPanels?.map((panelLine, indexLine) => {\n        const totalPanelsContained = panelLine.length;\n\n        let perc = Math.floor(12 / totalPanelsContained);\n\n        if (!biggerThanMd && totalPanelsContained >= 4) {\n          perc = 6;\n        } else if (!biggerThanMd && totalPanelsContained >= 3) {\n          perc = 12;\n        }\n\n        if (perc < 1) {\n          perc = 1;\n        } else if (perc > 12) {\n          perc = 12;\n        }\n\n        return (\n          <Grid\n            item\n            xs={12}\n            key={`line-${tabName}-${indexLine}`}\n            className={classes.dashboardRow}\n          >\n            {panelLine.map((panelInline, indexPanel) => {\n              const panelInfo = panelInformation.find(\n                (panel) => panel.id === panelInline\n              );\n\n              return (\n                <Grid\n                  key={`widget-${panelInline}-${indexPanel}`}\n                  className={classes.widgetPanelDelimiter}\n                  item\n                  xs={12}\n                  sm={perc as GridSize}\n                  md={perc as GridSize}\n                  lg={perc as GridSize}\n                >\n                  <Grid item xs={12}>\n                    {panelInfo ? (\n                      <Fragment>\n                        {panelInfo.mergedPanels ? (\n                          <Fragment>\n                            <MergedWidgets\n                              title={panelInfo.title}\n                              leftComponent={componentToUse(\n                                panelInfo.mergedPanels[0],\n                                timeStart,\n                                timeEnd,\n                                loading,\n                                apiPrefix\n                              )}\n                              rightComponent={componentToUse(\n                                panelInfo.mergedPanels[1],\n                                timeStart,\n                                timeEnd,\n                                loading,\n                                apiPrefix\n                              )}\n                            />\n                          </Fragment>\n                        ) : (\n                          componentToUse(\n                            panelInfo,\n                            timeStart,\n                            timeEnd,\n                            loading,\n                            apiPrefix\n                          )\n                        )}\n                      </Fragment>\n                    ) : null}\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        );\n      });\n    },\n    [\n      timeStart,\n      timeEnd,\n      loading,\n      apiPrefix,\n      classes.dashboardRow,\n      classes.widgetPanelDelimiter,\n      panelInformation,\n      biggerThanMd,\n    ]\n  );\n\n  const fetchUsage = useCallback(() => {\n    let stepCalc = 0;\n\n    if (timeStart !== null && timeEnd !== null) {\n      const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n      const periods = Math.floor(secondsInPeriod / 60);\n\n      stepCalc = periods < 1 ? 15 : periods;\n    }\n\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/${apiPrefix}/info?step=${stepCalc}&${\n          timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n        }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n          timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n        }`\n      )\n      .then((res: any) => {\n        if (res.widgets) {\n          const widgetsWithValue = getWidgetsWithValue(res.widgets);\n          setPanelInformation(widgetsWithValue);\n        } else {\n          displayErrorMessage({\n            errorMessage:\n              \"Widget information could not be retrieved at this time. Please try again\",\n            detailedError: \"\",\n          });\n        }\n\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  }, [timeStart, timeEnd, displayErrorMessage, apiPrefix]);\n\n  const triggerLoad = () => {\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsage();\n    }\n  }, [loading, fetchUsage]);\n\n  const summaryPanels = [\n    [66, 44, 500, 501],\n    [80, 81, 1],\n    [68, 52],\n    [63, 70],\n  ];\n\n  if (biggerThanMd) {\n    summaryPanels.splice(1, 0, [50, 502]);\n  } else {\n    summaryPanels.splice(1, 0, [50]);\n    summaryPanels.splice(1, 0, [502]);\n  }\n\n  const resourcesPanels = [\n    [76, 77],\n    [11, 8],\n    [82, 74],\n  ];\n  const requestsPanels = [[60], [71, 17], [73]];\n\n  return (\n    <Fragment>\n      {zoomOpen && (\n        <ZoomWidget\n          modalOpen={zoomOpen}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          widgetRender={0}\n          value={zoomWidget}\n          apiPrefix={apiPrefix}\n        />\n      )}\n      <DateRangeSelector\n        timeStart={timeStart}\n        setTimeStart={setTimeStart}\n        timeEnd={timeEnd}\n        setTimeEnd={setTimeEnd}\n        triggerSync={triggerLoad}\n      />\n      <Grid item xs={12}>\n        <TabSelector\n          selectedTab={curTab}\n          onChange={(newValue: number) => {\n            setCurTab(newValue);\n          }}\n          tabOptions={[\n            { label: \"Usage\" },\n            { label: \"Traffic\" },\n            { label: \"Resources\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.widgetsContainer}>\n        <TabPanel index={0} value={curTab}>\n          {panels(\"Summary\", summaryPanels)}\n        </TabPanel>\n        <TabPanel index={1} value={curTab}>\n          {panels(\"Traffic\", requestsPanels)}\n        </TabPanel>\n        <TabPanel index={2} value={curTab}>\n          {panels(\"Resources\", resourcesPanels)}\n        </TabPanel>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  zoomOpen: state.dashboard.zoom.openZoom,\n  zoomWidget: state.dashboard.zoom.widgetRender,\n});\n\nconst connector = connect(mapState, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PrDashboard));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const STATUS_COLORS = {\n  RED: \"#C83B51\",\n  GREEN: \"#4CCB92\",\n  YELLOW: \"#E7A219\",\n};\n\nexport const getDriveStatusColor = (\n  activeDisks: number,\n  totalDrives: number\n) => {\n  if (activeDisks <= totalDrives / 2) {\n    return STATUS_COLORS.RED;\n  }\n  if (totalDrives !== 2 && activeDisks === totalDrives / 2 + 1) {\n    return STATUS_COLORS.YELLOW;\n  }\n  if (activeDisks === totalDrives) {\n    return STATUS_COLORS.GREEN;\n  }\n};\n\nexport const serverStatusColor = (health_status: string) => {\n  switch (health_status) {\n    case \"offline\":\n      return STATUS_COLORS.RED;\n    case \"online\":\n      return STATUS_COLORS.GREEN;\n    default:\n      return STATUS_COLORS.YELLOW;\n  }\n};\nexport const getNetworkStatusColor = (\n  activeNetwork: number,\n  networkTotal: number\n) => {\n  if (activeNetwork <= networkTotal / 2) {\n    return STATUS_COLORS.RED;\n  }\n  if (activeNetwork === networkTotal / 2 + 1) {\n    return STATUS_COLORS.YELLOW;\n  }\n  if (activeNetwork === networkTotal) {\n    return STATUS_COLORS.GREEN;\n  }\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ServerInfo } from \"../types\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { Box } from \"@mui/material\";\nimport { CircleIcon } from \"../../../../icons\";\nimport get from \"lodash/get\";\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  getDriveStatusColor,\n  getNetworkStatusColor,\n  serverStatusColor,\n} from \"./Utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...commonDashboardInfocard,\n  });\n\ninterface ICardProps {\n  classes?: any;\n  server: ServerInfo;\n  index: number;\n}\n\nconst ServerStatItem = ({\n  label = \"\",\n  value = \"\",\n  statusColor = \"\",\n  hasStatus = false,\n}: {\n  label?: string;\n  value?: any;\n  hasStatus?: boolean;\n  statusColor: string | undefined;\n}) => {\n  return (\n    <Box\n      sx={{\n        alignItems: \"baseline\",\n        padding: \"5px\",\n        display: \"flex\",\n        gap: \"5px\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexFlow: \"column\",\n          \"& .stat-text\": { color: \"#5E5E5E\", fontSize: \"12px\" },\n          \"& .stat-value\": {\n            fontSize: \"18px\",\n            color: \"#07193E\",\n            display: \"flex\",\n            fontWeight: 500,\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          },\n        }}\n      >\n        <div className=\"stat-value\">\n          {value}{\" \"}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexFlow: \"column\",\n              marginLeft: \"5px\",\n              maxWidth: \"40px\",\n              \"&:first-of-type(svg)\": {\n                fill: \"#848484\",\n              },\n            }}\n          >\n            {hasStatus ? (\n              <Box\n                sx={{\n                  marginRight: \"0px\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  textAlign: \"center\",\n                  \"& svg.min-icon\": {\n                    fill: statusColor,\n                    width: \"10px\",\n                    height: \"10px\",\n                  },\n                }}\n              >\n                <CircleIcon />\n              </Box>\n            ) : (\n              <Box sx={{ width: \"12px\", height: \"12px\" }} />\n            )}\n          </Box>\n        </div>\n        <div className=\"stat-text\">{label}</div>\n      </Box>\n    </Box>\n  );\n};\n\nconst ServerInfoItem = ({ server }: ICardProps) => {\n  const networkKeys = Object.keys(get(server, \"network\", {}));\n  const networkTotal = networkKeys.length;\n  const totalDrives = server.drives ? server.drives.length : 0;\n  const activeNetwork = networkKeys.reduce((acc: number, currValue: string) => {\n    const item = server.network[currValue];\n    if (item === \"online\") {\n      return acc + 1;\n    }\n    return acc;\n  }, 0);\n  const activeDisks = server.drives\n    ? server.drives.filter((element) => element.state === \"ok\").length\n    : 0;\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        flexFlow: \"column\",\n        flex: 1,\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          padding: \"3px\",\n          gap: \"15px\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          paddingLeft: \"20px\",\n\n          flexFlow: {\n            sm: \"row\",\n            xs: \"column\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              fontWeight: 600,\n              textTransform: \"none\",\n            }}\n          >\n            {server.endpoint || \"\"}\n          </Box>\n          {server?.state && (\n            <Box\n              sx={{\n                marginLeft: \"8px\",\n                \"& .min-icon\": {\n                  fill: serverStatusColor(server.state),\n                  height: \"14px\",\n                  width: \"14px\",\n                },\n              }}\n            >\n              <CircleIcon />\n            </Box>\n          )}\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flex: \"1.5\",\n            gap: {\n              md: \"5%\",\n              xs: \"5%\",\n            },\n          }}\n        >\n          <ServerStatItem\n            statusColor={getDriveStatusColor(activeDisks, totalDrives)}\n            label={\"Drives\"}\n            hasStatus={true}\n            value={`${activeDisks}/${totalDrives}`}\n          />\n          <ServerStatItem\n            statusColor={getNetworkStatusColor(activeNetwork, networkTotal)}\n            label={\"Network\"}\n            hasStatus={true}\n            value={`${activeNetwork}/${networkTotal}`}\n          />\n\n          <ServerStatItem\n            statusColor={\"green\"}\n            label={\"Up time\"}\n            value={server?.uptime ? niceDays(server.uptime) : \"N/A\"}\n          />\n        </Box>\n        <ServerStatItem\n          statusColor={\"green\"}\n          label={\"\"}\n          value={\n            <Box\n              sx={{\n                background: \"rgb(235, 236, 237)\",\n                color: \"#000000\",\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\",\n                borderRadius: \"2px\",\n                fontSize: \"12px\",\n                marginTop: \"5px\",\n\n                \"& .label\": {\n                  fontWeight: 600,\n                  marginRight: \"3px\",\n                },\n              }}\n            >\n              <span className=\"label\">Version:</span>\n              {server.version ? server.version : \"N/A\"}\n            </Box>\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\nexport default withStyles(styles)(ServerInfoItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IDriveInfo } from \"../types\";\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\nimport { Box } from \"@mui/material\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport { CircleIcon } from \"../../../../icons\";\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { STATUS_COLORS } from \"./Utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...commonDashboardInfocard,\n  });\n\ninterface ICardProps {\n  classes?: any;\n  drive: IDriveInfo;\n}\n\nconst driveStatusColor = (health_status: string) => {\n  switch (health_status) {\n    case \"offline\":\n      return STATUS_COLORS.RED;\n    case \"ok\":\n      return STATUS_COLORS.GREEN;\n    default:\n      return STATUS_COLORS.YELLOW;\n  }\n};\n\nconst DriveInfoItem = ({ drive }: ICardProps) => {\n  const plotValues = [\n    { value: drive.totalSpace, color: \"#D6D6D6\", label: \"Free Space\" },\n    {\n      value: drive.usedSpace,\n      color: \"#073052\",\n      label: \"Used Space\",\n    },\n  ];\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flex: 1,\n        alignItems: \"center\",\n        paddingBottom: \"10px\",\n        padding: \"20px\",\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n          marginLeft: \"10px\",\n          flex: 1,\n        }}\n      >\n        <Box\n          sx={{\n            fontSize: \"14px\",\n            fontWeight: 400,\n            display: \"flex\",\n            alignItems: \"center\",\n\n            \"& .min-icon\": {\n              marginRight: \"10px\",\n              height: \"10px\",\n              width: \"10px\",\n              fill: driveStatusColor(drive.state),\n              flexShrink: 0,\n            },\n\n            \"& .drive-endpoint\": {\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"normal\",\n              wordBreak: \"break-all\",\n              marginRight: \"8px\",\n              fontWeight: 600,\n              fontSize: {\n                md: \"16px\",\n                xs: \"10px\",\n              },\n            },\n          }}\n        >\n          <div className=\"drive-endpoint\">{drive.endpoint || \"\"}</div>\n          {drive.state && <CircleIcon />}\n        </Box>\n\n        <Box\n          sx={{\n            flex: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            paddingLeft: \"20px\",\n            marginTop: \"10px\",\n            flexFlow: {\n              sm: \"row\",\n              xs: \"column\",\n            },\n            \"& .info-label\": {\n              color: \"#5E5E5E\",\n              fontSize: \"12px\",\n              textAlign: \"center\",\n            },\n            \"& .info-value\": {\n              fontSize: \"18px\",\n              color: \"#07193E\",\n              display: \"flex\",\n              fontWeight: 500,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n            },\n          }}\n        >\n          <Box sx={{ flex: 1 }}>\n            <div style={{ position: \"relative\", width: 110, height: 110 }}>\n              <span\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  fontWeight: \"bold\",\n                  color: \"#000\",\n                  fontSize: 12,\n                }}\n              >\n                {niceBytesInt(drive.usedSpace)}\n              </span>\n              <div>\n                <PieChart width={110} height={110}>\n                  <Pie\n                    data={plotValues}\n                    cx={\"50%\"}\n                    cy={\"50%\"}\n                    dataKey=\"value\"\n                    outerRadius={50}\n                    innerRadius={40}\n                    startAngle={-70}\n                    endAngle={360}\n                    animationDuration={1}\n                  >\n                    {plotValues.map((entry, index) => (\n                      <Cell key={`cellCapacity-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                </PieChart>\n              </div>\n            </div>\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"5%\",\n              alignItems: \"center\",\n              flex: 2,\n              flexGrow: 1,\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n              }}\n            >\n              <div className=\"info-value\">\n                {niceBytes(\n                  drive.totalSpace ? drive.totalSpace.toString() : \"0\"\n                )}\n              </div>\n              <label className=\"info-label\">Capacity</label>\n            </Box>\n\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n              }}\n            >\n              <div className=\"info-value\">\n                {niceBytes(drive.usedSpace ? drive.usedSpace.toString() : \"0\")}\n              </div>\n              <label className=\"info-label\">Used</label>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n              }}\n            >\n              <div className=\"info-value\">\n                {niceBytes(\n                  drive.availableSpace ? drive.availableSpace.toString() : \"0\"\n                )}\n              </div>\n              <label className=\"info-label\">Available</label>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(DriveInfoItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { ServerInfo } from \"../types\";\nimport ServerInfoItem from \"./ServerInfoItem\";\nimport { Box } from \"@mui/material\";\nimport DriveInfoItem from \"./DriveInfoItem\";\nimport {\n  MenuCollapsedIcon,\n  MenuExpandedIcon,\n} from \"../../../../icons/SidebarMenus\";\n\nconst ServersList = ({ data }: { data: ServerInfo[] }) => {\n  const [expanded, setExpanded] = React.useState<string>(\n    data.length > 1 ? \"\" : data[0].endpoint + \"-0\"\n  );\n\n  const handleClick = (key: string) => {\n    setExpanded(key);\n  };\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          marginBottom: \"10px\",\n        }}\n      >\n        Servers ({data.length})\n      </Box>\n      <List\n        sx={{ width: \"100%\", flex: 1, padding: \"0\" }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n      >\n        {data.map((serverInfo, index) => {\n          const key = `${serverInfo.endpoint}-${index}`;\n          const isExpanded = expanded === key;\n          return (\n            <React.Fragment key={key}>\n              <ListItemButton\n                disableRipple\n                onClick={() => {\n                  if (!isExpanded) {\n                    handleClick(key);\n                  } else {\n                    handleClick(\"\");\n                  }\n                }}\n                className={isExpanded ? \"expanded\" : \"\"}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  border: \"1px solid #f1f1f1\",\n                  padding: \"3px 10px 3px 10px\",\n\n                  \"&:hover\": {\n                    background: \"#bebbbb0d\",\n                  },\n                }}\n              >\n                <ServerInfoItem server={serverInfo} index={index} />\n                <Box\n                  sx={{\n                    height: \"25px\",\n                    width: \"25px\",\n                    background: \"#FBFAFA\",\n                    borderRadius: \"2px\",\n                    \"&:hover\": {\n                      background: \"#fafafa\",\n                    },\n                    display: {\n                      md: \"block\",\n                      xs: \"none\",\n                    },\n                    \"& .collapse-icon\": {\n                      fill: \"#494949\",\n                      \"& g  rect\": {\n                        fill: \"#ffffff\",\n                      },\n                    },\n                    \"& .expand-icon\": {\n                      fill: \"#494949\",\n                      \"& rect\": {\n                        fill: \"#ffffff\",\n                      },\n                    },\n                  }}\n                >\n                  {isExpanded ? (\n                    <MenuCollapsedIcon className=\"collapse-icon\" />\n                  ) : (\n                    <MenuExpandedIcon className=\"expand-icon\" />\n                  )}\n                </Box>\n              </ListItemButton>\n              {isExpanded ? (\n                <Box\n                  key={`${serverInfo.endpoint}-${index}`}\n                  sx={{\n                    border: \"1px solid #f1f1f1\",\n                    borderTop: \"0\",\n                  }}\n                >\n                  <ListSubheader\n                    key={`${index}-drive-details`}\n                    component=\"div\"\n                    sx={{ paddingLeft: \"30px\" }}\n                  >\n                    Drives ({serverInfo.drives.length})\n                  </ListSubheader>\n\n                  <Collapse\n                    in={isExpanded}\n                    timeout=\"auto\"\n                    unmountOnExit\n                    sx={{\n                      width: \"100%\",\n                      flex: 1,\n                      display: \"flex\",\n                      padding: { md: \"15px 30px\", xs: \"10px 10px\" },\n                      \"& .MuiCollapse-wrapperInner\": {\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        gap: \"15px\",\n                      },\n                    }}\n                  >\n                    {serverInfo.drives.map((driveInfo, index) => {\n                      return (\n                        <DriveInfoItem\n                          drive={driveInfo}\n                          key={`${driveInfo.endpoint}-${index}`}\n                        />\n                      );\n                    })}\n                  </Collapse>\n                </Box>\n              ) : null}\n            </React.Fragment>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default ServersList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nconst CounterCard = ({\n  counterValue,\n  label = \"\",\n  icon = null,\n}: {\n  counterValue: string | number;\n  label?: any;\n  icon?: any;\n}) => {\n  return (\n    <Box\n      sx={{\n        fontFamily: \"Lato,sans-serif\",\n        color: \"#07193E\",\n        maxWidth: \"300px\",\n        minHeight: \"143px\",\n        display: \"flex\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        cursor: \"default\",\n        position: \"relative\",\n        width: \"100%\",\n        //marginLeft: \"25px\",\n      }}\n    >\n      <Box\n        sx={{\n          flex: 1,\n          minHeight: \"200px\",\n          display: \"flex\",\n          width: \"100%\",\n          padding: {\n            sm: \"0 8px 0 8px\",\n            xs: \"0 10px 0 10px\",\n          },\n          position: \"absolute\",\n        }}\n      >\n        <Box\n          sx={{\n            flex: 1,\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginTop: \"22px\",\n            zIndex: 10,\n            overflow: \"hidden\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              fontWeight: 600,\n            }}\n          >\n            {label}\n          </Box>\n\n          <Tooltip title={counterValue} placement=\"bottom\" enterDelay={500}>\n            <Box\n              sx={{\n                fontSize: {\n                  xl: \"55px\",\n                  lg: \"50px\",\n                  md: \"36px\",\n                  sm: \"35px\",\n                  xs: \"35px\",\n                },\n                fontWeight: 600,\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                maxWidth: {\n                  md: 187,\n                  xs: 200,\n                },\n                flexFlow: {\n                  md: \"row\",\n                  xs: \"column\",\n                },\n              }}\n            >\n              {counterValue}\n            </Box>\n          </Tooltip>\n        </Box>\n        <Box\n          sx={{\n            width: \"20px\",\n            height: \"20px\",\n            marginTop: \"26px\",\n            maxWidth: \"26px\",\n            \"& .min-icon\": {\n              width: \"16px\",\n              height: \"16px\",\n            },\n          }}\n        >\n          {icon}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CounterCard;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ReportedUsageIcon } from \"../../../../icons\";\nimport { Box, Tooltip } from \"@mui/material\";\nimport React from \"react\";\n\nconst ReportedUsage = ({\n  usageValue,\n  total,\n  unit,\n}: {\n  usageValue: string;\n  total: number | string;\n  unit: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        maxHeight: \"110px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"19px\",\n\n        padding: \"10px\",\n        \"& .unit-value\": {\n          fontSize: \"50px\",\n          color: \"#07193E\",\n        },\n        \"& .unit-type\": {\n          fontSize: \"18px\",\n          color: \"#5E5E5E\",\n          marginTop: \"20px\",\n          marginLeft: \"5px\",\n        },\n\n        \"& .usage-label\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"16px\",\n          fontWeight: 600,\n          marginRight: \"20px\",\n          marginTop: \"-10px\",\n          \"& .min-icon\": {\n            marginLeft: \"10px\",\n            height: 16,\n            width: 16,\n          },\n        },\n      }}\n    >\n      <div className=\"usage-label\">\n        <span>Reported Usage</span> <ReportedUsageIcon />\n      </div>\n\n      <Tooltip title={`${usageValue} Bytes`}>\n        <label\n          className={\"unit-value\"}\n          style={{\n            fontWeight: 600,\n          }}\n        >\n          {total}\n        </label>\n      </Tooltip>\n      <label className={\"unit-type\"}>{unit}</label>\n    </Box>\n  );\n};\n\nexport default ReportedUsage;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport {\n  BucketsIcon,\n  DrivesIcon,\n  PrometheusErrorIcon,\n  ServersIcon,\n  TotalObjectsIcon,\n} from \"../../../../icons\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { calculateBytes, representationNumber } from \"../../../../common/utils\";\nimport { IDriveInfo, Usage } from \"../types\";\nimport StatusCountCard from \"./StatusCountCard\";\nimport groupBy from \"lodash/groupBy\";\nimport ServersList from \"./ServersList\";\nimport CounterCard from \"./CounterCard\";\nimport ReportedUsage from \"./ReportedUsage\";\n\nconst BoxItem = ({ children }: { children: any }) => {\n  return (\n    <Box\n      sx={{\n        border: \"1px solid #f1f1f1\",\n        padding: \"25px\",\n        maxWidth: {\n          sm: \"100%\",\n        },\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\ninterface IDashboardProps {\n  usage: Usage | null;\n}\n\nconst getServersList = (usage: Usage | null) => {\n  if (usage !== null) {\n    return usage.servers.sort(function (a, b) {\n      const nameA = a.endpoint.toLowerCase();\n      const nameB = b.endpoint.toLowerCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  return [];\n};\n\nconst prettyUsage = (usage: string | undefined) => {\n  if (usage === undefined) {\n    return { total: \"0\", unit: \"Mi\" };\n  }\n\n  return calculateBytes(usage);\n};\n\nconst BasicDashboard = ({ usage }: IDashboardProps) => {\n  const usageValue = usage && usage.usage ? usage.usage.toString() : \"0\";\n  const usageToRepresent = prettyUsage(usageValue);\n\n  const serverList = getServersList(usage || null);\n\n  let allDrivesArray: IDriveInfo[] = [];\n\n  serverList.forEach((server) => {\n    const drivesInput = server.drives.map((drive) => {\n      return drive;\n    });\n\n    allDrivesArray = [...allDrivesArray, ...drivesInput];\n  });\n\n  const serversGroup = groupBy(serverList, \"state\");\n  const { offline: offlineServers = [], online: onlineServers = [] } =\n    serversGroup;\n  const drivesGroup = groupBy(allDrivesArray, \"state\");\n  const { offline: offlineDrives = [], ok: onlineDrives = [] } = drivesGroup;\n\n  return (\n    <Box\n      sx={{\n        maxWidth: \"1536px\",\n        margin: \"auto\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateRows: \"1fr\",\n          gridTemplateColumns: \"1fr\",\n          gap: \"27px\",\n          marginBottom: \"40px\",\n          marginTop: \"40px\",\n          marginLeft: \"60px\",\n          marginRight: \"60px\",\n        }}\n      >\n        <Box>\n          {usage?.prometheusNotReady && (\n            <HelpBox\n              iconComponent={<PrometheusErrorIcon />}\n              title={\"We can't retrieve advanced metrics at this time\"}\n              help={\n                <Fragment>\n                  MinIO Dashboard will display basic metrics as we couldn't\n                  connect to Prometheus successfully.\n                  <br /> <br />\n                  Please try again in a few minutes. If the problem persists,\n                  you can review your configuration and confirm that Prometheus\n                  server is up and running.\n                </Fragment>\n              }\n            />\n          )}\n\n          {!usage?.prometheusNotReady && (\n            <HelpBox\n              iconComponent={<PrometheusErrorIcon />}\n              title={\"We can’t retrieve advanced metrics at this time.\"}\n              help={\n                <Box>\n                  <Box\n                    sx={{\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    MinIO Dashboard will display basic metrics as we couldn’t\n                    connect to Prometheus successfully. Please try again in a\n                    few minutes. If the problem persists, you can review your\n                    configuration and confirm that Prometheus server is up and\n                    running.\n                  </Box>\n                  <Box\n                    sx={{\n                      paddingTop: \"20px\",\n                      fontSize: \"14px\",\n                      \"& a\": {\n                        color: (theme) => theme.colors.link,\n                      },\n                    }}\n                  >\n                    <a\n                      href=\"https://docs.min.io/minio/baremetal/monitoring/metrics-alerts/collect-minio-metrics-using-prometheus.html?ref=con#minio-metrics-collect-using-prometheus\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Read more about Prometheus on our Docs site.\n                    </a>\n                  </Box>\n                </Box>\n              }\n            />\n          )}\n        </Box>\n\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateRows: \"1fr .2fr auto\",\n            gridTemplateColumns: \"1fr\",\n            gap: \"40px\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateRows: \"1fr\",\n              gridTemplateColumns: {\n                lg: \"1fr 1fr 1fr 1fr \",\n                sm: \"1fr 1fr\",\n                xs: \"1fr\",\n              },\n              gap: \"40px\",\n            }}\n          >\n            <BoxItem>\n              <CounterCard\n                label={\"Buckets\"}\n                icon={<BucketsIcon />}\n                counterValue={usage ? representationNumber(usage.buckets) : 0}\n              />\n            </BoxItem>\n            <BoxItem>\n              <CounterCard\n                label={\"Objects\"}\n                icon={<TotalObjectsIcon />}\n                counterValue={usage ? representationNumber(usage.objects) : 0}\n              />\n            </BoxItem>\n            <BoxItem>\n              <StatusCountCard\n                onlineCount={onlineServers.length}\n                offlineCount={offlineServers.length}\n                label={\"Servers\"}\n                icon={<ServersIcon />}\n              />\n            </BoxItem>\n            <BoxItem>\n              <StatusCountCard\n                offlineCount={offlineDrives.length}\n                onlineCount={onlineDrives.length}\n                label={\"Drives\"}\n                icon={<DrivesIcon />}\n              />\n            </BoxItem>\n          </Box>\n\n          <BoxItem>\n            <ReportedUsage\n              usageValue={usageValue}\n              total={usageToRepresent.total}\n              unit={usageToRepresent.unit}\n            />\n          </BoxItem>\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateRows: \"auto\",\n              gridTemplateColumns: \"1fr\",\n              gap: \"auto\",\n            }}\n          >\n            <ServersList data={serverList} />\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BasicDashboard;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport PrDashboard from \"./Prometheus/PrDashboard\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport Grid from \"@mui/material/Grid\";\nimport { containerForHeader } from \"../Common/FormComponents/common/styleLibrary\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { Usage } from \"./types\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport BasicDashboard from \"./BasicDashboard/BasicDashboard\";\n\ninterface IDashboardSimple {\n  classes: any;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst Dashboard = ({ classes, displayErrorMessage }: IDashboardSimple) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [basicResult, setBasicResult] = useState<Usage | null>(null);\n\n  const fetchUsage = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/admin/info`)\n      .then((res: Usage) => {\n        setBasicResult(res);\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  }, [setBasicResult, setLoading, displayErrorMessage]);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsage();\n    }\n  }, [loading, fetchUsage]);\n\n  const widgets = get(basicResult, \"widgets\", null);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Metrics\" />\n      {loading ? (\n        <Grid container>\n          <Grid item xs={12} className={classes.container}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      ) : (\n        <Fragment>\n          {widgets !== null ? (\n            <Grid container className={classes.container}>\n              <PrDashboard />\n            </Grid>\n          ) : (\n            <BasicDashboard usage={basicResult} />\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(Dashboard));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","actionsTray","widgetContainerCommon","syncButton","schedulerIcon","opacity","selectorLabel","color","whiteSpace","marginLeft","timeStart","setTimeStart","timeEnd","setTimeEnd","triggerSync","Fragment","timeContainers","filterTitle","filterContainer","value","onChange","forFilterContained","id","noInputIcon","divisorLine","type","variant","onClick","endIcon","dateSelectorOverride","padding","borderBottom","borderColor","dateSelectorFilterOverride","dateSelectorFormOverride","maxWidth","parentDateOverride","flexGrow","textBoxContainer","openListIcon","marginTop","paperOverride","margin","textAlign","palette","primary","main","minHeight","borderTop","content","position","top","left","fieldBasic","tooltipHelper","forSearchBlock","label","tooltip","required","disabled","adornment","startAdornment","endAdornment","classOverriden","inputItem","dateAdapter","AdapterMoment","InputProps","renderInput","props","ampm","PopperProps","fieldContainer","htmlFor","inputLabel","tooltipContainer","placement","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","useState","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","onlineCount","offlineCount","icon","okStatusText","notOkStatusText","sx","fontFamily","cursor","flex","sm","flexFlow","justifyContent","md","xl","lg","fill","widgetType","colorsMain","niceDaysFromNS","seconds","niceDays","roundNumber","parseInt","toString","panelsConfiguration","data","simpleWidget","widgetIcon","labelDisplayFunction","dataOuter","name","widgetConfiguration","outerChart","colorList","innerRadius","outerRadius","startAngle","endAngle","innerChart","pieChart","innerLabel","niceBytes","dataKey","keyLabel","lineColor","fillColor","areaGraph","yAxisFormatter","xAxisFormatter","getTimeFromTimestamp","background","greatestColor","customStructure","originTag","displayTag","barChart","singleRep","linearGraph","HealIcon","DiagnosticsIcon","disableYAxis","mergedPanels","singleValue","calculateMainValue","elements","metricCalc","sumValues","reduce","accumulator","currValue","parseFloat","Math","floor","sortResult","sort","value1","value2","widgetDetailsToPanel","payloadData","panelItem","typeOfPayload","get","valueDisplay","chartSeries","valuesArray","values","totalValues","map","elementValue","metricKeyItem","Object","keys","metric","metricName","targets","series","plotValues","forEach","targetMaster","index","results","legendFormat","itemVals","labelName","metrics","keysToReplace","expToReplace","RegExp","join","replacedLegend","replace","matchItem","nwMatchItem","countVarsOpen","match","countVarsClose","cleanLegend","element","constructLabelNames","keyName","push","valInfo","itemIndex","findIndex","itemToPush","seriesWithColors","series1","series2","serialC","textToRGBColor","sortedVals","chartBars","sortFunction","structureItem","metricTake","find","lastValue","a","valuesForBackground","eachVal","splitSizeMetric","val","splittedText","split","vl","isNaN","representationNumber","units","tabSubStyles","makeStyles","textTransform","selected","indicator","scroller","selectedTab","tabOptions","subStyles","Tabs","indicatorColor","textColor","scrollButtons","e","newValue","option","Tab","key","cardSubStyles","widgetCommon","cardRoot","metricText","lineHeight","unitText","subHearderContainer","flexDirection","subMessage","headerContainer","viewAll","extraMargin","metricValue","metricUnit","moreLink","rightComponent","SubHeader","leftSide","rightSide","Header","to","Card","CardHeader","subheader","leftComponent","tooltipCommon","active","payload","barChartConfiguration","customTooltip","timeStampTitle","pl","labelContainer","labelColor","style","itemValue","valueContainer","CustomizedAxisTick","y","textAnchor","transform","dy","displayErrorMessage","setErrorSnackMessage","openZoomPage","loadingAlign","propLoading","apiPrefix","zoomActivated","loading","setLoading","setData","result","setResult","stepCalc","secondsInPeriod","unix","periods","api","then","res","widgetsWithValue","catch","err","greatestIndex","currentValue","dataGraph","useTheme","biggerThanMd","useMediaQuery","breakpoints","up","singleValueContainer","titleContainer","zoomChartIcon","ZoomOutMap","Z","Loader","zoomChartCont","contentContainer","ResponsiveContainer","BarChart","layout","barCategoryGap","XAxis","hide","YAxis","interval","tick","tickLine","axisLine","bar","Bar","barSize","_","Cell","Tooltip","linearConfiguration","containerElements","verticalAlignment","chartCont","legendChart","maxHeight","overflowY","hideYAxis","areaWidget","dataMax","setDataMax","maxVal","dp","intervalCount","CustomizedDot","prop","cx","cy","r","strokeWidth","AreaChart","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","strokeOpacity","stroke","vertical","tickFormatter","tickCount","domain","section","Area","fillOpacity","dot","wrapperStyle","zIndex","singleLegendContainer","colorContainer","legendLabel","pieChartLabel","chartContainer","dataInner","setDataInner","setDataOuter","pieChartConfiguration","middleLabel","innerColors","outerColors","PieChart","Pie","entry","mainWidgetContainer","widgetLabel","widgetValue","iconWidget","gradientID","repNumber","resultRep","x","dominantBaseline","titleElement","containerAlignment","componentToUse","onCloseAction","closeZoomPage","ModalWrapper","zoomOpen","dashboard","zoom","openZoom","zoomWidget","widgetRender","dashboardRow","flexWrap","panelInformation","setPanelInformation","curTab","setCurTab","panels","useCallback","tabName","filterPanels","panelLine","indexLine","totalPanelsContained","perc","Grid","panelInline","indexPanel","panelInfo","panel","widgetPanelDelimiter","fetchUsage","widgets","panelT","toLowerCase","trim","errorMessage","detailedError","summaryPanels","splice","DateRangeSelector","widgetsContainer","STATUS_COLORS","getDriveStatusColor","activeDisks","totalDrives","serverStatusColor","health_status","getNetworkStatusColor","activeNetwork","networkTotal","ServerStatItem","statusColor","hasStatus","Box","gap","overflow","textOverflow","commonDashboardInfocard","server","networkKeys","drives","acc","network","filter","endpoint","uptime","version","driveStatusColor","drive","totalSpace","usedSpace","flexShrink","wordBreak","niceBytesInt","animationDuration","availableSpace","React","expanded","setExpanded","handleClick","List","component","serverInfo","isExpanded","ListItemButton","ListSubheader","Collapse","in","timeout","unmountOnExit","driveInfo","counterValue","enterDelay","usageValue","total","unit","BoxItem","usage","usageToRepresent","undefined","calculateBytes","prettyUsage","serverList","servers","b","nameA","nameB","getServersList","allDrivesArray","drivesInput","serversGroup","groupBy","offline","offlineServers","online","onlineServers","drivesGroup","offlineDrives","ok","onlineDrives","gridTemplateRows","gridTemplateColumns","prometheusNotReady","HelpBox","colors","link","href","target","rel","buckets","objects","StatusCountCard","containerForHeader","spacing","basicResult","setBasicResult","PageHeader","LinearProgress","TabPanel","other","role","hidden"],"sourceRoot":""}