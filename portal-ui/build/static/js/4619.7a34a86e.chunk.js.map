{"version":3,"file":"static/js/4619.7a34a86e.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddAccessRule.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Grid } from \"@mui/material\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IAddAccessRule {\n  classes: any;\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddAccessRule = ({\n  modalOpen,\n  onClose,\n  classes,\n  bucket,\n}: IAddAccessRule) => {\n  const dispatch = useAppDispatch();\n\n  const [prefix, setPrefix] = useState(\"\");\n  const [selectedAccess, setSelectedAccess] = useState<any>(\"readonly\");\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setPrefix(\"\");\n    setSelectedAccess(\"readonly\");\n  };\n\n  const createProcess = () => {\n    api\n      .invoke(\"PUT\", `/api/v1/bucket/${bucket}/access-rules`, {\n        prefix: prefix,\n        access: selectedAccess,\n      })\n      .then((res: any) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        onClose();\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={modalOpen}\n      title=\"Add Access Rule\"\n      onClose={onClose}\n      titleIcon={<AddAccessRuleIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={prefix}\n            label={\"Prefix\"}\n            id={\"prefix\"}\n            name={\"prefix\"}\n            placeholder={\"Enter Prefix\"}\n            onChange={(e) => {\n              setPrefix(e.target.value);\n            }}\n            tooltip={\n              \"Enter '/' to apply the rule to all prefixes and objects at the bucket root. Do not include the wildcard asterisk '*' as part of the prefix *unless* it is an explicit part of the prefix name. The Console automatically appends an asterisk to the appropriate sections of the resulting IAM policy.\"\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <SelectWrapper\n            id=\"access\"\n            name=\"Access\"\n            onChange={(e) => {\n              setSelectedAccess(e.target.value);\n            }}\n            label=\"Access\"\n            value={selectedAccess}\n            options={accessOptions}\n            disabled={false}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n\n          <Button\n            id={\"add-access-save\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            disabled={prefix.trim() === \"\"}\n            onClick={createProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddAccessRule);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","_objectSpread","formFieldStyles","modalStyleUtils","_ref","modalOpen","onClose","classes","bucket","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","prefix","setPrefix","_useState3","_useState4","selectedAccess","setSelectedAccess","_jsx","ModalWrapper","title","titleIcon","AddAccessRuleIcon","children","_jsxs","Grid","container","item","xs","className","formFieldRow","InputBoxWrapper","value","label","id","name","placeholder","onChange","e","target","tooltip","SelectWrapper","options","disabled","modalButtonBar","Button","type","variant","onClick","trim","api","concat","access","then","res","catch","err","setErrorSnackMessage","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","_ref$autoComplete","autoComplete","_ref$disabled","_ref$multiline","multiline","_ref$tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","React","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","fullWidth","helperText","inputRebase","IconButton","size","disableFocusRipple","disableRipple","disableTouchRipple","SelectStyled","root","height","lineHeight","marginTop","spacing","input","color","fontSize","fontWeight","padding","border","borderRadius","display","alignItems","borderColor","backgroundColor","InputBase","fieldContainer","flexFlow","FormControl","Select","map","option","MenuItem","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}