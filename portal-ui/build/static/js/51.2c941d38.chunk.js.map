{"version":3,"file":"static/js/51.2c941d38.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, LifecycleConfigIcon } from \"mds\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { Tier } from \"api/consoleApi\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    formFieldRowAccordion: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  classes,\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(expiryDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCExpirationDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sx={{ marginTop: \"5px\" }}>\n                <FormSwitchWrapper\n                  label=\"Status\"\n                  indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                  checked={enabled}\n                  value={\"user_enabled\"}\n                  id=\"rule_status\"\n                  name=\"rule_status\"\n                  onChange={(e) => {\n                    setEnabled(e.target.checked);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"id\"\n                  name=\"id\"\n                  label=\"Id\"\n                  value={lifecycleRule.id}\n                  onChange={() => {}}\n                  disabled\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <RadioGroupSelector\n                  currentSelection={ilmType}\n                  id=\"rule_type\"\n                  name=\"rule_type\"\n                  label=\"Rule Type\"\n                  selectorOptions={[\n                    { value: \"expiry\", label: \"Expiry\" },\n                    { value: \"transition\", label: \"Transition\" },\n                  ]}\n                  onChange={() => {}}\n                  disableOptions\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"object-version\"\n                  name=\"object-version\"\n                  label=\"Object Version\"\n                  value={objectVersion}\n                  onChange={() => {}}\n                  disabled\n                />\n              </Grid>\n              {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"expiry_days\"\n                    name=\"expiry_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiryDays(e.target.value);\n                    }}\n                    label=\"Expiry Days\"\n                    value={expiryDays}\n                    min=\"0\"\n                  />\n                </Grid>\n              )}\n\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"noncurrentversion_expiration_days\"\n                      name=\"noncurrentversion_expiration_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setNCExpirationDays(e.target.value);\n                      }}\n                      label=\"Non-current Expiration Days\"\n                      value={NCExpirationDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n                )}\n              {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n                <Fragment>\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"transition_days\"\n                      name=\"transition_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setTransitionDays(e.target.value);\n                      }}\n                      label=\"Transition Days\"\n                      value={transitionDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <SelectWrapper\n                      label=\"Storage Class\"\n                      id=\"storage_class\"\n                      name=\"storage_class\"\n                      value={storageClass}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        setStorageClass(e.target.value as string);\n                      }}\n                      options={tiersList}\n                    />\n                  </Grid>\n                </Fragment>\n              )}\n\n              {ilmType === \"transition\" &&\n                lifecycleRule.transition?.noncurrent_transition_days && (\n                  <Fragment>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_transition_days\"\n                        name=\"noncurrentversion_transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionDays(e.target.value);\n                        }}\n                        label=\"Non-current Transition Days\"\n                        value={NCTransitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"noncurrentversion_t_SC\"\n                        name=\"noncurrentversion_t_SC\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionSC(e.target.value);\n                        }}\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\n                        label=\"Non-current Version Transition Storage Class\"\n                        value={NCTransitionSC}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                <Accordion>\n                  <AccordionSummary>\n                    <Typography>Filters</Typography>\n                  </AccordionSummary>\n\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"prefix\"\n                        name=\"prefix\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setPrefix(e.target.value);\n                        }}\n                        label=\"Prefix\"\n                        value={prefix}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <QueryMultiSelector\n                        name=\"tags\"\n                        label=\"Tags\"\n                        elements={tags}\n                        onChange={(vl: string) => {\n                          setTags(vl);\n                        }}\n                        keyPlaceholder=\"Tag Key\"\n                        valuePlaceholder=\"Tag Value\"\n                        withBorder\n                      />\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Advanced</Typography>\n                      </AccordionSummary>\n\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <FormSwitchWrapper\n                            value=\"expired_delete_marker\"\n                            id=\"expired_delete_marker\"\n                            name=\"expired_delete_marker\"\n                            checked={expiredObjectDM}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>,\n                            ) => {\n                              setExpiredObjectDM(event.target.checked);\n                            }}\n                            label={\"Expired Object Delete Marker\"}\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                )}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n              label={\"Save\"}\n            />\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EditLifecycleConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Button, LifecycleConfigIcon } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  bucketName: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    formFieldRowFilter: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container className={classes.loadingBox}>\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <Grid item xs={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <RadioGroupSelector\n                      currentSelection={ilmType}\n                      id=\"ilm_type\"\n                      name=\"ilm_type\"\n                      label=\"Type of lifecycle\"\n                      onChange={(e) => {\n                        setIlmType(e.target.value as \"expiry\" | \"transition\");\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                  </Grid>\n                  {versioningInfo?.status === \"Enabled\" && (\n                    <Grid item xs={12}>\n                      <SelectWrapper\n                        value={targetVersion}\n                        id=\"object_version\"\n                        name=\"object_version\"\n                        label=\"Object Version\"\n                        onChange={(e) => {\n                          setTargetVersion(\n                            e.target.value as \"current\" | \"noncurrent\",\n                          );\n                        }}\n                        options={[\n                          { value: \"current\", label: \"Current Version\" },\n                          { value: \"noncurrent\", label: \"Non-Current Version\" },\n                        ]}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      id=\"expiry_days\"\n                      name=\"expiry_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setLifecycleDays(e.target.value);\n                        }\n                      }}\n                      pattern={\"[0-9]*\"}\n                      label=\"After\"\n                      value={lifecycleDays}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"expire-current-unit\"}\n                          unitSelected={\"days\"}\n                          unitsList={[{ label: \"Days\", value: \"days\" }]}\n                          disabled={true}\n                        />\n                      }\n                    />\n                  </Grid>\n\n                  {ilmType === \"expiry\" ? (\n                    <Fragment></Fragment>\n                  ) : (\n                    <Fragment>\n                      <Grid item xs={12}>\n                        <SelectWrapper\n                          label=\"To Tier\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setStorageClass(e.target.value as string);\n                          }}\n                          options={tiersList}\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                  <Grid item xs={12} className={classes.formFieldRowFilter}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Filters</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <InputBoxWrapper\n                            id=\"prefix\"\n                            name=\"prefix\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>,\n                            ) => {\n                              setPrefix(e.target.value);\n                            }}\n                            label=\"Prefix\"\n                            value={prefix}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <QueryMultiSelector\n                            name=\"tags\"\n                            label=\"Tags\"\n                            elements={\"\"}\n                            onChange={(vl: string) => {\n                              setTags(vl);\n                            }}\n                            keyPlaceholder=\"Tag Key\"\n                            valuePlaceholder=\"Tag Value\"\n                            withBorder\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                  {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                    <Grid item xs={12} className={classes.formFieldRowFilter}>\n                      <Accordion>\n                        <AccordionSummary>\n                          <Typography>Advanced</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <Grid item xs={12}>\n                            <FormSwitchWrapper\n                              value=\"expired_delete_marker\"\n                              id=\"expired_delete_marker\"\n                              name=\"expired_delete_marker\"\n                              checked={expiredObjectDM}\n                              onChange={(\n                                event: React.ChangeEvent<HTMLInputElement>,\n                              ) => {\n                                setExpiredObjectDM(event.target.checked);\n                              }}\n                              label={\"Expire Delete Marker\"}\n                              description={\n                                \"Remove the reference to the object if no versions are left\"\n                              }\n                            />\n                          </Grid>\n                        </AccordionDetails>\n                      </Accordion>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddLifecycleModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ConfirmDeleteIcon } from \"mds\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(DeleteBucketLifecycleRule);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { LifeCycleItem } from \"../types\";\nimport { AddIcon, Button, HelpBox, TiersIcon } from \"mds\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketLifecyclePanelProps {\n  classes: any;\n}\n\nconst BucketLifecyclePanel = ({ classes }: IBucketLifecyclePanelProps) => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 || el.expiration.noncurrent_expiration_days)\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Lifecycle Rules</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(BucketLifecyclePanel);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon } from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport { ObjectRetentionMode, ObjectRetentionUnit } from \"api/consoleApi\";\n\nexport interface SelectorTypes {\n  label: any;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection:\n    | ObjectRetentionMode\n    | ObjectRetentionUnit\n    | undefined\n    | \"expiry\"\n    | \"transition\";\n  label: any;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item fontSize={60}>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"flex\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  }),\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["withStyles","theme","createStyles","_objectSpread","formFieldRowAccordion","padding","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","_ref","_lifecycleRule$expira10","_lifecycleRule$expira11","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$expira12","classes","closeModalAndRefresh","selectedBucket","lifecycleRule","open","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","loadingTiers","setLoadingTiers","_useState3","_useState4","addLoading","setAddLoading","_useState5","_useState6","tags","setTags","_useState7","_useState8","enabled","setEnabled","_useState9","_useState10","tiersList","setTiersList","_useState11","_useState12","prefix","setPrefix","_useState13","_useState14","storageClass","setStorageClass","_useState15","_useState16","NCTransitionSC","setNCTransitionSC","_useState17","_useState18","expiredObjectDM","setExpiredObjectDM","_useState19","_useState20","NCExpirationDays","setNCExpirationDays","_useState21","_useState22","NCTransitionDays","setNCTransitionDays","_useState23","_useState24","ilmType","setIlmType","_useState25","_useState26","expiryDays","setExpiryDays","_useState27","_useState28","transitionDays","setTransitionDays","_useState29","_useState30","isFormValid","setIsFormValid","useEffect","api","admin","then","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","catch","valid","_lifecycleRule$expira3","status","_lifecycleRule$transi","_lifecycleRule$transi2","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$expira","_lifecycleRule$expira2","transitionMode","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","objectVersion","_jsx","ModalWrapper","onClose","modalOpen","title","titleIcon","LifecycleConfigIcon","children","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira4","_lifecycleRule$expira5","_lifecycleRule$expira6","expiry","parseInt","_lifecycleRule$expira7","_lifecycleRule$expira8","_lifecycleRule$expira9","lifecycleUpdate","disable","expired_object_delete_marker","buckets","updateBucketLifecycle","id","err","setModalErrorSnackMessage","saveRecord","_jsxs","Grid","container","item","xs","className","formScrollable","spacing","sx","marginTop","FormSwitchWrapper","indicatorLabels","checked","name","onChange","target","InputBoxWrapper","disabled","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","min","Fragment","SelectWrapper","options","placeholder","Accordion","AccordionSummary","Typography","AccordionDetails","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","Button","variant","onClick","color","LinearProgress","formFieldRowFilter","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","getBucketVersioning","errorToHandler","loadingBox","lifecycleInsert","addBucketLifecycle","addRecord","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","description","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","deleteBucketLifecycleRule","setErrorSnackMessage","error","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","ConfirmDeleteIcon","confirmationContent","DialogContentText","searchField","actionsTray","twHeight","minHeight","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","PanelTitle","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","href","rel","StyledSwitch","root","width","height","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transitions","create","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","fieldBasic","_ref$label","_ref$checked","_ref$disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","_ref$extraInputProps","extraInputProps","switchComponent","React","clsx","_defineProperty","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","_ref$autoComplete","_ref$multiline","multiline","_ref$index","_ref$error","_ref$required","required","_ref$placeholder","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","IconButton","size","buttonTrigger","onUnitChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","unit","MenuItem","inputWithBorder","overflowY","lineInputBoxes","marginBottom","queryDiv","alignSelf","_ref$keyPlaceholder","_ref$valuePlaceholder","_ref$withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","_toConsumableArray","onChangeValue","debounce","queryString","keyVal","insertString","inputs","trim","keysList","valuesList","addEmptyLine","fieldContainer","ref","radioStyles","radioIcons","RadioButton","Radio","checkedIcon","radioSelectedIcon","radioUnselectedIcon","optionLabel","marginRight","checkedOption","_ref$selectorOptions","_ref$disableOptions","_ref$displayInColumn","displayInColumn","RadioGroup","row","style","selectorOption","FormControlLabel","control","SelectStyled","lineHeight","input","borderColor","InputBase","flexFlow","FormControl","Select","option"],"sourceRoot":""}