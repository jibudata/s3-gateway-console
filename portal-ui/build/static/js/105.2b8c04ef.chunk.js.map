{"version":3,"sources":["screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/shared/tabs.tsx","screens/Console/Buckets/BucketDetails/AccessDetailsPanel.tsx"],"names":["unSelected","selected","CloudIcon","active","xmlns","width","height","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","withStyles","createStyles","spacing","margin","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","sendOnlyId","disabled","classes","label","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","size","className","e","stopPropagation","preventDefault","Tooltip","title","isString","borderColor","rowText","fontWeight","fontSize","borderWidth","transitionDuration","padding","paddingRight","paddingLeft","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","dialogContainer","paper","display","overflow","flexDirection","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","color","defaultPaperHeight","allTableSettings","minTableHeader","rowUnselected","rowSelected","paginatorContainer","justifyContent","checkBoxHeader","textAlign","paddingBottom","actionsContainer","paginatorComponent","borderBottom","checkBoxRow","loadingBox","paddingTop","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","checkAllWrapper","marginTop","outline","userSelect","fontStyle","alignItems","textTransform","left","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","item","xs","Paper","container","style","LinearProgress","Popover","id","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","checked","onChange","target","name","value","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","inputProps","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","theme","fieldBasic","tooltipHelper","fieldContainer","marginBottom","flexBasis","tooltip","Fragment","htmlFor","noMinWidthLabel","tooltipContainer","placement","root","children","TabPanel","props","other","role","hidden","connector","connect","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","setErrorSnackMessage","a11yProps","match","curTab","setCurTab","loadingPolicies","setLoadingPolicies","bucketPolicy","setBucketPolicy","loadingUsers","setLoadingUsers","bucketUsers","setBucketUsers","bucketName","params","displayPoliciesList","hasPermission","IAM_SCOPES","ADMIN_LIST_USER_POLICIES","displayUsersList","ADMIN_GET_POLICY","ADMIN_LIST_USERS","ADMIN_LIST_GROUPS","viewUser","CONSOLE_UI_RESOURCE","ADMIN_GET_USER","viewPolicy","useEffect","PolicyActions","policy","userTableActions","user","api","invoke","then","res","catch","err","policies","newValue","indicatorColor","textColor","scrollButtons","scopes","resource","matchAll"],"mappings":"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","file":"static/js/105.2b8c04ef.chunk.js","sourcesContent":["export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst rowText = {\n  fontWeight: 400,\n  fontSize: 14,\n  borderColor: borderColor,\n  borderWidth: \"0.5px\",\n  height: 40,\n  transitionDuration: \"0.3s\",\n  padding: \"initial\",\n  paddingRight: 6,\n  paddingLeft: 6,\n};\n\nconst styles = () =>\n  createStyles({\n    dialogContainer: {\n      padding: \"12px 26px 22px\",\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    allTableSettings: {\n      \"& .MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: \"initial\",\n      },\n      \"& .MuiTableCell-body.MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: 6,\n      },\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: 700,\n          fontSize: 14,\n          borderColor: \"#39393980\",\n          borderWidth: \"0.5px\",\n          padding: \"6px 0 10px\",\n        },\n      },\n    },\n    rowUnselected: {\n      ...rowText,\n      color: \"#393939\",\n    },\n    rowSelected: {\n      ...rowText,\n      color: \"#081C42\",\n      fontWeight: 600,\n    },\n    paginatorContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"5px 38px\",\n    },\n    checkBoxHeader: {\n      width: 50,\n      textAlign: \"left\",\n      paddingRight: 10,\n      \"&.MuiTableCell-paddingCheckbox\": {\n        paddingBottom: 4,\n        paddingLeft: 0,\n      },\n    },\n    actionsContainer: {\n      width: 150,\n      borderColor: borderColor,\n    },\n    paginatorComponent: {\n      borderBottom: 0,\n    },\n    checkBoxRow: {\n      borderColor: borderColor,\n      padding: \"0 10px 0 0\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Paper } from \"@mui/material\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { AppState } from \"../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { TabPanel } from \"../../../shared/tabs\";\nimport { Policy } from \"../../Policies/types\";\nimport { ISessionResponse } from \"../../types\";\nimport { User } from \"../../Users/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../../common/api\";\nimport history from \"../../../../history\";\nimport { BucketInfo } from \"../types\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport SecureComponent, {\n  hasPermission,\n} from \"../../../../common/SecureComponent/SecureComponent\";\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, { setErrorSnackMessage });\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\ninterface IAccessDetailsProps {\n  session: ISessionResponse;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n  match: any;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst AccessDetails = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  session,\n  loadingBucket,\n  bucketInfo,\n}: IAccessDetailsProps) => {\n  const [curTab, setCurTab] = useState<number>(0);\n  const [loadingPolicies, setLoadingPolicies] = useState<boolean>(true);\n  const [bucketPolicy, setBucketPolicy] = useState<Policy[]>([]);\n  const [loadingUsers, setLoadingUsers] = useState<boolean>(true);\n  const [bucketUsers, setBucketUsers] = useState<User[]>([]);\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayPoliciesList = hasPermission(bucketName, [\n    IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n  ]);\n\n  const displayUsersList = hasPermission(\n    bucketName,\n    [\n      IAM_SCOPES.ADMIN_GET_POLICY,\n      IAM_SCOPES.ADMIN_LIST_USERS,\n      IAM_SCOPES.ADMIN_LIST_GROUPS,\n    ],\n    true\n  );\n\n  const viewUser = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_USER,\n  ]);\n  const viewPolicy = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_POLICY,\n    IAM_SCOPES.ADMIN_LIST_USERS,\n    IAM_SCOPES.ADMIN_LIST_GROUPS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingUsers(true);\n      setLoadingPolicies(true);\n    }\n  }, [loadingBucket, setLoadingUsers, setLoadingPolicies]);\n\n  const PolicyActions = [\n    {\n      type: \"view\",\n      disableButtonFunction: () => !viewPolicy,\n      onClick: (policy: any) => {\n        history.push(`/policies/${policy.name}`);\n      },\n    },\n  ];\n\n  const userTableActions = [\n    {\n      type: \"view\",\n      disableButtonFunction: () => !viewUser,\n      onClick: (user: any) => {\n        history.push(`/users/${user}`);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    if (loadingUsers) {\n      if (displayUsersList) {\n        api\n          .invoke(\"GET\", `/api/v1/bucket-users/${bucketName}`)\n          .then((res: any) => {\n            setBucketUsers(res);\n            setLoadingUsers(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setLoadingUsers(false);\n          });\n      } else {\n        setLoadingUsers(false);\n      }\n    }\n  }, [loadingUsers, setErrorSnackMessage, bucketName, displayUsersList]);\n\n  useEffect(() => {\n    if (loadingPolicies) {\n      if (displayPoliciesList) {\n        api\n          .invoke(\"GET\", `/api/v1/bucket-policy/${bucketName}`)\n          .then((res: any) => {\n            setBucketPolicy(res.policies);\n            setLoadingPolicies(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setLoadingPolicies(false);\n          });\n      } else {\n        setLoadingPolicies(false);\n      }\n    }\n  }, [loadingPolicies, setErrorSnackMessage, bucketName, displayPoliciesList]);\n\n  return (\n    <Fragment>\n      <PanelTitle>Access Audit</PanelTitle>\n      <Tabs\n        value={curTab}\n        onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n          setCurTab(newValue);\n        }}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"cluster-tabs\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n      >\n        {displayPoliciesList && <Tab label=\"Policies\" {...a11yProps(0)} />}\n        {displayUsersList && <Tab label=\"Users\" {...a11yProps(1)} />}\n      </Tabs>\n      <Paper>\n        <TabPanel index={0} value={curTab}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_LIST_USER_POLICIES]}\n            resource={bucketName}\n          >\n            <TableWrapper\n              noBackground={true}\n              itemActions={PolicyActions}\n              columns={[{ label: \"Name\", elementKey: \"name\" }]}\n              isLoading={loadingPolicies}\n              records={bucketPolicy}\n              entityName=\"Policies\"\n              idField=\"name\"\n            />\n          </SecureComponent>\n        </TabPanel>\n\n        <TabPanel index={1} value={curTab}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.ADMIN_GET_POLICY,\n              IAM_SCOPES.ADMIN_LIST_USERS,\n              IAM_SCOPES.ADMIN_LIST_GROUPS,\n            ]}\n            resource={bucketName}\n            matchAll\n          >\n            <TableWrapper\n              noBackground={true}\n              itemActions={userTableActions}\n              columns={[{ label: \"User\", elementKey: \"accessKey\" }]}\n              isLoading={loadingUsers}\n              records={bucketUsers}\n              entityName=\"Users\"\n              idField=\"accessKey\"\n            />\n          </SecureComponent>\n        </TabPanel>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default connector(AccessDetails);\n"],"sourceRoot":""}