{"version":3,"file":"static/js/6866.3d3543e7.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddReplicationModal.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, SelectChangeEvent } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketReplicationRule, BulkReplicationResponse } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { getBytes, k8sfactorForDropdown } from \"../../../../common/utils\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { BucketReplicationIcon } from \"../../../../icons\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: () => any;\n  classes: any;\n  bucketName: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  setReplicationRules: BucketReplicationRule[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    sizeFactorContainer: {\n      \"& label\": {\n        display: \"none\",\n      },\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    modalFormScrollable: {\n      ...modalStyleUtils.modalFormScrollable,\n      paddingRight: 10,\n    },\n  });\n\nconst AddReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n  setModalErrorSnackMessage,\n  setReplicationRules,\n}: IReplicationModal) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n\n  useEffect(() => {\n    if (setReplicationRules.length === 0) {\n      setPriority(\"1\");\n      return;\n    }\n\n    const greatestValue = setReplicationRules.reduce((prevAcc, currValue) => {\n      if (currValue.priority > prevAcc) {\n        return currValue.priority;\n      }\n      return prevAcc;\n    }, 0);\n\n    const nextPriority = greatestValue + 1;\n    setPriority(nextPriority.toString());\n  }, [setReplicationRules]);\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n      priority: parseInt(priority),\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = get(response, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            setModalErrorSnackMessage({\n              errorMessage: itemVal.errorString,\n              detailedError: \"\",\n            });\n            return;\n          }\n\n          closeModalAndRefresh();\n\n          return;\n        }\n        setModalErrorSnackMessage({\n          errorMessage: \"No changes applied\",\n          detailedError: \"\",\n        });\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Set Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddLoading(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"priority\"\n                name=\"priority\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.validity.valid) {\n                    setPriority(e.target.value);\n                  }\n                }}\n                label=\"Priority\"\n                value={priority}\n                pattern={\"[0-9]*\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetURL\"\n                name=\"targetURL\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetURL(e.target.value);\n                }}\n                placeholder=\"play.min.io\"\n                label=\"Target URL\"\n                value={targetURL}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                checked={useTLS}\n                id=\"useTLS\"\n                name=\"useTLS\"\n                label=\"Use TLS\"\n                onChange={(e) => {\n                  setUseTLS(e.target.checked);\n                }}\n                value=\"yes\"\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"accessKey\"\n                name=\"accessKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setAccessKey(e.target.value);\n                }}\n                label=\"Access Key\"\n                value={accessKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"secretKey\"\n                name=\"secretKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSecretKey(e.target.value);\n                }}\n                label=\"Secret Key\"\n                value={secretKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetBucket\"\n                name=\"targetBucket\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetBucket(e.target.value);\n                }}\n                label=\"Target Bucket\"\n                value={targetBucket}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"region\"\n                name=\"region\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setRegion(e.target.value);\n                }}\n                label=\"Region\"\n                value={region}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                id=\"replication_mode\"\n                name=\"replication_mode\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setReplicationMode(e.target.value as string);\n                }}\n                label=\"Replication Mode\"\n                value={replicationMode}\n                options={[\n                  { label: \"Asynchronous\", value: \"async\" },\n                  { label: \"Synchronous\", value: \"sync\" },\n                ]}\n              />\n            </Grid>\n\n            {replicationMode === \"async\" && (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <div className={classes.multiContainer}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"bandwidth_scalar\"\n                    name=\"bandwidth_scalar\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setBandwidthScalar(e.target.value as string);\n                    }}\n                    label=\"Bandwidth\"\n                    value={bandwidthScalar}\n                    min=\"0\"\n                  />\n                  <div className={classes.sizeFactorContainer}>\n                    <SelectWrapper\n                      label={\" \"}\n                      id=\"bandwidth_unit\"\n                      name=\"bandwidth_unit\"\n                      value={bandwidthUnit}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        setBandwidthUnit(e.target.value as string);\n                      }}\n                      options={k8sfactorForDropdown()}\n                    />\n                  </div>\n                </div>\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"healthCheck\"\n                name=\"healthCheck\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setHealthCheck(e.target.value as string);\n                }}\n                label=\"Health Check Duration\"\n                value={healthCheck}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Object Filters\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    placeholder=\"prefix\"\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n\n            <Grid\n              item\n              xs={12}\n              className={`${classes.spacerTop} ${classes.formFieldRow}`}\n            >\n              <InputBoxWrapper\n                id=\"storageClass\"\n                name=\"storageClass\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetStorageClass(e.target.value);\n                }}\n                placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n                label=\"Storage Class\"\n                value={targetStorageClass}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Replication Options\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDeleteMarker}\n                    id=\"deleteMarker\"\n                    name=\"deleteMarker\"\n                    label=\"Delete Marker\"\n                    onChange={(e) => {\n                      setRepDeleteMarker(e.target.checked);\n                    }}\n                    value={repDeleteMarker}\n                    description={\"Replicate soft deletes\"}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDelete}\n                    id=\"repDelete\"\n                    name=\"repDelete\"\n                    label=\"Deletes\"\n                    onChange={(e) => {\n                      setRepDelete(e.target.checked);\n                    }}\n                    value={repDelete}\n                    description={\"Replicate versioned deletes\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddReplicationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n"],"names":["connector","connect","setModalErrorSnackMessage","withStyles","theme","createStyles","buttonContainer","textAlign","multiContainer","display","alignItems","sizeFactorContainer","marginBottom","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","modalFormScrollable","paddingRight","open","closeModalAndRefresh","classes","bucketName","setReplicationRules","useState","addLoading","setAddLoading","priority","setPriority","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","targetStorageClass","setTargetStorageClass","prefix","setPrefix","targetBucket","setTargetBucket","region","setRegion","useTLS","setUseTLS","repDeleteMarker","setRepDeleteMarker","repDelete","setRepDelete","tags","setTags","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","useEffect","length","greatestValue","reduce","prevAcc","currValue","toString","modalOpen","onClose","title","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","replicate","originBucket","destinationBucket","hc","parseInt","endURL","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","api","then","response","states","get","itemVal","errorString","errorMessage","detailedError","catch","err","addRecord","container","item","xs","className","formFieldRow","id","name","onChange","target","validity","valid","value","label","pattern","placeholder","checked","options","type","min","k8sfactorForDropdown","fieldGroup","descriptionText","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","spacerTop","description","modalButtonBar","variant","color","disabled","onClick","StyledSwitch","root","width","height","padding","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","focusVisible","switchContainer","justifyContent","Switch","divContainer","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","switchOnly","indicatorLabels","switchComponent","clsx","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","htmlFor","inputLabel","tooltipContainer","placement","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","multiline","index","error","required","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","autoFocus","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","size","inputWithBorder","overflowY","lineInputBoxes","queryDiv","alignSelf","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","map","trim","keysList","valuesList","addEmptyLine","fieldContainer","ref","SelectStyled","lineHeight","spacing","input","borderColor","InputBase","option","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","borderLeftWidth","zIndex","left","transitionDuration","modalErrorShow","closeButton","cursor","errorTitle","errorLabel","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","message","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","Dialog","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent"],"sourceRoot":""}