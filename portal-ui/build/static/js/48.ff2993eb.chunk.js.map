{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","common/BackLink.tsx","utils/wsUtils.ts","screens/Console/Heal/Heal.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","margin","marginBottom","flexBasis","onChange","value","id","name","checked","disabled","tooltip","Fragment","inputProps","checkedIcon","icon","unCheckedIcon","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","link","textDecoration","maxWidth","padding","light","marginRight","to","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr","wsProtocol","protocol","SelectStyled","root","lineHeight","spacing","input","InputBase","distributedSetup","watchList","background","maxHeight","overflow","listStyle","borderBottom","graphContainer","border","borderRadius","scanInfo","flexDirection","scanData","inlineCheckboxes","actionsTray","searchField","containerForHeader","useState","start","setStart","bucketName","setBucketName","bucketList","setBucketList","prefix","setPrefix","recursive","setRecursive","forceStart","setForceStart","forceStop","setForceStop","beforeHeal","afterHeal","objectsHealed","objectsScanned","healDuration","sizeScanned","hStatus","setHStatus","useEffect","api","invoke","then","res","buckets","catch","err","console","log","colorHealthArr","Green","Yellow","Red","Grey","cB","cA","url","URL","window","location","toString","port","wsProt","c","W3CWebSocket","hostname","onopen","send","onmessage","message","m","JSON","parse","data","Object","entries","healthAfterCols","key","itemsScanned","healthBeforeCols","niceBytes","bytesScanned","onclose","close","labels","datasets","borderColor","borderWidth","bucketNames","map","e","target","displayEmpty","option","placeholder","InputProps","disableUnderline","type","onClick","options","text","legend","position"],"mappings":"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","file":"static/js/48.ff2993eb.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={classes.headerContainer}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n}\n\nconst BackLink = ({ to, label, classes }: IBackLink) => {\n  return (\n    <Link to={to} className={classes.link}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputBase,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport { Bucket, BucketList } from \"../Watch/types\";\nimport { colorH, HealStatus } from \"./types\";\nimport { niceBytes } from \"../../../common/utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  inlineCheckboxes,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../store\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport CheckboxWrapper from \"../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport api from \"../../../common/api\";\nimport BackLink from \"../../../common/BackLink\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    watchList: {\n      background: \"white\",\n      maxHeight: \"400\",\n      overflow: \"auto\",\n      \"& ul\": {\n        margin: \"4\",\n        padding: \"0\",\n      },\n      \"& ul li\": {\n        listStyle: \"none\",\n        margin: \"0\",\n        padding: \"0\",\n        borderBottom: \"1px solid #dedede\",\n      },\n    },\n    graphContainer: {\n      backgroundColor: \"#fff\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      padding: \"19px 38px\",\n    },\n    scanInfo: {\n      marginTop: 20,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    scanData: {\n      fontSize: 13,\n    },\n    ...inlineCheckboxes,\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IHeal {\n  classes: any;\n  distributedSetup: boolean;\n}\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 450,\n      lineHeight: \"50px\",\n      marginRight: 15,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n      \"& .MuiSelect-select:focus\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n    input: {\n      height: 50,\n      fontSize: 13,\n      lineHeight: \"50px\",\n      width: 450,\n    },\n  })\n)(InputBase);\n\nconst Heal = ({ classes, distributedSetup }: IHeal) => {\n  const [start, setStart] = useState(false);\n  const [bucketName, setBucketName] = useState(\"\");\n  const [bucketList, setBucketList] = useState<Bucket[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [recursive, setRecursive] = useState(false);\n  const [forceStart, setForceStart] = useState(false);\n  const [forceStop, setForceStop] = useState(false);\n  // healStatus states\n  const [hStatus, setHStatus] = useState({\n    beforeHeal: [0, 0, 0, 0],\n    afterHeal: [0, 0, 0, 0],\n    objectsHealed: 0,\n    objectsScanned: 0,\n    healDuration: 0,\n    sizeScanned: \"\",\n  });\n\n  const fetchBucketList = () => {\n    api\n      .invoke(\"GET\", `/api/v1/buckets`)\n      .then((res: BucketList) => {\n        let buckets: Bucket[] = [];\n        if (res.buckets !== null) {\n          buckets = res.buckets;\n        }\n        setBucketList(buckets);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    fetchBucketList();\n  }, []);\n\n  // forceStart and forceStop need to be mutually exclusive\n  useEffect(() => {\n    if (forceStart === true) {\n      setForceStop(false);\n    }\n  }, [forceStart]);\n\n  useEffect(() => {\n    if (forceStop === true) {\n      setForceStart(false);\n    }\n  }, [forceStop]);\n\n  const colorHealthArr = (color: colorH) => {\n    return [color.Green, color.Yellow, color.Red, color.Grey];\n  };\n\n  useEffect(() => {\n    // begin watch if bucketName in bucketList and start pressed\n    if (start) {\n      // values stored here to update chart\n      const cB: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\n      const cA: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\n\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      const wsProt = wsProtocol(url.protocol);\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}/ws/heal/${bucketName}?prefix=${prefix}&recursive=${recursive}&force-start=${forceStart}&force-stop=${forceStop}`\n      );\n\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: HealStatus = JSON.parse(message.data.toString());\n          // Store percentage per health color\n          for (const [key, value] of Object.entries(m.healthAfterCols)) {\n            cA[key] = (value * 100) / m.itemsScanned;\n          }\n          for (const [key, value] of Object.entries(m.healthBeforeCols)) {\n            cB[key] = (value * 100) / m.itemsScanned;\n          }\n          setHStatus({\n            beforeHeal: colorHealthArr(cB),\n            afterHeal: colorHealthArr(cA),\n            objectsHealed: m.objectsHealed,\n            objectsScanned: m.objectsScanned,\n            healDuration: m.healDuration,\n            sizeScanned: niceBytes(m.bytesScanned.toString()),\n          });\n        };\n        c.onclose = () => {\n          setStart(false);\n          console.log(\"connection closed by server\");\n        };\n        return () => {\n          // close websocket on useEffect cleanup\n          c.close(1000);\n          console.log(\"closing websockets\");\n        };\n      }\n    }\n  }, [start, bucketName, forceStart, forceStop, prefix, recursive]);\n\n  let data = {\n    labels: [\"Green\", \"Yellow\", \"Red\", \"Grey\"],\n    datasets: [\n      {\n        label: \"After Healing\",\n        data: hStatus.afterHeal,\n        backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1,\n      },\n      {\n        label: \"Before Healing\",\n        data: hStatus.beforeHeal,\n        backgroundColor: \"rgba(153, 102, 255, 0.2)\",\n        borderColor: \"rgba(153, 102, 255, 1)\",\n        borderWidth: 1,\n      },\n    ],\n  };\n  const bucketNames = bucketList.map((bucketName) => ({\n    label: bucketName.name,\n    value: bucketName.name,\n  }));\n  if (!distributedSetup) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader label=\"Heal\" />\n      <Grid container className={classes.container}>\n        <Grid item xs={12}>\n          <BackLink to=\"/tools\" label=\"Return to Tools\" />\n        </Grid>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <FormControl variant=\"outlined\">\n            <Select\n              id=\"bucket-name\"\n              name=\"bucket-name\"\n              value={bucketName}\n              onChange={(e) => {\n                setBucketName(e.target.value as string);\n              }}\n              className={classes.searchField}\n              input={<SelectStyled />}\n              displayEmpty\n            >\n              <MenuItem value=\"\" key={`select-bucket-name-default`}>\n                Select Bucket\n              </MenuItem>\n              {bucketNames.map((option) => (\n                <MenuItem\n                  value={option.value}\n                  key={`select-bucket-name-${option.label}`}\n                >\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <TextField\n            placeholder=\"Prefix\"\n            className={classes.searchField}\n            id=\"prefix-resource\"\n            label=\"\"\n            disabled={false}\n            InputProps={{\n              disableUnderline: true,\n            }}\n            onChange={(e) => {\n              setPrefix(e.target.value);\n            }}\n            variant=\"standard\"\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={start}\n            onClick={() => setStart(true)}\n          >\n            Start\n          </Button>\n        </Grid>\n        <Grid item xs={12} className={classes.inlineCheckboxes}>\n          <CheckboxWrapper\n            name=\"recursive\"\n            id=\"recursive\"\n            value=\"recursive\"\n            checked={recursive}\n            onChange={(e) => {\n              setRecursive(e.target.checked);\n            }}\n            disabled={false}\n            label=\"Recursive\"\n          />\n          <CheckboxWrapper\n            name=\"forceStart\"\n            id=\"forceStart\"\n            value=\"forceStart\"\n            checked={forceStart}\n            onChange={(e) => {\n              setForceStart(e.target.checked);\n            }}\n            disabled={false}\n            label=\"Force Start\"\n          />\n          <CheckboxWrapper\n            name=\"forceStop\"\n            id=\"forceStop\"\n            value=\"forceStop\"\n            checked={forceStop}\n            onChange={(e) => {\n              setForceStop(e.target.checked);\n            }}\n            disabled={false}\n            label=\"Force Stop\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n        <Grid item xs={12} className={classes.graphContainer}>\n          <HorizontalBar\n            data={data}\n            width={80}\n            height={30}\n            options={{\n              title: {\n                display: true,\n                text: \"Item's Health Status [%]\",\n                fontSize: 20,\n              },\n              legend: {\n                display: true,\n                position: \"right\",\n              },\n            }}\n          />\n          <Grid item xs={12} className={classes.scanInfo}>\n            <div className={classes.scanData}>\n              <strong>Size scanned:</strong> {hStatus.sizeScanned}\n            </div>\n            <div className={classes.scanData}>\n              <strong>Objects healed:</strong> {hStatus.objectsHealed} /{\" \"}\n              {hStatus.objectsScanned}\n            </div>\n            <div className={classes.scanData}>\n              <strong>Healing time:</strong> {hStatus.healDuration}s\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  distributedSetup: state.system.distributedSetup,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(Heal));\n"],"sourceRoot":""}