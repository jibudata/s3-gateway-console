{"version":3,"file":"static/js/3453.9884f106.chunk.js","mappings":"0QAqEMA,GAAeC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CAC1CC,KAAM,CACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,OAAQ,GAEVC,WAAY,CACVF,QAAS,EACT,YAAa,CACXG,UAAW,mBACXC,MAAOR,EAAMS,QAAQC,OAAOC,MAC5B,aAAc,CACZC,gBAAiB,UACjBC,UAAW,oCACXC,QAAS,EACTC,OAAQ,SAGZ,wBAAyB,CACvBP,MAAO,UACPO,OAAQ,mBAGZC,MAAO,CACLd,MAAO,GACPC,OAAQ,GACRS,gBAAiB,UACjBG,OAAQ,oBACRE,WAAY,GAEdC,MAAO,CACLC,aAAc,GACdP,gBAAiB,UACjBC,UAAW,oCACXC,QAAS,EACTM,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,GACTC,aAAc,GACdC,gBAAiB,CACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,eA3CC7B,CA6CjB8B,EAAAA,GA4GJ,KAAe9B,EAAAA,EAAAA,IAlLA,SAACC,GAAD,OACb8B,EAAAA,EAAAA,IAAa,gBACXC,aAAc,CACZC,aAAc,IAEhBC,iBAAkB,CAChBC,WAAY,OACZ1B,MAAO,sBAET2B,eAAgB,CACdC,SAAU,GACV5B,MAAO,UACPH,OAAQ,gBAEVgC,iBAAkB,CAChBC,UAAW,EACX9B,MAAO,WAET+B,QAAS,CACPH,SAAU,KAETI,EAAAA,IACAC,EAAAA,OA4JP,EA1G0B,SAAC,GAcP,IAAD,IAbjBC,MAAAA,OAaiB,MAbT,GAaS,EAZjBC,EAYiB,EAZjBA,SACAC,EAWiB,EAXjBA,MACAC,EAUiB,EAVjBA,GACAC,EASiB,EATjBA,KASiB,IARjBvB,QAAAA,OAQiB,aAPjBwB,SAAAA,OAOiB,aANjBC,WAAAA,OAMiB,aALjBT,QAAAA,OAKiB,MALP,GAKO,MAJjBU,YAAAA,OAIiB,MAJH,GAIG,EAHjBC,EAGiB,EAHjBA,QACAC,EAEiB,EAFjBA,gBAEiB,IADjBC,gBAAAA,OACiB,MADC,GACD,EACXC,GACJ,UAAC,WAAD,YACIL,IACA,iBACEM,WAAWC,EAAAA,EAAAA,GAAKL,EAAQf,gBAAT,UACZe,EAAQjB,kBAAoBV,IAFjC,SAKG4B,GAAmBA,EAAgBK,OAAS,EACzCL,EAAgB,GAChB,SAGR,SAACrD,EAAD,CACEyB,QAASA,EACToB,SAAUA,EACVnC,MAAM,UACNsC,KAAMA,EACNW,YAAU,QAAI,aAAc,oBAAuBL,GACnDL,SAAUA,EACVW,eAAa,EACbC,oBAAkB,EAClBC,oBAAkB,EAClBhB,MAAOA,KAEPI,IACA,iBACEM,WAAWC,EAAAA,EAAAA,GAAKL,EAAQf,gBAAT,UACZe,EAAQjB,iBAAmBV,IAFhC,SAKG4B,EAAkBA,EAAgB,GAAK,UAMhD,OAAIH,EACKK,GAIP,gBAAKC,UAAWJ,EAAQnB,aAAxB,UACE,UAAC,KAAD,CAAM8B,WAAS,EAAClC,WAAY,SAA5B,WACE,SAAC,KAAD,CAAMmC,MAAI,EAACC,IAAE,EAAb,UACE,UAAC,KAAD,CAAMF,WAAS,EAAf,WACE,SAAC,KAAD,CACEC,MAAI,EACJC,GAAI,GACJC,GAAoB,KAAhBf,EAAqB,EAAI,GAC7BgB,GAAoB,KAAhBhB,EAAqB,EAAI,EAJ/B,SAMa,KAAVP,IACC,UAAC,IAAD,CAAYwB,QAASrB,EAAIS,UAAWJ,EAAQiB,WAA5C,WACE,0BAAOzB,IACM,KAAZH,IACC,gBAAKe,UAAWJ,EAAQkB,iBAAxB,UACE,SAAC,IAAD,CAASC,MAAO9B,EAAS+B,UAAU,YAAnC,UACE,gBAAKhB,UAAWJ,EAAQX,QAAxB,UACE,SAAC,IAAD,gBAQd,SAAC,KAAD,CAAMuB,MAAI,EAACC,GAAI,GAAIC,IAAE,EAACO,UAAW,OAAjC,SACmB,KAAhBtB,IACC,SAAC,IAAD,CAAYuB,UAAU,IAAIlB,UAAWJ,EAAQb,iBAA7C,SACGY,YAOX,SAAC,KAAD,CACEa,MAAI,EACJC,GAAI,GACJC,GAAI,EACJO,UAAW,QACXjB,UAAWJ,EAAQzB,gBALrB,SAOG4B,a,sGCtKX,KAAetD,EAAAA,EAAAA,IAnCA,SAACC,GAAD,OACb8B,EAAAA,EAAAA,IAAa,UACR2C,EAAAA,OAiCP,EA9BuB,SAAC,GAKA,IAJtBvB,EAIqB,EAJrBA,QAIqB,IAHrBR,MAAAA,OAGqB,MAHb,GAGa,EAFrBgC,EAEqB,EAFrBA,QAEqB,IADrBC,UAAAA,OACqB,SACrB,OACE,SAAC,EAAAC,SAAD,WACE,UAAC,KAAD,CAAMtB,UAAWJ,EAAQ2B,kBAAzB,UACa,KAAVnC,IACC,SAAC,KAAD,CAAMoB,MAAI,EAACC,GAAI,GAAIT,UAAWJ,EAAQ4B,gBAAtC,SACGpC,KAGL,SAAC,KAAD,CAAMoB,MAAI,EAACC,GAAI,GAAIT,UAAWJ,EAAQuB,eAAtC,UACE,SAAC,KAAD,CACEX,MAAI,EACJC,GAAI,GACJT,UACEqB,EAAYzB,EAAQ6B,sBAAwB7B,EAAQ8B,aAJxD,SAOGN,e,0DC6FTO,E,8MAMEC,EAAgB,WACpBC,cAAcF,IA+FVG,EAAqB,CACzBC,oBAAqBC,EAAAA,IAKvB,GAFkBC,EAAAA,EAAAA,KARD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAOEP,EAEpC,EAAyBrF,EAAAA,EAAAA,IA3LV,SAACC,GAAD,OACb8B,EAAAA,EAAAA,GAAa,CACX8D,oBAAqB,CACnBC,SAAU,WACVvD,UAAW,GACXpC,MAAO,MACPU,gBAAiB,OACjBG,OAAQ,oBACR+E,gBAAiB,GACjB3E,aAAc,EACd4E,OAAQ,IACR3F,QAAS,YACT4F,KAAM,MACNzF,UAAW,mBACXO,QAAS,EACTmF,mBAAoB,QAEtBC,eAAgB,CACdpF,QAAS,GAEXqF,YAAa,CACXN,SAAU,WACVO,MAAO,EACPhE,SAAU,QACVrB,OAAQ,EACRH,gBAAiB,OACjByF,OAAQ,WAEVC,WAAY,CACV5E,QAAS,OACTC,WAAY,UAEd4E,WAAY,CACV/F,MAAO,OACP4B,SAAU,GACVF,WAAY,IACZjB,WAAY,EACZuF,YAAa,IAEfC,YAAa,CACXjG,MAAO,UACPkB,QAAS,OACT,QAAS,CACPxB,MAAO,GACPC,OAAQ,KAGZuG,cAAe,CACblG,MAAO,UACPkB,QAAS,OACTC,WAAY,SACZZ,OAAQ,EACRH,gBAAiB,cACjB+F,YAAa,EACbvE,SAAU,GACVwE,kBAAmB,OACnBP,OAAQ,WAEVQ,sBAAuB,CACrBC,UAAW,SACXtG,MAAO,UACPuG,WAAY,EACZ3G,QAAS,SACTgB,WAAY,sBACZ4F,SAAU,UAEZC,iBAAkB,CAChBF,WAAY,EACZ3G,QAAS,YAEX8G,aAAc,CACZjG,YAAa,GAEfkG,UAAW,CACT5G,UAAW,iBACXqG,kBAAmB,YAgHA7G,EAlGN,SAAC,GAKK,IAJvBmD,EAIsB,EAJtBA,QACAuC,EAGsB,EAHtBA,kBACAJ,EAEsB,EAFtBA,oBACA+B,EACsB,EADtBA,YAEA,GAAsCC,EAAAA,EAAAA,WAAkB,GAAxD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8CF,EAAAA,EAAAA,WAAkB,GAAhE,eAAOG,EAAP,KAAwBC,EAAxB,KAEMC,GAAoBC,EAAAA,EAAAA,cAAY,WACpCF,GAAmB,KAClB,KAEHG,EAAAA,EAAAA,YAAU,WACHJ,IACHnC,EAAoB,CAAEwC,cAAe,GAAIC,aAAc,KACvDP,GAAe,MAGhB,CAAClC,EAAqBmC,KAEzBI,EAAAA,EAAAA,YAAU,WAEwB,KAA9BnC,EAAkBsC,SACS,UAA3BtC,EAAkBuC,MAGlBP,GAAmB,KAGpB,CAACC,EAAmBjC,EAAkBsC,QAAStC,EAAkBuC,OAEpE,IAIMD,EAAUE,GAAAA,CAAIxC,EAAmB,UAAW,IAC5CyC,EAAiBD,GAAAA,CAAIxC,EAAmB,mBAAoB,IAElE,MAA+B,UAA3BA,EAAkBuC,MAAgC,KAAZD,EACjC,MAIP,SAAC,EAAAnD,SAAD,WACE,iBACEtB,UAAS,UAAKJ,EAAQ0C,oBAAb,YACP4B,EAAkBtE,EAAQgD,eAAiB,IAE7CiC,MAAOf,EACPgB,YAAalD,EACbmD,aAAc,WA1DpBpD,EAASqD,YA0DgCZ,EA1DF,MAoDnC,WAQE,mBAAQpE,UAAWJ,EAAQiD,YAAaoC,QAASb,EAAjD,UACE,SAACc,EAAA,EAAD,OAEF,iBAAKlF,UAAWJ,EAAQoD,WAAxB,WACE,iBAAMhD,UAAWJ,EAAQuD,YAAzB,UACE,SAACgC,EAAA,EAAD,OAEF,iBAAMnF,UAAWJ,EAAQqD,WAAzB,SAAsCwB,OAEpB,KAAnBG,IACC,UAAC,EAAAtD,SAAD,YACE,gBAAKtB,UAAWJ,EAAQwF,qBAAxB,UACE,oBAAQpF,UAAWJ,EAAQwD,cAAe6B,QAjChC,WACpBhB,GAAgBD,IAgCN,qBAEE,SAACqB,EAAA,EAAD,CACErF,UAAS,UAAKJ,EAAQgE,aAAb,YACPI,EAAcpE,EAAQiE,UAAY,YAK1C,gBACE7D,UAAS,UAAKJ,EAAQ2D,sBAAb,YACPS,EAAcpE,EAAQ+D,iBAAmB,IAF7C,SAKGiB,gBC1CTU,GAAYrD,EAAAA,EAAAA,KAJD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClCkD,qBAAAA,EAAAA,KAGF,GAAe9I,EAAAA,EAAAA,IA3IA,SAACC,GAAD,OACb8B,EAAAA,EAAAA,IAAa,kBACRgH,EAAAA,IADO,IAEV7I,KAAM,CACJ,mBAAoB,CAClBG,QAAS,qBAGbsE,QAAS,CACPtE,QAAS,GACT2I,cAAe,GAEjBC,iBAAkB,CAChB9I,MAAO,OACP+I,SAAU,MAETC,EAAAA,OA2HP,CAAkCN,GAxHb,SAAC,GAWF,IAVlBO,EAUiB,EAVjBA,QACAC,EASiB,EATjBA,UACA/E,EAQiB,EARjBA,MACAgF,EAOiB,EAPjBA,SACAnG,EAMiB,EANjBA,QAMiB,IALjBoG,UAAAA,OAKiB,SAJjB7D,EAIiB,EAJjBA,kBACA8D,EAGiB,EAHjBA,iBACAV,EAEiB,EAFjBA,qBAEiB,IADjBW,UAAAA,OACiB,MADL,KACK,EACjB,GAAwCnC,EAAAA,EAAAA,WAAkB,GAA1D,eAAOoC,EAAP,KAAqBC,EAArB,MAEA9B,EAAAA,EAAAA,YAAU,WACRiB,EAAqB,MACpB,CAACA,KAEJjB,EAAAA,EAAAA,YAAU,WACR,GAAInC,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBsC,QAEpB,YADA2B,GAAgB,GAIa,UAA3BjE,EAAkBuC,MACpB0B,GAAgB,MAGnB,CAACjE,IAEJ,IAKMkE,EAAaL,EACf,CACEpG,QAAS,CACP0G,MAAO1G,EAAQ8F,mBAGnB,CAAEC,SAAU,KAAeY,WAAW,GAEtC9B,EAAU,GAYd,OAVItC,IACFsC,EAAUtC,EAAkBqE,kBAEa,KAAvCrE,EAAkBqE,kBAClBrE,EAAkBqE,iBAAiBtG,OAAS,KAE5CuE,EAAUtC,EAAkBsC,WAK9B,UAACgC,EAAA,GAAD,gBACEC,KAAMZ,EACNlG,QAASA,GACLyG,GAHN,IAIEM,OAAQ,QACRd,QAAS,SAACe,EAAOC,GACA,kBAAXA,GACFhB,KAGJ7F,UAAWJ,EAAQjD,KAVrB,WAYE,UAACmK,EAAA,EAAD,CAAa9G,UAAWJ,EAAQmB,MAAhC,WACE,iBAAKf,UAAWJ,EAAQmH,UAAxB,UACGb,EADH,IACenF,MAEf,gBAAKf,UAAWJ,EAAQoH,eAAxB,UACE,SAACC,EAAA,EAAD,CACE,aAAW,QACXjH,UAAWJ,EAAQiD,YACnBoC,QAASY,EACTzF,eAAa,EACb8G,KAAK,QALP,UAOE,SAAChC,EAAA,EAAD,YAKN,SAAC,EAAD,KACA,SAACiC,EAAA,EAAD,CACET,KAAMP,EACNnG,UAAWJ,EAAQwH,cACnBvB,QAAS,WA1DbO,GAAgB,GAChBb,EAAqB,KA4DjBd,QAASA,EACT4C,aAAc,CACZrH,UAAU,GAAD,OAAKJ,EAAQ0H,SAAb,YACPnF,GAAgD,UAA3BA,EAAkBuC,KACnC9E,EAAQ2H,cACR,KAGRC,iBACErF,GAAgD,UAA3BA,EAAkBuC,KAAmB,IAAQ,OAGtE,SAAC+C,EAAA,EAAD,CAAezH,UAAWiG,EAAmB,GAAKrG,EAAQwB,QAA1D,SACG2E,a,uOCkBHjE,EAAqB,CACzBE,0BAAAA,EAAAA,IAGIsD,GAAYrD,EAAAA,EAAAA,IAAQ,KAAMH,GAEhC,KAAerF,EAAAA,EAAAA,IArJA,SAACC,GAAD,OACb8B,EAAAA,EAAAA,IAAa,gBACX8H,MAAO,CACLlI,QAAS,OACTsF,SAAU,OACVgE,cAAe,SAEfnK,UAAW,OACXE,OAAQ,GAGVkK,YAAW,UACNC,EAAAA,GAAAA,YAELC,UAAW,CACTC,KAAM,IAEL5I,EAAAA,IAhBO,IAiBV6I,aAAc,CACZjJ,SAAU,GACVkJ,UAAW,SACXC,SAAU,IACV/E,YAAa,IAEfgF,QAAS,CACPjH,UAAW,SACXnE,QAASJ,EAAMyL,QAAQ,GACvB1K,OAAQ,oBACRqB,SAAU,UAETsJ,EAAAA,OAuHP,CAAkC9C,GApHX,SAAC,GAMH,IALnB1F,EAKkB,EALlBA,QACAyI,EAIkB,EAJlBA,cACAC,EAGkB,EAHlBA,iBAGkB,IAFlBC,SAAAA,OAEkB,SADlBvG,EACkB,EADlBA,0BAGA,GAA8B+B,EAAAA,EAAAA,UAAgB,IAA9C,eAAOyE,EAAP,KAAgBC,EAAhB,KACA,GAA6B1E,EAAAA,EAAAA,WAAkB,GAA/C,eAAO2E,EAAP,KAAgBC,EAAhB,KACA,GAA4B5E,EAAAA,EAAAA,UAAiB,IAA7C,eAAO6E,EAAP,KAAeC,EAAf,KAEMC,GAAazE,EAAAA,EAAAA,cAAY,WAC7B0E,EAAAA,EAAAA,OACU,MADV,iBAEGC,MAAK,SAACC,GACL,IAAIC,EAAQvE,GAAAA,CAAIsE,EAAK,QAAS,IAEzBC,IACHA,EAAQ,IAGVT,EAAWS,EAAMC,KAAKC,EAAAA,KACtBT,GAAU,MAEXU,OAAM,SAACC,GACNtH,EAA0BsH,GAC1BX,GAAU,QAEb,CAAC3G,KAGJsC,EAAAA,EAAAA,YAAU,WACRqE,GAAU,KACT,KAEHrE,EAAAA,EAAAA,YAAU,WACJoE,GACFI,MAED,CAACJ,EAASI,IAEb,IAAMS,EAAYlB,GAAgB,GAsB5BmB,EAAkBhB,EAAQI,QAAO,SAACa,GAAD,OACrCA,EAAYC,UAAUC,SAASf,MAGjC,OACE,SAAC,WAAD,WACE,SAAC,KAAD,CAAMpI,MAAI,EAACC,GAAI,GAAf,UACE,UAAC,IAAD,CAAOT,UAAWJ,EAAQ0G,MAA1B,UACGoC,IAAW,SAAC,IAAD,IACC,OAAZF,GAAoBA,EAAQtI,OAAS,GACpC,UAAC,WAAD,YACE,UAAC,KAAD,CAAMM,MAAI,EAACC,GAAI,GAAIT,UAAWJ,EAAQV,YAAtC,WACE,kBAAOc,UAAWJ,EAAQmI,aAA1B,SACGQ,EAAW,eAAiB,kBAE/B,gBAAKvI,UAAWJ,EAAQiI,UAAxB,UACE,SAAC,IAAD,CACE+B,YAAY,eACZC,kBAAkB,MAClBxK,SAAUwJ,EACVvJ,MAAOsJ,UAIb,SAAC,KAAD,CAAMpI,MAAI,EAACC,GAAI,GAAIT,UAAWJ,EAAQ+H,WAAtC,UACE,SAAC,IAAD,CACEmC,QAAS,CAAC,CAAE1K,MAAO,aAAc2K,WAAY,cAC7CC,SA9CS,SAACC,GACxB,IAAMC,EAAUD,EAAEE,OACZ7K,EAAQ4K,EAAQ5K,MAChBrB,EAAUiM,EAAQjM,QAEpBmM,GAAkB,OAAOb,GAW7B,OATItL,EAEFmM,EAASC,KAAK/K,GAGd8K,EAAWA,EAASxB,QAAO,SAAC0B,GAAD,OAAaA,IAAYhL,KAEtDgJ,EAAiB8B,GAEVA,GA+BOG,cAAehB,EACfZ,UAAWD,EACXF,QAASgB,EACTgB,WAAW,QACXC,QAAQ,YACRC,kBAAmB9K,EAAQ+K,yBAKjC,gBAAK3K,UAAWJ,EAAQsI,QAAxB","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Groups/UsersSelectors.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={description !== \"\" ? 4 : 10}\n              md={description !== \"\" ? 3 : 9}\n            >\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UsersSelectors));\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","predefinedList","content","multiLine","Fragment","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","position","borderLeftWidth","zIndex","left","transitionDuration","modalErrorShow","closeButton","right","cursor","errorTitle","errorLabel","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","onClick","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","flexDirection","tableBlock","tableStyles","searchBox","flex","actionsTitle","alignSelf","minWidth","noFound","spacing","selectorsCommon","selectedUsers","setSelectedUsers","editMode","records","setRecords","loading","isLoading","filter","setFilter","fetchUsers","api","then","res","users","sort","usersSort","catch","err","selUsers","filteredRecords","elementItem","accessKey","includes","placeholder","adornmentPosition","columns","elementKey","onSelect","e","targetD","target","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable"],"sourceRoot":""}