{"version":3,"file":"static/js/247.5fb5050b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddBucketTagModal.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { AddNewTagIcon, Button } from \"mds\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IBucketTagModal {\n  modalOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  onCloseAndUpdate: (refresh: boolean) => void;\n\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst AddBucketTagModal = ({\n  modalOpen,\n  currentTags,\n  onCloseAndUpdate,\n  bucketName,\n\n  classes,\n}: IBucketTagModal) => {\n  const dispatch = useAppDispatch();\n  const [newKey, setNewKey] = useState<string>(\"\");\n  const [newLabel, setNewLabel] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const resetForm = () => {\n    setNewLabel(\"\");\n    setNewKey(\"\");\n  };\n\n  const addTagProcess = () => {\n    setIsSending(true);\n    const newTag: any = {};\n\n    newTag[newKey] = newLabel;\n    const newTagList = { ...currentTags, ...newTag };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/tags`, {\n        tags: newTagList,\n      })\n      .then((res: any) => {\n        setIsSending(false);\n        onCloseAndUpdate(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(error));\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={modalOpen}\n      title={`Add New Tag `}\n      onClose={() => {\n        onCloseAndUpdate(false);\n      }}\n      titleIcon={<AddNewTagIcon />}\n    >\n      <Grid container>\n        <div className={classes.spacerBottom}>\n          <strong>Bucket</strong>: {bucketName}\n        </div>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newKey}\n            label={\"New Tag Key\"}\n            id={\"newTagKey\"}\n            name={\"newTagKey\"}\n            placeholder={\"Enter New Tag Key\"}\n            onChange={(e: any) => {\n              setNewKey(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newLabel}\n            label={\"New Tag Label\"}\n            id={\"newTagLabel\"}\n            name={\"newTagLabel\"}\n            placeholder={\"Enter New Tag Label\"}\n            onChange={(e: any) => {\n              setNewLabel(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n          <Button\n            id={\"save-add-bucket-tag\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={\n              newLabel.trim() === \"\" || newKey.trim() === \"\" || isSending\n            }\n            onClick={addTagProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddBucketTagModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","_objectSpread","formFieldStyles","modalStyleUtils","spacingUtils","_ref","modalOpen","currentTags","onCloseAndUpdate","bucketName","classes","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","newKey","setNewKey","_useState3","_useState4","newLabel","setNewLabel","_useState5","_useState6","isSending","setIsSending","_jsx","ModalWrapper","title","onClose","titleIcon","AddNewTagIcon","children","_jsxs","Grid","container","className","spacerBottom","item","xs","formFieldRow","InputBoxWrapper","value","label","id","name","placeholder","onChange","e","target","modalButtonBar","Button","type","variant","onClick","color","disabled","trim","newTag","newTagList","api","concat","tags","then","res","catch","error","setModalErrorSnackMessage","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","_ref$autoComplete","autoComplete","_ref$disabled","_ref$multiline","multiline","_ref$tooltip","tooltip","_ref$index","index","_ref$error","_ref$required","required","_ref$placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","React","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","fullWidth","helperText","inputRebase","IconButton","size","disableFocusRipple","disableRipple","disableTouchRipple","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}