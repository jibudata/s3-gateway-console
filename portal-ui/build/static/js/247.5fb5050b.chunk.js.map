{"version":3,"file":"static/js/247.5fb5050b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddBucketTagModal.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { AddNewTagIcon, Button } from \"mds\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IBucketTagModal {\n  modalOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  onCloseAndUpdate: (refresh: boolean) => void;\n\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst AddBucketTagModal = ({\n  modalOpen,\n  currentTags,\n  onCloseAndUpdate,\n  bucketName,\n\n  classes,\n}: IBucketTagModal) => {\n  const dispatch = useAppDispatch();\n  const [newKey, setNewKey] = useState<string>(\"\");\n  const [newLabel, setNewLabel] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const resetForm = () => {\n    setNewLabel(\"\");\n    setNewKey(\"\");\n  };\n\n  const addTagProcess = () => {\n    setIsSending(true);\n    const newTag: any = {};\n\n    newTag[newKey] = newLabel;\n    const newTagList = { ...currentTags, ...newTag };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/tags`, {\n        tags: newTagList,\n      })\n      .then((res: any) => {\n        setIsSending(false);\n        onCloseAndUpdate(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(error));\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={modalOpen}\n      title={`Add New Tag `}\n      onClose={() => {\n        onCloseAndUpdate(false);\n      }}\n      titleIcon={<AddNewTagIcon />}\n    >\n      <Grid container>\n        <div className={classes.spacerBottom}>\n          <strong>Bucket</strong>: {bucketName}\n        </div>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newKey}\n            label={\"New Tag Key\"}\n            id={\"newTagKey\"}\n            name={\"newTagKey\"}\n            placeholder={\"Enter New Tag Key\"}\n            onChange={(e: any) => {\n              setNewKey(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newLabel}\n            label={\"New Tag Label\"}\n            id={\"newTagLabel\"}\n            name={\"newTagLabel\"}\n            placeholder={\"Enter New Tag Label\"}\n            onChange={(e: any) => {\n              setNewLabel(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n          <Button\n            id={\"save-add-bucket-tag\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={\n              newLabel.trim() === \"\" || newKey.trim() === \"\" || isSending\n            }\n            onClick={addTagProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddBucketTagModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","formFieldStyles","modalStyleUtils","spacingUtils","modalOpen","currentTags","onCloseAndUpdate","bucketName","classes","dispatch","useAppDispatch","useState","newKey","setNewKey","newLabel","setNewLabel","isSending","setIsSending","title","onClose","titleIcon","container","className","spacerBottom","item","xs","formFieldRow","value","label","id","name","placeholder","onChange","e","target","modalButtonBar","type","variant","onClick","color","disabled","trim","newTag","newTagList","api","tags","then","res","catch","error","setModalErrorSnackMessage","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","autoComplete","multiline","tooltip","index","required","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","fullWidth","helperText","inputRebase","size","disableFocusRipple","disableRipple","disableTouchRipple","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}