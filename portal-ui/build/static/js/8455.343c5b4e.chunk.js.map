{"version":3,"file":"static/js/8455.343c5b4e.chunk.js","mappings":"iRAiIA,WAAeA,EAAAA,EAAAA,IAtFA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,kBACRC,EAAAA,IACAC,EAAAA,IACF,GAkFL,EAhFuB,SAAH,GAOI,IANtBC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAO,EAAPA,QACAC,EAAM,EAANA,OACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4CC,EAAAA,EAAAA,UAAcH,GAAQ,eAA3DI,EAAc,KAAEC,EAAiB,KA2BxC,OACE,SAAC,WAAc,WACb,SAAC,IAAY,CACXV,UAAWA,EACXW,MAAK,yCAA6BR,EAAM,YAAIC,GAAU,KACtDH,QAASA,EACTW,WAAW,SAAC,MAAiB,IAAI,UAEjC,UAAC,KAAI,CAACC,WAAS,aACb,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,UAAWd,EAAQe,UAAU,UAC9C,SAAC,IAAa,CACZC,GAAG,SACHC,KAAK,SACLC,SAAU,SAACC,GACTX,EAAkBW,EAAEC,OAAOC,MAC7B,EACAC,MAAM,SACND,MAAOd,EACPgB,QA3CU,CACpB,CAAED,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,YAAaD,MAAO,cAyCnBG,UAAU,OAGd,UAAC,KAAI,CAACZ,MAAI,EAACC,GAAI,GAAIC,UAAWd,EAAQyB,eAAe,WACnD,SAAC,MAAM,CACLT,GAAI,QACJU,KAAK,SACLC,QAAQ,UACRC,QA9CM,WAChBpB,EAAkBL,EACpB,EA6CYmB,MAAO,WAET,SAAC,MAAM,CACLN,GAAI,OACJU,KAAK,SACLC,QAAQ,aACRC,QAjDU,WACpBC,EAAAA,EAAAA,OACU,MAAM,kBAAD,OAAoB5B,EAAM,iBAAiB,CACtD6B,OAAQ5B,EACR6B,OAAQxB,IAETyB,MAAK,SAACC,GACLlC,GACF,IACCmC,OAAM,SAACC,GACN/B,GAASgC,EAAAA,EAAAA,IAAqBD,IAC9BpC,GACF,GACJ,EAqCYuB,MAAO,kBAOrB,G","sources":["screens/Console/Buckets/BucketDetails/EditAccessRule.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IEditAccessRule {\n  classes: any;\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toEdit: string;\n  initial: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst EditAccessRule = ({\n  modalOpen,\n  onClose,\n  classes,\n  bucket,\n  toEdit,\n  initial,\n}: IEditAccessRule) => {\n  const dispatch = useAppDispatch();\n  const [selectedAccess, setSelectedAccess] = useState<any>(initial);\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setSelectedAccess(initial);\n  };\n\n  const createProcess = () => {\n    api\n      .invoke(\"PUT\", `/api/v1/bucket/${bucket}/access-rules`, {\n        prefix: toEdit,\n        access: selectedAccess,\n      })\n      .then((res: any) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        onClose();\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title={`Edit Access Rule for ${`${bucket}/${toEdit || \"\"}`}`}\n        onClose={onClose}\n        titleIcon={<AddAccessRuleIcon />}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.spacerTop}>\n            <SelectWrapper\n              id=\"access\"\n              name=\"Access\"\n              onChange={(e) => {\n                setSelectedAccess(e.target.value);\n              }}\n              label=\"Access\"\n              value={selectedAccess}\n              options={accessOptions}\n              disabled={false}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"clear\"}\n              type=\"button\"\n              variant=\"regular\"\n              onClick={resetForm}\n              label={\"Clear\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              onClick={createProcess}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditAccessRule);\n"],"names":["withStyles","theme","createStyles","modalStyleUtils","spacingUtils","modalOpen","onClose","classes","bucket","toEdit","initial","dispatch","useAppDispatch","useState","selectedAccess","setSelectedAccess","title","titleIcon","container","item","xs","className","spacerTop","id","name","onChange","e","target","value","label","options","disabled","modalButtonBar","type","variant","onClick","api","prefix","access","then","res","catch","err","setErrorSnackMessage"],"sourceRoot":""}