{"version":3,"file":"static/js/4061.31780923.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useLocation } from \"react-router-dom\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const theme = useTheme();\n  const { pathname = \"\" } = useLocation();\n\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [value, setValue] = useState(selectedTab);\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  useEffect(() => {\n    if (isRouteTabs) {\n      const tabConfigElement = children.find(\n        (item) => item.tabConfig.to === pathname\n      );\n\n      if (tabConfigElement) {\n        setValue(tabConfigElement.tabConfig.value);\n      }\n    }\n  }, [isRouteTabs, children, pathname]);\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n","import React, { useState } from \"react\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport Grid from \"@mui/material/Grid\";\nimport { AddMembersToGroupIcon, Button } from \"mds\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ntype UserPickerModalProps = {\n  classes?: any;\n  title?: string;\n  preSelectedUsers?: string[];\n  selectedGroup?: string;\n  open: boolean;\n  onClose: () => void;\n  onSaveClick: () => void;\n  groupStatus?: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddGroupMember = ({\n  classes,\n  title = \"\",\n  groupStatus = \"enabled\",\n  preSelectedUsers = [],\n  selectedGroup = \"\",\n  open,\n  onClose,\n}: UserPickerModalProps) => {\n  const dispatch = useAppDispatch();\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\n\n  function addMembersToGroup() {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(selectedGroup)}`, {\n        group: selectedGroup,\n        members: selectedUsers,\n        status: groupStatus,\n      })\n      .then((res) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        onClose();\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={onClose}\n      title={title}\n      titleIcon={<AddMembersToGroupIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.formFieldRow}>\n            <PredefinedList label={`Selected Group`} content={selectedGroup} />\n          </div>\n          <div className={classes.userSelector}>\n            <UsersSelectors\n              selectedUsers={selectedUsers}\n              setSelectedUsers={setSelectedUsers}\n              editMode={!selectedGroup}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          id={\"reset-add-group-member\"}\n          type=\"button\"\n          variant=\"regular\"\n          onClick={() => {\n            setSelectedUsers(preSelectedUsers);\n          }}\n          label={\"Reset\"}\n        />\n\n        <Button\n          id={\"save-add-group-member\"}\n          type=\"button\"\n          variant=\"callAction\"\n          onClick={() => {\n            addMembersToGroup();\n          }}\n          label={\"Save\"}\n        />\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddGroupMember);\n","import React, { Fragment } from \"react\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { BackLink } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst GroupDetailsHeader = () => {\n  const navigate = useNavigate();\n  return (\n    <PageHeaderWrapper\n      label={\n        <Fragment>\n          <BackLink\n            label={\"Groups\"}\n            onClick={() => navigate(IAM_PAGES.GROUPS)}\n          />\n        </Fragment>\n      }\n      actions={<React.Fragment />}\n    />\n  );\n};\n\nexport default GroupDetailsHeader;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AddIcon, Button, GroupsIcon, IAMPoliciesIcon, TrashIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../common/api\";\nimport SetPolicy from \"../Policies/SetPolicy\";\nimport AddGroupMember from \"./AddGroupMember\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  addUserToGroupPermissions,\n  CONSOLE_UI_RESOURCE,\n  createGroupPermissions,\n  editGroupMembersPermissions,\n  enableDisableGroupPermissions,\n  getGroupPermissions,\n  IAM_PAGES,\n  listUsersPermissions,\n  permissionTooltipHelper,\n  setGroupPoliciesPermissions,\n  viewPolicyPermissions,\n  viewUserPermissions,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\n\nimport { decodeURLString, encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n      width: \"100%\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".7rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".7rem\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 280,\n    },\n    ...tableStyles,\n    ...spacingUtils,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n\n      alignItems: \"center\",\n      \"& h1\": {\n        flex: 1,\n      },\n      \"& button\": {\n        marginLeft: \".8rem\",\n      },\n      \"@media (max-width: 900px)\": {\n        justifyContent: \"flex-end\",\n        \"& h1\": {\n          display: \"none\",\n        },\n        \"& button\": {\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n        },\n      },\n    },\n    ...containerForHeader,\n  });\n\ninterface IGroupDetailsProps {\n  classes: any;\n}\n\ntype GroupInfo = {\n  members?: any[];\n  name?: string;\n  policy?: string;\n  status?: string;\n};\n\nexport const formatPolicy = (policy: string = \"\"): string[] => {\n  if (policy.length <= 0) return [];\n  return policy.split(\",\");\n};\n\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\n\n  /*Modals*/\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\n\n  const groupName = decodeURLString(params.groupName || \"\");\n\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\n\n  const filteredMembers = members.filter((elementItem) =>\n    elementItem.includes(memberFilter)\n  );\n\n  const viewUser = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    viewUserPermissions,\n    true\n  );\n\n  useEffect(() => {\n    if (groupName) {\n      fetchGroupInfo();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupName]);\n\n  const groupPolicies = formatPolicy(policy);\n  const isGroupEnabled = groupEnabled === \"enabled\";\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\n\n  const getGroupDetails = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    getGroupPermissions\n  );\n\n  const canEditGroupMembers = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    editGroupMembersPermissions,\n    true\n  );\n\n  const canSetPolicies = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    setGroupPoliciesPermissions,\n    true\n  );\n\n  const canViewPolicy = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    viewPolicyPermissions,\n    true\n  );\n\n  function fetchGroupInfo() {\n    if (getGroupDetails) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(groupName)}`)\n        .then((res: any) => {\n          setGroupDetails(res);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setGroupDetails({});\n        });\n    }\n  }\n\n  function toggleGroupStatus(nextStatus: boolean) {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(groupName)}`, {\n        group: groupName,\n        members: members,\n        status: nextStatus ? \"enabled\" : \"disabled\",\n      })\n      .then((res) => {\n        fetchGroupInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  const groupsTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Members</PanelTitle>\n        <SearchBox\n          placeholder={\"Search members\"}\n          onChange={(searchText) => {\n            setMemberFilter(searchText);\n          }}\n          overrideClass={classes.searchField}\n          value={memberFilter}\n        />\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={addUserToGroupPermissions}\n          errorProps={{ disabled: true }}\n        >\n          <TooltipWrapper\n            tooltip={\n              canEditGroupMembers\n                ? memberActionText\n                : permissionTooltipHelper(\n                    createGroupPermissions,\n                    \"edit Group membership\"\n                  )\n            }\n          >\n            <Button\n              id={\"add-user-group\"}\n              label={memberActionText}\n              variant=\"callAction\"\n              icon={<AddIcon />}\n              onClick={() => {\n                setUsersOpen(true);\n              }}\n              disabled={!canEditGroupMembers}\n            />\n          </TooltipWrapper>\n        </SecureComponent>\n      </div>\n\n      <div className={classes.tableBlock}>\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={listUsersPermissions}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            itemActions={[\n              {\n                type: \"view\",\n                onClick: (userName) => {\n                  navigate(`${IAM_PAGES.USERS}/${encodeURLString(userName)}`);\n                },\n                disableButtonFunction: () => !viewUser,\n              },\n            ]}\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\n            selectedItems={[]}\n            isLoading={false}\n            records={filteredMembers}\n            entityName=\"Users\"\n            idField=\"\"\n            tooltip={\n              viewUser\n                ? \"\"\n                : permissionTooltipHelper(\n                    viewUserPermissions,\n                    \"view User details\"\n                  )\n            }\n          />\n        </SecureComponent>\n      </div>\n    </React.Fragment>\n  );\n\n  const policiesTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Policies</PanelTitle>\n        <TooltipWrapper\n          tooltip={\n            canSetPolicies\n              ? \"Set Policies\"\n              : permissionTooltipHelper(\n                  setGroupPoliciesPermissions,\n                  \"assign Policies\"\n                )\n          }\n        >\n          <Button\n            id={\"set-policies\"}\n            label={`Set Policies`}\n            variant=\"callAction\"\n            icon={<IAMPoliciesIcon />}\n            onClick={() => {\n              setPolicyOpen(true);\n            }}\n            disabled={!canSetPolicies}\n          />\n        </TooltipWrapper>\n      </div>\n      <div className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={[\n            {\n              type: \"view\",\n              onClick: (policy) => {\n                navigate(`${IAM_PAGES.POLICIES}/${encodeURLString(policy)}`);\n              },\n              disableButtonFunction: () => !canViewPolicy,\n            },\n          ]}\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\n          isLoading={false}\n          records={groupPolicies}\n          entityName=\"Policies\"\n          idField=\"\"\n          tooltip={\n            canViewPolicy\n              ? \"\"\n              : permissionTooltipHelper(\n                  viewPolicyPermissions,\n                  \"view Policy details\"\n                )\n          }\n        />\n      </div>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <GroupDetailsHeader />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <GroupsIcon width={40} />\n              </Fragment>\n            }\n            title={groupName}\n            subTitle={null}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>Group Status:</span>\n                <span id=\"group-status\" className={classes.statusValue}>\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <TooltipWrapper\n                  tooltip={\n                    hasPermission(\n                      CONSOLE_UI_RESOURCE,\n                      enableDisableGroupPermissions,\n                      true\n                    )\n                      ? \"\"\n                      : permissionTooltipHelper(\n                          enableDisableGroupPermissions,\n                          \"enable or disable Groups\"\n                        )\n                  }\n                >\n                  <SecureComponent\n                    resource={CONSOLE_UI_RESOURCE}\n                    scopes={enableDisableGroupPermissions}\n                    errorProps={{ disabled: true }}\n                    matchAll\n                  >\n                    <FormSwitchWrapper\n                      indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                      checked={isGroupEnabled}\n                      value={\"group_enabled\"}\n                      id=\"group-status\"\n                      name=\"group-status\"\n                      onChange={() => {\n                        toggleGroupStatus(!isGroupEnabled);\n                      }}\n                      switchOnly\n                    />\n                  </SecureComponent>\n                </TooltipWrapper>\n\n                <div className={classes.spacerLeft}>\n                  <TooltipWrapper tooltip={\"Delete Group\"}>\n                    <Button\n                      id={\"delete-user-group\"}\n                      variant=\"secondary\"\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setDeleteOpen(true);\n                      }}\n                    />\n                  </TooltipWrapper>\n                </div>\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: { label: \"Members\" },\n              content: groupsTabContent,\n            }}\n            {{\n              tabConfig: { label: \"Policies\" },\n              content: policiesTabContent,\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n      {/*Modals*/}\n      {policyOpen ? (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={[groupName]}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            fetchGroupInfo();\n            dispatch(setSelectedPolicies([]));\n          }}\n        />\n      ) : null}\n\n      {usersOpen ? (\n        <AddGroupMember\n          selectedGroup={groupName}\n          onSaveClick={() => {}}\n          title={memberActionText}\n          groupStatus={groupEnabled}\n          preSelectedUsers={members}\n          open={usersOpen}\n          onClose={() => {\n            setUsersOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={[groupName]}\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\n            setDeleteOpen(false);\n            if (isDelSuccess) {\n              navigate(IAM_PAGES.GROUPS);\n            }\n          }}\n        />\n      )}\n      {/*Modals*/}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(GroupsDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n}: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n        isLoading(false);\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(UsersSelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport { useSelector } from \"react-redux\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n}: ISelectPolicyProps) => {\n  const dispatch = useAppDispatch();\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    dispatch(setSelectedPolicies(elements));\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for a Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={classes.tableBlock}\n              style={{ paddingBottom: 16 }}\n            >\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={currentPolicies}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(PolicySelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\n\nimport { useSelector } from \"react-redux\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroups: string[] | null;\n  open: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \".9rem\",\n      \"& button\": {\n        marginLeft: 8,\n      },\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroups,\n  open,\n}: ISetPolicyProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n  const setPolicyAction = () => {\n    let users = null;\n    let groups = null;\n    if (selectedGroups !== null) {\n      groups = selectedGroups;\n    } else {\n      if (selectedUser !== null) {\n        users = [selectedUser.accessKey] || [\" \"];\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy-multi`, {\n        name: currentPolicies,\n        groups: groups,\n        users: users,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroups?.length === 1) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(selectedGroups[0])}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n          dispatch(setSelectedPolicies(groupPolicy.split(\",\")));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n    dispatch(setSelectedPolicies(actualPolicy));\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroups?.length === 1) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n      dispatch(setSelectedPolicies(userPolicy));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroups?.length, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid container>\n        {(selectedGroups?.length === 1 || selectedUser != null) && (\n          <Fragment>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={`Selected ${selectedGroups !== null ? \"Group\" : \"User\"}`}\n                content={selectedGroups !== null ? selectedGroups[0] : userName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={\"Current Policy\"}\n                content={actualPolicy.join(\", \")}\n              />\n            </Grid>\n          </Fragment>\n        )}\n        {selectedGroups && selectedGroups?.length > 1 && (\n          <PredefinedList\n            label={\"Selected Groups\"}\n            content={selectedGroups.join(\", \")}\n          />\n        )}\n        <Grid item xs={12}>\n          <div className={classes.tableBlock}>\n            <PolicySelectors selectedPolicy={selectedPolicy} />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          id={\"reset\"}\n          type=\"button\"\n          variant=\"regular\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n          label={\"Reset\"}\n        />\n        <Button\n          id={\"save\"}\n          type=\"button\"\n          variant=\"callAction\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n          label={\"Save\"}\n        />\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetPolicy);\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","predefinedList","content","multiLine","actionButton","Fragment","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","children","useStyles","makeStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","maxWidth","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","style","tabStripStyle","minHeight","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","useTheme","useLocation","pathname","isSmallScreen","useMediaQuery","breakpoints","down","useState","setValue","headerList","contentList","useEffect","tabConfigElement","find","tabConfig","to","forEach","child","push","event","newValue","orientation","variant","scrollButtons","tabList","map","index","tabHeader","focusRipple","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","group","confirmText","isOpen","titleIcon","isLoading","onConfirm","encodeURLString","onClose","confirmationContent","userSelector","modalStyleUtils","formFieldStyles","modalBasic","groupStatus","preSelectedUsers","selectedGroup","open","selectedUsers","setSelectedUsers","ModalWrapper","modalOpen","Grid","formFieldRow","PredefinedList","UsersSelectors","editMode","modalButtonBar","type","onClick","api","members","status","then","res","catch","setModalErrorSnackMessage","navigate","useNavigate","PageHeaderWrapper","IAM_PAGES","formatPolicy","policy","split","pageContainer","statusLabel","statusValue","searchField","tableStyles","spacingUtils","flex","whiteSpace","textOverflow","containerForHeader","params","useParams","groupDetails","setGroupDetails","policyOpen","setPolicyOpen","usersOpen","setUsersOpen","setDeleteOpen","memberFilter","setMemberFilter","groupName","decodeURLString","groupEnabled","filteredMembers","filter","elementItem","includes","viewUser","hasPermission","CONSOLE_UI_RESOURCE","viewUserPermissions","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","getGroupPermissions","canEditGroupMembers","editGroupMembersPermissions","canSetPolicies","setGroupPoliciesPermissions","canViewPolicy","viewPolicyPermissions","groupsTabContent","PanelTitle","SearchBox","placeholder","searchText","overrideClass","SecureComponent","resource","scopes","addUserToGroupPermissions","errorProps","TooltipWrapper","permissionTooltipHelper","createGroupPermissions","tableBlock","listUsersPermissions","TableWrapper","itemActions","userName","disableButtonFunction","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","PageLayout","ScreenTitle","enableDisableGroupPermissions","matchAll","FormSwitchWrapper","nextStatus","spacerLeft","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","setSelectedPolicies","onSaveClick","DeleteGroup","isDelSuccess","paper","overflow","searchBox","actionsTitle","alignSelf","minWidth","noFound","spacing","selectorsCommon","setRecords","loading","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","accessKey","adornmentPosition","onSelect","e","targetD","target","elements","element","customPaperHeight","multiSelectTable","fieldLabel","filterBox","selectedPolicy","currentPolicies","useSelector","state","createUser","selectedPolicies","fetchPolicies","policies","policySort","paddingBottom","buttonContainer","setLoading","actualPolicy","setActualPolicy","setSelectedPolicy","groupPolicy","userPolicy","join","spacerRight","groups"],"sourceRoot":""}