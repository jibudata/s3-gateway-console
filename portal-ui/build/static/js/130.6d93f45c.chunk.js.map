{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Buckets/BucketDetails/SetAccessPolicy.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","SelectStyled","spacing","input","borderColor","InputBase","fieldBasic","tooltipHelper","id","name","onChange","options","label","tooltip","value","disabled","Fragment","item","xs","fieldContainer","htmlFor","inputLabel","tooltipContainer","placement","map","option","modalStyleUtils","spacingUtils","bucketName","actualPolicy","closeModalAndRefresh","addLoading","setAddLoading","accessPolicy","setAccessPolicy","noValidate","autoComplete","onSubmit","e","preventDefault","api","invoke","access","then","res","catch","err","container","spacerTop","formFieldRow","target","modalButtonBar","variant"],"mappings":"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","file":"static/js/130.6d93f45c.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\ninterface ISetAccessPolicyProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  actualPolicy: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst SetAccessPolicy = ({\n  classes,\n  open,\n  bucketName,\n  actualPolicy,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: ISetAccessPolicyProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessPolicy, setAccessPolicy] = useState<string>(\"\");\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/set-policy`, {\n        access: accessPolicy,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    setAccessPolicy(actualPolicy);\n  }, [setAccessPolicy, actualPolicy]);\n\n  return (\n    <ModalWrapper\n      title=\"Change Access Policy\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            className={`${classes.spacerTop} ${classes.formFieldRow}`}\n          >\n            <SelectWrapper\n              value={accessPolicy}\n              label=\"Access Policy\"\n              id=\"select-access-policy\"\n              name=\"select-access-policy\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                setAccessPolicy(e.target.value as string);\n              }}\n              options={[\n                { value: \"PRIVATE\", label: \"Private\" },\n                { value: \"PUBLIC\", label: \"Public\" },\n              ]}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={addLoading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading}\n            >\n              Set\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SetAccessPolicy));\n"],"sourceRoot":""}