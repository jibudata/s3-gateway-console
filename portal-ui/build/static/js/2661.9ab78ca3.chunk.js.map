{"version":3,"file":"static/js/2661.9ab78ca3.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper.tsx","screens/Console/Buckets/BucketDetails/AddEvent.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInputProps,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (returnedValue: string) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst AutocompleteWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  const [internalValue, setInternalValue] = useState<selectorTypes>(options[0]);\n\n  const executeOnSelect = (_: any, selectedValue: any) => {\n    if (selectedValue) {\n      onChange(selectedValue.value);\n      setInternalValue(selectedValue);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Autocomplete\n            id={id}\n            options={options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option) => option.value === value}\n            disabled={disabled}\n            renderInput={(params) => <InputField {...params} name={name} />}\n            value={internalValue}\n            onChange={executeOnSelect}\n            autoHighlight\n          />\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AutocompleteWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { Button, EventSubscriptionIcon } from \"mds\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Table from \"@mui/material/Table\";\nimport { ArnList } from \"../types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AutocompleteWrapper from \"../../Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    arnField: {\n      \"& div div .MuiOutlinedInput-root\": {\n        padding: 0,\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddEventProps {\n  classes: any;\n  open: boolean;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst AddEvent = ({\n  classes,\n  open,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IAddEventProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [suffix, setSuffix] = useState<string>(\"\");\n  const [arn, setArn] = useState<string>(\"\");\n  const [selectedEvents, setSelectedEvents] = useState<string[]>([]);\n  const [arnList, setArnList] = useState<string[]>([]);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/events`, {\n        configuration: {\n          arn: arn,\n          events: selectedEvents,\n          prefix: prefix,\n          suffix: suffix,\n        },\n        ignoreExisting: true,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchArnList = useCallback(() => {\n    setAddLoading(true);\n    api\n      .invoke(\"GET\", `/api/v1/admin/arns`)\n      .then((res: ArnList) => {\n        let arns: string[] = [];\n        if (res.arns !== null) {\n          arns = res.arns;\n        }\n        setAddLoading(false);\n        setArnList(arns);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchArnList();\n  }, [fetchArnList]);\n\n  const events = [\n    { label: \"PUT - Object Uploaded\", value: \"put\" },\n    { label: \"GET - Object accessed\", value: \"get\" },\n    { label: \"DELETE - Object Deleted\", value: \"delete\" },\n  ];\n\n  const handleClick = (\n    event: React.MouseEvent<unknown> | ChangeEvent<unknown>,\n    name: string\n  ) => {\n    const selectedIndex = selectedEvents.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedEvents, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedEvents.slice(1));\n    } else if (selectedIndex === selectedEvents.length - 1) {\n      newSelected = newSelected.concat(selectedEvents.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedEvents.slice(0, selectedIndex),\n        selectedEvents.slice(selectedIndex + 1)\n      );\n    }\n    setSelectedEvents(newSelected);\n  };\n\n  const arnValues = arnList.map((arnConstant) => ({\n    label: arnConstant,\n    value: arnConstant,\n  }));\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Subscribe To Bucket Events\"\n      titleIcon={<EventSubscriptionIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.arnField} ${classes.formFieldRow}`}\n            >\n              <AutocompleteWrapper\n                onChange={(value: string) => {\n                  setArn(value);\n                }}\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                label={\"ARN\"}\n                value={arn}\n                options={arnValues}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"prefix-input\"\n                name=\"prefix-input\"\n                label=\"Prefix\"\n                value={prefix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"suffix-input\"\n                name=\"suffix-input\"\n                label=\"Suffix\"\n                value={suffix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSuffix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <Table size=\"medium\">\n                <TableHead className={classes.minTableHeader}>\n                  <TableRow>\n                    <TableCell>Select</TableCell>\n                    <TableCell>Event</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {events.map((row) => (\n                    <TableRow\n                      key={`group-${row.value}`}\n                      onClick={(event) => handleClick(event, row.value)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          value={row.value}\n                          color=\"primary\"\n                          inputProps={{\n                            \"aria-label\": \"secondary checkbox\",\n                          }}\n                          onChange={(event) => handleClick(event, row.value)}\n                          checked={selectedEvents.includes(row.value)}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.wrapCell}>\n                        {row.label}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel-add-event\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save-event\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={addLoading}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddEvent);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","id","name","onChange","options","label","tooltip","value","disabled","useState","internalValue","setInternalValue","Grid","item","xs","className","fieldContainer","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","FormControl","fullWidth","Autocomplete","getOptionLabel","option","isOptionEqualToValue","renderInput","params","_","selectedValue","autoHighlight","arnField","padding","formFieldStyles","modalStyleUtils","open","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","addLoading","setAddLoading","prefix","setPrefix","suffix","setSuffix","arn","setArn","selectedEvents","setSelectedEvents","arnList","setArnList","fetchArnList","useCallback","api","then","res","arns","catch","err","setModalErrorSnackMessage","useEffect","handleClick","event","selectedIndex","indexOf","newSelected","concat","slice","length","arnValues","map","arnConstant","ModalWrapper","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","configuration","events","ignoreExisting","container","formScrollable","formFieldRow","InputBoxWrapper","target","Table","size","TableHead","minTableHeader","TableRow","TableCell","TableBody","row","onClick","Checkbox","color","inputProps","checked","includes","wrapCell","modalButtonBar","type","variant","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","styles","root","display","tablelvl2","defaultComponent","React","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","children","as","clsx","role"],"sourceRoot":""}