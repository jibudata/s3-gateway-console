{"version":3,"file":"static/js/532.13bc2b5e.chunk.js","mappings":"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","sources":["screens/Console/Account/AddServiceAccountHelpBox.tsx","screens/Console/Account/AddServiceAccountScreen.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport {\n  HelpIconFilled,\n  IAMPoliciesIcon,\n  PasswordKeyIcon,\n  ServiceAccountIcon,\n} from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst AddServiceAccountHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about Access Keys</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<ServiceAccountIcon />}\n            description={`Create Access Keys`}\n          />\n          <Box sx={{ paddingTop: \"20px\" }}>\n            Access Keys inherit the policies explicitly attached to the parent\n            user, and the policies attached to each group in which the parent\n            user has membership.\n          </Box>\n        </Box>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<PasswordKeyIcon />}\n            description={`Assign Custom Credentials`}\n          />\n          <Box sx={{ paddingTop: \"10px\" }}>\n            Randomized access credentials are recommended, and provided by\n            default. You may use your own custom Access Key and Secret Key by\n            replacing the default values. After creation of any Access Key, you\n            will be given the opportunity to view and download the account\n            credentials.\n          </Box>\n          <Box sx={{ paddingTop: \"10px\" }}>\n            Access Keys support programmatic access by applications. You cannot\n            use a Access Key to log into the MinIO Console.\n          </Box>\n        </Box>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<IAMPoliciesIcon />}\n            description={`Assign Access Policies`}\n          />\n          <Box sx={{ paddingTop: \"10px\" }}>\n            You can specify an optional JSON-formatted IAM policy to further\n            restrict Access Key access to a subset of the actions and resources\n            explicitly allowed for the parent user. Additional access beyond\n            that of the parent user cannot be implemented through these\n            policies.\n          </Box>\n          <Box sx={{ paddingTop: \"10px\" }}>\n            You cannot modify the optional Access Key IAM policy after saving.\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      ></Box>\n    </Box>\n  );\n};\n\nexport default AddServiceAccountHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Button,\n  IAMPoliciesIcon,\n  PageLayout,\n  PasswordKeyIcon,\n  ServiceAccountCredentialsIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box } from \"@mui/material\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport AddServiceAccountHelpBox from \"./AddServiceAccountHelpBox\";\n\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../../src/common/types\";\nimport api from \"../../../../src/common/api\";\nimport CredentialsPrompt from \"../Common/CredentialsPrompt/CredentialsPrompt\";\n\nimport SectionTitle from \"../Common/SectionTitle\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\n\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { getRandomString } from \"../../../common/utils\";\n\ninterface IAddServiceAccountProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddServiceAccount = ({ classes }: IAddServiceAccountProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(getRandomString(20));\n  const [secretKey, setSecretKey] = useState<string>(getRandomString(40));\n  const [isRestrictedByPolicy, setIsRestrictedByPolicy] =\n    useState<boolean>(false);\n  const [newServiceAccount, setNewServiceAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [policyJSON, setPolicyJSON] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (addSending) {\n      api\n        .invoke(\"POST\", `/api/v1/service-account-credentials`, {\n          policy: policyJSON,\n          accessKey: accessKey,\n          secretKey: secretKey,\n        })\n        .then((res) => {\n          setAddSending(false);\n          setNewServiceAccount({\n            accessKey: res.accessKey || \"\",\n            secretKey: res.secretKey || \"\",\n            url: res.url || \"\",\n          });\n        })\n\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [addSending, setAddSending, dispatch, policyJSON, accessKey, secretKey]);\n\n  useEffect(() => {\n    if (isRestrictedByPolicy) {\n      api.invoke(\"GET\", `/api/v1/user/policy`).then((res: string) => {\n        setPolicyJSON(JSON.stringify(JSON.parse(res), null, 4));\n      });\n    }\n  }, [isRestrictedByPolicy]);\n\n  const addServiceAccount = (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddSending(true);\n  };\n\n  const resetForm = () => {\n    setPolicyJSON(\"\");\n    setNewServiceAccount(null);\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setShowPassword(false);\n  };\n\n  const closeCredentialsModal = () => {\n    setNewServiceAccount(null);\n    navigate(`${IAM_PAGES.ACCOUNT}`);\n  };\n\n  return (\n    <Fragment>\n      {newServiceAccount !== null && (\n        <CredentialsPrompt\n          newServiceAccount={newServiceAccount}\n          open={newServiceAccount !== null}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Access Key\"\n        />\n      )}\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              label={\"Access Keys\"}\n              onClick={() => navigate(IAM_PAGES.ACCOUNT)}\n            />\n          }\n        />\n        <PageLayout>\n          <Box\n            sx={{\n              display: \"grid\",\n              padding: \"25px\",\n              gap: \"25px\",\n              gridTemplateColumns: {\n                md: \"2fr 1.2fr\",\n                xs: \"1fr\",\n              },\n              border: \"1px solid #eaeaea\",\n            }}\n          >\n            <Box>\n              <SectionTitle icon={<ServiceAccountCredentialsIcon />}>\n                Create Access Key\n              </SectionTitle>\n\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  addServiceAccount(e);\n                }}\n              >\n                <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n                  <Grid item xs={12}>\n                    <Grid container item spacing=\"20\">\n                      <Grid item xs={12}>\n                        <Grid container>\n                          <Grid item xs={1}>\n                            <PasswordKeyIcon />\n                          </Grid>\n                          <Grid item>\n                            <Grid container item spacing=\"20\">\n                              <Grid item xs={12}>\n                                {\" \"}\n                                <div className={classes.stackedInputs}>\n                                  <InputBoxWrapper\n                                    value={accessKey}\n                                    label={\"Access Key\"}\n                                    id={\"accessKey\"}\n                                    name={\"accessKey\"}\n                                    placeholder={\"Enter Access Key\"}\n                                    onChange={(e) => {\n                                      setAccessKey(e.target.value);\n                                    }}\n                                  />\n                                </div>\n                              </Grid>\n                              <Grid item xs={12}>\n                                <div className={classes.stackedInputs}>\n                                  <InputBoxWrapper\n                                    value={secretKey}\n                                    label={\"Secret Key\"}\n                                    id={\"secretKey\"}\n                                    name={\"secretKey\"}\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder={\"Enter Secret Key\"}\n                                    onChange={(e) => {\n                                      setSecretKey(e.target.value);\n                                    }}\n                                    overlayIcon={\n                                      showPassword ? (\n                                        <VisibilityOffIcon />\n                                      ) : (\n                                        <RemoveRedEyeIcon />\n                                      )\n                                    }\n                                    overlayAction={() =>\n                                      setShowPassword(!showPassword)\n                                    }\n                                  />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container item spacing=\"20\">\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={1}>\n                          <IAMPoliciesIcon />\n                        </Grid>\n                        <Grid item xs={11}>\n                          <FormSwitchWrapper\n                            value=\"serviceAccountPolicy\"\n                            id=\"serviceAccountPolicy\"\n                            name=\"serviceAccountPolicy\"\n                            checked={isRestrictedByPolicy}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setIsRestrictedByPolicy(event.target.checked);\n                            }}\n                            label={\"Restrict beyond user policy\"}\n                            tooltip={\n                              \"You can specify an optional JSON-formatted IAM policy to further restrict Access Key access to a subset of the actions and resources explicitly allowed for the parent user. Additional access beyond that of the parent user cannot be implemented through these policies.\"\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {isRestrictedByPolicy && (\n                      <Grid\n                        item\n                        xs={12}\n                        className={classes.codeMirrorContainer}\n                      >\n                        <div>\n                          <PanelTitle>\n                            Current User Policy - edit the JSON to remove\n                            permissions for this Access Key\n                          </PanelTitle>\n                        </div>\n                        <Grid item xs={12} className={classes.formScrollable}>\n                          <CodeMirrorWrapper\n                            value={policyJSON}\n                            onBeforeChange={(editor, data, value) => {\n                              setPolicyJSON(value);\n                            }}\n                            editorHeight={\"350px\"}\n                          />\n                        </Grid>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs={12} className={classes.modalButtonBar}>\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n\n                    <Button\n                      id={\"create-sa\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      label={\"Create\"}\n                    />\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n            <AddServiceAccountHelpBox />\n          </Box>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddServiceAccount);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["FeatureItem","_ref","icon","description","_jsxs","Box","sx","display","marginRight","height","width","marginBottom","children","_jsx","style","fontSize","fontStyle","color","flex","border","borderRadius","flexFlow","padding","marginTop","xs","fontWeight","alignItems","paddingBottom","HelpIconFilled","ServiceAccountIcon","paddingTop","PasswordKeyIcon","IAMPoliciesIcon","withStyles","theme","createStyles","_objectSpread","formFieldStyles","modalStyleUtils","classes","dispatch","useAppDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","addSending","setAddSending","_useState3","getRandomString","_useState4","accessKey","setAccessKey","_useState5","_useState6","secretKey","setSecretKey","_useState7","_useState8","isRestrictedByPolicy","setIsRestrictedByPolicy","_useState9","_useState10","newServiceAccount","setNewServiceAccount","_useState11","_useState12","showPassword","setShowPassword","_useState13","_useState14","policyJSON","setPolicyJSON","useEffect","api","policy","then","res","url","catch","err","setErrorSnackMessage","JSON","stringify","parse","Fragment","CredentialsPrompt","open","closeModal","concat","IAM_PAGES","entity","Grid","item","PageHeaderWrapper","label","BackLink","onClick","PageLayout","gap","gridTemplateColumns","md","SectionTitle","ServiceAccountCredentialsIcon","noValidate","autoComplete","onSubmit","e","preventDefault","addServiceAccount","container","spacing","className","stackedInputs","InputBoxWrapper","value","id","name","placeholder","onChange","target","type","overlayIcon","VisibilityOffIcon","RemoveRedEyeIcon","overlayAction","FormSwitchWrapper","checked","event","tooltip","codeMirrorContainer","PanelTitle","formScrollable","CodeMirrorWrapper","onBeforeChange","editor","data","editorHeight","modalButtonBar","Button","variant","AddServiceAccountHelpBox","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","right","top","maxWidth","maxHeight","_ref$type","_ref$autoComplete","_ref$disabled","disabled","_ref$multiline","multiline","_ref$tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","min","max","overlayId","_ref$overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","React","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","fullWidth","helperText","inputRebase","IconButton","size","disableFocusRipple","disableRipple","disableTouchRipple","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","edge","marginLeft","SwitchBaseInput","cursor","opacity","left","margin","zIndex","ref","checkedProp","checkedIcon","defaultChecked","disabledProp","_props$disableFocusRi","_props$edge","inputRef","onBlur","readOnly","_props$required","tabIndex","other","_objectWithoutPropertiesLoose","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","useFormControl","hasLabelFor","slots","root","capitalize","input","composeClasses","useUtilityClasses","component","centerRipple","focusRipple","role","undefined","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}