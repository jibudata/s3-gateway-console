{"version":3,"file":"static/js/8833.44af2aa8.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { HelpBox, Box, Grid, breakPoints } from \"mds\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                [`@media (max-width: ${breakPoints.sm}px)`]: {\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                },\n              }}\n            >\n              <span>\n                This feature is not available for a single-disk setup.&nbsp;\n              </span>\n              <span>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </span>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  FormLayout,\n  HelpBox,\n  InputBox,\n  InspectMenuIcon,\n  PageLayout,\n  PasswordKeyIcon,\n  Switch,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteCookie,\n  encodeURLString,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport {\n  selDistSet,\n  setErrorSnackMessage,\n  setHelpName,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { registeredCluster } from \"../../../config\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport KeyRevealer from \"./KeyRevealer\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst ExampleBlock = ({\n  volumeVal,\n  pathVal,\n}: {\n  volumeVal: string;\n  pathVal: string;\n}) => {\n  return (\n    <Box className=\"code-block-container\">\n      <Box className=\"example-code-block\">\n        <Box\n          sx={{\n            display: \"flex\",\n            marginBottom: \"5px\",\n            flexFlow: \"row\",\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              flexFlow: \"column\",\n            },\n          }}\n        >\n          <label>Volume/bucket Name :</label> <code>{volumeVal}</code>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"row\",\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              flexFlow: \"column\",\n            },\n          }}\n        >\n          <label>Path : </label>\n          <code>{pathVal}</code>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst Inspect = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const distributedSetup = useSelector(selDistSet);\n\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n  const clusterRegistered = registeredCluster();\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    const file = encodeURLString(inspectPath);\n    const volume = encodeURLString(volumeName);\n\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: resErr.message,\n              detailedError: resErr.code,\n            }),\n          );\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"inspect\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Inspect\"} actions={<HelpMenu />} />\n\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <FormLayout\n            helpBox={\n              <HelpBox\n                title={\"Learn more about the Inspect feature\"}\n                iconComponent={<InspectMenuIcon />}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"16px\",\n                        fontWeight: 600,\n                        fontStyle: \"italic\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      Examples:\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        fontSize: \"14px\",\n                        flex: \"2\",\n\n                        \"& .step-row\": {\n                          fontSize: \"14px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n\n                          \"&.step-text\": {\n                            fontWeight: 400,\n                          },\n                          \"&:before\": {\n                            content: \"' '\",\n                            height: \"7px\",\n                            width: \"7px\",\n                            backgroundColor: \"#2781B0\",\n                            marginRight: \"10px\",\n                            marginTop: \"7px\",\n                            flexShrink: 0,\n                          },\n                        },\n\n                        \"& .code-block-container\": {\n                          flex: \"1\",\n                          marginTop: \"15px\",\n                          marginLeft: \"35px\",\n\n                          \"& input\": {\n                            color: \"#737373\",\n                          },\n                        },\n\n                        \"& .example-code-block label\": {\n                          display: \"inline-block\",\n                          width: 160,\n                          fontWeight: 600,\n                          fontSize: 14,\n                          [`@media (max-width: ${breakPoints.sm}px)`]: {\n                            width: \"100%\",\n                          },\n                        },\n\n                        \"& code\": {\n                          width: 100,\n                          paddingLeft: \"10px\",\n                          fontFamily: \"monospace\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"3px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          border: \"1px solid #eaeaea\",\n                          fontSize: \"10px\",\n                          fontWeight: 500,\n                          [`@media (max-width: ${breakPoints.sm}px)`]: {\n                            width: \"100%\",\n                          },\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test-bucket`}\n                        />\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test*/*/part.*`}\n                        />\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test/**`}\n                        />\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                        marginLeft: \"15px\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            }\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                if (!clusterRegistered) {\n                  navigate(\"/support/register\");\n                  return;\n                }\n                performInspect();\n              }}\n            >\n              <InputBox\n                id=\"inspect_volume\"\n                name=\"inspect_volume\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setVolumeName(e.target.value);\n                }}\n                label=\"Volume or Bucket Name\"\n                value={volumeName}\n                error={volumeError}\n                required\n                placeholder={\"test-bucket\"}\n                disabled={!clusterRegistered}\n              />\n              <InputBox\n                id=\"inspect_path\"\n                name=\"inspect_path\"\n                error={pathError}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setInspectPath(e.target.value);\n                }}\n                label=\"File or Path to inspect\"\n                value={inspectPath}\n                required\n                placeholder={\"test*/xl.meta\"}\n                disabled={!clusterRegistered}\n              />\n              <Switch\n                label=\"Encrypt\"\n                indicatorLabels={[\"True\", \"False\"]}\n                checked={isEncrypt}\n                value={\"true\"}\n                id=\"inspect_encrypt\"\n                name=\"inspect_encrypt\"\n                onChange={() => {\n                  setIsEncrypt(!isEncrypt);\n                }}\n                disabled={!clusterRegistered}\n              />\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"55px\",\n                }}\n              >\n                <Button\n                  id={\"inspect-clear-button\"}\n                  style={{\n                    marginRight: \"15px\",\n                  }}\n                  type=\"button\"\n                  variant=\"regular\"\n                  data-test-id=\"inspect-clear-button\"\n                  onClick={resetForm}\n                  label={\"Clear\"}\n                  disabled={!clusterRegistered}\n                />\n                <Button\n                  id={\"inspect-start\"}\n                  type=\"submit\"\n                  variant={!clusterRegistered ? \"regular\" : \"callAction\"}\n                  data-test-id=\"inspect-submit-button\"\n                  disabled={!isFormValid || !clusterRegistered}\n                  label={\"Inspect\"}\n                />\n              </Box>\n            </form>\n          </FormLayout>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <Fragment>\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <form\n                noValidate\n                onSubmit={() => {\n                  return false;\n                }}\n              >\n                <KeyRevealer value={decryptionKey} />\n              </form>\n            </Fragment>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Inspect;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button, CopyIcon } from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = useState<boolean>(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n      }}\n    >\n      <InputBoxWrapper\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        extraInputProps={{\n          readOnly: true,\n        }}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        id={\"show-hide-key\"}\n        style={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"callAction\"\n        onClick={() => setShown(!shown)}\n        label={\"Show/Hide\"}\n      />\n    </Box>\n  );\n};\n\nexport default KeyRevealer;\n"],"names":["_ref","iconComponent","entity","_jsx","Grid","container","children","item","xs","HelpBox","title","concat","help","_jsxs","Box","sx","_defineProperty","fontSize","breakPoints","sm","display","flexFlow","href","target","rel","inputStyles","makeStyles","theme","createStyles","_objectSpread","inputFieldStyles","InputField","props","classes","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","_ref$type","type","_ref$autoComplete","autoComplete","_ref$disabled","disabled","_ref$multiline","multiline","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","className","onKeyPress","onFocus","onPaste","inputProps","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","React","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","fullWidth","helperText","inputRebase","IconButton","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","ExampleBlock","volumeVal","pathVal","marginBottom","dispatch","useAppDispatch","navigate","useNavigate","distributedSetup","useSelector","selDistSet","volumeName","setVolumeName","_useState3","_useState4","inspectPath","setInspectPath","_useState5","_useState6","isEncrypt","setIsEncrypt","_useState7","_useState8","decryptionKey","setDecryptionKey","_useState9","_useState10","insFileName","setInsFileName","_useState11","_useState12","isFormValid","setIsFormValid","_useState13","_useState14","volumeError","setVolumeError","_useState15","_useState16","pathError","setPathError","clusterRegistered","registeredCluster","useEffect","isVolValid","isPathValid","trim","length","slice","isValid","makeRequest","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","wrap","_context","prev","next","fetch","method","abrupt","sent","stop","_x","apply","arguments","performInspect","_ref5","_callee3","file","volume","urlOfInspectApi","_context3","encodeURLString","then","_ref6","_callee2","res","resErr","blob","filename","decryptKey","_context2","ok","json","setErrorSnackMessage","errorMessage","message","detailedError","code","headers","get","split","getCookieValue","performDownload","_x2","catch","err","resetForm","setHelpName","Fragment","PageHeaderWrapper","actions","HelpMenu","PageLayout","RegisterCluster","compactMode","FormLayout","helpBox","InspectMenuIcon","marginTop","fontWeight","fontStyle","flex","content","height","width","backgroundColor","marginRight","flexShrink","marginLeft","color","paddingLeft","fontFamily","paddingRight","paddingTop","paddingBottom","borderRadius","border","noValidate","onSubmit","e","preventDefault","InputBox","Switch","indicatorLabels","checked","alignItems","justifyContent","Button","style","variant","DistributedOnly","ModalWrapper","modalOpen","onClose","deleteCookie","titleIcon","PasswordKeyIcon","KeyRevealer","shown","setShown","InputBoxWrapper","CopyIcon","readOnly","navigator","clipboard","writeText"],"sourceRoot":""}