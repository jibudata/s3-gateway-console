{"version":3,"file":"static/js/8060.72b9138c.chunk.js","mappings":"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","sources":["screens/Console/Account/NotificationEndpointTypeSelectorHelpBox.tsx","screens/Console/EventDestinations/DestinationButton.tsx","screens/Console/EventDestinations/EventTypeSelector.tsx","screens/Console/EventDestinations/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\n\nimport { HelpBox, LambdaNotificationsIcon, Box } from \"mds\";\n\nconst NotificationEndpointTypeSelectorHelpBox = () => {\n  return (\n    <HelpBox\n      iconComponent={<LambdaNotificationsIcon />}\n      title={\"What are Event Destinations?\"}\n      help={\n        <Box sx={{ paddingTop: \"20px\" }}>\n          MinIO bucket notifications allow administrators to send notifications\n          to supported external services on certain object or bucket events.\n          MinIO supports bucket and object-level S3 events similar to the Amazon\n          S3 Event Notifications.\n        </Box>\n      }\n    />\n  );\n};\n\nexport default NotificationEndpointTypeSelectorHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface IDestinationButton {\n  destinationType: string;\n  srcImage: string;\n  title: string;\n}\n\nconst DestinationButtonBase = styled.button(({ theme }) => ({\n  background: get(theme, \"boxBackground\", \"#FFF\"),\n  border: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n  borderRadius: 5,\n  width: 250,\n  height: 80,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  marginBottom: 16,\n  marginRight: 8,\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  \"&:hover\": {\n    backgroundColor: get(theme, \"buttons.regular.hover.background\", \"#ebebeb\"),\n  },\n  \"& .imageContainer\": {\n    width: 80,\n    \"& .logoButton\": {\n      maxWidth: 46,\n      maxHeight: 46,\n      filter: \"drop-shadow(1px 1px 8px #fff)\",\n    },\n  },\n  \"& .lambdaNotifTitle\": {\n    color: get(theme, \"buttons.callAction.enabled.background\", \"#07193E\"),\n    fontSize: 16,\n    fontFamily: \"Inter,sans-serif\",\n    paddingLeft: 18,\n    fontWeight: \"bold\",\n  },\n}));\n\nconst DestinationButton = ({\n  destinationType,\n  srcImage,\n  title,\n}: IDestinationButton) => {\n  const navigate = useNavigate();\n\n  return (\n    <DestinationButtonBase\n      onClick={() => {\n        navigate(`${IAM_PAGES.EVENT_DESTINATIONS_ADD}/${destinationType}`);\n      }}\n    >\n      <span className={\"imageContainer\"}>\n        <img src={srcImage} className={\"logoButton\"} alt={title} />\n      </span>\n      <span className={\"lambdaNotifTitle\"}>{title}</span>\n    </DestinationButtonBase>\n  );\n};\n\nexport default DestinationButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BackLink, Box, FormLayout, PageLayout } from \"mds\";\nimport { destinationList, DestType } from \"./utils\";\nimport { typesSelection } from \"../Common/FormComponents/common/styleLibrary\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport NotificationEndpointTypeSelectorHelpBox from \"../Account/NotificationEndpointTypeSelectorHelpBox\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport DestinationButton from \"./DestinationButton\";\n\nconst withLogos = destinationList.filter((elService) => elService.logo !== \"\");\nconst database = withLogos.filter(\n  (elService) => elService.category === DestType.DB\n);\nconst queue = withLogos.filter(\n  (elService) => elService.category === DestType.Queue\n);\nconst functions = withLogos.filter(\n  (elService) => elService.category === DestType.Func\n);\n\nconst EventTypeSelector = () => {\n  const navigate = useNavigate();\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label={\"Event Destinations\"}\n              onClick={() => navigate(IAM_PAGES.EVENT_DESTINATIONS)}\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n      <PageLayout>\n        <FormLayout helpBox={<NotificationEndpointTypeSelectorHelpBox />}>\n          <Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Queue\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {queue.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Database\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {database.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n            <Box sx={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n              Functions\n            </Box>\n            <Box sx={{ ...typesSelection.iconContainer }}>\n              {functions.map((item) => {\n                return (\n                  <DestinationButton\n                    destinationType={item.actionTrigger}\n                    srcImage={item.logo}\n                    title={item.targetTitle}\n                    key={`icon-${item.targetTitle}`}\n                  />\n                );\n              })}\n            </Box>\n          </Box>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default EventTypeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport class DestType {\n  static DB: string = \"database\";\n  static Queue: string = \"queue\";\n  static Func: string = \"functions\";\n}\n\nexport const destinationList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n    category: DestType.Func,\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n    category: DestType.Queue,\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["_jsx","HelpBox","iconComponent","LambdaNotificationsIcon","title","help","Box","sx","paddingTop","children","DestinationButtonBase","styled","_ref","theme","background","get","border","concat","borderRadius","width","height","display","alignItems","justifyContent","marginBottom","marginRight","cursor","overflow","backgroundColor","maxWidth","maxHeight","filter","color","fontSize","fontFamily","paddingLeft","fontWeight","_ref2","destinationType","srcImage","navigate","useNavigate","_jsxs","onClick","IAM_PAGES","className","src","alt","withLogos","destinationList","elService","logo","database","category","DestType","queue","functions","Fragment","PageHeaderWrapper","label","BackLink","actions","React","PageLayout","FormLayout","helpBox","NotificationEndpointTypeSelectorHelpBox","paddingBottom","_objectSpread","typesSelection","map","item","DestinationButton","actionTrigger","targetTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","name","status","_createClass","_classCallCheck","DB","Queue","Func","commonFields","required","tooltip","type","placeholder","removeEmptyFields","formFields","field","value","notificationEndpointsFields","_notificationEndpoint","_defineProperty","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}