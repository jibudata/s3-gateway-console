{"version":3,"file":"static/js/1432.1b192c18.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/ConfTargetGeneric.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  WebhookIcon,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api.configs\n      .setConfig(type, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <InputBox\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n          <InputBox\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n          <InputBox\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </FormLayout>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <ProgressBar />\n          </Grid>\n        )}\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api.configs\n        .resetConfig(selectedARN)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Button,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PendingItemsIcon,\n  ProgressBar,\n  ReadBox,\n  Switch,\n  Tooltip,\n  WebhookIcon,\n} from \"mds\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport { overrideFields } from \"../../Configurations/utils\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\",\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\",\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\",\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(name, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override,\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <WebhookIcon />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <ConsoleIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingItemsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <FormLayout withBorders={false} containerPadding={false}>\n          {hasOverride.length > 0 ? (\n            <Fragment>\n              <ReadBox\n                label={\"Enabled\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.enable?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.enable?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Endpoint\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.endpoint?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.endpoint?.value || \"-\"}\n              </ReadBox>\n              <ReadBox\n                label={\"Auth Token\"}\n                sx={{ width: \"100%\" }}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${\n                              overrideValues.auth_token?.overrideEnv || \"N/A\"\n                            } environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              >\n                {overrideValues.auth_token?.value || \"-\"}\n              </ReadBox>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Switch\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n              <InputBox\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n              <InputBox\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n              {saving && (\n                <Grid\n                  item\n                  xs={12}\n                  sx={{\n                    marginBottom: 10,\n                  }}\n                >\n                  <ProgressBar />\n                </Grid>\n              )}\n              <Grid item sx={modalStyleUtils.modalButtonBar}>\n                <Button\n                  id={\"reset\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  disabled={saving}\n                  onClick={onCloseEndpoint}\n                  label={\"Cancel\"}\n                />\n                <Button\n                  id={\"save-lifecycle\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={saving || invalidInputs.length !== 0}\n                  label={\"Update\"}\n                  onClick={updateWebhook}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </FormLayout>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\nimport { Configuration } from \"api/consoleApi\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: Configuration[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item,\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values?.filter(\n            (itm) => !!itm.env_override,\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride && hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Box, Button, Grid, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { Configuration, ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<Configuration[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations,\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api.configs\n          .configInfo(configId)\n          .then((res) => {\n            setConfigSubsysList(res.data);\n            let values: ConfigurationKV[] = get(res.data[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals: IElementValue[] = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: ConfigurationKV) => element.key === field.name,\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n                env_override: includedValue?.env_override,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api.configs\n        .setConfig(selectedConfiguration.configuration_id, payload)\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.data.restart || false));\n          dispatch(configurationIsLoading(true));\n          if (!res.data.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj],\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(\n              `settings_${selectedConfiguration.configuration_label}`,\n            ),\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr\",\n                      gap: \"10px\",\n                    }}\n                  >\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      type={\"button\"}\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName,\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\",\n        )}.conf`,\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart,\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined,\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  HelpBox,\n  PageLayout,\n  ScreenTitle,\n  SettingsIcon,\n  Tabs,\n} from \"mds\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\n\nimport HelpMenu from \"../../HelpMenu\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"../../../../api\";\nimport { IElement } from \"../types\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\n// region is not part of config subsystem list.\nconst NON_SUB_SYS_CONFIG_ITEMS = [\"region\"];\nconst IGNORED_CONFIG_SUB_SYS = [\"cache\"]; // cache config is not supported.\n\nconst ConfigurationOptions = () => {\n  const { pathname = \"\" } = useLocation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [configSubSysList, setConfigSubSysList] = useState<string[]>([]);\n  const fetchConfigSubSysList = useCallback(async () => {\n    api.configs\n      .listConfig() // get a list of available config subsystems.\n      .then((res) => {\n        if (res && res?.data && res?.data?.configurations) {\n          const confSubSysList = (res?.data?.configurations || []).reduce(\n            (acc: string[], { key = \"\" }) => {\n              if (!IGNORED_CONFIG_SUB_SYS.includes(key)) {\n                acc.push(key);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          setConfigSubSysList(confSubSysList);\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchConfigSubSysList();\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const availableConfigSubSys = configurationElements.filter(\n    ({ configuration_id }: IElement) => {\n      return (\n        NON_SUB_SYS_CONFIG_ITEMS.includes(configuration_id) ||\n        configSubSysList.includes(configuration_id) ||\n        !configSubSysList.length\n      );\n    },\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Settings\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12} id={\"settings-container\"}>\n          <ScreenTitle\n            icon={<SettingsIcon />}\n            title={\"MinIO Configuration:\"}\n            actions={\n              <Box\n                sx={{\n                  display: \"flex\",\n                  gap: 10,\n                }}\n              >\n                <ImportConfigButton />\n                <ExportConfigButton />\n              </Box>\n            }\n            sx={{ marginBottom: 15 }}\n          />\n          <Tabs\n            currentTabOrPath={pathname}\n            onTabClick={(path) => {\n              navigate(path);\n            }}\n            useRouteTabs\n            options={availableConfigSubSys.map((element) => {\n              const { configuration_id, configuration_label, icon } = element;\n              return {\n                tabConfig: {\n                  id: `settings-tab-${configuration_label}`,\n                  label: configuration_label,\n                  value: configuration_id,\n                  icon: icon,\n                  to: getRoutePath(configuration_id),\n                },\n              };\n            })}\n            routes={\n              <Routes>\n                {availableConfigSubSys.map((element) => (\n                  <Route\n                    key={`configItem-${element.configuration_label}`}\n                    path={`${element.configuration_id}`}\n                    element={<ConfigurationForm />}\n                  />\n                ))}\n                <Route\n                  path={\"/\"}\n                  element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                />\n              </Routes>\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ConfigurationOptions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport {\n  CodeIcon,\n  CompressIcon,\n  ConsoleIcon,\n  FindReplaceIcon,\n  FirstAidIcon,\n  KeyIcon,\n  LogsIcon,\n  PendingItemsIcon,\n  PublicIcon,\n} from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <FirstAidIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <KeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <ConsoleIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingItemsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: <LogsIcon />,\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[],\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value || \"\",\n        overrideEnv: envItem.env_override.name || \"\",\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  CommentBox,\n  ConsoleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  ReadBox,\n  Switch,\n  Tooltip,\n} from \"mds\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n}\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[],\n) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <ReadBox\n            label={field.label}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n            sx={{ width: \"100%\" }}\n          >\n            {override.value}\n          </ReadBox>\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e) => setValueElement(field.name, e.target.value, item)}\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <FormLayout withBorders={false} containerPadding={false}>\n      {fieldsElements.map((field, item) => (\n        <Fragment key={field.name}>{fieldDefinition(field, item)}</Fragment>\n      ))}\n    </FormLayout>\n  );\n};\n\nexport default ConfTargetGeneric;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nimport { ConfirmDeleteIcon, ProgressBar } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <ProgressBar />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n"],"names":["_ref","elements","name","label","_ref$tooltip","tooltip","_ref$commonPlaceholde","commonPlaceholder","onChange","_ref$withBorder","withBorder","_useState","useState","_useState2","_slicedToArray","currentElements","setCurrentElements","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","element","trim","join","onChangeElement","e","persist","updatedElement","_toConsumableArray","index","get","target","parseInt","value","inputs","map","_jsx","InputBox","id","concat","toString","placeholder","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Fragment","children","_jsxs","Box","sx","display","className","InputLabel","alignItems","marginLeft","width","Tooltip","placement","HelpIcon","withBorders","overflowY","height","position","ref","open","type","onCloseEndpoint","setName","_useState3","_useState4","endpoint","setEndpoint","_useState5","_useState6","authToken","setAuthToken","_useState7","_useState8","saving","setSaving","_useState9","_useState10","invalidInputs","setInvalidInput","_useState11","_useState12","initialInputs","setInitialInputs","dispatch","useAppDispatch","initializeInput","item","validateInput","valid","includes","title","icon","WebhookIcon","ConsoleIcon","PendingItemsIcon","ModalWrapper","modalOpen","onClose","titleIcon","FormLayout","containerPadding","event","validity","error","pattern","required","Grid","xs","marginBottom","ProgressBar","modalStyleUtils","modalButtonBar","Button","variant","disabled","onClick","marginRight","color","payload","key_values","key","arn_resource_id","api","configs","setConfig","then","res","setServerNeedsRestart","data","restart","setSnackBarMessage","configurationIsLoading","catch","err","setErrorSnackMessage","errorToHandler","selectedARN","deleteLoading","setDeleteLoading","resetConfig","defaultWH","message","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","ConfirmDeleteIcon","confirmationContent","_overrideValues$enabl","_overrideValues$enabl2","_overrideValues$endpo","_overrideValues$endpo2","_overrideValues$auth_","_overrideValues$auth_2","endpointInfo","endpointState","setEndpointState","endpointLocate","find","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","ReadBox","actionButton","justifyContent","paddingRight","overrideEnv","style","auth_token","Switch","checked","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","actions","disableButtonFunction","wHook","_wHook$key_values","container","AddEndpointModal","DeleteWebhookEndpoint","EditWebhookEndpoint","padding","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","flexDirection","justifyItems","fontSize","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","selectedConfiguration","_ref$className","navigate","useNavigate","_useLocation$pathname","useLocation","pathname","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","configInfo","values","keyVals","fieldsConfigurations","field","includedValue","customValue","customValueProcess","removeEmptyFields","configuration_id","onValueChange","newValue","resetConfigurationMOpen","onMouseMove","setHelpName","configuration_label","ResetConfigurationModal","configurationName","closeResetModalAndRefresh","resetOpen","textAlign","paddingTop","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","flexFlow","gridTemplateColumns","gap","ConfTargetGeneric","fields","defaultVals","maxHeight","configName","validActiveConfig","configurationElements","containerClassName","minWidth","EditConfiguration","useDispatch","_useApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","_useApi2","isReqLoading","invokeApi","TooltipWrapper","UploadIcon","needsRestart","serverNeedsRestart","undefined","refreshPage","setRefreshPage","fileUpload","files","fileToUpload","formData","FormData","blobFile","append","click","DownloadIcon","NON_SUB_SYS_CONFIG_ITEMS","IGNORED_CONFIG_SUB_SYS","configSubSysList","setConfigSubSysList","fetchConfigSubSysList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","listConfig","_res$data","configurations","_res$data2","confSubSysList","reduce","acc","_ref2","_ref2$key","stop","availableConfigSubSys","_ref3","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","ImportConfigButton","ExportConfigButton","Tabs","currentTabOrPath","onTabClick","path","useRouteTabs","options","tabConfig","to","IAM_PAGES","SETTINGS","routes","Routes","Route","ConfigurationForm","Navigate","HelpBox","iconComponent","help","href","rel","PublicIcon","CompressIcon","CodeIcon","FirstAidIcon","FindReplaceIcon","KeyIcon","LogsIcon","region","compression","heal","scanner","etcd","multiline","logger_webhook","audit_webhook","audit_kafka","origValue","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","overrideReturn","forEach","envItem","_objectSpread","_defineProperty","valueDef","defaults","defValue","storedConfig","valueHolder","setValueHolder","fieldsElements","defValList","setValueElement","valuesDup","fieldDefinition","holderItem","override","CSVMultiSelector","valCh","Array","isArray","CommentBox","resetLoading","setResetLoading","maxWidth","whiteSpace","wordWrap"],"sourceRoot":""}