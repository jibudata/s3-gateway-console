{"version":3,"sources":["screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","common/HelpBox.tsx","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/Group.js","screens/Console/Common/BoxButton/BoxButton.tsx","screens/Console/DirectCSI/DirectCSIDrives.tsx","screens/Console/DirectCSI/actions.ts"],"names":["unSelected","selected","CloudIcon","active","xmlns","width","height","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","withStyles","createStyles","spacing","margin","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","sendOnlyId","disabled","classes","label","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","size","className","e","stopPropagation","preventDefault","Tooltip","title","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","paper","display","overflow","flexDirection","padding","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","color","defaultPaperHeight","loadingBox","paddingTop","paddingBottom","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","fontSize","borderBottom","checkAllWrapper","marginTop","transitionDuration","outline","userSelect","fontWeight","fontStyle","alignItems","borderColor","textTransform","textAlign","left","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","item","xs","Paper","container","style","LinearProgress","Popover","id","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","checked","onChange","target","name","value","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","inputProps","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","theme","fieldBasic","tooltipHelper","fieldContainer","justifyContent","marginBottom","flexBasis","tooltip","Fragment","htmlFor","noMinWidthLabel","tooltipContainer","placement","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","root","paddingLeft","paddingRight","leftItems","marginRight","helpText","iconComponent","help","getFormHelperTextUtilityClasses","slot","generateUtilityClass","formHelperTextClasses","generateUtilityClasses","_excluded","FormHelperTextRoot","styled","overridesResolver","props","styles","ownerState","capitalize","contained","filled","_extends","palette","text","secondary","typography","caption","marginLeft","error","main","FormHelperText","inProps","useThemeProps","children","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","dangerouslySetInnerHTML","__html","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","TextField","autoComplete","autoFocus","defaultValue","FormHelperTextProps","fullWidth","helperText","idOverride","InputLabelProps","InputProps","inputRef","maxRows","minRows","multiline","onBlur","onFocus","placeholder","rows","select","SelectProps","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","useId","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","Select","labelId","input","borderWidth","borderStyle","primary","background","dark","light","rest","button","getInputAdornmentUtilityClass","inputAdornmentClasses","InputAdornmentRoot","disablePointerEvents","whiteSpace","positionStart","hiddenLabel","pointerEvents","InputAdornment","disableTypography","variantProp","FormControlContext","Provider","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","BoxButton","altRest","Box","sx","sm","md","Button","endIcon","BoxIconButton","FormatDrives","withSuspense","lazy","FormatErrorsResult","mapDispatchToProps","setErrorSnackMessage","selectDrive","driveName","DIRECT_CSI_SELECT_DRIVE","connector","connect","tableWrapper","linkItem","info","textDecoration","actionsTray","searchField","containerForHeader","setRecords","setFilter","checkedDrives","setCheckedDrives","loading","setLoading","formatOpen","setFormatOpen","formatAll","setFormatAll","formatErrorsResult","setFormatErrorsResult","formatErrorsOpen","setFormatErrorsOpen","drivesToFormat","setDrivesToFormat","notAvailable","setNotAvailable","useEffect","api","invoke","then","res","drives","newItem","joinName","node","drive","d1","d2","catch","err","tableActions","driveID","filteredRecords","elementItem","closeFormatModalAndRefresh","refresh","errorsList","deleteOpen","allDrives","onCloseFormatErrorsList","sectionTitle","disableUnderline","startAdornment","SearchIcon","RefreshIcon","HelpBox","href","rel","TableWrapper","niceBytes","targetD","elements","element"],"mappings":"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","file":"static/js/52.56497922.chunk.js","sourcesContent":["export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid rgb(234, 237, 238)\",\n      borderRadius: 5,\n      paddingTop: 10,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingBottom: 40,\n      marginTop: 10,\n      marginBottom: 10,\n      backgroundColor: \"#fbfafa\",\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        width: \"2.5rem\",\n        marginRight: \".8rem\",\n      },\n    },\n    helpText: {\n      fontSize: 16,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id: idOverride,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n}), 'Group');\n\nexports.default = _default;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, Button, ButtonProps, IconButtonProps } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\n\ninterface IBoxButton extends ButtonProps {\n  label?: string;\n}\n\nconst BoxButton = ({ classes, children, label = \"\", ...rest }: IBoxButton) => {\n  const altRest = rest as IconButtonProps;\n  return (\n    <Fragment>\n      <Box sx={{ display: { xs: \"none\", sm: \"none\", md: \"block\" } }}>\n        <Button {...rest} endIcon={children}>\n          {label}\n        </Button>\n      </Box>\n      <Box sx={{ display: { xs: \"block\", sm: \"block\", md: \"none\" } }}>\n        <BoxIconButton {...altRest} tooltip={label}>\n          {children}\n        </BoxIconButton>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default BoxButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { AddIcon, StorageIcon } from \"../../../icons\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  IDirectCSIDrives,\n  IDirectCSIFormatResItem,\n  IDrivesResponse,\n} from \"./types\";\nimport { niceBytes } from \"../../../common/utils\";\nimport { selectDrive } from \"./actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport RefreshIcon from \"../../../icons/RefreshIcon\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport BoxIconButton from \"../Common/BoxIconButton/BoxIconButton\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport BoxButton from \"../Common/BoxButton/BoxButton\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nconst FormatDrives = withSuspense(React.lazy(() => import(\"./FormatDrives\")));\nconst FormatErrorsResult = withSuspense(\n  React.lazy(() => import(\"./FormatErrorsResult\"))\n);\n\ninterface IDirectCSIMain {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  selectDrive: typeof selectDrive;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"calc(100vh - 275px)\",\n    },\n    linkItem: {\n      display: \"default\",\n      color: theme.palette.info.main,\n      textDecoration: \"none\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n        color: \"#000\",\n      },\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst DirectCSIMain = ({\n  classes,\n  selectDrive,\n  setErrorSnackMessage,\n}: IDirectCSIMain) => {\n  const [records, setRecords] = useState<IDirectCSIDrives[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [checkedDrives, setCheckedDrives] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formatOpen, setFormatOpen] = useState<boolean>(false);\n  const [formatAll, setFormatAll] = useState<boolean>(false);\n  const [formatErrorsResult, setFormatErrorsResult] = useState<\n    IDirectCSIFormatResItem[]\n  >([]);\n  const [formatErrorsOpen, setFormatErrorsOpen] = useState<boolean>(false);\n  const [drivesToFormat, setDrivesToFormat] = useState<string[]>([]);\n  const [notAvailable, setNotAvailable] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", \"/api/v1/direct-csi/drives\")\n        .then((res: IDrivesResponse) => {\n          let drives: IDirectCSIDrives[] = get(res, \"drives\", []);\n\n          if (!drives) {\n            drives = [];\n          }\n\n          drives = drives.map((item) => {\n            const newItem = { ...item };\n            newItem.joinName = `${newItem.node}:${newItem.drive}`;\n\n            return newItem;\n          });\n\n          drives.sort((d1, d2) => {\n            if (d1.drive > d2.drive) {\n              return 1;\n            }\n\n            if (d1.drive < d2.drive) {\n              return -1;\n            }\n\n            return 0;\n          });\n\n          setRecords(drives);\n          setLoading(false);\n          setNotAvailable(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setNotAvailable(true);\n        });\n    }\n  }, [loading, setErrorSnackMessage, notAvailable]);\n\n  const formatAllDrives = () => {\n    const allDrives = records.map((item) => {\n      return `${item.node}:${item.drive}`;\n    });\n    setFormatAll(true);\n    setDrivesToFormat(allDrives);\n    setFormatOpen(true);\n  };\n\n  const formatSingleUnit = (driveID: string) => {\n    const selectedUnit = [driveID];\n    setDrivesToFormat(selectedUnit);\n    setFormatAll(false);\n    setFormatOpen(true);\n  };\n\n  const formatSelectedDrives = () => {\n    if (checkedDrives.length > 0) {\n      setDrivesToFormat(checkedDrives);\n      setFormatAll(false);\n      setFormatOpen(true);\n    }\n  };\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...checkedDrives]; // We clone the checkedDrives array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedDrivesList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedDrives(elements);\n\n    return elements;\n  };\n\n  const closeFormatModal = (\n    refresh: boolean,\n    errorsList: IDirectCSIFormatResItem[]\n  ) => {\n    setFormatOpen(false);\n    if (refresh) {\n      // Errors are present, we trigger the modal box to show these changes.\n      if (errorsList && errorsList.length > 0) {\n        setFormatErrorsResult(errorsList);\n        setFormatErrorsOpen(true);\n      }\n      setLoading(true);\n      setCheckedDrives([]);\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"format\",\n      onClick: formatSingleUnit,\n      sendOnlyId: true,\n    },\n  ];\n\n  const filteredRecords: IDirectCSIDrives[] = records.filter((elementItem) =>\n    elementItem.drive.includes(filter)\n  );\n\n  return (\n    <Fragment>\n      {formatOpen && (\n        <FormatDrives\n          closeFormatModalAndRefresh={closeFormatModal}\n          deleteOpen={formatOpen}\n          allDrives={formatAll}\n          drivesToFormat={drivesToFormat}\n        />\n      )}\n\n      {formatErrorsOpen && (\n        <FormatErrorsResult\n          errorsList={formatErrorsResult}\n          open={formatErrorsOpen}\n          onCloseFormatErrorsList={() => {\n            setFormatErrorsOpen(false);\n          }}\n        />\n      )}\n      <h1 className={classes.sectionTitle}>Local Drives</h1>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Search Drives\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => {\n            setFilter(e.target.value);\n          }}\n          disabled={notAvailable}\n          variant=\"standard\"\n        />\n        <BoxIconButton\n          color=\"primary\"\n          aria-label=\"Refresh Tenant List\"\n          onClick={() => {\n            setLoading(true);\n          }}\n          disabled={notAvailable}\n          size=\"large\"\n        >\n          <RefreshIcon />\n        </BoxIconButton>\n        <BoxButton\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={checkedDrives.length <= 0 || notAvailable}\n          onClick={formatSelectedDrives}\n          label={\"Format Selected Drives\"}\n        >\n          <GroupIcon />\n        </BoxButton>\n        <BoxButton\n          variant=\"contained\"\n          color=\"primary\"\n          label={\"Format All Drives\"}\n          onClick={formatAllDrives}\n          disabled={notAvailable}\n        >\n          <AddIcon />\n        </BoxButton>\n      </Grid>\n\n      <Grid item xs={12}>\n        {notAvailable && !loading ? (\n          <HelpBox\n            title={\"Leverage locally attached drives\"}\n            iconComponent={<StorageIcon />}\n            help={\n              <Fragment>\n                We can automatically provision persistent volumes (PVs) on top\n                locally attached drives on your Kubernetes nodes by leveraging\n                Direct-CSI.\n                <br />\n                <br />\n                For more information{\" \"}\n                <a\n                  href=\"https://github.com/minio/direct-csi\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  className={classes.linkItem}\n                >\n                  Visit Direct-CSI Documentation\n                </a>\n              </Fragment>\n            }\n          />\n        ) : (\n          <TableWrapper\n            itemActions={tableActions}\n            columns={[\n              {\n                label: \"Drive\",\n                elementKey: \"drive\",\n              },\n              {\n                label: \"Capacity\",\n                elementKey: \"capacity\",\n                renderFunction: niceBytes,\n              },\n              {\n                label: \"Allocated\",\n                elementKey: \"allocated\",\n                renderFunction: niceBytes,\n              },\n              {\n                label: \"Volumes\",\n                elementKey: \"volumes\",\n              },\n              {\n                label: \"Node\",\n                elementKey: \"node\",\n              },\n              {\n                label: \"Status\",\n                elementKey: \"status\",\n              },\n            ]}\n            onSelect={selectionChanged}\n            selectedItems={checkedDrives}\n            isLoading={loading}\n            records={filteredRecords}\n            customPaperHeight={classes.tableWrapper}\n            entityName=\"Drives\"\n            idField=\"joinName\"\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n  selectDrive,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(DirectCSIMain));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { DIRECT_CSI_SELECT_DRIVE } from \"./types\";\n\nexport const selectDrive = (driveName: string) => {\n  return {\n    type: DIRECT_CSI_SELECT_DRIVE,\n    driveName,\n  };\n};\n"],"sourceRoot":""}