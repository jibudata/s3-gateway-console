{"version":3,"file":"static/js/7486.c2a75e92.chunk.js","mappings":"mNAqFA,IAjDoC,SAAH,GAKS,IAJxCA,EAA0B,EAA1BA,2BACAC,EAAU,EAAVA,WACAC,EAAG,EAAHA,IACAC,EAAO,EAAPA,QAEMC,GAAWC,EAAAA,EAAAA,MASjB,GAAyCC,EAAAA,EAAAA,IARpB,SAACC,GACpBP,GAA2B,GAC3BI,GAASI,EAAAA,EAAAA,KAAsC,IAAhBD,EAAIE,SACrC,IACmB,SAACC,GAAyB,OAC3CN,GAASO,EAAAA,EAAAA,IAAqBD,GAAM,IAGmC,eAAlEE,EAAa,KAAEC,EAAe,KAErC,IAAKX,EACH,OAAO,KAGT,IAIMY,EAAsB,MAARZ,EAAc,UAAYA,EAE9C,OACE,SAAC,IAAa,CACZa,MAAK,iBAAYD,GACjBE,YAAa,SACbC,OAAQhB,EACRiB,WAAW,SAAC,MAAiB,IAC7BC,UAAWP,EACXQ,UAboB,WACtBP,EAAgB,SAAS,eAAD,OAAiBV,EAAO,YAAID,GACtD,EAYImB,QAtBY,WAAH,OAASrB,GAA2B,EAAO,EAuBpDsB,mBAAoB,CAClBC,SAAUX,GAEZY,qBACE,UAAC,IAAiB,WAAC,wCACmB,uBAAIV,IAAiB,IAAI,mBAC9C,sBAKzB,C,kQC2IA,KAAeW,EAAAA,EAAAA,IA/KA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,UACRC,EAAAA,IACF,GA4KL,EA1K0B,SAAH,GAAsD,IAAhDC,EAAO,EAAPA,QAAS1B,EAAO,EAAPA,QAC9BC,GAAWC,EAAAA,EAAAA,MACXyB,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCC,EAAAA,EAAAA,WAAkB,GAAM,eAArD/B,EAAU,KAAEgC,EAAa,KAChC,GAAsCD,EAAAA,EAAAA,UAAiB,IAAG,eAAnDE,EAAW,KAAEC,EAAc,KAClC,GAA8BH,EAAAA,EAAAA,WAAkB,GAAM,eAA/CI,EAAO,KAAEC,EAAU,KAC1B,GAA8BL,EAAAA,EAAAA,UAAa,IAAG,eAAvCM,EAAO,KAAEC,EAAU,KAEpBC,GAAYC,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACnDC,EAAAA,GAAAA,sBAGIC,GAAUH,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACjDC,EAAAA,GAAAA,sBAGIE,GAAcJ,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACrDC,EAAAA,GAAAA,uBAGFG,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACJV,IACES,EACFG,EAAAA,EAAAA,OACU,MAAM,eAAD,OAAiB7C,IAC7B8C,MAAK,SAAC1C,GACL8B,GAAW,GACXE,EACEhC,EAAI2C,QAAQC,KAAI,SAACC,GAGf,OAFAA,EAAEC,KAAkB,MAAXD,EAAEC,KAAe,UAAYD,EAAEC,KACxCD,EAAEE,SAAwB,IAAdF,EAAEE,QAAmB,UAAY,WACtCF,CACT,IAEJ,IACCG,OAAM,SAAC7C,GACN2B,GAAW,GACXjC,GAASO,EAAAA,EAAAA,IAAqBD,GAChC,IAEF2B,GAAW,GAGjB,GAAG,CAACD,EAASC,EAAYE,EAAYnC,EAAUyC,EAAa1C,IAE5D,IAAM4C,EAAe,WACnBV,GAAW,EACb,EAaMrC,EAA0B,yCAAG,WAAOwD,GAAgB,sEACxDvB,GAAc,GAEVuB,GACFT,IACD,2CACF,gBAN+B,sCAQ1BU,EAAe,CACnB,CACEC,KAAM,OACNC,QAhBe,SAACzD,GAClB,IAAImD,EAAoB,YAAbnD,EAAImD,KAAqB,IAAMnD,EAAImD,KAC9CvB,EAAS,iBAAD,OAAkB3B,EAAO,2BAAmBkD,GACtD,EAcIO,sBAAuB,kBAAOhB,CAAO,GAEvC,CACEc,KAAM,SACNC,QA3BqB,SAACzD,GACxB+B,GAAc,GAEdE,EADAjC,EAAc,YAARA,EAAoB,IAAMA,EAElC,EAwBI2D,YAAY,EACZD,sBAAuB,SAAC1D,GAAW,OAAMsC,GAAqB,YAARtC,CAAiB,IAI3E,OACE,UAAC,EAAA4D,SAAQ,WACN7D,IACC,SAAC,IAA2B,CAC1BA,WAAYA,EACZC,IAAKgC,EACL/B,QAASA,EACTH,2BAA4BA,KAGhC,SAAC,MAAU,CAAC+D,MAAK,UAAK5D,EAAQ6D,cAAa,sBAC3C,SAAC,IAAU,CAACC,UAAWpC,EAAQqC,cAAc,UAC3C,UAAC,KAAI,CAACC,WAAS,EAACC,QAAS,EAAE,WACzB,UAAC,KAAI,CACHC,MAAI,EACJC,GAAI,GACJC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,GAAI,CACF,WAAY,CACVC,WAAY,QAEd,WAEF,SAAC,IAAe,CACdC,OAAQ,CAACjC,EAAAA,GAAAA,qBACTkC,SAAUnC,EAAAA,GACVoC,WAAY,CAAEvD,UAAU,GAAO,UAE/B,SAAC,IAAc,CAACwD,QAAS,UAAU,UACjC,SAAC,MAAM,CACLC,GAAI,eACJC,QAAQ,UACRC,MAAM,SAAC,MAAW,IAClBvB,QAAS,kBAAMtB,GAAW,EAAK,SAIrC,SAAC,IAAe,CACduC,OAAQ,CAACjC,EAAAA,GAAAA,qBACTkC,SAAUnC,EAAAA,GACVoC,WAAY,CAAEvD,UAAU,GAAO,UAE/B,SAAC,IAAc,CAACwD,QAAO,iBAAY5E,EAAO,kBAAiB,UACzD,SAAC,MAAM,CACL6E,GAAI,aACJjB,MAAO,uBACPkB,QAAS,aACTC,MAAM,SAAC,MAAO,IACdvB,QAAS,kBACP7B,EAAS,iBAAD,OAAkB3B,EAAO,2BAA0B,YAMrE,SAAC,KAAI,CAACkE,MAAI,EAACC,GAAI,GAAIL,UAAWpC,EAAQsD,WAAW,UAC/C,SAAC,IAAe,CACdP,OAAQ,CAACjC,EAAAA,GAAAA,qBACTkC,SAAUnC,EAAAA,GACVoC,WAAY,CAAEvD,UAAU,GAAO,UAE/B,SAAC,IAAY,CACX6D,YAAa3B,EACb4B,QAAS,CACP,CAAEtB,MAAO,OAAQuB,WAAY,QAC7B,CAAEvB,MAAO,OAAQuB,WAAY,QAC7B,CAAEvB,MAAO,UAAWuB,WAAY,YAElCnE,UAAWiB,EACXE,QAASA,EACTiD,WAAW,OACXC,QAAQ,oBAQxB,G,kECrMA,UAJ8B,WAC5B,OAAO,SAAC,IAAiB,CAACrF,QAAS,QACrC,C","sources":["screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurations.tsx","screens/Console/IDP/IDPLDAPConfigurations.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useAppDispatch } from \"../../../store\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { containerForHeader } from \"../Common/FormComponents/common/styleLibrary\";\nimport { Grid } from \"@mui/material\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Button, PageHeader, RefreshIcon } from \"mds\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\n\ntype IDPConfigurationsProps = {\n  classes?: any;\n  idpType: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...containerForHeader,\n  });\n\nconst IDPConfigurations = ({ classes, idpType }: IDPConfigurationsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedIDP, setSelectedIDP] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<[]>([]);\n\n  const deleteIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const viewIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const displayIDPs = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayIDPs) {\n        api\n          .invoke(\"GET\", `/api/v1/idp/${idpType}`)\n          .then((res) => {\n            setLoading(false);\n            setRecords(\n              res.results.map((r: any) => {\n                r.name = r.name === \"_\" ? \"Default\" : r.name;\n                r.enabled = r.enabled === true ? \"Enabled\" : \"Disabled\";\n                return r;\n              })\n            );\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayIDPs, idpType]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const confirmDeleteIDP = (idp: string) => {\n    setDeleteOpen(true);\n    idp = idp === \"Default\" ? \"_\" : idp;\n    setSelectedIDP(idp);\n  };\n\n  const viewAction = (idp: any) => {\n    let name = idp.name === \"Default\" ? \"_\" : idp.name;\n    navigate(`/identity/idp/${idpType}/configurations/${name}`);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !viewIDP,\n    },\n    {\n      type: \"delete\",\n      onClick: confirmDeleteIDP,\n      sendOnlyId: true,\n      disableButtonFunction: (idp: string) => !deleteIDP || idp === \"Default\",\n    },\n  ];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={selectedIDP}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeader label={`${idpType.toUpperCase()} Configurations`} />\n      <PageLayout className={classes.pageContainer}>\n        <Grid container spacing={1}>\n          <Grid\n            item\n            xs={12}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"flex-end\"}\n            sx={{\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={`Create ${idpType} configuration`}>\n                <Button\n                  id={\"create-idp\"}\n                  label={\"Create Configuration\"}\n                  variant={\"callAction\"}\n                  icon={<AddIcon />}\n                  onClick={() =>\n                    navigate(`/identity/idp/${idpType}/configurations/add-idp`)\n                  }\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Grid>\n          <Grid item xs={12} className={classes.tableBlock}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TableWrapper\n                itemActions={tableActions}\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Type\", elementKey: \"type\" },\n                  { label: \"Enabled\", elementKey: \"enabled\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(IDPConfigurations);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport IDPConfigurations from \"./IDPConfigurations\";\n\nconst IDPLDAPConfigurations = () => {\n  return <IDPConfigurations idpType={\"ldap\"} />;\n};\n\nexport default IDPLDAPConfigurations;\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","displayName","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmButtonProps","disabled","confirmationContent","withStyles","theme","createStyles","containerForHeader","classes","navigate","useNavigate","useState","setDeleteOpen","selectedIDP","setSelectedIDP","loading","setLoading","records","setRecords","deleteIDP","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","viewIDP","displayIDPs","useEffect","fetchRecords","api","then","results","map","r","name","enabled","catch","refresh","tableActions","type","onClick","disableButtonFunction","sendOnlyId","Fragment","label","toUpperCase","className","pageContainer","container","spacing","item","xs","display","alignItems","justifyContent","sx","marginLeft","scopes","resource","errorProps","tooltip","id","variant","icon","tableBlock","itemActions","columns","elementKey","entityName","idField"],"sourceRoot":""}