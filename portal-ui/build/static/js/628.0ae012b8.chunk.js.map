{"version":3,"file":"static/js/628.0ae012b8.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/EventDestinations/AddEventDestination.tsx","screens/Console/EventDestinations/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackLink, Button } from \"mds\";\n\nimport api from \"../../../common/api\";\nimport {\n  notificationEndpointsFields,\n  notifyMysql,\n  notifyPostgres,\n  removeEmptyFields,\n  destinationList,\n} from \"./utils\";\nimport {\n  modalBasic,\n  settingsCommon,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst ConfMySql = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfMySql\"))\n);\n\nconst ConfTargetGeneric = withSuspense(\n  React.lazy(() => import(\"./ConfTargetGeneric\"))\n);\n\nconst ConfPostgres = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfPostgres\"))\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Inter,sans-serif\",\n      paddingLeft: 18,\n    },\n    formBox: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  saveAndRefresh: any;\n  classes: any;\n}\n\nconst AddEventDestination = ({\n  saveAndRefresh,\n  classes,\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  //Local States\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const service = params.service || \"\";\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesArr),\n      };\n      api\n        .invoke(\"PUT\", `/api/v1/configs/${service}`, payload)\n        .then(() => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(true));\n          navigate(IAM_PAGES.EVENT_DESTINATIONS);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [saving, service, valuesArr, saveAndRefresh, dispatch, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueArr(newValue);\n    },\n    [setValueArr]\n  );\n\n  let srvComponent;\n  switch (service) {\n    case notifyPostgres: {\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\n      break;\n    }\n    case notifyMysql: {\n      srvComponent = <ConfMySql onChange={onValueChange} />;\n      break;\n    }\n    default: {\n      const fields = get(notificationEndpointsFields, service, []);\n\n      srvComponent = (\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\n      );\n    }\n  }\n\n  const targetElement = destinationList.find(\n    (element) => element.actionTrigger === service\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label=\"Event Destinations\"\n              onClick={() => navigate(IAM_PAGES.EVENT_DESTINATIONS_ADD)}\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <form noValidate onSubmit={submitForm}>\n          {service !== \"\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                {targetElement && (\n                  <div\n                    key={`icon-${targetElement.targetTitle}`}\n                    className={classes.lambdaNotif}\n                  >\n                    <div className={classes.lambdaNotifIcon}>\n                      <img\n                        src={targetElement.logo}\n                        className={classes.logoButton}\n                        alt={targetElement.targetTitle}\n                      />\n                    </div>\n\n                    <div className={classes.lambdaNotifTitle}>\n                      <b>\n                        {targetElement ? targetElement.targetTitle : \"\"} Event\n                        Destination\n                      </b>\n                    </div>\n                  </div>\n                )}\n              </Grid>\n              <div className={classes.formBox}>\n                <Grid item xs={12} className={classes.configForm}>\n                  {srvComponent}\n                </Grid>\n                <Grid item xs={12} className={classes.settingsButtonContainer}>\n                  <Button\n                    id={\"save-notification-target\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={saving}\n                    label={\"Save Event Destination\"}\n                  />\n                </Grid>\n              </div>\n            </Fragment>\n          )}\n        </form>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddEventDestination);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport class DestType {\n  static DB: string = \"database\";\n  static Queue: string = \"queue\";\n  static Func: string = \"functions\";\n}\n\nexport const destinationList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n    category: DestType.Func,\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n    category: DestType.Queue,\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","_objectSpread","ConfMySql","withSuspense","React","ConfTargetGeneric","ConfPostgres","withStyles","theme","createStyles","modalBasic","settingsCommon","lambdaNotif","background","border","borderRadius","height","display","alignItems","justifyContent","marginBottom","cursor","padding","overflow","lambdaNotifIcon","backgroundColor","width","maxWidth","maxHeight","lambdaNotifTitle","color","fontSize","fontFamily","paddingLeft","formBox","_ref","saveAndRefresh","classes","dispatch","useAppDispatch","navigate","useNavigate","params","useParams","_useState","useState","_useState2","_slicedToArray","valuesArr","setValueArr","_useState3","_useState4","saving","setSaving","service","useEffect","payload","key_values","removeEmptyFields","api","concat","then","setServerNeedsRestart","IAM_PAGES","catch","err","setErrorSnackMessage","srvComponent","onValueChange","useCallback","newValue","notifyPostgres","onChange","notifyMysql","fields","get","notificationEndpointsFields","targetElement","destinationList","element","actionTrigger","_jsxs","Fragment","PageHeaderWrapper","label","BackLink","onClick","actions","PageLayout","noValidate","onSubmit","event","preventDefault","Grid","item","xs","className","src","logo","logoButton","alt","targetTitle","configForm","settingsButtonContainer","Button","id","type","variant","disabled","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","map","service_name","account_id","name","status","DestType","_createClass","_classCallCheck","DB","Queue","Func","category","commonFields","required","tooltip","placeholder","formFields","filter","field","value","_notificationEndpoint","_defineProperty","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}