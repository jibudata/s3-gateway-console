{"version":3,"file":"static/js/8360.19c25a88.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Configurations/SiteReplication/EditSiteEndPoint.tsx","screens/Console/Configurations/SiteReplication/ReplicationSites.tsx","screens/Console/Configurations/SiteReplication/SiteReplication.tsx","../node_modules/@mui/material/ListItemButton/ListItemButton.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { EditIcon } from \"../../../../icons\";\nimport { Box, DialogContentText } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { Button } from \"mds\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...spacingUtils,\n  });\nconst EditSiteEndPoint = ({\n  editSite = {},\n  onClose,\n  onComplete,\n  classes = {},\n}: {\n  editSite: any;\n  onClose: () => void;\n  onComplete: () => void;\n  classes: any;\n}) => {\n  const dispatch = useAppDispatch();\n  const [editEndPointName, setEditEndPointName] = useState<string>(\"\");\n\n  const [isEditing, invokeSiteEditApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          })\n        );\n      }\n      onComplete();\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n      onComplete();\n    }\n  );\n\n  const updatePeerSite = () => {\n    invokeSiteEditApi(\"PUT\", `api/v1/admin/site-replication`, {\n      endpoint: editEndPointName,\n      name: editSite.name,\n      deploymentId: editSite.deploymentID, // readonly\n    });\n  };\n\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(editEndPointName);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n\n  return (\n    <ModalWrapper\n      title={`Edit Replication Endpoint `}\n      modalOpen={true}\n      titleIcon={<EditIcon />}\n      onClose={onClose}\n    >\n      <DialogContentText>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginBottom: \"15px\",\n          }}\n        >\n          <Box sx={{ marginBottom: \"10px\" }}>\n            <strong>Site:</strong> {\"  \"}\n            {editSite.name}\n          </Box>\n          <Box sx={{ marginBottom: \"10px\" }}>\n            <strong>Current Endpoint:</strong> {\"  \"}\n            {editSite.endpoint}\n          </Box>\n        </Box>\n\n        <Grid item xs={12}>\n          <Box sx={{ marginBottom: \"5px\" }}> New Endpoint:</Box>\n          <InputBoxWrapper\n            id=\"edit-rep-peer-endpoint\"\n            name=\"edit-rep-peer-endpoint\"\n            placeholder={\"https://dr.minio-storage:9000\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setEditEndPointName(event.target.value);\n            }}\n            label=\"\"\n            value={editEndPointName}\n          />\n        </Grid>\n        <Grid item xs={12} marginBottom={\"15px\"}>\n          <Box\n            sx={{\n              fontStyle: \"italic\",\n              display: \"flex\",\n              alignItems: \"center\",\n              fontSize: \"12px\",\n              marginTop: 2,\n            }}\n          >\n            <Box sx={{ fontWeight: 600 }}>Note:</Box>{\" \"}\n            <Box sx={{ marginLeft: 1, color: \"red\" }}>\n              Access Key and Secret Key should be same on the new site/endpoint.\n            </Box>\n          </Box>\n        </Grid>\n      </DialogContentText>\n\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          id={\"close\"}\n          type=\"button\"\n          variant=\"regular\"\n          onClick={onClose}\n          label={\"Close\"}\n        />\n        <Button\n          id={\"update\"}\n          type=\"button\"\n          variant=\"callAction\"\n          disabled={isEditing || !isValidEndPointUrl}\n          onClick={updatePeerSite}\n          label={\"Update\"}\n        />\n      </Grid>\n    </ModalWrapper>\n  );\n};\nexport default withStyles(styles)(EditSiteEndPoint);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport { Box, DialogContentText, Tooltip } from \"@mui/material\";\nimport { Button } from \"mds\";\nimport { ReplicationSite } from \"./SiteReplication\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { CircleIcon, ConfirmDeleteIcon, EditIcon } from \"../../../../icons\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport EditSiteEndPoint from \"./EditSiteEndPoint\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...spacingUtils,\n  });\n\nconst ReplicationSites = ({\n  sites,\n  onDeleteSite,\n  onRefresh,\n}: {\n  sites: ReplicationSite[];\n  onDeleteSite: (isAll: boolean, sites: string[]) => void;\n  onRefresh: () => void;\n  classes: any;\n}) => {\n  const [deleteSiteKey, setIsDeleteSiteKey] = useState<string>(\"\");\n  const [editSite, setEditSite] = useState<any>(null);\n\n  return (\n    <Box>\n      <List\n        sx={{\n          width: \"100%\",\n          flex: 1,\n          padding: \"0\",\n          marginTop: \"25px\",\n          height: \"calc( 100vh - 640px )\",\n          minHeight: \"250px\",\n          border: \"1px solid #eaeaea\",\n          marginBottom: \"25px\",\n          overflowY: \"auto\",\n        }}\n        component=\"div\"\n        aria-labelledby=\"nested-list-subheader\"\n      >\n        <Box\n          sx={{\n            fontWeight: 600,\n            borderBottom: \"1px solid #f1f1f1\",\n            padding: \"25px 25px 25px 20px\",\n          }}\n        >\n          List of Replicated Sites\n        </Box>\n        {sites.map((siteInfo, index) => {\n          const key = `${siteInfo.name}`;\n\n          return (\n            <React.Fragment key={`${key}-${index}`}>\n              <ListItemButton\n                disableRipple\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  border: \"1px solid #f1f1f1\",\n                  borderLeft: \"0\",\n                  borderRight: \"0\",\n                  borderTop: \"0\",\n                  padding: \"6px 10px 6px 20px\",\n                  \"&:hover\": {\n                    background: \"#bebbbb0d\",\n                  },\n                  \"&.expanded\": {\n                    marginBottom: \"0\",\n                  },\n                }}\n              >\n                <Box\n                  sx={{\n                    flex: 2,\n                    display: \"grid\",\n                    gridTemplateColumns: {\n                      sm: \"1fr 1fr \",\n                    },\n                  }}\n                >\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    {siteInfo.name}\n                  </Box>\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      overflow: \"hidden\",\n                    }}\n                  >\n                    {siteInfo.isCurrent ? (\n                      <Tooltip title={\"This site/cluster\"} placement=\"top\">\n                        <Box\n                          sx={{\n                            \"& .min-icon\": {\n                              height: \"12px\",\n                              fill: \"green\",\n                            },\n                          }}\n                        >\n                          <CircleIcon />\n                        </Box>\n                      </Tooltip>\n                    ) : null}\n                    <Tooltip title={siteInfo.endpoint}>\n                      <Box\n                        sx={{\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                          marginLeft: siteInfo.isCurrent ? \"\" : \"24px\",\n                        }}\n                      >\n                        {siteInfo.endpoint}\n                      </Box>\n                    </Tooltip>\n                  </Box>\n                </Box>\n\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    marginLeft: \"25px\",\n                    marginRight: \"25px\",\n                    width: \"60px\",\n                    flexShrink: 0,\n\n                    \"& button\": {\n                      borderRadius: \"50%\",\n                      background: \"#F8F8F8\",\n                      border: \"none\",\n\n                      \"&:hover\": {\n                        background: \"#E2E2E2\",\n                      },\n\n                      \"& svg\": {\n                        fill: \"#696565\",\n                      },\n                    },\n                  }}\n                >\n                  <TooltipWrapper tooltip=\"Delete Site\">\n                    <Button\n                      id={`delete-site-${key}-${index}`}\n                      variant=\"secondary\"\n                      disabled={siteInfo.isCurrent}\n                      icon={<TrashIcon />}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setIsDeleteSiteKey(key);\n                      }}\n                      style={{\n                        width: \"25px\",\n                        height: \"25px\",\n                        padding: \"0\",\n                      }}\n                    />\n                  </TooltipWrapper>\n                  <TooltipWrapper tooltip={\"Edit Endpoint\"}>\n                    <Button\n                      id={`edit-icon-${key}-${index}`}\n                      variant=\"regular\"\n                      disabled={siteInfo.isCurrent}\n                      icon={<EditIcon />}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setEditSite(siteInfo);\n                      }}\n                      style={{\n                        width: \"25px\",\n                        height: \"25px\",\n                        padding: \"0\",\n                        marginLeft: \"8px\",\n                      }}\n                    />\n                  </TooltipWrapper>\n                </Box>\n              </ListItemButton>\n\n              {deleteSiteKey === key ? (\n                <ConfirmDialog\n                  title={`Delete Replication Site`}\n                  confirmText={\"Delete\"}\n                  isOpen={true}\n                  titleIcon={<ConfirmDeleteIcon />}\n                  isLoading={false}\n                  onConfirm={() => {\n                    onDeleteSite(false, [key]);\n                  }}\n                  onClose={() => {\n                    setIsDeleteSiteKey(\"\");\n                  }}\n                  confirmationContent={\n                    <DialogContentText>\n                      Are you sure you want to remove the replication site:{\" \"}\n                      {key}.?\n                    </DialogContentText>\n                  }\n                />\n              ) : null}\n\n              {editSite?.name === key ? (\n                <EditSiteEndPoint\n                  onComplete={() => {\n                    setEditSite(null);\n                    onRefresh();\n                  }}\n                  editSite={editSite}\n                  onClose={() => {\n                    setEditSite(null);\n                  }}\n                />\n              ) : null}\n            </React.Fragment>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(ReplicationSites);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, DialogContentText, Grid } from \"@mui/material\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ReplicationSites from \"./ReplicationSites\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { Button } from \"mds\";\nimport Loader from \"../../Common/Loader/Loader\";\nimport {\n  AddIcon,\n  ClustersIcon,\n  ConfirmDeleteIcon,\n  RecoverIcon,\n} from \"../../../../icons\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nexport type ReplicationSite = {\n  deploymentID: string;\n  endpoint: string;\n  name: string;\n  isCurrent?: boolean;\n};\n\nconst SiteReplication = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [sites, setSites] = useState([]);\n\n  const [deleteAll, setIsDeleteAll] = useState(false);\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n        };\n        siteList.splice(foundIdx, 1, curSite);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n      setSites(siteList);\n    },\n    (err: any) => {\n      setSites([]);\n    }\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  const [isRemoving, invokeSiteRemoveApi] = useApi(\n    (res: any) => {\n      setIsDeleteAll(false);\n      dispatch(setSnackBarMessage(`Successfully deleted.`));\n      getSites();\n    },\n    (err: ErrorResponseHandler) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  const removeSites = (isAll: boolean = false, delSites: string[] = []) => {\n    invokeSiteRemoveApi(\"DELETE\", `api/v1/admin/site-replication`, {\n      all: isAll,\n      sites: delSites,\n    });\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const hasSites = sites?.length;\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Site Replication\"} />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              marginLeft: \"8px\",\n            },\n          }}\n        >\n          {hasSites ? (\n            <Fragment>\n              <TooltipWrapper tooltip={\"Delete All\"}>\n                <Button\n                  id={\"delete-all\"}\n                  label={\"Delete All\"}\n                  variant=\"secondary\"\n                  disabled={isRemoving}\n                  icon={<TrashIcon />}\n                  onClick={() => {\n                    setIsDeleteAll(true);\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Replication Status\"}>\n                <Button\n                  id={\"replication-status\"}\n                  label={\"Replication Status\"}\n                  variant=\"regular\"\n                  icon={<RecoverIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    navigate(IAM_PAGES.SITE_REPLICATION_STATUS);\n                  }}\n                />\n              </TooltipWrapper>\n            </Fragment>\n          ) : null}\n          <TooltipWrapper tooltip={\"Add Replication Sites\"}>\n            <Button\n              id={\"add-replication-site\"}\n              label={\"Add Sites\"}\n              variant=\"callAction\"\n              disabled={isRemoving}\n              icon={<AddIcon />}\n              onClick={() => {\n                navigate(IAM_PAGES.SITE_REPLICATION_ADD);\n              }}\n            />\n          </TooltipWrapper>\n        </Box>\n        {hasSites ? (\n          <ReplicationSites\n            sites={sites}\n            onDeleteSite={removeSites}\n            onRefresh={getSites}\n          />\n        ) : null}\n        {isSiteInfoLoading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"calc( 100vh - 450px )\",\n            }}\n          >\n            <Loader style={{ width: 16, height: 16 }} />\n          </Box>\n        ) : null}\n        {!hasSites && !isSiteInfoLoading ? (\n          <Grid\n            container\n            justifyContent={\"center\"}\n            alignContent={\"center\"}\n            alignItems={\"center\"}\n          >\n            <Grid item xs={8}>\n              <HelpBox\n                title={\"Site Replication\"}\n                iconComponent={<ClustersIcon />}\n                help={\n                  <Fragment>\n                    This feature allows multiple independent MinIO sites (or\n                    clusters) that are using the same external IDentity Provider\n                    (IDP) to be configured as replicas.\n                    <br />\n                    <br />\n                    To get started,{\" \"}\n                    <AButton\n                      onClick={() => {\n                        navigate(IAM_PAGES.SITE_REPLICATION_ADD);\n                      }}\n                    >\n                      Add a Replication Site\n                    </AButton>\n                    .\n                    <br />\n                    You can learn more at our{\" \"}\n                    <a\n                      href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/multi-site-replication.html?ref=con\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      documentation\n                    </a>\n                    .\n                  </Fragment>\n                }\n              />\n            </Grid>\n          </Grid>\n        ) : null}\n        {hasSites && !isSiteInfoLoading ? (\n          <HelpBox\n            title={\"Site Replication\"}\n            iconComponent={<ClustersIcon />}\n            help={\n              <Fragment>\n                This feature allows multiple independent MinIO sites (or\n                clusters) that are using the same external IDentity Provider\n                (IDP) to be configured as replicas. In this situation the set of\n                replica sites are referred to as peer sites or just sites.\n                <br />\n                <br />\n                Initially, only one of the sites added for replication may have\n                data. After site-replication is successfully configured, this\n                data is replicated to the other (initially empty) sites.\n                Subsequently, objects may be written to any of the sites, and\n                they will be replicated to all other sites.\n                <br />\n                <br />\n                All sites must have the same deployment credentials (i.e.\n                MINIO_ROOT_USER, MINIO_ROOT_PASSWORD).\n                <br />\n                <br />\n                All sites must be using the same external IDP(s) if any.\n                <br />\n                <br />\n                For SSE-S3 or SSE-KMS encryption via KMS, all sites must have\n                access to a central KMS deployment server.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://github.com/minio/minio/tree/master/docs/site-replication?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        ) : null}\n\n        {deleteAll ? (\n          <ConfirmDialog\n            title={`Delete All`}\n            confirmText={\"Delete\"}\n            isOpen={true}\n            titleIcon={<ConfirmDeleteIcon />}\n            isLoading={false}\n            onConfirm={() => {\n              const siteNames = sites.map((s: any) => s.name);\n              removeSites(true, siteNames);\n            }}\n            onClose={() => {\n              setIsDeleteAll(false);\n            }}\n            confirmationContent={\n              <DialogContentText>\n                Are you sure you want to remove all the replication sites?.\n              </DialogContentText>\n            }\n          />\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default SiteReplication;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alignItems\", \"autoFocus\", \"component\", \"children\", \"dense\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemButtonClasses, { getListItemButtonUtilityClass } from './listItemButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    divider,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', divider && 'divider', disabled && 'disabled', alignItems === 'flex-start' && 'alignItemsFlexStart', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst ListItemButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiListItemButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minWidth: 0,\n  boxSizing: 'border-box',\n  textAlign: 'left',\n  paddingTop: 8,\n  paddingBottom: 8,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemButtonClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemButtonClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemButtonClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}));\nconst ListItemButton = /*#__PURE__*/React.forwardRef(function ListItemButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemButton'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      component = 'div',\n      children,\n      dense = false,\n      disableGutters = false,\n      divider = false,\n      focusVisibleClassName,\n      selected = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItemButton whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    dense: childContext.dense,\n    disableGutters,\n    divider,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(ListItemButtonRoot, _extends({\n      ref: handleRef,\n      href: other.href || other.to,\n      component: (other.href || other.to) && component === 'div' ? 'a' : component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ownerState: ownerState,\n      className: clsx(classes.root, className)\n    }, other, {\n      classes: classes,\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemButton;"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","margin","textDecoration","cursor","color","palette","info","main","fontFamily","children","rest","deleteDialogStyles","content","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","modalStyleUtils","formFieldStyles","spacingUtils","editSite","onComplete","editEndPointName","setEditEndPointName","useApi","res","success","setSnackBarMessage","status","setErrorSnackMessage","errorMessage","detailedError","err","isEditing","invokeSiteEditApi","isValidEndPointUrl","URL","ModalWrapper","DialogContentText","Box","sx","flexFlow","name","endpoint","Grid","InputBoxWrapper","placeholder","onChange","target","value","label","fontStyle","marginTop","marginLeft","modalButtonBar","variant","disabled","deploymentId","deploymentID","sites","onDeleteSite","onRefresh","deleteSiteKey","setIsDeleteSiteKey","setEditSite","List","flex","minHeight","overflowY","component","borderBottom","map","siteInfo","index","key","ListItemButton","borderLeft","borderRight","borderTop","background","gridTemplateColumns","sm","overflow","isCurrent","Tooltip","placement","fill","textOverflow","whiteSpace","flexShrink","TooltipWrapper","tooltip","icon","TrashIcon","e","preventDefault","style","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","navigate","useNavigate","setSites","deleteAll","setIsDeleteAll","siteList","curSiteName","foundIdx","findIndex","el","curSite","splice","sort","x","y","isSiteInfoLoading","invokeSiteInfoApi","getSites","isRemoving","invokeSiteRemoveApi","removeSites","isAll","delSites","all","hasSites","Fragment","PageHeader","PageLayout","justifyContent","IAM_PAGES","Loader","alignContent","HelpBox","AButton","href","rel","siteNames","s","_excluded","ListItemButtonRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","slot","overridesResolver","props","styles","ownerState","dense","alignItemsFlexStart","divider","disableGutters","gutters","_extends","flexGrow","position","minWidth","boxSizing","textAlign","transition","transitions","create","duration","shortest","vars","action","hover","listItemButtonClasses","primary","mainChannel","selectedOpacity","alpha","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","backgroundClip","React","inProps","ref","useThemeProps","autoFocus","focusVisibleClassName","selected","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","listItemRef","useEnhancedEffect","current","slots","composedClasses","composeClasses","getListItemButtonUtilityClass","useUtilityClasses","handleRef","useForkRef","_jsx","to","clsx","focusVisible"],"sourceRoot":""}