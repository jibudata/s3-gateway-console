{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/NotificationEndpoints/CustomForms/ConfPostgres.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","item","xs","sm","md","textAlign","component","SelectStyled","lineHeight","spacing","input","borderColor","InputBase","options","fieldContainer","map","option","predefinedList","content","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","optionLabel","marginRight","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","radioOptionsLayout","row","style","selectorOption","control","cssOutlinedInput","rootContainer","minHeight","borderWidth","rows","InputLabelProps","shrink","notchedOutline","variant","modalBasic","formFieldStyles","useState","useConnectionString","setUseConnectionString","connectionString","setConnectionString","host","setHostname","dbName","setDbName","port","setPort","user","setUser","password","setPassword","sslMode","setSslMode","table","setTable","format","setFormat","queueDir","setQueueDir","queueLimit","setQueueLimit","comment","setComment","configToString","useCallback","strValue","trim","useEffect","key","cs","kv","keys","valueIndexes","i","indexOf","push","sort","n1","n2","kvFields","Map","fields","Array","j","substr","field","undefined","set","parseConnectionString","get","e","target","formFieldRow","configureString"],"mappings":"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","file":"static/js/81.a21ec1b4.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern=\"\",\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if(pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfPostgresProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfPostgres = ({ onChange, classes }: IConfPostgresProps) => {\n  //Local States\n  const [useConnectionString, setUseConnectionString] =\n    useState<boolean>(false);\n  const [connectionString, setConnectionString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [sslMode, setSslMode] = useState<string>(\" \");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // connection_string*  (string)             Postgres server connection-string e.g. \"host=localhost port=5432 dbname=minio_events user=postgres password=password sslmode=disable\"\n\n  //  \"host=localhost\n  // port=5432\n  //dbname=minio_events\n  //user=postgres\n  //password=password\n  //sslmode=disable\"\n\n  // table*              (string)             DB table name to store/update events, table is auto-created\n  // format*             (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir           (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit         (number)             maximum limit for undelivered messages, defaults to '10000'\n  // comment             (sentence)           optionally add a comment to this setting\n\n  const KvSeparator = \"=\";\n  const parseConnectionString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let valueIndexes: number[] = [];\n\n    for (const key of keys) {\n      const i = input.indexOf(key + KvSeparator);\n      if (i === -1) {\n        continue;\n      }\n      valueIndexes.push(i);\n    }\n    valueIndexes.sort((n1, n2) => n1 - n2);\n\n    let kvFields = new Map<string, string>();\n    let fields: string[] = new Array<string>(valueIndexes.length);\n    for (let i = 0; i < valueIndexes.length; i++) {\n      const j = i + 1;\n      if (j < valueIndexes.length) {\n        fields[i] = input.substr(\n          valueIndexes[i],\n          valueIndexes[j] - valueIndexes[i]\n        );\n      } else {\n        fields[i] = input.substr(valueIndexes[i]);\n      }\n    }\n\n    for (let field of fields) {\n      if (field === undefined) {\n        continue;\n      }\n      const key = field.substr(0, field.indexOf(\"=\"));\n      const value = field.substr(field.indexOf(\"=\") + 1).trim();\n      kvFields.set(key, value);\n    }\n    return kvFields;\n  };\n\n  const configToString = useCallback((): string => {\n    let strValue = \"\";\n    if (host !== \"\") {\n      strValue = `${strValue} host=${host}`;\n    }\n    if (dbName !== \"\") {\n      strValue = `${strValue} dbname=${dbName}`;\n    }\n    if (user !== \"\") {\n      strValue = `${strValue} user=${user}`;\n    }\n    if (password !== \"\") {\n      strValue = `${strValue} password=${password}`;\n    }\n    if (port !== \"\") {\n      strValue = `${strValue} port=${port}`;\n    }\n    if (sslMode !== \" \") {\n      strValue = `${strValue} sslmode=${sslMode}`;\n    }\n\n    strValue = `${strValue} `;\n\n    return strValue.trim();\n  }, [host, dbName, user, password, port, sslMode]);\n\n  useEffect(() => {\n    if (connectionString !== \"\") {\n      const formValues = [\n        { key: \"connection_string\", value: connectionString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [\n    connectionString,\n    table,\n    format,\n    queueDir,\n    queueLimit,\n    comment,\n    onChange,\n  ]);\n\n  useEffect(() => {\n    const cs = configToString();\n    setConnectionString(cs);\n  }, [\n    user,\n    dbName,\n    password,\n    port,\n    sslMode,\n    host,\n    setConnectionString,\n    configToString,\n  ]);\n\n  useEffect(() => {\n    if (useConnectionString) {\n      // build connection_string\n      const cs = configToString();\n      setConnectionString(cs);\n\n      return;\n    }\n    // parse connection_string\n    const kv = parseConnectionString(connectionString, [\n      \"host\",\n      \"port\",\n      \"dbname\",\n      \"user\",\n      \"password\",\n      \"sslmode\",\n    ]);\n    setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n    setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n    setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n    setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n    setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    setSslMode(kv.get(\"sslmode\") ? kv.get(\"sslmode\") + \"\" : \" \");\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useConnectionString]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Manually Configure String\"}\n          checked={useConnectionString}\n          id=\"manualString\"\n          name=\"manualString\"\n          onChange={(e) => {\n            setUseConnectionString(e.target.checked);\n          }}\n          value={\"manualString\"}\n        />\n      </Grid>\n      {useConnectionString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"connection-string\"\n              name=\"connection_string\"\n              label=\"Connection String\"\n              value={connectionString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setConnectionString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <SelectWrapper\n                  value={sslMode}\n                  label=\"\"\n                  id=\"sslmode\"\n                  name=\"sslmode\"\n                  onChange={(e): void => {\n                    if (e.target.value !== undefined) {\n                      setSslMode(e.target.value + \"\");\n                    }\n                  }}\n                  options={[\n                    { label: \"Enter SSL Mode\", value: \" \" },\n                    { label: \"Require\", value: \"require\" },\n                    { label: \"Disable\", value: \"disable\" },\n                    { label: \"Verify CA\", value: \"verify-ca\" },\n                    { label: \"Verify Full\", value: \"verify-full\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList\n            label={\"Connection String\"}\n            content={connectionString}\n          />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder={\"Enter Table Name\"}\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Directory\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter Comment\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfPostgres);\n"],"sourceRoot":""}