{"version":3,"file":"static/js/6859.701ff3ff.chunk.js","mappings":"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","sources":["screens/Console/Account/DeleteServiceAccount.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormLayout.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Users/GroupsSelectors.tsx","screens/Console/Users/ListUsers.tsx","screens/Console/Users/ChangeUserGroups.tsx","screens/Console/Users/SetUserPolicies.tsx","screens/Console/Users/AddUserServiceAccount.tsx","screens/Console/Users/UserServiceAccountsPanel.tsx","screens/Console/Account/ChangeUserPasswordModal.tsx","screens/Console/Users/DeleteUserString.tsx","screens/Console/Users/UserDetails.tsx","screens/Console/Users/AddUserHelpBox.tsx","screens/Console/Users/AddUserScreen.tsx","screens/Console/Users/Users.tsx","common/Copyright.tsx","screens/NotFoundPage.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n  });\n\ninterface IDeleteServiceAccountProps {\n  classes: any;\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedServiceAccount: string | null;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteServiceAccount = ({\n  classes,\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedServiceAccount,\n  setErrorSnackMessage,\n}: IDeleteServiceAccountProps) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedServiceAccount) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/service-accounts/${selectedServiceAccount}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Service Account`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete service account{\" \"}\n          <b className={classes.wrapText}>{selectedServiceAccount}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(DeleteServiceAccount));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\n\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <RBIconButton\n                id={\"download-button\"}\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n                text={\"Download for import\"}\n                className={classes.buttonSpacer}\n                onClick={() => {\n                  let consoleExtras = {};\n\n                  if (consoleCreds) {\n                    if (!Array.isArray(consoleCreds)) {\n                      consoleExtras = {\n                        url: consoleCreds.url,\n                        accessKey: consoleCreds.accessKey,\n                        secretKey: consoleCreds.secretKey,\n                        api: \"s3v4\",\n                        path: \"auto\",\n                      };\n                    } else {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          url: itemMap.url,\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                          api: \"s3v4\",\n                          path: \"auto\",\n                        };\n                      });\n                      consoleExtras = cCreds[0];\n                    }\n                  } else {\n                    consoleExtras = {\n                      url: newServiceAccount.url,\n                      accessKey: newServiceAccount.accessKey,\n                      secretKey: newServiceAccount.secretKey,\n                      api: \"s3v4\",\n                      path: \"auto\",\n                    };\n                  }\n\n                  download(\n                    \"credentials.json\",\n                    JSON.stringify({\n                      ...consoleExtras,\n                    })\n                  );\n                }}\n                icon={<DownloadIcon />}\n                variant=\"contained\"\n                color=\"primary\"\n              />\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <RBIconButton\n                  id={\"download-all-button\"}\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                  text={\"Download all access credentials\"}\n                  className={classes.buttonSpacer}\n                  onClick={() => {\n                    let allCredentials = {};\n                    if (consoleCreds) {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                        };\n                      });\n                      allCredentials = cCreds;\n                    }\n                    download(\n                      \"all_credentials.json\",\n                      JSON.stringify({\n                        ...allCredentials,\n                      })\n                    );\n                  }}\n                  icon={<DownloadIcon />}\n                  variant=\"contained\"\n                  color=\"primary\"\n                />\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport SectionTitle from \"./SectionTitle\";\n\ntype Props = {\n  title: string;\n  icon: React.ReactNode;\n  helpbox?: React.ReactNode;\n};\n\nconst FormLayout: React.FC<Props> = ({ children, title, helpbox, icon }) => {\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        padding: \"25px\",\n        gap: \"25px\",\n        gridTemplateColumns: {\n          md: \"2fr 1.2fr\",\n          xs: \"1fr\",\n        },\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box>\n        <SectionTitle icon={icon}>{title}</SectionTitle>\n        {children}\n      </Box>\n\n      {helpbox}\n    </Box>\n  );\n};\n\nexport default FormLayout;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  setSelectedPolicy: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n  setSelectedPolicy,\n  setModalErrorSnackMessage,\n}: ISelectPolicyProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedPolicy]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    setSelectedPolicy(elements);\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for a Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selectedPolicy}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PolicySelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { stringSort } from \"../../../utils/sortFunctions\";\nimport { GroupsList } from \"../Groups/types\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedGroups: string[];\n  setSelectedGroups: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    actionsTitle: {\n      fontWeight: 400,\n      color: \"#000\",\n      fontSize: 14,\n      alignSelf: \"center\",\n\n      marginRight: 48,\n      \"@media (max-width: 900px)\": {\n        marginRight: 0,\n      },\n    },\n    searchBox: {\n      flex: 1,\n      marginLeft: \"2rem\",\n    },\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst GroupsSelectors = ({\n  classes,\n  selectedGroups,\n  setSelectedGroups,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchGroups = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/groups`)\n      .then((res: GroupsList) => {\n        let groups = get(res, \"groups\", []);\n\n        if (!groups) {\n          groups = [];\n        }\n        setRecords(groups.sort(stringSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchGroups();\n    }\n  }, [loading, fetchGroups]);\n\n  const selGroups = !selectedGroups ? [] : selectedGroups;\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selGroups]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedGroups(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records !== null && records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.actionsTray}>\n              <label className={classes.actionsTitle}>Assign Groups</label>\n\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for Groups\"\n                  adornmentPosition=\"end\"\n                  onChange={setFilter}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Group\", elementKey: \"\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selGroups}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Groups\"\n                idField=\"\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Groups Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(GroupsSelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../common/api\";\nimport { Grid, LinearProgress } from \"@mui/material\";\nimport { User, UsersList } from \"./types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport { GroupsIcon, AddIcon, UsersIcon } from \"../../../icons\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { decodeFileName } from \"../../../common/utils\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport AButton from \"../Common/AButton/AButton\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n  S3_ALL_RESOURCES,\n} from \"../../../common/SecureComponent/permissions\";\n\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\n\nconst SetPolicy = withSuspense(\n  React.lazy(() => import(\"../Policies/SetPolicy\"))\n);\nconst DeleteUser = withSuspense(React.lazy(() => import(\"./DeleteUser\")));\nconst AddToGroup = withSuspense(React.lazy(() => import(\"./BulkAddToGroup\")));\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    searchField: {\n      ...searchField.searchField,\n      marginRight: \"auto\",\n      maxWidth: 380,\n    },\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IUsersProps {\n  classes: any;\n  history: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst ListUsers = ({ classes, setErrorSnackMessage, history }: IUsersProps) => {\n  const [records, setRecords] = useState<User[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [addGroupOpen, setAddGroupOpen] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [checkedUsers, setCheckedUsers] = useState<string[]>([]);\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n\n  const displayListUsers = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_LIST_USERS,\n  ]);\n\n  const deleteUser = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_DELETE_USER,\n  ]);\n\n  const viewUser = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_USER,\n  ]);\n\n  const addUserToGroup = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP,\n  ]);\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    if (refresh) {\n      setLoading(true);\n    }\n  };\n\n  const closeAddGroupBulk = (unCheckAll: boolean = false) => {\n    setAddGroupOpen(false);\n    if (unCheckAll) {\n      setCheckedUsers([]);\n    }\n  };\n\n  useEffect(() => {\n    if (loading) {\n      if (displayListUsers) {\n        api\n          .invoke(\"GET\", `/api/v1/users`)\n          .then((res: UsersList) => {\n            const users = res.users === null ? [] : res.users;\n\n            setLoading(false);\n            setRecords(users.sort(usersSort));\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            setErrorSnackMessage(err);\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setErrorSnackMessage, displayListUsers]);\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...checkedUsers]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedUsers(elements);\n\n    return elements;\n  };\n\n  const viewAction = (selectionElement: any): void => {\n    history.push(`${IAM_PAGES.USERS}/${encodeURI(selectionElement.accessKey)}`);\n  };\n\n  const deleteAction = (selectionElement: any): void => {\n    setDeleteOpen(true);\n    setSelectedUser(selectionElement);\n  };\n\n  const userLoggedIn = decodeFileName(\n    localStorage.getItem(\"userLoggedIn\") || \"\"\n  );\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !viewUser,\n    },\n    {\n      type: \"delete\",\n      onClick: deleteAction,\n      disableButtonFunction: (topValue: any) =>\n        topValue === userLoggedIn || !deleteUser,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {policyOpen && (\n        <SetPolicy\n          open={policyOpen}\n          selectedUser={selectedUser}\n          selectedGroup={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            setLoading(true);\n          }}\n        />\n      )}\n      {deleteOpen && (\n        <DeleteUser\n          deleteOpen={deleteOpen}\n          selectedUser={selectedUser}\n          closeDeleteModalAndRefresh={(refresh: boolean) => {\n            closeDeleteModalAndRefresh(refresh);\n          }}\n        />\n      )}\n      {addGroupOpen && (\n        <AddToGroup\n          open={addGroupOpen}\n          checkedUsers={checkedUsers}\n          closeModalAndRefresh={(close: boolean) => {\n            closeAddGroupBulk(close);\n          }}\n        />\n      )}\n      <PageHeader label={\"Users\"} />\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SearchBox\n            placeholder={\"Search Users\"}\n            onChange={setFilter}\n            overrideClass={classes.searchField}\n            value={filter}\n          />\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP]}\n            resource={CONSOLE_UI_RESOURCE}\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Add to Group\"}\n              text={\"Add to Group\"}\n              icon={<GroupsIcon />}\n              color=\"primary\"\n              disabled={checkedUsers.length <= 0}\n              onClick={() => {\n                if (checkedUsers.length > 0) {\n                  setAddGroupOpen(true);\n                }\n              }}\n              variant={\"outlined\"}\n            />\n          </SecureComponent>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.ADMIN_CREATE_USER,\n              IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n              IAM_SCOPES.ADMIN_LIST_GROUPS,\n            ]}\n            resource={S3_ALL_RESOURCES}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Create User\"}\n              text={\"Create User\"}\n              icon={<AddIcon />}\n              color=\"primary\"\n              onClick={() => {\n                history.push(`${IAM_PAGES.USER_ADD}`);\n              }}\n              variant={\"contained\"}\n            />\n          </SecureComponent>\n        </Grid>\n\n        {loading && <LinearProgress />}\n        {!loading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <Grid item xs={12} className={classes.tableBlock}>\n                  <SecureComponent\n                    scopes={[IAM_SCOPES.ADMIN_LIST_USERS]}\n                    resource={CONSOLE_UI_RESOURCE}\n                    errorProps={{ disabled: true }}\n                  >\n                    <TableWrapper\n                      itemActions={tableActions}\n                      columns={[\n                        { label: \"Access Key\", elementKey: \"accessKey\" },\n                      ]}\n                      onSelect={addUserToGroup ? selectionChanged : undefined}\n                      selectedItems={checkedUsers}\n                      isLoading={loading}\n                      records={filteredRecords}\n                      entityName=\"Users\"\n                      idField=\"accessKey\"\n                    />\n                  </SecureComponent>\n                </Grid>\n                <Grid item xs={12} marginTop={\"25px\"}>\n                  <HelpBox\n                    title={\"Users\"}\n                    iconComponent={<UsersIcon />}\n                    help={\n                      <Fragment>\n                        A MinIO user consists of a unique access key (username)\n                        and corresponding secret key (password). Clients must\n                        authenticate their identity by specifying both a valid\n                        access key (username) and the corresponding secret key\n                        (password) of an existing MinIO user.\n                        <br />\n                        <br />\n                        Each user can have one or more assigned policies that\n                        explicitly list the actions and resources to which that\n                        user has access. Users can also inherit policies from\n                        the groups in which they have membership.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://docs.min.io/minio/baremetal/monitoring/bucket-notifications/bucket-notifications.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Users\"}\n                    iconComponent={<UsersIcon />}\n                    help={\n                      <Fragment>\n                        A MinIO user consists of a unique access key (username)\n                        and corresponding secret key (password). Clients must\n                        authenticate their identity by specifying both a valid\n                        access key (username) and the corresponding secret key\n                        (password) of an existing MinIO user.\n                        <br />\n                        <br />\n                        Each user can have one or more assigned policies that\n                        explicitly list the actions and resources to which that\n                        user has access. Users can also inherit policies from\n                        the groups in which they have membership.\n                        <SecureComponent\n                          scopes={[\n                            IAM_SCOPES.ADMIN_CREATE_USER,\n                            IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n                            IAM_SCOPES.ADMIN_LIST_GROUPS,\n                          ]}\n                          matchAll\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <Fragment>\n                            <br />\n                            <br />\n                            To get started,{\" \"}\n                            <AButton\n                              onClick={() => {\n                                history.push(`${IAM_PAGES.USER_ADD}`);\n                              }}\n                            >\n                              Create a User\n                            </AButton>\n                            .\n                          </Fragment>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ListUsers));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalBasic,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport GroupsSelectors from \"./GroupsSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport AddMembersToGroup from \"../../../icons/AddMembersToGroupIcon\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...spacingUtils,\n    ...modalBasic,\n  });\n\ninterface IChangeUserGroupsContentProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: string;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst ChangeUserGroups = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  open,\n  setModalErrorSnackMessage,\n}: IChangeUserGroupsContentProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [selectedGroups, setSelectedGroups] = useState<string[]>([]);\n\n  const getUserInformation = useCallback(() => {\n    if (!selectedUser) {\n      return null;\n    }\n\n    api\n      .invoke(\"GET\", `/api/v1/user?name=${encodeURI(selectedUser)}`)\n      .then((res) => {\n        setAddLoading(false);\n        setAccessKey(res.accessKey);\n        setSelectedGroups(res.memberOf || []);\n        setEnabled(res.status === \"enabled\");\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [selectedUser, setModalErrorSnackMessage]);\n\n  useEffect(() => {\n    if (selectedUser === null) {\n      setAccessKey(\"\");\n      setSecretKey(\"\");\n      setSelectedGroups([]);\n    } else {\n      getUserInformation();\n    }\n  }, [selectedUser, getUserInformation]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedUser !== null) {\n      api\n        .invoke(\"PUT\", `/api/v1/user?name=${encodeURI(selectedUser)}`, {\n          status: enabled ? \"enabled\" : \"disabled\",\n          groups: selectedGroups,\n        })\n        .then((_) => {\n          setAddLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    } else {\n      api\n        .invoke(\"POST\", \"/api/v1/users\", {\n          accessKey,\n          secretKey,\n          groups: selectedGroups,\n        })\n        .then((_) => {\n          setAddLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  const resetForm = () => {\n    if (selectedUser !== null) {\n      setSelectedGroups([]);\n      return;\n    }\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setSelectedGroups([]);\n  };\n\n  const sendEnabled =\n    accessKey.trim() !== \"\" &&\n    ((secretKey.trim() !== \"\" && selectedUser === null) ||\n      selectedUser !== null);\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title={\"Set Groups\"}\n      titleIcon={<AddMembersToGroup />}\n    >\n      <React.Fragment>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <GroupsSelectors\n                selectedGroups={selectedGroups}\n                setSelectedGroups={(elements: string[]) => {\n                  setSelectedGroups(elements);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.buttonContainer}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.spacerRight}\n                onClick={resetForm}\n              >\n                Clear\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !sendEnabled}\n              >\n                Save\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      </React.Fragment>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ChangeUserGroups));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { modalBasic } from \"../Common/FormComponents/common/styleLibrary\";\nimport { IPolicyItem } from \"../Users/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"../Policies/PolicySelectors\";\n\ninterface ISetUserPoliciesProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: string;\n  currentPolicies: IPolicyItem[];\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetUserPolicies = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  currentPolicies,\n  setModalErrorSnackMessage,\n  open,\n}: ISetUserPoliciesProps) => {\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n\n  const SetUserPoliciesAction = () => {\n    let entity = \"user\";\n    let value = selectedUser;\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy`, {\n        name: selectedPolicy,\n        entityName: value,\n        entityType: entity,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      const userPolicy: string[] = [];\n      for (let pol of currentPolicies) {\n        userPolicy.push(pol.policy);\n      }\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedUser]);\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <PolicySelectors\n            selectedPolicy={selectedPolicy}\n            setSelectedPolicy={setSelectedPolicy}\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <button\n          type=\"button\"\n          color=\"primary\"\n          className={classes.clearButton}\n          onClick={resetSelection}\n        >\n          Reset\n        </button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={SetUserPoliciesAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(SetUserPolicies));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  serviceAccountStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AccountIcon } from \"../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...serviceAccountStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddUserServiceAccountProps {\n  classes: any;\n  open: boolean;\n  user: string;\n  closeModalAndRefresh: (res: NewServiceAccount | null) => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddUserServiceAccount = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n  user,\n}: IAddUserServiceAccountProps) => {\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [isRestrictedByPolicy, setIsRestrictedByPolicy] =\n    useState<boolean>(false);\n  const [addCredentials, setAddCredentials] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (addSending) {\n      if (addCredentials) {\n        api\n          .invoke(\"POST\", `/api/v1/user/${user}/service-account-credentials`, {\n            policy: policyDefinition,\n            accessKey: accessKey,\n            secretKey: secretKey,\n          })\n          .then((res) => {\n            setAddSending(false);\n            closeModalAndRefresh(res);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setAddSending(false);\n            setModalErrorSnackMessage(err);\n          });\n      } else {\n        api\n          .invoke(\"POST\", `/api/v1/user/${user}/service-accounts`, {\n            policy: policyDefinition,\n          })\n          .then((res) => {\n            setAddSending(false);\n            closeModalAndRefresh(res);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setAddSending(false);\n            setModalErrorSnackMessage(err);\n          });\n      }\n    }\n  }, [\n    addSending,\n    setAddSending,\n    setModalErrorSnackMessage,\n    policyDefinition,\n    closeModalAndRefresh,\n    user,\n    addCredentials,\n    accessKey,\n    secretKey,\n  ]);\n\n  const addUserServiceAccount = (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddSending(true);\n  };\n\n  const resetForm = () => {\n    setPolicyDefinition(\"\");\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(null);\n      }}\n      title={`Create Service Account`}\n      titleIcon={<AccountIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addUserServiceAccount(e);\n        }}\n      >\n        <Grid container className={classes.modalFormScrollable}>\n          <Grid item xs={12}>\n            <div className={classes.infoDetails}>\n              Service Accounts inherit the policy explicitly attached to the\n              parent user and the policy attached to each group in which the\n              parent user has membership. You can specify an optional\n              JSON-formatted policy below to restrict the Service Account access\n              to a subset of actions and resources explicitly allowed for the\n              parent user.\n              <Box sx={{ paddingTop: \"15px\", paddingBottom: \"15px\" }}>\n                You cannot modify the Service Account optional policy after\n                saving.\n              </Box>\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"locking\"\n                id=\"locking\"\n                name=\"locking\"\n                checked={addCredentials}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAddCredentials(event.target.checked);\n                }}\n                label={\"Customize Credentials\"}\n              />\n\n              {addCredentials && (\n                <Grid item xs={12}>\n                  <div className={classes.stackedInputs}>\n                    <InputBoxWrapper\n                      value={accessKey}\n                      label={\"Access Key\"}\n                      id={\"accessKey\"}\n                      name={\"accessKey\"}\n                      placeholder={\"Enter Access Key\"}\n                      onChange={(e) => {\n                        setAccessKey(e.target.value);\n                      }}\n                    />\n                    <InputBoxWrapper\n                      value={secretKey}\n                      label={\"Secret Key\"}\n                      id={\"secretKey\"}\n                      name={\"secretKey\"}\n                      placeholder={\"Enter Secret Key\"}\n                      onChange={(e) => {\n                        setSecretKey(e.target.value);\n                      }}\n                    />\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"locking\"\n                id=\"locking\"\n                name=\"locking\"\n                checked={isRestrictedByPolicy}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setIsRestrictedByPolicy(event.target.checked);\n                }}\n                label={\"Restrict with policy\"}\n              />\n\n              {isRestrictedByPolicy && (\n                <Grid item xs={12} className={classes.codeMirrorContainer}>\n                  <CodeMirrorWrapper\n                    label={\"Policy \"}\n                    value={policyDefinition}\n                    onBeforeChange={(editor, data, value) => {\n                      setPolicyDefinition(value);\n                    }}\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addSending}\n            >\n              Create\n            </Button>\n          </Grid>\n          {addSending && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddUserServiceAccount));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Box } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport { AppState } from \"../../../store\";\nimport { setErrorSnackMessage, setSnackBarMessage } from \"../../../actions\";\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\nimport { stringSort } from \"../../../utils/sortFunctions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport AddUserServiceAccount from \"./AddUserServiceAccount\";\nimport DeleteServiceAccount from \"../Account/DeleteServiceAccount\";\nimport CredentialsPrompt from \"../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { AddIcon, DeleteIcon } from \"../../../icons\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport DeleteMultipleServiceAccounts from \"./DeleteMultipleServiceAccounts\";\nimport { selectSAs } from \"../../Console/Configurations/utils\";\nimport ServiceAccountPolicy from \"../Account/ServiceAccountPolicy\";\nimport {\n  IAM_PAGES,\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport { SecureComponent } from \"../../../common/SecureComponent\";\n\ninterface IUserServiceAccountsProps {\n  classes: any;\n  user: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  hasPolicy: boolean;\n  history: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n    },\n    ...tableStyles,\n  });\n\nconst UserServiceAccountsPanel = ({\n  classes,\n  user,\n  setErrorSnackMessage,\n  hasPolicy,\n  history,\n}: IUserServiceAccountsProps) => {\n  const [records, setRecords] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addScreenOpen, setAddScreenOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedServiceAccount, setSelectedServiceAccount] = useState<\n    string | null\n  >(null);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [newServiceAccount, setNewServiceAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [selectedSAs, setSelectedSAs] = useState<string[]>([]);\n  const [deleteMultipleOpen, setDeleteMultipleOpen] = useState<boolean>(false);\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/user/${user}/service-accounts`)\n        .then((res: string[]) => {\n          const serviceAccounts = res.sort(stringSort);\n          setLoading(false);\n          setRecords(serviceAccounts);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, setLoading, setRecords, setErrorSnackMessage, user]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const closeAddModalAndRefresh = (res: NewServiceAccount | null) => {\n    setAddScreenOpen(false);\n    fetchRecords();\n\n    if (res !== null) {\n      const nsa: NewServiceAccount = {\n        console: {\n          accessKey: `${res.accessKey}`,\n          secretKey: `${res.secretKey}`,\n          url: `${res.url}`,\n        },\n      };\n      setNewServiceAccount(nsa);\n      setShowNewCredentials(true);\n    }\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const closeDeleteMultipleModalAndRefresh = (refresh: boolean) => {\n    setDeleteMultipleOpen(false);\n    if (refresh) {\n      setSnackBarMessage(`Service accounts deleted successfully.`);\n      setSelectedSAs([]);\n      setLoading(true);\n    }\n  };\n\n  const selectAllItems = () => {\n    if (selectedSAs.length === records.length) {\n      setSelectedSAs([]);\n      return;\n    }\n    setSelectedSAs(records);\n  };\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setNewServiceAccount(null);\n  };\n\n  const policyModalOpen = (selectedServiceAccount: string) => {\n    setSelectedServiceAccount(selectedServiceAccount);\n    setPolicyOpen(true);\n  };\n\n  const confirmDeleteServiceAccount = (selectedServiceAccount: string) => {\n    setSelectedServiceAccount(selectedServiceAccount);\n    setDeleteOpen(true);\n  };\n\n  const closePolicyModal = () => {\n    setPolicyOpen(false);\n    setLoading(true);\n  };\n\n  const tableActions = [\n    { type: \"view\", onClick: policyModalOpen },\n    { type: \"delete\", onClick: confirmDeleteServiceAccount },\n  ];\n\n  return (\n    <React.Fragment>\n      {addScreenOpen && (\n        <AddUserServiceAccount\n          open={addScreenOpen}\n          closeModalAndRefresh={(res: NewServiceAccount | null) => {\n            closeAddModalAndRefresh(res);\n          }}\n          user={user}\n        />\n      )}\n      {deleteOpen && (\n        <DeleteServiceAccount\n          deleteOpen={deleteOpen}\n          selectedServiceAccount={selectedServiceAccount}\n          closeDeleteModalAndRefresh={(refresh: boolean) => {\n            closeDeleteModalAndRefresh(refresh);\n          }}\n        />\n      )}\n      {deleteMultipleOpen && (\n        <DeleteMultipleServiceAccounts\n          deleteOpen={deleteMultipleOpen}\n          selectedSAs={selectedSAs}\n          closeDeleteModalAndRefresh={closeDeleteMultipleModalAndRefresh}\n        />\n      )}\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={newServiceAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Service Account\"\n        />\n      )}\n      {policyOpen && (\n        <ServiceAccountPolicy\n          open={policyOpen}\n          selectedAccessKey={selectedServiceAccount}\n          closeModalAndRefresh={closePolicyModal}\n        />\n      )}\n      <div className={classes.actionsTray}>\n        <PanelTitle>Service Accounts</PanelTitle>\n        <Box>\n          <RBIconButton\n            tooltip={\"Delete Selected\"}\n            onClick={() => {\n              setDeleteMultipleOpen(true);\n            }}\n            text={\"Delete Selected\"}\n            icon={<DeleteIcon />}\n            color=\"secondary\"\n            disabled={selectedSAs.length === 0}\n            variant={\"outlined\"}\n          />\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.ADMIN_CREATE_SERVICEACCOUNT,\n              IAM_SCOPES.ADMIN_UPDATE_SERVICEACCOUNT,\n              IAM_SCOPES.ADMIN_REMOVE_SERVICEACCOUNT,\n              IAM_SCOPES.ADMIN_LIST_SERVICEACCOUNTS,\n            ]}\n            resource={CONSOLE_UI_RESOURCE}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Create service account\"}\n              text={\"Create service account\"}\n              variant=\"contained\"\n              color=\"primary\"\n              icon={<AddIcon />}\n              onClick={() => {\n                let newSAPath = `/identity/users/${user}/new-user-sa`;\n                newSAPath = `${IAM_PAGES.USER_SA_ACCOUNT_ADD}/${user}`;\n                newSAPath = `/identity/users/new-user-sa/${user}`;\n                history.push(newSAPath);\n              }}\n              disabled={!hasPolicy}\n            />\n          </SecureComponent>\n        </Box>\n      </div>\n      <div className={classes.tableBlock}>\n        <TableWrapper\n          isLoading={loading}\n          records={records}\n          entityName={\"Service Accounts\"}\n          idField={\"\"}\n          columns={[{ label: \"Service Account\", elementKey: \"\" }]}\n          itemActions={tableActions}\n          selectedItems={selectedSAs}\n          onSelect={(e) => selectSAs(e, setSelectedSAs, selectedSAs)}\n          onSelectAll={selectAllItems}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UserServiceAccountsPanel));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport {\n  containerForHeader,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ChangeUserPasswordRequest } from \"../Buckets/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport { ChangePasswordIcon } from \"../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...spacingUtils,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IChangeUserPasswordProps {\n  classes: any;\n  open: boolean;\n  userName: string;\n  closeModal: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst ChangeUserPassword = ({\n  classes,\n  open,\n  userName,\n  closeModal,\n  setModalErrorSnackMessage,\n}: IChangeUserPasswordProps) => {\n  const [newPassword, setNewPassword] = useState<string>(\"\");\n  const [reNewPassword, setReNewPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const changeUserPassword = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n\n    if (newPassword.length < 8) {\n      setModalErrorSnackMessage({\n        errorMessage: \"Passwords must be at least 8 characters long\",\n        detailedError: \"\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    let request: ChangeUserPasswordRequest = {\n      selectedUser: userName,\n      newSecretKey: newPassword,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/account/change-user-password\", request)\n      .then((res) => {\n        setLoading(false);\n        setNewPassword(\"\");\n        setReNewPassword(\"\");\n        closeModal();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setNewPassword(\"\");\n        setReNewPassword(\"\");\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return open ? (\n    <ModalWrapper\n      title=\"Change User Password\"\n      modalOpen={open}\n      onClose={() => {\n        setNewPassword(\"\");\n        setReNewPassword(\"\");\n        closeModal();\n      }}\n      titleIcon={<ChangePasswordIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          changeUserPassword(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <div className={classes.spacerBottom}>\n              Change password for: {userName}\n            </div>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"new-password\"\n                name=\"new-password\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewPassword(event.target.value);\n                }}\n                label=\"New Password\"\n                type=\"password\"\n                value={newPassword}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"re-new-password\"\n                name=\"re-new-password\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setReNewPassword(event.target.value);\n                }}\n                label=\"Type New Password Again\"\n                type=\"password\"\n                value={reNewPassword}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                loading ||\n                !(reNewPassword.length > 0 && newPassword === reNewPassword)\n              }\n            >\n              Save\n            </Button>\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  ) : null;\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ChangeUserPassword));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport history from \"../../../history\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface IDeleteUserProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  userName: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteUserString = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  userName,\n  setErrorSnackMessage,\n}: IDeleteUserProps) => {\n  const onDelSuccess = () => {\n    history.push(IAM_PAGES.USERS);\n  };\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!userName) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/user?name=${encodeURI(userName)}`, {\n      id: userName,\n    });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete User`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      titleIcon={<ConfirmDeleteIcon />}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete user <br />\n          <b>{userName}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteUserString);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport {\n  AddIcon,\n  IAMPoliciesIcon,\n  PasswordKeyIcon,\n  TrashIcon,\n  UsersIcon,\n} from \"../../../icons\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../actions\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { IPolicyItem } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport ChangeUserGroups from \"./ChangeUserGroups\";\nimport SetUserPolicies from \"./SetUserPolicies\";\nimport history from \"../../../history\";\nimport UserServiceAccountsPanel from \"./UserServiceAccountsPanel\";\nimport ChangeUserPasswordModal from \"../Account/ChangeUserPasswordModal\";\nimport DeleteUserString from \"./DeleteUserString\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport BackLink from \"../../../common/BackLink\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".5rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".5rem\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IUserDetailsProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\ninterface IGroupItem {\n  group: string;\n}\n\nconst UserDetails = ({ classes, match }: IUserDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addGroupOpen, setAddGroupOpen] = useState<boolean>(false);\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [selectedGroups, setSelectedGroups] = useState<string[]>([]);\n  const [currentGroups, setCurrentGroups] = useState<IGroupItem[]>([]);\n  const [currentPolicies, setCurrentPolicies] = useState<IPolicyItem[]>([]);\n  const [changeUserPasswordModalOpen, setChangeUserPasswordModalOpen] =\n    useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [hasPolicy, setHasPolicy] = useState<boolean>(false);\n\n  const userName = match.params[\"userName\"];\n\n  const changeUserPassword = () => {\n    setChangeUserPasswordModalOpen(true);\n  };\n\n  const deleteUser = () => {\n    setDeleteOpen(true);\n  };\n\n  const getUserInformation = useCallback(() => {\n    if (userName === \"\") {\n      return null;\n    }\n    setLoading(true);\n    api\n      .invoke(\"GET\", `/api/v1/user?name=${encodeURIComponent(userName)}`)\n      .then((res) => {\n        setAddLoading(false);\n        const memberOf = res.memberOf || [];\n        setSelectedGroups(memberOf);\n        let currentGroups: IGroupItem[] = [];\n        for (let group of memberOf) {\n          currentGroups.push({\n            group: group,\n          });\n        }\n        setCurrentGroups(currentGroups);\n        let currentPolicies: IPolicyItem[] = [];\n        for (let policy of res.policy) {\n          currentPolicies.push({\n            policy: policy,\n          });\n        }\n        setCurrentPolicies(currentPolicies);\n        setEnabled(res.status === \"enabled\");\n        setHasPolicy(res.hasPolicy);\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [userName]);\n\n  const saveRecord = (isEnabled: boolean) => {\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/user?name=${encodeURIComponent(userName)}`, {\n        status: isEnabled ? \"enabled\" : \"disabled\",\n        groups: selectedGroups,\n      })\n      .then((_) => {\n        setAddLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    getUserInformation();\n  }, [getUserInformation]);\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    if (refresh) {\n      getUserInformation();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink label={\"User\"} to={IAM_PAGES.USERS} />\n          </Fragment>\n        }\n        actions={<React.Fragment></React.Fragment>}\n      />\n      {addGroupOpen && (\n        <ChangeUserGroups\n          open={addGroupOpen}\n          selectedUser={userName}\n          closeModalAndRefresh={() => {\n            setAddGroupOpen(false);\n            getUserInformation();\n          }}\n        />\n      )}\n      {policyOpen && (\n        <SetUserPolicies\n          open={policyOpen}\n          selectedUser={userName}\n          currentPolicies={currentPolicies}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            getUserInformation();\n          }}\n        />\n      )}\n      {deleteOpen && (\n        <DeleteUserString\n          deleteOpen={deleteOpen}\n          userName={userName}\n          closeDeleteModalAndRefresh={(refresh: boolean) => {\n            closeDeleteModalAndRefresh(refresh);\n          }}\n        />\n      )}\n      {changeUserPasswordModalOpen && (\n        <ChangeUserPasswordModal\n          open={changeUserPasswordModalOpen}\n          userName={userName}\n          closeModal={() => setChangeUserPasswordModalOpen(false)}\n        />\n      )}\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <UsersIcon width={40} />\n              </Fragment>\n            }\n            title={userName}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>User Status:</span>\n                <span className={classes.statusValue}>\n                  {enabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <FormSwitchWrapper\n                  indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                  checked={enabled}\n                  value={\"group_enabled\"}\n                  id=\"group-status\"\n                  name=\"group-status\"\n                  onChange={() => {\n                    setEnabled(!enabled);\n                    saveRecord(!enabled);\n                  }}\n                  switchOnly\n                />\n\n                <RBIconButton\n                  tooltip={\"Delete User\"}\n                  text={\"\"}\n                  onClick={deleteUser}\n                  icon={<TrashIcon />}\n                  color=\"secondary\"\n                  variant={\"outlined\"}\n                />\n\n                <RBIconButton\n                  tooltip={\"Change Password\"}\n                  text={\"\"}\n                  onClick={changeUserPassword}\n                  icon={<PasswordKeyIcon />}\n                  color=\"primary\"\n                  variant={\"outlined\"}\n                />\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: {\n                label: \"Groups\",\n              },\n              content: (\n                <React.Fragment>\n                  <div className={classes.actionsTray}>\n                    <PanelTitle>Groups</PanelTitle>\n                    <RBIconButton\n                      tooltip={\"Add to Groups\"}\n                      text={\"Add to Groups\"}\n                      onClick={() => {\n                        setAddGroupOpen(true);\n                      }}\n                      icon={<AddIcon />}\n                      color=\"primary\"\n                      variant={\"contained\"}\n                    />\n                  </div>\n                  <div className={classes.tableBlock}>\n                    <TableWrapper\n                      // itemActions={userTableActions}\n                      columns={[{ label: \"Name\", elementKey: \"group\" }]}\n                      isLoading={loading}\n                      records={currentGroups}\n                      entityName=\"Groups\"\n                      idField=\"group\"\n                    />\n                  </div>\n                </React.Fragment>\n              ),\n            }}\n            {{\n              tabConfig: {\n                label: \"Service Accounts\",\n              },\n              content: (\n                <UserServiceAccountsPanel\n                  user={userName}\n                  hasPolicy={hasPolicy}\n                  history={history}\n                />\n              ),\n            }}\n            {{\n              tabConfig: {\n                label: \"Policies\",\n              },\n              content: (\n                <React.Fragment>\n                  <div className={classes.actionsTray}>\n                    <PanelTitle>Policies</PanelTitle>\n\n                    <RBIconButton\n                      tooltip={\"Assign Policies\"}\n                      text={\"Assign Policies\"}\n                      onClick={() => {\n                        setPolicyOpen(true);\n                      }}\n                      icon={<IAMPoliciesIcon />}\n                      color=\"primary\"\n                      variant={\"contained\"}\n                    />\n                  </div>\n                  <div className={classes.tableBlock}>\n                    <TableWrapper\n                      itemActions={[\n                        {\n                          type: \"view\",\n                          onClick: (policy: IPolicyItem) => {\n                            history.push(\n                              `${IAM_PAGES.POLICIES}/${policy.policy}`\n                            );\n                          },\n                        },\n                      ]}\n                      columns={[{ label: \"Name\", elementKey: \"policy\" }]}\n                      isLoading={loading}\n                      records={currentPolicies}\n                      entityName=\"Policies\"\n                      idField=\"policy\"\n                    />\n                  </div>\n                </React.Fragment>\n              ),\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UserDetails));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport {\n  HelpIconFilled,\n  UsersIcon,\n  ChangeAccessPolicyIcon,\n  GroupsIcon,\n} from \"../../../icons\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst AddUserHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about the Users feature</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        A MinIO user consists of a unique access key (username) and\n        corresponding secret key (password). Clients must authenticate their\n        identity by specifying both a valid access key (username) and the\n        corresponding secret key (password) of an existing MinIO user.\n        <br />\n        <br />\n        Each user can have one or more assigned policies that explicitly list\n        the actions and resources to which that user has access. Users can also\n        inherit policies from the groups in which they have membership.\n        <br />\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem icon={<UsersIcon />} description={`Create Users`} />\n        <FeatureItem icon={<GroupsIcon />} description={`Manage Groups`} />\n        <FeatureItem\n          icon={<ChangeAccessPolicyIcon />}\n          description={`Assign Policies`}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddUserHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { CreateUserIcon } from \"../../../icons\";\n\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport history from \"../../../../src/history\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport PolicySelectors from \"../Policies/PolicySelectors\";\nimport BackLink from \"../../../common/BackLink\";\nimport GroupsSelectors from \"./GroupsSelectors\";\nimport { connect } from \"react-redux\";\nimport { User } from \"./types\";\n\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../../src/common/types\";\nimport api from \"../../../../src/common/api\";\n\nimport { setErrorSnackMessage } from \"../../../../src/actions\";\n\nimport FormLayout from \"../Common/FormLayout\";\nimport AddUserHelpBox from \"./AddUserHelpBox\";\n\ninterface IAddUserProps {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  selectedUser: User | null;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddUser = ({ classes, setErrorSnackMessage }: IAddUserProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [selectedGroups, setSelectedGroups] = useState<string[]>([]);\n  const [selectedPolicies, setSelectedPolicies] = useState<string[]>([]);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  const sendEnabled = accessKey.trim() !== \"\";\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (secretKey.length < 8) {\n      setErrorSnackMessage({\n        errorMessage: \"Passwords must be at least 8 characters long\",\n        detailedError: \"\",\n      });\n      setAddLoading(false);\n      return;\n    }\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", \"/api/v1/users\", {\n        accessKey,\n        secretKey,\n        groups: selectedGroups,\n        policies: selectedPolicies,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        history.push(`${IAM_PAGES.USERS}`);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setErrorSnackMessage(err);\n      });\n  };\n\n  const resetForm = () => {\n    setSelectedGroups([]);\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setSelectedPolicies([]);\n    setShowPassword(false);\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeader label={<BackLink to={IAM_PAGES.USERS} label={\"Users\"} />} />\n        <PageLayout>\n          <FormLayout\n            title={\"Create User\"}\n            icon={<CreateUserIcon />}\n            helpbox={<AddUserHelpBox />}\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                saveRecord(e);\n              }}\n            >\n              <Grid item xs={12}>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    className={classes.spacerBottom}\n                    classes={{\n                      inputLabel: classes.sizedLabel,\n                    }}\n                    id=\"accesskey-input\"\n                    name=\"accesskey-input\"\n                    label=\"User Name\"\n                    value={accessKey}\n                    autoFocus={true}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                  />\n                </div>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    className={classes.spacerBottom}\n                    classes={{\n                      inputLabel: classes.sizedLabel,\n                    }}\n                    id=\"standard-multiline-static\"\n                    name=\"standard-multiline-static\"\n                    label=\"Password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    value={secretKey}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    autoComplete=\"current-password\"\n                    overlayIcon={\n                      showPassword ? (\n                        <VisibilityOffIcon />\n                      ) : (\n                        <RemoveRedEyeIcon />\n                      )\n                    }\n                    overlayAction={() => setShowPassword(!showPassword)}\n                  />\n                </div>\n                <Grid container item spacing=\"20\">\n                  <Grid item xs={12}>\n                    <PolicySelectors\n                      selectedPolicy={selectedPolicies}\n                      setSelectedPolicy={setSelectedPolicies}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <GroupsSelectors\n                      selectedGroups={selectedGroups}\n                      setSelectedGroups={(elements: string[]) => {\n                        setSelectedGroups(elements);\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                {addLoading && (\n                  <Grid item xs={12}>\n                    <LinearProgress />\n                  </Grid>\n                )}\n              </Grid>\n              <Grid item xs={12} className={classes.modalButtonBar}>\n                <Button\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={resetForm}\n                >\n                  Clear\n                </Button>\n\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={addLoading || !sendEnabled}\n                >\n                  Save\n                </Button>\n              </Grid>\n            </form>\n          </FormLayout>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddUser));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport history from \"../../../history\";\nimport { Route, Router, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../../store\";\nimport { setMenuOpen } from \"../../../actions\";\nimport NotFoundPage from \"../../NotFoundPage\";\n\nimport ListUsers from \"./ListUsers\";\nimport UserDetails from \"./UserDetails\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport AddUserScreen from \"./AddUserScreen\";\n\nconst mapState = (state: AppState) => ({\n  open: state.system.sidebarOpen,\n});\n\nconst connector = connect(mapState, { setMenuOpen });\n\nconst Users = () => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path={IAM_PAGES.USER_ADD} exact component={AddUserScreen} />\n        <Route path={IAM_PAGES.USERS_VIEW} exact component={UserDetails} />\n        <Route path={IAM_PAGES.USERS} exact component={ListUsers} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default withRouter(connector(Users));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://min.io/?ref=con\">\n        MinIO\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Copyright from \"../common/Copyright\";\nimport PageLayout from \"./Console/Common/Layout/PageLayout\";\n\nconst NotFound: React.FC = () => {\n  return (\n    <PageLayout>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          textAlign: \"center\",\n          margin: \"auto\",\n          flexFlow: \"column\",\n        }}\n      >\n        <Box\n          sx={{\n            fontSize: \"110%\",\n            margin: \"0 0 0.25rem\",\n            color: \"#909090\",\n          }}\n        >\n          404 Error\n        </Box>\n        <Box\n          sx={{\n            fontStyle: \"normal\",\n            fontSize: \"clamp(2rem,calc(2rem + 1.2vw),3rem)\",\n            fontWeight: 700,\n          }}\n        >\n          Sorry, the page could not be found.\n        </Box>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Box>\n    </PageLayout>\n  );\n};\n\nexport default NotFound;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["mapDispatchToProps","setErrorSnackMessage","connector","connect","withStyles","theme","createStyles","wrapText","maxWidth","whiteSpace","wordWrap","classes","closeDeleteModalAndRefresh","deleteOpen","selectedServiceAccount","useApi","err","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmationContent","className","root","padding","margin","border","backgroundColor","textDecoration","cursor","fontSize","color","palette","info","main","fontFamily","children","rest","container","display","flexFlow","inputWithCopy","width","background","height","marginRight","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","tooltip","onClick","onMouseDown","edge","download","filename","element","document","createElement","setAttribute","encodeURIComponent","style","body","appendChild","click","removeChild","warningBlock","alignItems","credentialTitle","fontWeight","buttonContainer","textAlign","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","Grid","item","xs","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","RBIconButton","id","consoleExtras","itemMap","url","api","path","JSON","stringify","icon","variant","length","allCredentials","helpbox","sx","gap","gridTemplateColumns","md","tabStripStyle","minHeight","tabsContainer","tabsHeaderContainer","borderRight","justifyContent","borderBottom","marginBottom","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","React","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","child","push","tabConfig","content","onChange","event","newValue","orientation","scrollButtons","tabList","tabHeader","disableRipple","disableTouchRipple","focusRipple","setModalErrorSnackMessage","noFound","searchBox","flex","fieldLabel","tableBlock","tableStyles","filterBox","searchField","actionsTray","selectorsCommon","selectedPolicy","setSelectedPolicy","useState","records","setRecords","loading","filter","setFilter","fetchPolicies","useCallback","then","res","policies","sort","policySort","catch","useEffect","filteredRecords","elementItem","name","includes","placeholder","columns","elementKey","onSelect","e","targetD","target","checked","elements","selectedItems","entityName","idField","customPaperHeight","multiSelectTable","actionsTitle","alignSelf","marginLeft","selectedGroups","setSelectedGroups","fetchGroups","groups","stringSort","selGroups","adornmentPosition","SetPolicy","withSuspense","DeleteUser","AddToGroup","containerForHeader","spacing","history","setLoading","setDeleteOpen","selectedUser","setSelectedUser","addGroupOpen","setAddGroupOpen","checkedUsers","setCheckedUsers","policyOpen","setPolicyOpen","displayListUsers","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","deleteUser","viewUser","addUserToGroup","users","usersSort","userLoggedIn","decodeFileName","localStorage","getItem","tableActions","type","selectionElement","IAM_PAGES","encodeURI","disableButtonFunction","topValue","Fragment","selectedGroup","closeModalAndRefresh","refresh","close","unCheckAll","closeAddGroupBulk","PageHeader","PageLayout","SearchBox","overrideClass","SecureComponent","scopes","resource","errorProps","disabled","S3_ALL_RESOURCES","matchAll","LinearProgress","TableWrapper","itemActions","HelpBox","iconComponent","help","href","rel","alignContent","AButton","spacingUtils","modalBasic","addLoading","setAddLoading","setAccessKey","setSecretKey","enabled","setEnabled","getUserInformation","memberOf","status","sendEnabled","trim","noValidate","autoComplete","onSubmit","preventDefault","_","GroupsSelectors","Button","spacerRight","currentPolicies","actualPolicy","setActualPolicy","userPolicy","pol","policy","PolicySelectors","clearButton","entityType","serviceAccountStyles","modalStyleUtils","user","addSending","setAddSending","policyDefinition","setPolicyDefinition","isRestrictedByPolicy","setIsRestrictedByPolicy","addCredentials","setAddCredentials","addUserServiceAccount","modalFormScrollable","infoDetails","Box","paddingTop","paddingBottom","FormSwitchWrapper","stackedInputs","InputBoxWrapper","codeMirrorContainer","CodeMirrorWrapper","onBeforeChange","editor","data","modalButtonBar","state","session","console","hasPolicy","addScreenOpen","setAddScreenOpen","setSelectedServiceAccount","showNewCredentials","setShowNewCredentials","setNewServiceAccount","selectedSAs","setSelectedSAs","deleteMultipleOpen","setDeleteMultipleOpen","fetchRecords","serviceAccounts","nsa","closeAddModalAndRefresh","DeleteServiceAccount","DeleteMultipleServiceAccounts","setSnackBarMessage","CredentialsPrompt","ServiceAccountPolicy","selectedAccessKey","PanelTitle","newSAPath","selectSAs","onSelectAll","formFieldStyles","userName","newPassword","setNewPassword","reNewPassword","setReNewPassword","errorMessage","detailedError","request","newSecretKey","changeUserPassword","spacerBottom","formFieldRow","ConfirmDialog","DialogContentText","pageContainer","statusLabel","statusValue","match","currentGroups","setCurrentGroups","setCurrentPolicies","changeUserPasswordModalOpen","setChangeUserPasswordModalOpen","setHasPolicy","params","group","BackLink","to","actions","ChangeUserPasswordModal","ScreenTitle","indicatorLabels","isEnabled","switchOnly","VerticalTabs","FeatureItem","description","fontStyle","borderRadius","bottomContainer","flexGrow","selectedPolicies","setSelectedPolicies","showPassword","setShowPassword","FormLayout","saveRecord","sizedLabel","autoFocus","overlayIcon","VisibilityOff","RemoveRedEye","overlayAction","system","sidebarOpen","setMenuOpen","withRouter","exact","component","AddUserScreen","UserDetails","ListUsers","NotFoundPage","Copyright","Typography","align","Link","Date","getFullYear","mt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","Context","TabContext","props","idPrefix","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","TabList","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","inProps","useThemeProps","ownerState","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","getLinkUtilityClass","colorTransformations","primary","textPrimary","secondary","textSecondary","error","LinkRoot","capitalize","underline","button","getPath","transformDeprecatedColors","textDecorationColor","alpha","WebkitTapHighlightColor","outline","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onBlur","onFocus","TypographyClasses","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","current"],"sourceRoot":""}