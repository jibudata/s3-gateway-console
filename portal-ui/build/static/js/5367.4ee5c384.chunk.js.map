{"version":3,"file":"static/js/5367.4ee5c384.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/EditTenantMonitoringScreen.tsx","screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/securityContextSelector.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useParams } from \"react-router-dom\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { Button, DialogContentText } from \"@mui/material\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport KeyPairEdit from \"./KeyPairEdit\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { ITenantMonitoringStruct } from \"../ListTenants/types\";\nimport {\n  setPrometheusEnabled,\n  setImage,\n  setSidecarImage,\n  setInitImage,\n  setStorageClassName,\n  setDiskCapacityGB,\n  setServiceAccountName,\n  setCPURequest,\n  setMemRequest,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsUser,\n  setRunAsNonRoot,\n} from \"../TenantDetails/tenantMonitoringSlice\";\nimport { clearValidationError, imagePattern, numericPattern } from \"../utils\";\nimport SecurityContextSelector from \"../securityContextSelector\";\n\ninterface ITenantMonitoring {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantMonitoring = ({ classes }: ITenantMonitoring) => {\n  const dispatch = useAppDispatch();\n  const { tenantName, tenantNamespace } = useParams();\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.editTenantMonitoring.prometheusEnabled\n  );\n  const image = useSelector(\n    (state: AppState) => state.editTenantMonitoring.image\n  );\n  const sidecarImage = useSelector(\n    (state: AppState) => state.editTenantMonitoring.sidecarImage\n  );\n  const initImage = useSelector(\n    (state: AppState) => state.editTenantMonitoring.initImage\n  );\n  const diskCapacityGB = useSelector(\n    (state: AppState) => state.editTenantMonitoring.diskCapacityGB\n  );\n  const cpuRequest = useSelector(\n    (state: AppState) => state.editTenantMonitoring.monitoringCPURequest\n  );\n  const memRequest = useSelector(\n    (state: AppState) => state.editTenantMonitoring.monitoringMemRequest\n  );\n  const serviceAccountName = useSelector(\n    (state: AppState) => state.editTenantMonitoring.serviceAccountName\n  );\n  const storageClassName = useSelector(\n    (state: AppState) => state.editTenantMonitoring.storageClassName\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [toggleConfirmOpen, setToggleConfirmOpen] = useState<boolean>(false);\n\n  const [labels, setLabels] = useState<IKeyValue[]>([{ key: \"\", value: \"\" }]);\n  const [annotations, setAnnotations] = useState<IKeyValue[]>([\n    { key: \"\", value: \"\" },\n  ]);\n  const [nodeSelector, setNodeSelector] = useState<IKeyValue[]>([\n    { key: \"\", value: \"\" },\n  ]);\n\n  const [refreshMonitoringInfo, setRefreshMonitoringInfo] =\n    useState<boolean>(true);\n  const [labelsError, setLabelsError] = useState<any>({});\n  const [annotationsError, setAnnotationsError] = useState<any>({});\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\n\n  const runAsGroup = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsGroup\n  );\n  const runAsUser = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsUser\n  );\n  const fsGroup = useSelector(\n    (state: AppState) => state.editTenantMonitoring.fsGroup\n  );\n  const runAsNonRoot = useSelector(\n    (state: AppState) => state.editTenantMonitoring.runAsNonRoot\n  );\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const setMonitoringInfo = (res: ITenantMonitoringStruct) => {\n    dispatch(setImage(res.image));\n    dispatch(setSidecarImage(res.sidecarImage));\n    dispatch(setInitImage(res.initImage));\n    dispatch(setStorageClassName(res.storageClassName));\n    dispatch(setDiskCapacityGB(res.diskCapacityGB));\n    dispatch(setServiceAccountName(res.serviceAccountName));\n    dispatch(setCPURequest(res.monitoringCPURequest));\n    if (res.monitoringMemRequest) {\n      dispatch(\n        setMemRequest(\n          Math.floor(\n            parseInt(res.monitoringMemRequest, 10) / 1000000000\n          ).toString()\n        )\n      );\n    } else {\n      dispatch(setMemRequest(\"0\"));\n    }\n    res.labels != null\n      ? setLabels(res.labels)\n      : setLabels([{ key: \"\", value: \"\" }]);\n    res.annotations != null\n      ? setAnnotations(res.annotations)\n      : setAnnotations([{ key: \"\", value: \"\" }]);\n    res.nodeSelector != null\n      ? setNodeSelector(res.nodeSelector)\n      : setNodeSelector([{ key: \"\", value: \"\" }]);\n    dispatch(setRunAsGroup(res.securityContext.runAsGroup));\n    dispatch(setRunAsUser(res.securityContext.runAsUser));\n    dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\n    dispatch(setFSGroup(res.securityContext.fsGroup));\n  };\n\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\n    let retval: IKeyValue[] = [];\n    for (let i = 0; i < x.length; i++) {\n      if (x[i].key !== \"\") {\n        retval.push(x[i]);\n      }\n    }\n    return retval;\n  };\n\n  const checkValid = (): boolean => {\n    if (\n      Object.keys(validationErrors).length !== 0 ||\n      Object.keys(labelsError).length !== 0 ||\n      Object.keys(annotationsError).length !== 0 ||\n      Object.keys(nodeSelectorError).length !== 0\n    ) {\n      let err: ErrorResponseHandler = {\n        errorMessage: \"Invalid entry\",\n        detailedError: \"\",\n      };\n      dispatch(setErrorSnackMessage(err));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    if (refreshMonitoringInfo) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace || \"\"}/tenants/${\n            tenantName || \"\"\n          }/monitoring`\n        )\n        .then((res: ITenantMonitoringStruct) => {\n          dispatch(setPrometheusEnabled(res.prometheusEnabled));\n          setMonitoringInfo(res);\n          setRefreshMonitoringInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setRefreshMonitoringInfo(false);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshMonitoringInfo]);\n\n  const submitMonitoringInfo = () => {\n    if (checkValid()) {\n      const securityContext = {\n        runAsGroup: runAsGroup != null ? runAsGroup : \"0\",\n        runAsUser: runAsUser != null ? runAsUser : \"0\",\n        fsGroup: fsGroup != null ? fsGroup : \"0\",\n        runAsNonRoot: runAsNonRoot != null ? runAsNonRoot : true,\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n          {\n            labels: trim(labels),\n            annotations: trim(annotations),\n            nodeSelector: trim(nodeSelector),\n            image: image,\n            sidecarImage: sidecarImage,\n            initImage: initImage,\n            diskCapacityGB: diskCapacityGB,\n            serviceAccountName: serviceAccountName,\n            storageClassName: storageClassName,\n            monitoringCPURequest: cpuRequest,\n            monitoringMemRequest: memRequest + \"Gi\",\n            securityContext: securityContext,\n          }\n        )\n        .then(() => {\n          setRefreshMonitoringInfo(true);\n          dispatch(setSnackBarMessage(`Prometheus configuration updated.`));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n        });\n    }\n  };\n\n  const togglePrometheus = () => {\n    const configInfo = {\n      prometheusEnabled: prometheusEnabled,\n      toggle: true,\n    };\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        configInfo\n      )\n      .then(() => {\n        dispatch(setPrometheusEnabled(!prometheusEnabled));\n        setRefreshMonitoringInfo(true);\n        setToggleConfirmOpen(false);\n        setRefreshMonitoringInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <Fragment>\n      {toggleConfirmOpen && (\n        <ConfirmDialog\n          isOpen={toggleConfirmOpen}\n          title={\n            !prometheusEnabled\n              ? \"Enable Prometheus monitoring for this tenant?\"\n              : \"Disable Prometheus monitoring for this tenant?\"\n          }\n          confirmText={!prometheusEnabled ? \"Enable\" : \"Disable\"}\n          cancelText=\"Cancel\"\n          onClose={() => setToggleConfirmOpen(false)}\n          onConfirm={togglePrometheus}\n          confirmationContent={\n            <DialogContentText>\n              {!prometheusEnabled\n                ? \"A small Prometheus server will be started per the configuration provided, which will collect the Prometheus metrics for your tenant.\"\n                : \" Current configuration will be lost, and defaults reset if reenabled.\"}\n            </DialogContentText>\n          }\n        />\n      )}\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <h1 className={classes.sectionTitle}>Prometheus Monitoring </h1>\n        </Grid>\n        <Grid item xs={7} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"tenant_monitoring\"}\n            id=\"tenant-monitoring\"\n            name=\"tenant-monitoring\"\n            onChange={() => {\n              setToggleConfirmOpen(true);\n            }}\n            description=\"\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n      </Grid>\n\n      {prometheusEnabled && (\n        <Fragment>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`prometheus_image`}\n              label={\"Image\"}\n              placeholder={\"quay.io/prometheus/prometheus:latest\"}\n              name={`image`}\n              value={image}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setImage(event.target.value));\n                }\n                cleanValidation(`image`);\n              }}\n              key={`image`}\n              pattern={imagePattern}\n              error={validationErrors[`image`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`sidecarImage`}\n              label={\"Sidecar Image\"}\n              placeholder={\"library/alpine:latest\"}\n              name={`sidecarImage`}\n              value={sidecarImage}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setSidecarImage(event.target.value));\n                }\n                cleanValidation(`sidecarImage`);\n              }}\n              key={`sidecarImage`}\n              pattern={imagePattern}\n              error={validationErrors[`sidecarImage`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`initImage`}\n              label={\"Init Image\"}\n              placeholder={\"library/busybox:1.33.1\"}\n              name={`initImage`}\n              value={initImage}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setInitImage(event.target.value));\n                }\n                cleanValidation(`initImage`);\n              }}\n              key={`initImage`}\n              pattern={imagePattern}\n              error={validationErrors[`initImage`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`diskCapacityGB`}\n              label={\"Disk Capacity\"}\n              placeholder={\"Disk Capacity\"}\n              name={`diskCapacityGB`}\n              value={diskCapacityGB}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setDiskCapacityGB(event.target.value));\n                }\n                cleanValidation(`diskCapacityGB`);\n              }}\n              key={`diskCapacityGB`}\n              pattern={numericPattern}\n              error={validationErrors[`diskCapacityGB`] || \"\"}\n              overlayObject={\n                <InputUnitMenu\n                  id={\"size-unit\"}\n                  onUnitChange={() => {}}\n                  unitSelected={\"Gi\"}\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                  disabled={true}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`cpuRequest`}\n              label={\"CPU Request\"}\n              placeholder={\"CPU Request\"}\n              name={`cpuRequest`}\n              value={cpuRequest}\n              pattern={numericPattern}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setCPURequest(event.target.value));\n                }\n                cleanValidation(`cpuRequest`);\n              }}\n              key={`cpuRequest`}\n              error={validationErrors[`cpuRequest`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`memRequest`}\n              label={\"Memory Request\"}\n              placeholder={\"Memory request\"}\n              name={`memRequest`}\n              value={memRequest}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setMemRequest(event.target.value));\n                }\n                cleanValidation(`memRequest`);\n              }}\n              pattern={numericPattern}\n              key={`memRequest`}\n              error={validationErrors[`memRequest`] || \"\"}\n              overlayObject={\n                <InputUnitMenu\n                  id={\"size-unit\"}\n                  onUnitChange={() => {}}\n                  unitSelected={\"Gi\"}\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                  disabled={true}\n                />\n              }\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`serviceAccountName`}\n              label={\"Service Account\"}\n              placeholder={\"Service Account Name\"}\n              name={`serviceAccountName`}\n              value={serviceAccountName}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setServiceAccountName(event.target.value));\n                }\n                cleanValidation(`serviceAccountName`);\n              }}\n              key={`serviceAccountName`}\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\n              error={validationErrors[`serviceAccountName`] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} paddingBottom={2}>\n            <InputBoxWrapper\n              id={`storageClassName`}\n              label={\"Storage Class\"}\n              placeholder={\"Storage Class Name\"}\n              name={`storageClassName`}\n              value={storageClassName}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.validity.valid) {\n                  dispatch(setStorageClassName(event.target.value));\n                }\n                cleanValidation(`storageClassName`);\n              }}\n              key={`storageClassName`}\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\n              error={validationErrors[`storageClassName`] || \"\"}\n            />\n          </Grid>\n          {labels !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Labels</span>\n              <KeyPairEdit\n                newValues={labels}\n                setNewValues={setLabels}\n                paramName={\"Labels\"}\n                error={labelsError}\n                setError={setLabelsError}\n              />\n            </Grid>\n          )}\n\n          {annotations !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Annotations</span>\n              <KeyPairEdit\n                newValues={annotations}\n                setNewValues={setAnnotations}\n                paramName={\"Annotations\"}\n                error={annotationsError}\n                setError={setAnnotationsError}\n              />\n            </Grid>\n          )}\n          {nodeSelector !== null && (\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Node Selector</span>\n              <KeyPairEdit\n                newValues={nodeSelector}\n                setNewValues={setNodeSelector}\n                paramName={\"Node Selector\"}\n                error={nodeSelectorError}\n                setError={setNodeSelectorError}\n              />\n            </Grid>\n          )}\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <SecurityContextSelector\n              classes={classes}\n              runAsGroup={runAsGroup}\n              runAsUser={runAsUser}\n              fsGroup={fsGroup}\n              runAsNonRoot={runAsNonRoot}\n              setFSGroup={(value: string) => dispatch(setFSGroup(value))}\n              setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\n              setRunAsGroup={(value: string) => dispatch(setRunAsGroup(value))}\n              setRunAsNonRoot={(value: boolean) =>\n                dispatch(setRunAsNonRoot(value))\n              }\n            />\n          </Grid>\n          <Grid item xs={12} textAlign={\"right\"}>\n            <Button\n              type=\"submit\"\n              id={\"submit_button\"}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!checkValid()}\n              onClick={() => submitMonitoringInfo()}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantMonitoring);\n","import React, { Fragment, useEffect } from \"react\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../utils\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IKeyPairEditProps {\n  classes: any;\n  paramName: string;\n  error: any;\n  setError: (e: any) => void;\n  newValues: IKeyValue[];\n  setNewValues: (vals: IKeyValue[]) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      \"& div\": {\n        flexGrow: 1,\n        width: \"100%\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 20px 20px\",\n      display: \"grid\",\n      gridGap: 20,\n      paddingRight: 20,\n    },\n    ...modalBasic,\n  });\n\nconst KeyPairEdit = ({\n  classes,\n  paramName,\n  newValues,\n  setNewValues,\n  error,\n  setError,\n}: IKeyPairEditProps) => {\n  const cleanValidation = (fieldName: string) => {\n    setError(clearValidationError(error, fieldName));\n  };\n\n  useEffect(() => {\n    let keyPairValidation: IValidation[] = [];\n\n    for (var i = 0; i < newValues.length; i++) {\n      keyPairValidation.push({\n        fieldKey: `key-${i.toString()}`,\n        required: false,\n        value: newValues[i].key,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid key\",\n      });\n      keyPairValidation.push({\n        fieldKey: `val-${i.toString()}`,\n        required: false,\n        value: newValues[i].value,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid value\",\n      });\n    }\n\n    const commonVal = commonFormValidation(keyPairValidation);\n    setError(commonVal);\n  }, [newValues, setError]);\n\n  let keyValueInputs = newValues.map((_, index) => {\n    return (\n      <Fragment key={`keyvalue-${index.toString()}`}>\n        <Grid paddingBottom={1}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`key-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Key\"}\n              name={`key-${index.toString()}`}\n              value={newValues[index].key}\n              onChange={(e) => {\n                let tempLabels = [...newValues];\n                tempLabels[index].key = e.target.value;\n                setNewValues(tempLabels);\n                cleanValidation(`key-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-key-${index.toString()}`}\n              error={error[`key-${index.toString()}`] || \"\"}\n            />\n            <InputBoxWrapper\n              id={`val-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Value\"}\n              name={`val-${index.toString()}`}\n              value={newValues[index].value}\n              onChange={(e) => {\n                let tempLabels = [...newValues];\n                tempLabels[index].value = e.target.value;\n                setNewValues(tempLabels);\n                cleanValidation(`val-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-val-${index.toString()}`}\n              error={error[`val-${index.toString()}`] || \"\"}\n            />\n            <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\n              <IconButton\n                id={`add-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n                size={\"small\"}\n                onClick={() => {\n                  let tempLabels = [...newValues];\n                  tempLabels.push({ key: \"\", value: \"\" });\n                  setNewValues(tempLabels);\n                }}\n              >\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\n              <IconButton\n                id={`remove-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\n                size={\"small\"}\n                style={{ marginLeft: 16 }}\n                onClick={() => {\n                  if (newValues.length === 1) {\n                    setNewValues([{ key: \"\", value: \"\" }]);\n                  }\n                  if (newValues.length > 1) {\n                    let tempLabels = [...newValues];\n                    tempLabels.splice(index, 1);\n                    setNewValues(tempLabels);\n                  }\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Grid>\n      </Fragment>\n    );\n  });\n\n  return <Fragment>{keyValueInputs}</Fragment>;\n};\n\nexport default withStyles(styles)(KeyPairEdit);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { Grid } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\n\ninterface IEditSecurityContextProps {\n  classes: any;\n  runAsUser: string;\n  runAsGroup: string;\n  fsGroup: string;\n  runAsNonRoot: boolean;\n  setRunAsUser: any;\n  setRunAsGroup: any;\n  setFSGroup: any;\n  setRunAsNonRoot: any;\n}\nconst SecurityContextSelector = ({\n  classes,\n  runAsGroup,\n  runAsUser,\n  fsGroup,\n  runAsNonRoot,\n  setRunAsUser,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsNonRoot,\n}: IEditSecurityContextProps) => {\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\n        <legend className={classes.descriptionText}>Security Context</legend>\n\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsUser\"\n                name=\"securityContext_runAsUser\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsUser(e.target.value));\n                }}\n                label=\"Run As User\"\n                value={runAsUser}\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsGroup\"\n                name=\"securityContext_runAsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsGroup(e.target.value));\n                }}\n                label=\"Run As Group\"\n                value={runAsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_fsGroup\"\n                name=\"securityContext_fsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setFSGroup(e.target.value));\n                }}\n                label=\"FsGroup\"\n                value={fsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <br />\n        <Grid item xs={12}>\n          <div className={classes.multiContainer}>\n            <FormSwitchWrapper\n              value=\"SecurityContextRunAsNonRoot\"\n              id=\"securityContext_runAsNonRoot\"\n              name=\"securityContext_runAsNonRoot\"\n              checked={runAsNonRoot}\n              onChange={() => {\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\n              }}\n              label={\"Do not run as Root\"}\n            />\n          </div>\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\nexport default SecurityContextSelector;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","tenantDetailsStyles","spacingUtils","bold","fontWeight","italic","fontStyle","fileItem","marginRight","display","minWidth","flexFlow","containerForHeader","spacing","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","classes","dispatch","useAppDispatch","useParams","tenantName","tenantNamespace","prometheusEnabled","useSelector","state","editTenantMonitoring","image","sidecarImage","initImage","diskCapacityGB","cpuRequest","monitoringCPURequest","memRequest","monitoringMemRequest","serviceAccountName","storageClassName","useState","validationErrors","setValidationErrors","toggleConfirmOpen","setToggleConfirmOpen","key","value","labels","setLabels","annotations","setAnnotations","nodeSelector","setNodeSelector","refreshMonitoringInfo","setRefreshMonitoringInfo","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","runAsGroup","runAsUser","fsGroup","runAsNonRoot","cleanValidation","fieldName","clearValidationError","trim","x","retval","i","length","push","checkValid","Object","keys","setErrorSnackMessage","errorMessage","detailedError","useEffect","api","then","res","setPrometheusEnabled","setImage","setSidecarImage","setInitImage","setStorageClassName","setDiskCapacityGB","setServiceAccountName","setCPURequest","setMemRequest","Math","floor","parseInt","toString","setRunAsGroup","securityContext","setRunAsUser","setRunAsNonRoot","setFSGroup","setMonitoringInfo","catch","err","Fragment","isOpen","title","confirmText","cancelText","onClose","onConfirm","configInfo","toggle","confirmationContent","container","item","xs","className","sectionTitle","justifyContent","textAlign","label","indicatorLabels","checked","id","name","onChange","description","hrClass","paddingBottom","placeholder","event","target","validity","valid","pattern","imagePattern","error","numericPattern","overlayObject","onUnitChange","unitSelected","unitsList","disabled","formFieldRow","inputLabel","newValues","setNewValues","paramName","setError","type","variant","color","onClick","setSnackBarMessage","submitMonitoringInfo","bottomContainer","flexGrow","alignItems","width","shortened","gridTemplateColumns","gridGap","paddingRight","keyPairValidation","fieldKey","required","customPatternMessage","commonVal","commonFormValidation","keyValueInputs","map","_","index","replace","e","tempLabels","size","style","marginLeft","splice","useDispatch","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","configSectionItem","min","multiContainer","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}