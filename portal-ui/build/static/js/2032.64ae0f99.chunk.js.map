{"version":3,"file":"static/js/2032.64ae0f99.chunk.js","mappings":"+MAmGA,UAnEuB,SAAHA,GAMS,IAL3BC,EAA0BD,EAA1BC,2BACAC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAQJ,EAARI,SACAC,EAAOL,EAAPK,QAEMC,GAAWC,EAAAA,EAAAA,MAMjBC,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASR,GAA2B,EAAM,IACzC,SAACS,GAAyB,OAC3CJ,GAASK,EAAAA,EAAAA,IAAqBD,GAAM,IAGmCE,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlEM,EAAaF,EAAA,GAAEG,EAAeH,EAAA,GACrCI,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAvCG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9B,IAAKf,EACH,OAAO,KAOT,OACEkB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,UAAAC,OAAYnB,GACjBoB,YAAa,SACbC,OAAQxB,EACRyB,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,IAAiB,IAC7BC,UAAWf,EACXgB,UAXoB,WACtBf,EAAgB,SAAS,GAADS,OAAKpB,GAAQoB,OAAGrB,GAC1C,EAUI4B,QArBY,WAAH,OAAS9B,GAA2B,EAAO,EAsBpD+B,mBAAoB,CAClBC,SAAUd,IAAchB,GAAgBW,GAE1CoB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPhB,EAAAA,EAAAA,KAACiB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChBhB,EAAAA,EAAAA,KAACoB,EAAAA,IAAkB,CACjBC,QAAS,QACTnB,MAAO,UACPoB,QACE,4KAEFC,GAAI,CAAEC,OAAQ,cAEX,4BACiBxB,EAAAA,EAAAA,KAAA,KAAAgB,SAAIlC,IAAiB,gBAC7CkB,EAAAA,EAAAA,KAACiB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChBhB,EAAAA,EAAAA,KAACyB,EAAAA,IAAQ,CACPC,GAAG,aACHC,KAAK,aACLC,SAAU,SAACC,GACT9B,EAAa8B,EAAMC,OAAOC,MAC5B,EACAC,QAAS,SAACC,GAAC,OAAKA,EAAEC,gBAAgB,EAClCC,MAAM,GACNJ,MAAOjC,UAOrB,C","sources":["screens/Console/KMS/DeleteKMSModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon, Grid, InformativeMessage, InputBox } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteKMSModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedItem: string;\n  endpoint: string;\n  element: string;\n}\n\nconst DeleteKMSModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedItem,\n  endpoint,\n  element,\n}: IDeleteKMSModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n  const [retypeKey, setRetypeKey] = useState(\"\");\n\n  if (!selectedItem) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `${endpoint}${selectedItem}`);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${element}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeKey !== selectedItem || deleteLoading,\n      }}\n      confirmationContent={\n        <Fragment>\n          <Grid item xs={12}>\n            <InformativeMessage\n              variant={\"error\"}\n              title={\"WARNING\"}\n              message={\n                \"Please note that this is a dangerous operation. Once a key has been deleted all data that has been encrypted with it cannot be decrypted anymore, and therefore, is lost.\"\n              }\n              sx={{ margin: \"15px 0\" }}\n            />\n          </Grid>\n          To continue please type <b>{selectedItem}</b> in the box.\n          <Grid item xs={12}>\n            <InputBox\n              id=\"retype-key\"\n              name=\"retype-key\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeKey(event.target.value);\n              }}\n              onPaste={(e) => e.preventDefault()}\n              label=\"\"\n              value={retypeKey}\n            />\n          </Grid>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteKMSModal;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedItem","endpoint","element","dispatch","useAppDispatch","_useApi","useApi","err","setErrorSnackMessage","_useApi2","_slicedToArray","deleteLoading","invokeDeleteApi","_useState","useState","_useState2","retypeKey","setRetypeKey","_jsx","ConfirmDialog","title","concat","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","Fragment","children","Grid","item","xs","InformativeMessage","variant","message","sx","margin","InputBox","id","name","onChange","event","target","value","onPaste","e","preventDefault","label"],"sourceRoot":""}