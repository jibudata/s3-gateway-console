{"version":3,"file":"static/js/7588.13f4f512.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","icons/CertificateIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      viewBox=\"0 0 256 256\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"certificate_svg__a\">\n          <path\n            data-name=\"Rect\\xE1ngulo 2156\"\n            fill=\"#07193e\"\n            d=\"M0 0h256v222.048H0z\"\n          />\n        </clipPath>\n      </defs>\n      <g\n        data-name=\"Grupo 4763\"\n        transform=\"translate(0 17)\"\n        clipPath=\"url(#certificate_svg__a)\"\n        fill=\"#07193e\"\n      >\n        <path\n          data-name=\"Trazado 8152\"\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\n        />\n        <path\n          data-name=\"Trazado 8153\"\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\n        />\n      </g>\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\n    </svg>\n  );\n};\nexport default CertificateIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon } from \"../../../../../icons\";\nimport { Button } from \"mds\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n  formFieldStyles,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Environment Variables</h3>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADUsrAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n  addIDPADGroupAtIndex,\n  removeIDPADGroupAtIndex,\n  setIDPADGroupAtIndex,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  OIDCLogoElement,\n  LDAPLogoElement,\n  BuiltInLogoElement,\n} from \"../../LogoComponents\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const namespace = useSelector((state: AppState) => {\n    return state.createTenant.fields.nameTenant.namespace || \"<namespace>\";\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    return state.createTenant.fields.nameTenant.tenantName || \"<tenant-name>\";\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addCaCertificate,\n  deleteCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteKeyPair,\n  addClientKeyPair,\n  deleteClientKeyPair,\n  addFileToClientKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileVaultCa,\n  addFileVaultCert,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n  const vaultCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCertificate\n  );\n  const vaultCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCA\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n\n      <Grid container className={classes.mutualTlsConfig}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Mutual TLS authentication (optional)\n          </legend>\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"key\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_key\");\n            }}\n            accept=\".key,.pem\"\n            id=\"vault_key\"\n            name=\"vault_key\"\n            label=\"Key\"\n            value={vaultCertificate.key}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"cert\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_cert\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_cert\"\n            name=\"vault_cert\"\n            label=\"Cert\"\n            value={vaultCertificate.cert}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_ca\"\n            name=\"vault_ca\"\n            label=\"CA\"\n            value={vaultCA.cert}\n          />\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileGemaltoCa,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.gemaltoCA\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Custom CA Root certificate verification\n          </legend>\n\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileGemaltoCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"gemalto_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"gemalto_ca\"\n            name=\"gemalto_ca\"\n            label=\"CA\"\n            value={gemaltoCA.cert}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileClientCert,\n  addFileServerCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const serverCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.serverCertificate\n  );\n  const clientCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.clientCertificate\n  );\n\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption Service Certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={serverCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={serverCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Mutual TLS authentication with MinIO\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={clientCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={clientCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 300px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={logSearchSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={\n                        logSearchPostgresSecurityContext.fsGroupChangePolicy\n                      }\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <hr className={classes.hrClass} />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={prometheusSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { StorageIcon } from \"../../../../icons\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: true,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: true,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeader\n        label={\n          <BackLink\n            to={\"/tenants\"}\n            label={\"Tenants\"}\n            executeOnClick={() => {\n              dispatch(resetAddTenantForm());\n            }}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport LDAPIcon from \"../../../icons/LDAPIcon\";\nimport { OIDCIcon } from \"../../../icons\";\nimport { UsersIcon } from \"../../../icons\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\n\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n\n  const {\n    absolute = false,\n    children,\n    className,\n    component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","props","xmlns","fill","viewBox","id","d","transform","clipPath","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","tooltipContainer","placement","overflow","language","onChange","evn","target","fontFamily","minHeight","borderTop","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","Tooltip","HelpIcon","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","errorProps","cloneElement","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","RemoveIcon","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","FeatureItem","description","Box","fontStyle","namespace","nameTenant","tenantName","CertificateIcon","href","rel","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","vaultCertificate","vaultCA","encryptionValidation","mutualTlsConfig","addFileVaultCert","addFileVaultCa","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoCA","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","addFileGemaltoCa","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","serverCertificate","clientCertificate","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","textAlign","indicatorLabels","hrClass","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileServerCert","addFileClientCert","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","AddIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","_excluded","DividerRoot","styled","slot","overridesResolver","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","top","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","React","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","_jsx","as","clsx","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","writable","configurable","defineProperty","_possibleConstructorReturn","self","call"],"sourceRoot":""}