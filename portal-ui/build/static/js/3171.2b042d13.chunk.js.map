{"version":3,"file":"static/js/3171.2b042d13.chunk.js","mappings":"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","sources":["screens/Console/Common/FormLayout.tsx","screens/Console/Groups/AddGroupHelpBox.tsx","screens/Console/Groups/AddGroupScreen.tsx","screens/Console/Groups/UsersSelectors.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport SectionTitle from \"./SectionTitle\";\n\ntype Props = {\n  title: string;\n  icon: React.ReactNode;\n  helpbox?: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst FormLayout: React.FC<Props> = ({ children, title, helpbox, icon }) => {\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        padding: \"25px\",\n        gap: \"25px\",\n        gridTemplateColumns: {\n          md: \"2fr 1.2fr\",\n          xs: \"1fr\",\n        },\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box>\n        <SectionTitle icon={icon}>{title}</SectionTitle>\n        <Box sx={{ height: 16 }} />\n        {children}\n      </Box>\n\n      {helpbox}\n    </Box>\n  );\n};\n\nexport default FormLayout;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { GroupsIcon, HelpIconFilled, IAMPoliciesIcon } from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst AddGroupHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about Groups</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        Adding groups lets you assign IAM policies to multiple users at once.\n        <Box sx={{ paddingTop: \"20px\", paddingBottom: \"10px\" }}>\n          Users inherit access permissions to data and resources through the\n          groups they belong to.\n        </Box>\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          A user can be a member of multiple groups.\n        </Box>\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          Groups provide a simplified method for managing shared permissions\n          among users with common access patterns and workloads. Client’s cannot\n          authenticate to a MinIO deployment using a group as an identity.\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem icon={<GroupsIcon />} description={`Add Users to Group`} />\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          Select from the list of displayed users to assign users to the new\n          group at creation. These users inherit the policies assigned to the\n          group.\n        </Box>\n        <FeatureItem\n          icon={<IAMPoliciesIcon />}\n          description={`Assign Custom IAM Policies for Group`}\n        />\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          You can add policies to the group by selecting it from the Groups view\n          after creation. The Policy view lets you manage the assigned policies\n          for the group.\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddGroupHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\nimport { BackLink, Button, CreateGroupIcon } from \"mds\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddGroupHelpBox from \"./AddGroupHelpBox\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../../src/common/types\";\nimport api from \"../../../../src/common/api\";\n\nimport FormLayout from \"../Common/FormLayout\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\ninterface IAddGroupProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddGroupScreen = ({ classes }: IAddGroupProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [groupName, setGroupName] = useState<string>(\"\");\n  const [saving, isSaving] = useState<boolean>(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [validGroup, setValidGroup] = useState<boolean>(false);\n\n  useEffect(() => {\n    setValidGroup(groupName.trim() !== \"\");\n  }, [groupName, selectedUsers]);\n\n  useEffect(() => {\n    if (saving) {\n      const saveRecord = () => {\n        api\n          .invoke(\"POST\", \"/api/v1/groups\", {\n            group: groupName,\n            members: selectedUsers,\n          })\n          .then((res) => {\n            isSaving(false);\n            navigate(`${IAM_PAGES.GROUPS}`);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            isSaving(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      };\n\n      saveRecord();\n    }\n  }, [saving, groupName, selectedUsers, dispatch, navigate]);\n\n  //Fetch Actions\n  const setSaving = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    isSaving(true);\n  };\n\n  const resetForm = () => {\n    setGroupName(\"\");\n    setSelectedUsers([]);\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              label={\"Groups\"}\n              onClick={() => navigate(IAM_PAGES.GROUPS)}\n            />\n          }\n        />\n        <PageLayout>\n          <FormLayout\n            title={\"Create Group\"}\n            icon={<CreateGroupIcon />}\n            helpbox={<AddGroupHelpBox />}\n          >\n            <form noValidate autoComplete=\"off\" onSubmit={setSaving}>\n              <Grid container>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"group-name\"\n                    name=\"group-name\"\n                    label=\"Group Name\"\n                    autoFocus={true}\n                    value={groupName}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setGroupName(e.target.value);\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.userSelector}>\n                  <UsersSelectors\n                    selectedUsers={selectedUsers}\n                    setSelectedUsers={setSelectedUsers}\n                    editMode={true}\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.modalButtonBar}>\n                <Button\n                  id={\"clear-group\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  style={classes.spacerRight}\n                  onClick={resetForm}\n                  label={\"Clear\"}\n                />\n\n                <Button\n                  id={\"save-group\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  disabled={saving || !validGroup}\n                  label={\"Save\"}\n                />\n              </Grid>\n              {saving && (\n                <Grid item xs={12}>\n                  <LinearProgress />\n                </Grid>\n              )}\n            </form>\n          </FormLayout>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddGroupScreen);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n}: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n        isLoading(false);\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(UsersSelectors);\n"],"names":["children","title","helpbox","icon","sx","display","padding","gap","gridTemplateColumns","md","xs","border","height","FeatureItem","description","Box","marginRight","width","marginBottom","style","fontSize","fontStyle","color","flex","borderRadius","flexFlow","marginTop","fontWeight","alignItems","paddingTop","paddingBottom","withStyles","theme","createStyles","formFieldStyles","modalStyleUtils","classes","dispatch","useAppDispatch","navigate","useNavigate","useState","groupName","setGroupName","saving","isSaving","selectedUsers","setSelectedUsers","validGroup","setValidGroup","useEffect","trim","api","group","members","then","res","IAM_PAGES","catch","err","setErrorSnackMessage","Fragment","Grid","item","PageHeaderWrapper","label","onClick","PageLayout","FormLayout","noValidate","autoComplete","onSubmit","event","preventDefault","container","className","formFieldRow","InputBoxWrapper","id","name","autoFocus","value","onChange","e","target","userSelector","UsersSelectors","editMode","modalButtonBar","type","variant","spacerRight","disabled","LinearProgress","paper","overflow","flexDirection","boxShadow","tableBlock","tableStyles","searchBox","actionsTray","actionsTitle","alignSelf","minWidth","noFound","textAlign","spacing","selectorsCommon","records","setRecords","loading","isLoading","filter","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","setModalErrorSnackMessage","selUsers","filteredRecords","elementItem","accessKey","includes","length","placeholder","adornmentPosition","columns","elementKey","onSelect","targetD","checked","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable"],"sourceRoot":""}