{"version":3,"file":"static/js/6247.bb8bb4b7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/EventDestinations/CustomForms/ConfPostgres.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Grid, InputBox, RadioGroup, ReadBox, Select, Switch } from \"mds\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\n\ninterface IConfPostgresProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfPostgres = ({ onChange, classes }: IConfPostgresProps) => {\n  //Local States\n  const [useConnectionString, setUseConnectionString] =\n    useState<boolean>(false);\n  const [connectionString, setConnectionString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [sslMode, setSslMode] = useState<string>(\" \");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // connection_string*  (string)             Postgres server connection-string e.g. \"host=localhost port=5432 dbname=minio_events user=postgres password=password sslmode=disable\"\n\n  //  \"host=localhost\n  // port=5432\n  //dbname=minio_events\n  //user=postgres\n  //password=password\n  //sslmode=disable\"\n\n  // table*              (string)             DB table name to store/update events, table is auto-created\n  // format*             (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir           (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit         (number)             maximum limit for undelivered messages, defaults to '10000'\n  // comment             (sentence)           optionally add a comment to this setting\n\n  const KvSeparator = \"=\";\n  const parseConnectionString = (\n    input: string,\n    keys: string[],\n  ): Map<string, string> => {\n    let valueIndexes: number[] = [];\n\n    for (const key of keys) {\n      const i = input.indexOf(key + KvSeparator);\n      if (i === -1) {\n        continue;\n      }\n      valueIndexes.push(i);\n    }\n    valueIndexes.sort((n1, n2) => n1 - n2);\n\n    let kvFields = new Map<string, string>();\n    let fields: string[] = new Array<string>(valueIndexes.length);\n    for (let i = 0; i < valueIndexes.length; i++) {\n      const j = i + 1;\n      if (j < valueIndexes.length) {\n        fields[i] = input.slice(valueIndexes[i], valueIndexes[j]);\n      } else {\n        fields[i] = input.slice(valueIndexes[i]);\n      }\n    }\n\n    for (let field of fields) {\n      if (field === undefined) {\n        continue;\n      }\n      const key = field.slice(0, field.indexOf(\"=\"));\n      const value = field.slice(field.indexOf(\"=\") + 1).trim();\n      kvFields.set(key, value);\n    }\n    return kvFields;\n  };\n\n  const configToString = useCallback((): string => {\n    let strValue = \"\";\n    if (host !== \"\") {\n      strValue = `${strValue} host=${host}`;\n    }\n    if (dbName !== \"\") {\n      strValue = `${strValue} dbname=${dbName}`;\n    }\n    if (user !== \"\") {\n      strValue = `${strValue} user=${user}`;\n    }\n    if (password !== \"\") {\n      strValue = `${strValue} password=${password}`;\n    }\n    if (port !== \"\") {\n      strValue = `${strValue} port=${port}`;\n    }\n    if (sslMode !== \" \") {\n      strValue = `${strValue} sslmode=${sslMode}`;\n    }\n\n    strValue = `${strValue} `;\n\n    return strValue.trim();\n  }, [host, dbName, user, password, port, sslMode]);\n\n  useEffect(() => {\n    if (connectionString !== \"\") {\n      const formValues = [\n        { key: \"connection_string\", value: connectionString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [\n    connectionString,\n    table,\n    format,\n    queueDir,\n    queueLimit,\n    comment,\n    onChange,\n  ]);\n\n  useEffect(() => {\n    const cs = configToString();\n    setConnectionString(cs);\n  }, [\n    user,\n    dbName,\n    password,\n    port,\n    sslMode,\n    host,\n    setConnectionString,\n    configToString,\n  ]);\n\n  useEffect(() => {\n    if (useConnectionString) {\n      // build connection_string\n      const cs = configToString();\n      setConnectionString(cs);\n\n      return;\n    }\n    // parse connection_string\n    const kv = parseConnectionString(connectionString, [\n      \"host\",\n      \"port\",\n      \"dbname\",\n      \"user\",\n      \"password\",\n      \"sslmode\",\n    ]);\n    setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n    setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n    setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n    setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n    setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    setSslMode(kv.get(\"sslmode\") ? kv.get(\"sslmode\") + \"\" : \" \");\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useConnectionString]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <Switch\n          label={\"Manually Configure String\"}\n          checked={useConnectionString}\n          id=\"manualString\"\n          name=\"manualString\"\n          onChange={(e) => {\n            setUseConnectionString(e.target.checked);\n          }}\n          value={\"manualString\"}\n        />\n      </Grid>\n      {useConnectionString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBox\n              id=\"connection-string\"\n              name=\"connection_string\"\n              label=\"Connection String\"\n              value={connectionString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setConnectionString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Box\n              withBorders\n              useBackground\n              sx={{\n                overflowY: \"auto\",\n                height: 170,\n                marginBottom: 12,\n              }}\n            >\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <Select\n                  value={sslMode}\n                  label=\"\"\n                  id=\"sslmode\"\n                  name=\"sslmode\"\n                  onChange={(value): void => {\n                    if (value) {\n                      setSslMode(value + \"\");\n                    }\n                  }}\n                  options={[\n                    { label: \"Enter SSL Mode\", value: \" \" },\n                    { label: \"Require\", value: \"require\" },\n                    { label: \"Disable\", value: \"disable\" },\n                    { label: \"Verify CA\", value: \"verify-ca\" },\n                    { label: \"Verify Full\", value: \"verify-full\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <ReadBox label={\"Connection String\"} multiLine>\n              {connectionString}\n            </ReadBox>\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder={\"Enter Table Name\"}\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroup\n          currentValue={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Directory\"\n          value={queueDir}\n          tooltip=\"Staging directory for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"Maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter custom notes if any\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfPostgres);\n"],"names":["withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","_ref","label","onChange","value","id","name","_ref$disabled","disabled","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","classes","inputProps","_jsx","React","children","_jsxs","Grid","item","xs","className","concat","fieldContainer","errorInField","InputLabel","htmlFor","tooltipContainer","Tooltip","title","placement","HelpIcon","TextField","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","modalBasic","formFieldStyles","_useState","useState","_useState2","_slicedToArray","useConnectionString","setUseConnectionString","_useState3","_useState4","connectionString","setConnectionString","_useState5","_useState6","host","setHostname","_useState7","_useState8","dbName","setDbName","_useState9","_useState10","port","setPort","_useState11","_useState12","user","setUser","_useState13","_useState14","password","setPassword","_useState15","_useState16","sslMode","setSslMode","_useState17","_useState18","table","setTable","_useState19","_useState20","format","setFormat","_useState21","_useState22","queueDir","setQueueDir","_useState23","_useState24","queueLimit","setQueueLimit","_useState25","_useState26","comment","setComment","configToString","useCallback","strValue","trim","useEffect","key","cs","kv","input","keys","_step","valueIndexes","_iterator","_createForOfIteratorHelper","s","n","done","i","indexOf","push","err","e","f","sort","n1","n2","kvFields","Map","fields","Array","length","j","slice","_i","_fields","field","undefined","set","parseConnectionString","get","container","formFieldRow","Switch","checked","target","InputBox","Box","withBorders","useBackground","sx","overflowY","height","marginBottom","Select","options","type","ReadBox","multiLine","RadioGroup","currentValue","selectorOptions","CommentBoxWrapper"],"sourceRoot":""}