{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Buckets/BucketDetails/AddReplicationModal.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","baseCloseLine","content","borderLeft","setModalSnackMessage","dialogContainer","closeContainer","textAlign","closeIcon","borderColor","titleClass","whiteSpace","textOverflow","modalContent","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","IconButton","disableRipple","size","DialogTitle","id","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","StyledSwitch","root","margin","switchBase","palette","common","white","boxShadow","thumb","track","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","item","xs","sm","md","component","SelectStyled","spacing","input","InputBase","options","fieldContainer","map","option","inputWithBorder","overflowY","lineInputBoxes","queryDiv","alignSelf","elements","keyPlaceholder","valuePlaceholder","withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","e","persist","updatedElement","target","onChangeValue","debounce","queryString","keyVal","insertString","inputs","toString","trim","keysList","valuesList","addEmptyLine","ref","buttonContainer","multiContainer","modalBasic","closeModalAndRefresh","bucketName","addLoading","setAddLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","targetStorageClass","setTargetStorageClass","prefix","setPrefix","targetBucket","setTargetBucket","region","setRegion","useTLS","setUseTLS","repDeleteMarker","setRepDeleteMarker","repDelete","setRepDelete","tags","setTags","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","noValidate","onSubmit","preventDefault","replicate","originBucket","destinationBucket","hc","parseInt","endURL","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","api","invoke","then","response","states","itemVal","errorString","catch","err","addRecord","formScrollable","sizeFactorContainer","k8sfactorForDropdown","vl","variant"],"mappings":"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","file":"static/js/92.f8ff5411.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { snackBarCommon } from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst baseCloseLine = {\n  content: '\" \"',\n  borderLeft: \"2px solid #9C9C9C\",\n  height: 33,\n  width: 1,\n  position: \"absolute\",\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dialogContainer: {\n      padding: \"8px 15px 22px\",\n    },\n    closeContainer: {\n      textAlign: \"right\",\n    },\n    closeButton: {\n      height: 16,\n      width: 16,\n      padding: 0,\n      backgroundColor: \"initial\",\n      \"&:hover\": {\n        backgroundColor: \"initial\",\n      },\n      \"&:active\": {\n        backgroundColor: \"initial\",\n      },\n    },\n    closeIcon: {\n      \"&::before\": {\n        ...baseCloseLine,\n        transform: \"rotate(45deg)\",\n        height: 12,\n      },\n      \"&::after\": {\n        ...baseCloseLine,\n        transform: \"rotate(-45deg)\",\n        height: 12,\n      },\n      \"&:hover::before, &:hover::after\": {\n        borderColor: \"#9C9C9C\",\n      },\n      display: \"block\",\n      position: \"relative\",\n      height: 12,\n      width: 12,\n    },\n    titleClass: {\n      padding: \"0px 50px 12px\",\n      fontSize: \"1.2rem\",\n      fontWeight: 600,\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n    },\n    modalContent: {\n      padding: \"0 50px\",\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...customSize}\n    >\n      <div className={classes.dialogContainer}>\n        <ModalError />\n        <Snackbar\n          open={openSnackbar}\n          className={classes.snackBarModal}\n          onClose={() => {\n            closeSnackBar();\n          }}\n          message={message}\n          ContentProps={{\n            className: `${classes.snackBar} ${\n              modalSnackMessage && modalSnackMessage.type === \"error\"\n                ? classes.errorSnackBar\n                : \"\"\n            }`,\n          }}\n          autoHideDuration={\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? 10000\n              : 5000\n          }\n        />\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"large\"\n          >\n            <span className={classes.closeIcon} />\n          </IconButton>\n        </div>\n        <DialogTitle id=\"alert-dialog-title\" className={classes.titleClass}>\n          {title}\n        </DialogTitle>\n        <DialogContent className={noContentPadding ? \"\" : classes.modalContent}>\n          {children}\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BulkReplicationResponse } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { getBytes, k8sfactorForDropdown } from \"../../../../common/utils\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: () => any;\n  classes: any;\n  bucketName: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\" as const,\n      justifyContent: \"flex-start\" as const,\n    },\n    ...modalBasic,\n  });\n\nconst AddReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n  setModalErrorSnackMessage,\n}: IReplicationModal) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = get(response, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            setModalErrorSnackMessage({\n              errorMessage: itemVal.errorString,\n              detailedError: \"\",\n            });\n            return;\n          }\n\n          closeModalAndRefresh();\n\n          return;\n        }\n        setModalErrorSnackMessage({\n          errorMessage: \"No changes applied\",\n          detailedError: \"\",\n        });\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Set Bucket Replication\"\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddLoading(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"targetURL\"\n                name=\"targetURL\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetURL(e.target.value);\n                }}\n                placeholder=\"play.min.io\"\n                label=\"Target URL\"\n                value={targetURL}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                checked={useTLS}\n                id=\"useTLS\"\n                name=\"useTLS\"\n                label=\"Use TLS\"\n                onChange={(e) => {\n                  setUseTLS(e.target.checked);\n                }}\n                value=\"yes\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"accessKey\"\n                name=\"accessKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setAccessKey(e.target.value);\n                }}\n                label=\"Access Key\"\n                value={accessKey}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"secretKey\"\n                name=\"secretKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSecretKey(e.target.value);\n                }}\n                label=\"Secret Key\"\n                value={secretKey}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"targetBucket\"\n                name=\"targetBucket\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetBucket(e.target.value);\n                }}\n                label=\"Target Bucket\"\n                value={targetBucket}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"region\"\n                name=\"region\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setRegion(e.target.value);\n                }}\n                label=\"Region\"\n                value={region}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"replication_mode\"\n                name=\"replication_mode\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setReplicationMode(e.target.value as string);\n                }}\n                label=\"Replication Mode\"\n                value={replicationMode}\n                options={[\n                  { label: \"Asynchronous\", value: \"async\" },\n                  { label: \"Synchronous\", value: \"sync\" },\n                ]}\n              />\n            </Grid>\n\n            {replicationMode === \"async\" && (\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <div>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setBandwidthScalar(e.target.value as string);\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.sizeFactorContainer}>\n                    <SelectWrapper\n                      label={\"Unit\"}\n                      id=\"bandwidth_unit\"\n                      name=\"bandwidth_unit\"\n                      value={bandwidthUnit}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        setBandwidthUnit(e.target.value as string);\n                      }}\n                      options={k8sfactorForDropdown()}\n                    />\n                  </div>\n                </div>\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"healthCheck\"\n                name=\"healthCheck\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setHealthCheck(e.target.value as string);\n                }}\n                label=\"Health Check Duration\"\n                value={healthCheck}\n              />\n            </Grid>\n            <h3>Object Filters</h3>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"prefix\"\n                name=\"prefix\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n                placeholder=\"prefix\"\n                label=\"Prefix\"\n                value={prefix}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <QueryMultiSelector\n                name=\"tags\"\n                label=\"Tags\"\n                elements={\"\"}\n                onChange={(vl: string) => {\n                  setTags(vl);\n                }}\n                keyPlaceholder=\"Tag Key\"\n                valuePlaceholder=\"Tag Value\"\n                withBorder\n              />\n            </Grid>\n            <h3>Storage Configuration</h3>\n            <Grid item xs={12}>\n              <InputBoxWrapper\n                id=\"storageClass\"\n                name=\"storageClass\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetStorageClass(e.target.value);\n                }}\n                placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n                label=\"Storage Class\"\n                value={targetStorageClass}\n              />\n            </Grid>\n            <h3>Replication Options</h3>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                checked={repDeleteMarker}\n                id=\"deleteMarker\"\n                name=\"deleteMarker\"\n                label=\"Delete Marker\"\n                onChange={(e) => {\n                  setRepDeleteMarker(e.target.checked);\n                }}\n                value={repDeleteMarker}\n                description={\"Replicate soft deletes\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                checked={repDelete}\n                id=\"repDelete\"\n                name=\"repDelete\"\n                label=\"Deletes\"\n                onChange={(e) => {\n                  setRepDelete(e.target.checked);\n                }}\n                value={repDelete}\n                description={\"Replicate versioned deletes\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddReplicationModal));\n"],"sourceRoot":""}