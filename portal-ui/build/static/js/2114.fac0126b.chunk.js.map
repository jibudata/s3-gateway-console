{"version":3,"file":"static/js/2114.fac0126b.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","../node_modules/@mui/icons-material/ArrowDropDown.js","../node_modules/@mui/icons-material/ArrowDropUp.js","../node_modules/@mui/icons-material/ViewColumn.js","../node_modules/lodash/isString.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport { ITiersDropDown } from \"./AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycle: LifeCycleItem;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst EditLifecycleConfiguration = ({\n  classes,\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycle,\n  open,\n  setModalErrorSnackMessage,\n}: IAddUserContentProps) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycle.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycle.transition) {\n      if (lifecycle.transition.days && lifecycle.transition.days !== 0) {\n        setTransitionDays(lifecycle.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycle.transition.date &&\n        lifecycle.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycle.expiration) {\n      if (lifecycle.expiration.days && lifecycle.expiration.days !== 0) {\n        setExpiryDays(lifecycle.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycle.expiration.date &&\n        lifecycle.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycle.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycle.transition?.noncurrent_transition_days?.toString() || \"0\"\n      );\n      setNCTransitionSC(lifecycle.transition?.noncurrent_storage_class || \"\");\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycle.expiration?.noncurrent_expiration_days?.toString() || \"0\"\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycle.expiration?.delete_marker);\n    setPrefix(lifecycle.prefix || \"\");\n\n    if (lifecycle.tags) {\n      const tgs = lifecycle.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\"\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycle]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycle !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry = {\n          expiry_days: parseInt(expiryDays),\n        };\n\n        rules = {\n          ...expiry,\n          noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n        };\n      } else {\n        let transition = {\n          transition_days: parseInt(transitionDays),\n        };\n\n        rules = {\n          ...transition,\n          noncurrentversion_transition_days: parseInt(NCTransitionDays),\n          noncurrentversion_transition_storage_class: NCTransitionSC,\n          storage_class: storageClass,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/buckets/${selectedBucket}/lifecycle/${lifecycle.id}`,\n          lifecycleUpdate\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"id\"\n                name=\"id\"\n                label=\"Id\"\n                value={lifecycle.id}\n                onChange={() => {}}\n                disabled\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                label=\"Rule State\"\n                indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                checked={enabled}\n                value={\"user_enabled\"}\n                id=\"user-status\"\n                name=\"user-status\"\n                onChange={(e) => {\n                  setEnabled(e.target.checked);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Lifecycle Configuration\n                </legend>\n\n                <Grid item xs={12}>\n                  <RadioGroupSelector\n                    currentSelection={ilmType}\n                    id=\"quota_type\"\n                    name=\"quota_type\"\n                    label=\"ILM Rule\"\n                    selectorOptions={[\n                      { value: \"expiry\", label: \"Expiry\" },\n                      { value: \"transition\", label: \"Transition\" },\n                    ]}\n                    onChange={() => {}}\n                    disableOptions\n                  />\n                </Grid>\n                {ilmType === \"expiry\" ? (\n                  <Fragment>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"expiry_days\"\n                        name=\"expiry_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setExpiryDays(e.target.value);\n                        }}\n                        label=\"Expiry Days\"\n                        value={expiryDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_expiration_days\"\n                        name=\"noncurrentversion_expiration_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCExpirationDays(e.target.value);\n                        }}\n                        label=\"Non-current Expiration Days\"\n                        value={NCExpirationDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"transition_days\"\n                        name=\"transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setTransitionDays(e.target.value);\n                        }}\n                        label=\"Transition Days\"\n                        value={transitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_transition_days\"\n                        name=\"noncurrentversion_transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionDays(e.target.value);\n                        }}\n                        label=\"Non-current Transition Days\"\n                        value={NCTransitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"noncurrentversion_t_SC\"\n                        name=\"noncurrentversion_t_SC\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionSC(e.target.value);\n                        }}\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\n                        label=\"Non-current Version Transition Storage Class\"\n                        value={NCTransitionSC}\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <SelectWrapper\n                        label=\"Storage Class\"\n                        id=\"storage_class\"\n                        name=\"storage_class\"\n                        value={storageClass}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          setStorageClass(e.target.value as string);\n                        }}\n                        options={tiersList}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              </fieldset>\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  File Configuration\n                </legend>\n\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={tags}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    value=\"expired_delete_marker\"\n                    id=\"expired_delete_marker\"\n                    name=\"expired_delete_marker\"\n                    checked={expiredObjectDM}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiredObjectDM(event.target.checked);\n                    }}\n                    label={\"Expired Object Delete Marker\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(EditLifecycleConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  bucketName: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nexport interface ITiersDropDown {\n  label: string;\n  value: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n  setModalErrorSnackMessage,\n}: IReplicationModal) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    let markerOn = false;\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      if (parseInt(expiryDays) > 0 && parseInt(NCExpirationDays) > 0) {\n        markerOn = true;\n      }\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      if (parseInt(transitionDays) > 0 && parseInt(NCTransitionDays) > 0) {\n        markerOn = true;\n      }\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: markerOn,\n      ...rules,\n    };\n\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/buckets/${bucketName}/lifecycle`,\n        lifecycleInsert\n      )\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container className={classes.loadingBox}>\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={3} textAlign={\"left\"}>\n                    <RadioGroupSelector\n                      currentSelection={ilmType}\n                      id=\"quota_type\"\n                      name=\"quota_type\"\n                      label=\"\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as string);\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                  </Grid>\n                  <Grid item xs={9} />\n                  {ilmType === \"expiry\" ? (\n                    <Fragment>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"expiry_days\"\n                          name=\"expiry_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setExpiryDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Delete Latest Version After\"\n                          value={expiryDays}\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"expire-current-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"noncurrentversion_expiration_days\"\n                          name=\"noncurrentversion_expiration_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setNCExpirationDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Delete Older Versions After\"\n                          value={NCExpirationDays}\n                          min=\"0\"\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"expire-noncurrent-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <SelectWrapper\n                          label=\"Tier\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setStorageClass(e.target.value as string);\n                          }}\n                          options={tiersList}\n                        />\n                      </Grid>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"transition_days\"\n                          name=\"transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setTransitionDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Transition Latest Version\"\n                          value={transitionDays}\n                          min=\"0\"\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"transition-current-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          type=\"number\"\n                          id=\"noncurrentversion_transition_days\"\n                          name=\"noncurrentversion_transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setNCTransitionDays(e.target.value);\n                            }\n                          }}\n                          label=\"Transition Older Versions\"\n                          value={NCTransitionDays}\n                          pattern={\"[0-9]*\"}\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"transition-noncurrent-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>Filters</legend>\n\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                      label=\"Prefix\"\n                      value={prefix}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <QueryMultiSelector\n                      name=\"tags\"\n                      label=\"Tags\"\n                      elements={\"\"}\n                      onChange={(vl: string) => {\n                        setTags(vl);\n                      }}\n                      keyPlaceholder=\"Tag Key\"\n                      valuePlaceholder=\"Tag Value\"\n                      withBorder\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n              >\n                Save\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddLifecycleModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n  setErrorSnackMessage,\n}: IDeleteLifecycleRule) => {\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api\n        .invoke(\"DELETE\", `/api/v1/buckets/${bucket}/lifecycle/${id}`)\n        .then((res) => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeletingRule(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, setErrorSnackMessage]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(DeleteBucketLifecycleRule));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport * as reactMoment from \"react-moment\";\nimport Grid from \"@mui/material/Grid\";\nimport { BucketInfo, LifeCycleItem } from \"../types\";\nimport { AddIcon, TiersIcon } from \"../../../../icons\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketLifecyclePanelProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst BucketLifecyclePanel = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  loadingBucket,\n  bucketInfo,\n}: IBucketLifecyclePanelProps) => {\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<LifeCycleItem[]>([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/lifecycle`)\n          .then((res: any) => {\n            const records = get(res, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            console.error(err);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const expirationRender = (expiration: any) => {\n    if (expiration.days) {\n      return `${expiration.days} day${expiration.days > 1 ? \"s\" : \"\"}`;\n    }\n\n    if (expiration.date === \"0001-01-01T00:00:00Z\") {\n      return \"\";\n    }\n\n    return <reactMoment.default>{expiration.date}</reactMoment.default>;\n  };\n\n  const transitionRender = (transition: any) => {\n    if (transition.days) {\n      return `${transition.days} day${transition.days > 1 ? \"s\" : \"\"}`;\n    }\n\n    if (transition.date === \"0001-01-01T00:00:00Z\") {\n      return \"\";\n    }\n\n    return <reactMoment.default>{transition.date}</reactMoment.default>;\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    const stClass = get(objectST, \"transition.storage_class\", \"\");\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    { label: \"ID\", elementKey: \"id\" },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n    {\n      label: \"Expiration\",\n      elementKey: \"expiration\",\n      renderFunction: expirationRender,\n    },\n    {\n      label: \"Transition\",\n      elementKey: \"transition\",\n      renderFunction: transitionRender,\n    },\n    {\n      label: \"Storage Class\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycle={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Lifecycle Rules</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.ADMIN_LIST_TIERS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Add Lifecycle Rule\"}\n              onClick={() => {\n                setAddLifecycleOpen(true);\n              }}\n              text={\"Add Lifecycle Rule\"}\n              icon={<AddIcon />}\n              color=\"primary\"\n              variant={\"contained\"}\n            />\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://docs.min.io/minio/baremetal/lifecycle-management/lifecycle-management-overview.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(BucketLifecyclePanel));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v14H9.33V5h5.34zm1 14H21V5h-5.33v14zm-7.34 0V5H3v14h5.33z\"\n}), 'ViewColumn');\n\nexports.default = _default;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","mapDispatchToProps","setModalErrorSnackMessage","connector","connect","dateSelector","borderBottom","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","closeModalAndRefresh","selectedBucket","lifecycle","open","useState","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","useEffect","api","then","res","get","length","objList","map","tier","tierType","type","value","label","catch","err","valid","status","transitionMode","transition","days","toString","date","expiration","storage_class","noncurrent_transition_days","noncurrent_storage_class","noncurrent_expiration_days","delete_marker","tgs","reduce","stringLab","currItem","index","key","ModalWrapper","onClose","modalOpen","titleIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","expiry","expiry_days","parseInt","noncurrentversion_expiration_days","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","lifecycleUpdate","disable","expired_object_delete_marker","id","saveRecord","Grid","formScrollable","formFieldRow","InputBoxWrapper","name","onChange","disabled","FormSwitchWrapper","indicatorLabels","checked","target","fieldGroup","descriptionText","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","Fragment","min","placeholder","SelectWrapper","options","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","Button","variant","color","onClick","LinearProgress","bucketName","loadingBox","markerOn","lifecycleInsert","addRecord","textAlign","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","setErrorSnackMessage","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","state","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","searchField","actionsTray","twHeight","minHeight","match","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","params","displayLifeCycleRules","hasPermission","IAM_SCOPES","records","error","lifecycleColumns","elementKey","renderFunction","objectST","renderFullObject","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","refresh","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","RBIconButton","tooltip","text","icon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","href","rel","fieldBasic","tooltipHelper","inputWithBorder","padding","overflowY","position","marginTop","lineInputBoxes","queryDiv","alignSelf","margin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","fieldContainer","inputLabel","tooltipContainer","placement","ref","radioStyles","makeStyles","radioIcons","RadioButton","props","disableRipple","checkedIcon","radioSelectedIcon","radioUnselectedIcon","optionLabel","checkedOption","displayInColumn","htmlFor","radioOptionsLayout","row","style","selectorOption","control","clsx","deleteDialogStyles","onCancel","cancelText","confirmButtonProps","cancelButtonProps","reason","sx","titleText","closeContainer","closeButton","size","content","actions","cancelButton","confirmButton","loading","loadingPosition","startIcon","autoFocus","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","baseGetTag","isArray","isObjectLike","module"],"sourceRoot":""}