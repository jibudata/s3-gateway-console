{"version":3,"sources":["screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/shared/tabs.tsx","screens/Console/Users/AddUser.tsx"],"names":["withStyles","theme","createStyles","predefinedList","classes","label","content","multiLine","className","prefinedContainer","item","xs","predefinedTitle","innerContentMultiline","innerContent","TabPanel","props","children","value","index","other","role","hidden","id","style","marginTop","mapDispatchToProps","setModalErrorSnackMessage","connector","connect","tabsHeader","marginBottom","modalStyleUtils","formFieldStyles","spacingUtils","closeModalAndRefresh","selectedUser","open","useState","addLoading","setAddLoading","accessKey","setAccessKey","secretKey","setSecretKey","enabled","setEnabled","selectedGroups","setSelectedGroups","selectedPolicies","setSelectedPolicies","currentGroups","setCurrentGroups","currenTab","setCurrenTab","getUserInformation","useCallback","api","invoke","encodeURI","then","res","memberOf","status","catch","err","useEffect","sendEnabled","trim","onClose","modalOpen","title","floatingEnabled","indicatorLabels","checked","name","onChange","e","target","switchOnly","Fragment","noValidate","autoComplete","onSubmit","event","preventDefault","length","errorMessage","detailedError","groups","policies","saveRecord","container","formFieldRow","disabled","join","type","nv","selectedPolicy","setSelectedPolicy","elements","modalButtonBar","variant","color","onClick"],"mappings":"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","file":"static/js/132.282dffac.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress, Tab, Tabs } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport GroupsSelectors from \"./GroupsSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport PolicySelectors from \"../Policies/PolicySelectors\";\nimport { TabPanel } from \"../../shared/tabs\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsHeader: {\n      marginBottom: \"1rem\",\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...spacingUtils,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddUser = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  open,\n  setModalErrorSnackMessage,\n}: IAddUserContentProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [selectedGroups, setSelectedGroups] = useState<string[]>([]);\n  const [selectedPolicies, setSelectedPolicies] = useState<string[]>([]);\n  const [currentGroups, setCurrentGroups] = useState<string[]>([]);\n  const [currenTab, setCurrenTab] = useState<number>(0);\n\n  const getUserInformation = useCallback(() => {\n    if (!selectedUser) {\n      return null;\n    }\n\n    api\n      .invoke(\"GET\", `/api/v1/user?name=${encodeURI(selectedUser.accessKey)}`)\n      .then((res) => {\n        setAddLoading(false);\n        setAccessKey(res.accessKey);\n        setSelectedGroups(res.memberOf || []);\n        setCurrentGroups(res.memberOf || []);\n        setEnabled(res.status === \"enabled\");\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [selectedUser, setModalErrorSnackMessage]);\n\n  useEffect(() => {\n    if (selectedUser === null) {\n      setAccessKey(\"\");\n      setSecretKey(\"\");\n      setSelectedGroups([]);\n    } else {\n      getUserInformation();\n    }\n  }, [selectedUser, getUserInformation]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (secretKey.length < 8) {\n      setModalErrorSnackMessage({\n        errorMessage: \"Passwords must be at least 8 characters long\",\n        detailedError: \"\",\n      });\n      setAddLoading(false);\n      return;\n    }\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedUser !== null) {\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/user?name=${encodeURI(selectedUser.accessKey)}`,\n          {\n            status: enabled ? \"enabled\" : \"disabled\",\n            groups: selectedGroups,\n            policies: selectedPolicies,\n          }\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    } else {\n      api\n        .invoke(\"POST\", \"/api/v1/users\", {\n          accessKey,\n          secretKey,\n          groups: selectedGroups,\n          policies: selectedPolicies,\n        })\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  const resetForm = () => {\n    if (selectedUser !== null) {\n      setSelectedGroups([]);\n      return;\n    }\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setSelectedGroups([]);\n  };\n\n  const sendEnabled =\n    accessKey.trim() !== \"\" &&\n    ((secretKey.trim() !== \"\" && selectedUser === null) ||\n      selectedUser !== null);\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title={selectedUser !== null ? \"Edit User\" : \"Create User\"}\n    >\n      {selectedUser !== null && (\n        <div className={classes.floatingEnabled}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enabled}\n            value={\"user_enabled\"}\n            id=\"user-status\"\n            name=\"user-status\"\n            onChange={(e) => {\n              setEnabled(e.target.checked);\n            }}\n            switchOnly\n          />\n        </div>\n      )}\n\n      <React.Fragment>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <div className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"accesskey-input\"\n                  name=\"accesskey-input\"\n                  label=\"Access Key\"\n                  value={accessKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setAccessKey(e.target.value);\n                  }}\n                  disabled={selectedUser !== null}\n                />\n              </div>\n\n              {selectedUser !== null ? (\n                <PredefinedList\n                  label={\"Current Groups\"}\n                  content={currentGroups.join(\", \")}\n                />\n              ) : (\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"standard-multiline-static\"\n                    name=\"standard-multiline-static\"\n                    label=\"Secret Key\"\n                    type=\"password\"\n                    value={secretKey}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    autoComplete=\"current-password\"\n                  />\n                </div>\n              )}\n              <Grid item xs={12} className={classes.tabsHeader}>\n                <Tabs\n                  value={currenTab}\n                  onChange={(e, nv) => {\n                    setCurrenTab(nv);\n                  }}\n                >\n                  <Tab label=\"Policies\" />\n                  <Tab label=\"Groups\" />\n                </Tabs>\n              </Grid>\n              <TabPanel value={currenTab} index={0}>\n                <Grid item xs={12}>\n                  <PolicySelectors\n                    selectedPolicy={selectedPolicies}\n                    setSelectedPolicy={setSelectedPolicies}\n                  />\n                </Grid>\n              </TabPanel>\n              <TabPanel value={currenTab} index={1}>\n                <Grid item xs={12}>\n                  <GroupsSelectors\n                    selectedGroups={selectedGroups}\n                    setSelectedGroups={(elements: string[]) => {\n                      setSelectedGroups(elements);\n                    }}\n                  />\n                </Grid>\n              </TabPanel>\n\n              {addLoading && (\n                <Grid item xs={12}>\n                  <LinearProgress />\n                </Grid>\n              )}\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={resetForm}\n              >\n                Clear\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !sendEnabled}\n              >\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </React.Fragment>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddUser));\n"],"sourceRoot":""}