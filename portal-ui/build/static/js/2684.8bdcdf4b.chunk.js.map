{"version":3,"file":"static/js/2684.8bdcdf4b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","icons/CertificateIcon.tsx","screens/Console/Common/TLSCertificate/TLSCertificate.tsx","screens/Console/Tenants/TenantDetails/TenantSecurity.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      viewBox=\"0 0 256 256\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"certificate_svg__a\">\n          <path\n            data-name=\"Rect\\xE1ngulo 2156\"\n            fill=\"#07193e\"\n            d=\"M0 0h256v222.048H0z\"\n          />\n        </clipPath>\n      </defs>\n      <g\n        data-name=\"Grupo 4763\"\n        transform=\"translate(0 17)\"\n        clipPath=\"url(#certificate_svg__a)\"\n        fill=\"#07193e\"\n      >\n        <path\n          data-name=\"Trazado 8152\"\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\n        />\n        <path\n          data-name=\"Trazado 8153\"\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\n        />\n      </g>\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\n    </svg>\n  );\n};\nexport default CertificateIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ICertificateInfo } from \"../../Tenants/types\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport Chip from \"@mui/material/Chip\";\nimport {\n  Typography,\n  Divider,\n  Box,\n  Grid,\n  Container,\n  ListItemText,\n  List,\n  ListItem,\n  ListItemAvatar,\n} from \"@mui/material\";\nimport EventBusyIcon from \"@mui/icons-material/EventBusy\";\nimport Moment from \"react-moment\";\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    certificateIcon: {\n      float: \"left\",\n      paddingTop: \"5px !important\",\n      paddingRight: \"10px !important\",\n    },\n    certificateInfo: { float: \"right\" },\n    certificateWrapper: {\n      height: \"auto\",\n      margin: 5,\n      border: \"1px solid #E2E2E2\",\n      userSelect: \"text\",\n      borderRadius: 4,\n      \"& h6\": {\n        fontWeight: \"bold\",\n      },\n      \"& div\": {\n        padding: 0,\n      },\n    },\n    certificateExpiry: {\n      color: \"#616161\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      marginBottom: 5,\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificateDomains: {\n      color: \"#616161\",\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificatesList: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 4,\n      color: \"#616161\",\n      textTransform: \"lowercase\",\n      overflowY: \"scroll\",\n      maxHeight: 145,\n      marginBottom: 10,\n    },\n    certificatesListItem: {\n      padding: \"0px 16px\",\n      borderBottom: \"1px solid #E2E2E2\",\n      \"& div\": {\n        minWidth: 0,\n      },\n      \"& svg\": {\n        fontSize: 12,\n        marginRight: 10,\n        opacity: 0.5,\n      },\n      \"& span\": {\n        fontSize: 12,\n      },\n    },\n  });\n\ninterface ITLSCertificate {\n  classes: any;\n  certificateInfo: ICertificateInfo;\n  onDelete: any;\n}\n\nconst TLSCertificate = ({\n  classes,\n  certificateInfo,\n  onDelete = () => {},\n}: ITLSCertificate) => {\n  const certificates = certificateInfo.domains || [];\n  return (\n    <Chip\n      key={certificateInfo.name}\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.certificateWrapper}\n      label={\n        <Container>\n          <Grid item xs={1} className={classes.certificateIcon}>\n            <CertificateIcon />\n          </Grid>\n          <Grid item xs={11} className={classes.certificateInfo}>\n            <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>\n              {certificateInfo.name}\n            </Typography>\n            <Box className={classes.certificateExpiry}>\n              <EventBusyIcon color=\"inherit\" fontSize=\"small\" />\n              &nbsp;\n              <span className={\"label\"}>Expiry:&nbsp;</span>\n              <span>\n                <Moment format=\"YYYY/MM/DD\">{certificateInfo.expiry}</Moment>\n              </span>\n            </Box>\n            <Divider />\n            <br />\n            <Box className={classes.certificateDomains}>\n              <span className=\"label\">{`${certificates.length} Domain (s):`}</span>\n            </Box>\n            <List className={classes.certificatesList}>\n              {certificates.map((dom) => (\n                <ListItem className={classes.certificatesListItem}>\n                  <ListItemAvatar>\n                    <LanguageIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={dom} />\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Container>\n      }\n      onDelete={onDelete}\n    />\n  );\n};\n\nexport default withStyles(styles)(TLSCertificate);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"../ListTenants/types\";\nimport { ICertificateInfo, ITenantSecurityResponse } from \"../types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { Button, DialogContentText } from \"@mui/material\";\nimport { KeyPair } from \"../ListTenants/utils\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { AddIcon, ConfirmModalIcon } from \"../../../../icons\";\nimport Loader from \"../../Common/Loader/Loader\";\nimport TLSCertificate from \"../../Common/TLSCertificate/TLSCertificate\";\nimport SectionTitle from \"../../Common/SectionTitle\";\n\ninterface ITenantSecurity {\n  classes: any;\n  loadingTenant: boolean;\n  tenant: ITenant | null;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSecurity = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setErrorSnackMessage,\n}: ITenantSecurity) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [enableAutoCert, setEnableAutoCert] = useState<boolean>(false);\n  const [enableCustomCerts, setEnableCustomCerts] = useState<boolean>(false);\n  const [certificatesToBeRemoved, setCertificatesToBeRemoved] = useState<\n    string[]\n  >([]);\n  // MinIO certificates\n  const [minioCertificates, setMinioCertificates] = useState<KeyPair[]>([]);\n  const [minioCaCertificates, setMinioCaCertificates] = useState<KeyPair[]>([]);\n  const [minioTLSCertificateSecrets, setMinioTLSCertificateSecrets] = useState<\n    ICertificateInfo[]\n  >([]);\n  const [minioTLSCaCertificateSecrets, setMinioTLSCaCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n\n  const getTenantSecurityInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`\n      )\n      .then((res: ITenantSecurityResponse) => {\n        setEnableAutoCert(res.autoCert);\n        if (res.customCertificates.minio || res.customCertificates.minioCAs) {\n          setEnableCustomCerts(true);\n        }\n        setMinioTLSCertificateSecrets(res.customCertificates.minio || []);\n        setMinioTLSCaCertificateSecrets(res.customCertificates.minioCAs || []);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n      });\n  }, [tenant, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantSecurityInfo();\n    }\n  }, [tenant, getTenantSecurityInfo]);\n\n  const updateTenantSecurity = () => {\n    setIsSending(true);\n    let payload = {\n      autoCert: enableAutoCert,\n      customCertificates: {},\n    };\n    if (enableCustomCerts) {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: certificatesToBeRemoved,\n        minio: minioCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioCAs: minioCaCertificates\n          .map((keyPair: KeyPair) => keyPair.encoded_cert)\n          .filter((cert: any) => cert),\n      };\n    } else {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: [\n          ...minioTLSCertificateSecrets.map((cert) => cert.name),\n          ...minioTLSCaCertificateSecrets.map((cert) => cert.name),\n        ],\n        minio: [],\n        minioCAs: [],\n      };\n    }\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        // Close confirmation modal\n        setDialogOpen(false);\n        // Refresh Information and reset forms\n        setMinioCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioCaCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        getTenantSecurityInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n        setIsSending(false);\n      });\n  };\n\n  const removeCertificate = (certificateInfo: ICertificateInfo) => {\n    // TLS certificate secrets can be referenced MinIO, Console or KES, we need to remove the secret from all list and update\n    // the arrays\n    // Add certificate to the global list of secrets to be removed\n    setCertificatesToBeRemoved([\n      ...certificatesToBeRemoved,\n      certificateInfo.name,\n    ]);\n\n    // Update MinIO TLS certificate secrets\n    const updatedMinIOTLSCertificateSecrets = minioTLSCertificateSecrets.filter(\n      (certificateSecret) => certificateSecret.name !== certificateInfo.name\n    );\n    const updatedMinIOTLSCaCertificateSecrets =\n      minioTLSCaCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    setMinioTLSCertificateSecrets(updatedMinIOTLSCertificateSecrets);\n    setMinioTLSCaCertificateSecrets(updatedMinIOTLSCaCertificateSecrets);\n  };\n\n  const addFileToKeyPair = (\n    type: string,\n    id: string,\n    key: string,\n    fileName: string,\n    value: string\n  ) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    const NCertList = certificates.map((item: KeyPair) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          [key]: fileName,\n          [`encoded_${key}`]: value,\n        };\n      }\n      return item;\n    });\n    updateCertificates(NCertList);\n  };\n\n  const deleteKeyPair = (type: string, id: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    if (certificates.length > 1) {\n      const cleanCertsList = certificates.filter(\n        (item: KeyPair) => item.id !== id\n      );\n      updateCertificates(cleanCertsList);\n    }\n  };\n\n  const addKeyPair = (type: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n    const updatedCertificates = [\n      ...certificates,\n      {\n        id: Date.now().toString(),\n        key: \"\",\n        cert: \"\",\n        encoded_key: \"\",\n        encoded_cert: \"\",\n      },\n    ];\n    updateCertificates(updatedCertificates);\n  };\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantSecurity}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <h1 className={classes.sectionTitle}>Security</h1>\n            <hr className={classes.hrClass} />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"enableAutoCert\"\n              id=\"enableAutoCert\"\n              name=\"enableAutoCert\"\n              checked={enableAutoCert}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                setEnableAutoCert(checked);\n              }}\n              label={\"TLS\"}\n              description={\n                \"The internode certificates will be generated and managed by MinIO Operator\"\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"enableCustomCerts\"\n              id=\"enableCustomCerts\"\n              name=\"enableCustomCerts\"\n              checked={enableCustomCerts}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                setEnableCustomCerts(checked);\n              }}\n              label={\"Custom Certificates\"}\n              description={\"Certificates used to terminated TLS at MinIO\"}\n            />\n          </Grid>\n\n          {enableCustomCerts && (\n            <Fragment>\n              <Grid item xs={12}>\n                <SectionTitle>MinIO Certificates</SectionTitle>\n              </Grid>\n              <Grid item xs={12}>\n                {minioTLSCertificateSecrets.map(\n                  (certificateInfo: ICertificateInfo) => (\n                    <TLSCertificate\n                      certificateInfo={certificateInfo}\n                      onDelete={() => removeCertificate(certificateInfo)}\n                    />\n                  )\n                )}\n              </Grid>\n\n              <Grid item xs={12}>\n                {minioCertificates.map((keyPair) => (\n                  <Grid\n                    container\n                    key={keyPair.id}\n                    alignItems={\"center\"}\n                    style={{ borderBottom: \"1px solid #eaeaea\" }}\n                  >\n                    <Grid item xs={5}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) =>\n                          addFileToKeyPair(\n                            \"minio\",\n                            keyPair.id,\n                            \"cert\",\n                            fileName,\n                            encodedValue\n                          )\n                        }\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"tlsCert\"\n                        name=\"tlsCert\"\n                        label=\"Cert\"\n                        value={keyPair.cert}\n                      />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) =>\n                          addFileToKeyPair(\n                            \"minio\",\n                            keyPair.id,\n                            \"key\",\n                            fileName,\n                            encodedValue\n                          )\n                        }\n                        accept=\".key,.pem\"\n                        id=\"tlsKey\"\n                        name=\"tlsKey\"\n                        label=\"Key\"\n                        value={keyPair.key}\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => deleteKeyPair(\"minio\", keyPair.id)}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid item xs={12} textAlign={\"right\"}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  endIcon={<AddIcon />}\n                  onClick={() => addKeyPair(\"minio\")}\n                >\n                  Add Certificate\n                </Button>\n              </Grid>\n\n              <Grid item xs={12}>\n                <SectionTitle>MinIO CA Certificates</SectionTitle>\n              </Grid>\n              <Grid item xs={12}>\n                {minioTLSCaCertificateSecrets.map(\n                  (certificateInfo: ICertificateInfo) => (\n                    <TLSCertificate\n                      certificateInfo={certificateInfo}\n                      onDelete={() => removeCertificate(certificateInfo)}\n                    />\n                  )\n                )}\n              </Grid>\n\n              <Grid item xs={12}>\n                {minioCaCertificates.map((keyPair: KeyPair) => (\n                  <Grid\n                    container\n                    key={keyPair.id}\n                    style={{ borderBottom: \"1px solid #eaeaea\" }}\n                    alignItems={\"center\"}\n                    justifyContent={\"space-between\"}\n                  >\n                    <Grid item xs={5} className={classes.fileItem}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) =>\n                          addFileToKeyPair(\n                            \"minioCAs\",\n                            keyPair.id,\n                            \"cert\",\n                            fileName,\n                            encodedValue\n                          )\n                        }\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"tlsCert\"\n                        name=\"tlsCert\"\n                        label=\"Cert\"\n                        value={keyPair.cert}\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => deleteKeyPair(\"minioCAs\", keyPair.id)}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid item xs={12} textAlign={\"right\"}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  endIcon={<AddIcon />}\n                  onClick={() => addKeyPair(\"minioCAs\")}\n                >\n                  Add CA Certificate\n                </Button>\n              </Grid>\n            </Fragment>\n          )}\n\n          <Grid item xs={12} textAlign={\"right\"}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={dialogOpen || isSending}\n              onClick={() => setDialogOpen(true)}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantSecurity));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","props","xmlns","fill","viewBox","d","transform","clipPath","certificateIcon","float","paddingTop","paddingRight","certificateInfo","certificateWrapper","height","userSelect","borderRadius","padding","certificateExpiry","display","alignItems","flexWrap","marginBottom","certificateDomains","certificatesList","textTransform","overflowY","maxHeight","certificatesListItem","borderBottom","minWidth","fontSize","marginRight","opacity","onDelete","certificates","domains","Chip","variant","Container","Typography","gutterBottom","Box","EventBusy","format","expiry","Divider","List","map","dom","ListItem","ListItemAvatar","Language","ListItemText","primary","mapDispatchToProps","setErrorSnackMessage","connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","tenantDetailsStyles","spacingUtils","loaderAlign","textAlign","bold","italic","fontStyle","fileItem","containerForHeader","spacing","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","isSending","setIsSending","dialogOpen","setDialogOpen","enableAutoCert","setEnableAutoCert","enableCustomCerts","setEnableCustomCerts","certificatesToBeRemoved","setCertificatesToBeRemoved","minioCertificates","setMinioCertificates","minioCaCertificates","setMinioCaCertificates","minioTLSCertificateSecrets","setMinioTLSCertificateSecrets","minioTLSCaCertificateSecrets","setMinioTLSCaCertificateSecrets","getTenantSecurityInfo","useCallback","api","namespace","then","res","autoCert","customCertificates","minio","minioCAs","catch","err","useEffect","removeCertificate","updatedMinIOTLSCertificateSecrets","filter","certificateSecret","updatedMinIOTLSCaCertificateSecrets","addFileToKeyPair","key","updateCertificates","deleteKeyPair","addKeyPair","Date","now","cert","encoded_key","encoded_cert","confirmText","cancelText","titleIcon","isLoading","onClose","isOpen","onConfirm","payload","secretsToBeDeleted","keyPair","crt","confirmationContent","container","sectionTitle","hrClass","checked","description","Fragment","style","encodedValue","endIcon","justifyContent","errorBlock","palette","main","withBreak"],"sourceRoot":""}