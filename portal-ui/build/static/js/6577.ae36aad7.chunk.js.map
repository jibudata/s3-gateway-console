{"version":3,"file":"static/js/6577.ae36aad7.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/LookupStatus/LookupStatusTable.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/Utils.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/BucketEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/PolicyEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/GroupEntityStatus.tsx","screens/Console/Configurations/SiteReplication/LookupStatus/UserEntityStatus.tsx","screens/Console/Configurations/SiteReplication/EntityReplicationLookup.tsx","screens/Console/Configurations/SiteReplication/SiteReplicationStatus.tsx","screens/Console/Dashboard/BasicDashboard/StatusCountCard.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { Box, CircleIcon } from \"mds\";\n\nconst LookupTableBase = styled.div(({ theme }) => ({\n  marginTop: 15,\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    \"& .feature-cell\": {\n      fontWeight: 600,\n      fontSize: 14,\n      paddingLeft: 15,\n    },\n    \"& .status-cell\": {\n      textAlign: \"center\",\n    },\n    \"& .header-cell\": {\n      textAlign: \"center\",\n    },\n    \"& tr\": {\n      height: 38,\n      \"& td\": {\n        borderBottom: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n      },\n      \"& th\": {\n        borderBottom: `2px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n      },\n    },\n    \"& .indicator\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& .min-icon\": {\n        height: 15,\n        width: 15,\n      },\n      \"&.active\": {\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.good\", \"#4CCB92\"),\n        },\n      },\n      \"&.deactivated\": {\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n        },\n      },\n    },\n  },\n}));\n\nconst LookupStatusTable = ({\n  matrixData = [],\n  entityName = \"\",\n  entityType = \"\",\n}: {\n  matrixData: any;\n  entityName: string;\n  entityType: string;\n}) => {\n  //Assumes 1st row should be a header row.\n  const [header = [], ...rows] = matrixData;\n\n  const tableHeader = header.map((hC: string, hcIdx: number) => {\n    return (\n      <th className=\"header-cell\" key={`${0}${hcIdx}`}>\n        {hC}\n      </th>\n    );\n  });\n\n  const tableRowsToRender = rows.map((r: any, rIdx: number) => {\n    return (\n      <tr key={`r-${rIdx + 1}`}>\n        {r.map((v: any, cIdx: number) => {\n          let indicator = null;\n\n          if (cIdx === 0) {\n            indicator = v;\n          } else if (v === \"\") {\n            indicator = \"\";\n          }\n          if (v === true) {\n            indicator = (\n              <Box className={`indicator active`}>\n                <CircleIcon />\n              </Box>\n            );\n          } else if (v === false) {\n            indicator = (\n              <Box className={`indicator deactivated`}>\n                <CircleIcon />\n              </Box>\n            );\n          }\n\n          return (\n            <td\n              key={`${rIdx + 1}${cIdx}`}\n              className={cIdx === 0 ? \"feature-cell\" : \"status-cell\"}\n            >\n              {indicator}\n            </td>\n          );\n        })}\n      </tr>\n    );\n  });\n\n  return (\n    <LookupTableBase>\n      <Box sx={{ marginTop: 15, marginBottom: 15 }}>\n        Replication status for {entityType}: <strong>{entityName}</strong>.\n      </Box>\n      <table>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>{tableRowsToRender}</tbody>\n      </table>\n    </LookupTableBase>\n  );\n};\n\nexport default LookupStatusTable;\n","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\n\nexport function syncStatus(mismatch: boolean, set: boolean): string | boolean {\n  if (!set) {\n    return \"\";\n  }\n  return !mismatch;\n}\n\nexport function isEntityNotFound(\n  sites: Partial<StatsResponseType>,\n  lookupList: Partial<StatsResponseType>,\n  lookupKey: string,\n) {\n  const siteKeys: string[] = Object.keys(sites);\n  return siteKeys.find((sk: string) => {\n    // there is no way to find the type of this ! as it is an entry in the structure itself.\n    // @ts-ignore\n    const result: Record<string, any> = lookupList[sk] || {};\n    return !result[lookupKey];\n  });\n}\n\nexport const EntityNotFound = ({\n  entityType,\n  entityValue,\n}: {\n  entityType: string;\n  entityValue: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"45px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {entityType}:{\" \"}\n      <Box sx={{ marginLeft: \"5px\", marginRight: \"5px\", fontWeight: 600 }}>\n        {entityValue}\n      </Box>{\" \"}\n      not found.\n    </Box>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype BucketEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst BucketEntityStatus = ({\n  bucketStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: BucketEntityStatusProps) => {\n  const rowsForStatus = [\n    \"Tags\",\n    \"Policy\",\n    \"Quota\",\n    \"Retention\",\n    \"Encryption\",\n    \"Replication\",\n  ];\n\n  const bucketSites: Record<string, any> = bucketStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n\n  const notFound = isEntityNotFound(sites, bucketSites, \"HasBucket\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Bucket\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      /**\n       * ----------------------------------\n       * | <blank cell>  | sit-0 | site-1 |\n       * -----------------------------------\n       */\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      /**\n       * -------------------------------------------------\n       * | Feature Name  | site-0-status | site-1-status |\n       * --------------------------------------------------\n       */\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = bucketSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.TagMismatch, rSite.HasTagsSet);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicySet);\n            sfRow.push(sbStatus);\n            break;\n          case 2:\n            sbStatus = syncStatus(rSite.QuotaCfgMismatch, rSite.HasQuotaCfgSet);\n            sfRow.push(sbStatus);\n            break;\n          case 3:\n            sbStatus = syncStatus(\n              rSite.OLockConfigMismatch,\n              rSite.HasOLockConfigSet,\n            );\n            sfRow.push(sbStatus);\n            break;\n          case 4:\n            sbStatus = syncStatus(rSite.SSEConfigMismatch, rSite.HasSSECfgSet);\n            sfRow.push(sbStatus);\n            break;\n          case 5:\n            sbStatus = syncStatus(\n              rSite.ReplicationCfgMismatch,\n              rSite.HasReplicationCfg,\n            );\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Bucket\"}\n    />\n  );\n};\n\nexport default BucketEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype PolicyEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst PolicyEntityStatus = ({\n  policyStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: PolicyEntityStatusProps) => {\n  const rowsForStatus = [\"Policy\"];\n\n  const policySites: Record<string, any> = policyStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n  const notFound = isEntityNotFound(sites, policySites, \"HasPolicy\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Policy\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = policySites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicy);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Policy\"}\n    />\n  );\n};\n\nexport default PolicyEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype GroupEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst UserEntityStatus = ({\n  groupStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: GroupEntityStatusProps) => {\n  const rowsForStatus = [\"Info\", \"Policy mapping\"];\n\n  const groupSites: Record<string, any> = groupStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n  const notFound = isEntityNotFound(sites, groupSites, \"HasGroup\");\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"Group\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      /**\n       * ----------------------------------\n       * | <blank cell>  | sit-0 | site-1 |\n       * -----------------------------------\n       */\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      /**\n       * -------------------------------------------------\n       * | Feature Name  | site-0-status | site-1-status |\n       * --------------------------------------------------\n       */\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = groupSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.GroupDescMismatch, rSite.HasGroup);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicyMapping);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"Group\"}\n    />\n  );\n};\n\nexport default UserEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { StatsResponseType } from \"../SiteReplicationStatus\";\nimport LookupStatusTable from \"./LookupStatusTable\";\nimport { EntityNotFound, isEntityNotFound, syncStatus } from \"./Utils\";\n\ntype PolicyEntityStatusProps = Partial<StatsResponseType> & {\n  lookupValue?: string;\n};\nconst UserEntityStatus = ({\n  userStats = {},\n  sites = {},\n  lookupValue = \"\",\n}: PolicyEntityStatusProps) => {\n  const rowsForStatus = [\"Info\", \"Policy mapping\"];\n\n  const userSites: Record<string, any> = userStats[lookupValue] || {};\n\n  if (!lookupValue) return null;\n\n  const siteKeys = Object.keys(sites);\n\n  const notFound = isEntityNotFound(sites, userSites, \"HasUser\");\n\n  const resultMatrix: any = [];\n  if (notFound) {\n    return <EntityNotFound entityType={\"User\"} entityValue={lookupValue} />;\n  } else {\n    const row = [];\n    for (let sCol = 0; sCol < siteKeys.length; sCol++) {\n      if (sCol === 0) {\n        row.push(\"\");\n      }\n      row.push(sites[siteKeys[sCol]].name);\n    }\n    resultMatrix.push(row);\n    for (let fi = 0; fi < rowsForStatus.length; fi++) {\n      const sfRow = [];\n      const feature = rowsForStatus[fi];\n      let sbStatus: string | boolean = \"\";\n\n      for (let si = 0; si < siteKeys.length; si++) {\n        const bucketSiteDeploymentId = sites[siteKeys[si]].deploymentID;\n\n        const rSite = userSites[bucketSiteDeploymentId];\n\n        if (si === 0) {\n          sfRow.push(feature);\n        }\n\n        switch (fi) {\n          case 0:\n            sbStatus = syncStatus(rSite.UserInfoMismatch, rSite.HasUser);\n            sfRow.push(sbStatus);\n            break;\n          case 1:\n            sbStatus = syncStatus(rSite.PolicyMismatch, rSite.HasPolicyMapping);\n            sfRow.push(sbStatus);\n            break;\n        }\n      }\n\n      resultMatrix.push(sfRow);\n    }\n  }\n\n  return (\n    <LookupStatusTable\n      matrixData={resultMatrix}\n      entityName={lookupValue}\n      entityType={\"User\"}\n    />\n  );\n};\n\nexport default UserEntityStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  ClustersIcon,\n  Grid,\n  Loader,\n  Select,\n  InputBox,\n} from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { StatsResponseType } from \"./SiteReplicationStatus\";\nimport BucketEntityStatus from \"./LookupStatus/BucketEntityStatus\";\nimport PolicyEntityStatus from \"./LookupStatus/PolicyEntityStatus\";\nimport GroupEntityStatus from \"./LookupStatus/GroupEntityStatus\";\nimport UserEntityStatus from \"./LookupStatus/UserEntityStatus\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst EntityReplicationLookup = () => {\n  const [entityType, setEntityType] = useState<string>(\"bucket\");\n  const [entityValue, setEntityValue] = useState<string>(\"\");\n\n  const [stats, setStats] = useState<StatsResponseType>({});\n  const [statsLoaded, setStatsLoaded] = useState<boolean>(false);\n\n  const [isStatsLoading, invokeSiteStatsApi] = useApi(\n    (res: any) => {\n      setStats(res);\n      setStatsLoaded(true);\n    },\n    (err: any) => {\n      setStats({});\n      setStatsLoaded(true);\n    },\n  );\n\n  const {\n    bucketStats = {},\n    sites = {},\n    userStats = {},\n    policyStats = {},\n    groupStats = {},\n  } = stats || {};\n\n  const getStats = (entityType: string = \"\", entityValue: string = \"\") => {\n    setStatsLoaded(false);\n    if (entityType && entityValue) {\n      let url = `api/v1/admin/site-replication/status?buckets=false&entityType=${entityType}&entityValue=${entityValue}&groups=false&policies=false&users=false`;\n      invokeSiteStatsApi(\"GET\", url);\n    }\n  };\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"grid\",\n          alignItems: \"center\",\n          gridTemplateColumns: \".7fr .9fr 1.2fr .3fr\",\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            gridTemplateColumns: \"1fr\",\n          },\n          [`@media (max-width: ${breakPoints.md}px)`]: {\n            gridTemplateColumns: \"1.2fr .7fr .7fr .3fr\",\n          },\n          gap: \"15px\",\n        }}\n      >\n        <Box sx={{ width: \"240px\", flexGrow: \"0\" }}>\n          View Replication Status for a:\n        </Box>\n        <Box\n          sx={{\n            marginLeft: -25,\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              marginLeft: 0,\n            },\n          }}\n        >\n          <Select\n            id=\"replicationEntityLookup\"\n            name=\"replicationEntityLookup\"\n            onChange={(value) => {\n              setEntityType(value);\n              setStatsLoaded(false);\n            }}\n            label=\"\"\n            value={entityType}\n            options={[\n              {\n                label: \"Bucket\",\n                value: \"bucket\",\n              },\n              {\n                label: \"User\",\n                value: \"user\",\n              },\n              {\n                label: \"Group\",\n                value: \"group\",\n              },\n              {\n                label: \"Policy\",\n                value: \"policy\",\n              },\n            ]}\n            disabled={false}\n          />\n        </Box>\n\n        <Box\n          sx={{\n            flex: 2,\n          }}\n        >\n          <InputBox\n            id=\"replicationLookupEntityValue\"\n            name=\"replicationLookupEntityValue\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setEntityValue(e.target.value);\n              setStatsLoaded(false);\n            }}\n            placeholder={`test-${entityType}`}\n            label=\"\"\n            value={entityValue}\n          />\n        </Box>\n        <Box\n          sx={{\n            maxWidth: \"80px\",\n          }}\n        >\n          <TooltipWrapper tooltip={\"View across sites\"}>\n            <Button\n              id={\"view-across-sites\"}\n              type={\"button\"}\n              onClick={() => {\n                getStats(entityType, entityValue);\n              }}\n              label={`View`}\n              icon={<ClustersIcon />}\n              collapseOnSmall={false}\n              disabled={!entityValue || !entityType}\n            />\n          </TooltipWrapper>\n        </Box>\n      </Box>\n\n      {isStatsLoading ? (\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 45,\n          }}\n        >\n          <Loader style={{ width: 25, height: 25 }} />\n        </Grid>\n      ) : null}\n\n      {statsLoaded ? (\n        <Box>\n          {!isStatsLoading && entityType === \"bucket\" && entityValue ? (\n            <BucketEntityStatus\n              bucketStats={bucketStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"user\" && entityValue ? (\n            <UserEntityStatus\n              userStats={userStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"group\" && entityValue ? (\n            <GroupEntityStatus\n              groupStats={groupStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n\n          {!isStatsLoading && entityType === \"policy\" && entityValue ? (\n            <PolicyEntityStatus\n              policyStats={policyStats}\n              sites={sites}\n              lookupValue={entityValue}\n            />\n          ) : null}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default EntityReplicationLookup;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  BackLink,\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Button,\n  Grid,\n  GroupsIcon,\n  IAMPoliciesIcon,\n  Loader,\n  PageLayout,\n  RefreshIcon,\n  UsersIcon,\n  SectionTitle,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport StatusCountCard from \"../../Dashboard/BasicDashboard/StatusCountCard\";\nimport EntityReplicationLookup from \"./EntityReplicationLookup\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nexport type StatsResponseType = {\n  maxBuckets?: number;\n  bucketStats?: Record<string, any>;\n  maxGroups?: number;\n  groupStats?: Record<string, any>;\n  maxUsers?: number;\n  userStats?: Record<string, any>;\n  maxPolicies?: number;\n  policyStats?: Record<string, any>;\n  sites?: Record<string, any>;\n};\n\nconst SREntityStatus = ({\n  maxValue = 0,\n  entityStatObj = {},\n  entityTextPlural = \"\",\n  icon = null,\n}: {\n  maxValue: number;\n  entityStatObj: Record<string, any>;\n  entityTextPlural: string;\n  icon?: React.ReactNode;\n}) => {\n  const statEntityLen = Object.keys(entityStatObj || {})?.length;\n  return (\n    <Box\n      withBorders\n      sx={{\n        padding: \"25px\",\n        [`@media (min-width: ${breakPoints.sm}px)`]: {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <StatusCountCard\n        icon={icon}\n        onlineCount={maxValue}\n        offlineCount={statEntityLen}\n        okStatusText={\"Synced\"}\n        notOkStatusText={\"Failed\"}\n        label={entityTextPlural}\n      />\n    </Box>\n  );\n};\n\nconst SiteReplicationStatus = () => {\n  const navigate = useNavigate();\n\n  const [stats, setStats] = useState<StatsResponseType>({});\n\n  const [isStatsLoading, invokeSiteStatsApi] = useApi(\n    (res: any) => {\n      setStats(res);\n    },\n    (err: any) => {\n      setStats({});\n    },\n  );\n\n  const {\n    maxBuckets = 0,\n    bucketStats = {},\n    maxGroups = 0,\n    groupStats = {},\n    maxUsers = 0,\n    userStats = {},\n    maxPolicies = 0,\n    policyStats = {},\n  } = stats || {};\n\n  const getStats = () => {\n    let url = `api/v1/admin/site-replication/status?buckets=true&groups=true&policies=true&users=true`;\n    invokeSiteStatsApi(\"GET\", url);\n  };\n\n  useEffect(() => {\n    getStats();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"replication_status\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Site Replication\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <SectionTitle\n          actions={\n            <Fragment>\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh\"}\n                  onClick={() => {\n                    getStats();\n                  }}\n                  label={\"Refresh\"}\n                  icon={<RefreshIcon />}\n                  variant={\"regular\"}\n                  collapseOnSmall={false}\n                />\n              </TooltipWrapper>\n            </Fragment>\n          }\n          separator\n        >\n          Replication status from all Sites\n        </SectionTitle>\n\n        {!isStatsLoading ? (\n          <Box\n            sx={{\n              display: \"grid\",\n              marginTop: \"25px\",\n              gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n              [`@media (max-width: ${breakPoints.md}px)`]: {\n                gridTemplateColumns: \"1fr 1fr\",\n              },\n              [`@media (max-width: ${breakPoints.sm}px)`]: {\n                gridTemplateColumns: \"1fr\",\n              },\n              gap: \"30px\",\n            }}\n          >\n            <SREntityStatus\n              entityStatObj={bucketStats}\n              entityTextPlural={\"Buckets\"}\n              maxValue={maxBuckets}\n              icon={<BucketsIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={userStats}\n              entityTextPlural={\"Users\"}\n              maxValue={maxUsers}\n              icon={<UsersIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={groupStats}\n              entityTextPlural={\"Groups\"}\n              maxValue={maxGroups}\n              icon={<GroupsIcon />}\n            />\n            <SREntityStatus\n              entityStatObj={policyStats}\n              entityTextPlural={\"Policies\"}\n              maxValue={maxPolicies}\n              icon={<IAMPoliciesIcon />}\n            />\n          </Box>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 45,\n            }}\n          >\n            <Loader style={{ width: 25, height: 25 }} />\n          </Grid>\n        )}\n\n        <Box\n          withBorders\n          sx={{\n            minHeight: 450,\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              minHeight: 250,\n            },\n            marginTop: \"25px\",\n            padding: \"25px\",\n          }}\n        >\n          <EntityReplicationLookup />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default SiteReplicationStatus;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { Box, breakPoints, CircleIcon } from \"mds\";\n\nconst StatusCountBase = styled.div(({ theme }) => ({\n  fontFamily: \"Inter,sans-serif\",\n  maxWidth: \"321px\",\n  display: \"flex\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  cursor: \"default\",\n  color: get(theme, \"signalColors.main\", \"#07193E\"),\n  \"& .mainBox\": {\n    flex: 1,\n    display: \"flex\",\n    padding: \"0 8px 0 8px\",\n    [`@media (max-width: ${breakPoints.sm}px)`]: {\n      padding: \"0 10px 0 10px\",\n    },\n    \"& .indicatorIcon\": {\n      width: \"20px\",\n      height: \"20px\",\n      marginTop: \"8px\",\n      maxWidth: \"26px\",\n      \"& .min-icon\": {\n        width: \"16px\",\n        height: \"16px\",\n      },\n    },\n    \"& .indicatorContainer\": {\n      flex: 1,\n      display: \"flex\",\n      flexFlow: \"column\",\n      \"& .indicatorLabel\": {\n        fontSize: \"16px\",\n        fontWeight: 600,\n      },\n      \"& .counterIndicator\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"5px\",\n        justifyContent: \"space-between\",\n        paddingBottom: 0,\n        fontSize: \"55px\",\n        [`@media (max-width: ${breakPoints.sm}px)`]: {\n          paddingBottom: 10,\n          fontSize: \"35px\",\n        },\n        [`@media (max-width: ${breakPoints.lg}px)`]: {\n          fontSize: \"45px\",\n        },\n        [`@media (max-width: ${breakPoints.xl}px)`]: {\n          fontSize: \"50px\",\n        },\n        flexFlow: \"row\",\n        fontWeight: 600,\n\n        \"& .stat-text\": {\n          color: get(theme, \"mutedText\", \"#87888D\"),\n          fontSize: \"12px\",\n          marginTop: \"8px\",\n        },\n        \"& .stat-value\": {\n          textAlign: \"center\",\n          height: \"50px\",\n        },\n        \"& .min-icon\": {\n          marginRight: \"8px\",\n          marginTop: \"8px\",\n          height: \"10px\",\n          width: \"10px\",\n        },\n      },\n      \"& .onlineCounter\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginTop: \"5px\",\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.good\", \"#4CCB92\"),\n        },\n      },\n      \"& .offlineCount\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginTop: \"8px\",\n        \"& .min-icon\": {\n          fill: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n        },\n      },\n    },\n  },\n}));\n\nexport const StatusCountCard = ({\n  onlineCount = 0,\n  offlineCount = 0,\n  icon = null,\n  label = \"\",\n  okStatusText = \"Online\",\n  notOkStatusText = \"Offline\",\n}: {\n  icon: any;\n  onlineCount: number;\n  offlineCount: number;\n  label: string;\n  okStatusText?: string;\n  notOkStatusText?: string;\n}) => {\n  return (\n    <StatusCountBase>\n      <Box className={\"mainBox\"}>\n        <Box className={\"indicatorContainer\"}>\n          <Box className={\"indicatorLabel\"}>{label}</Box>\n\n          <Box className={\"counterIndicator\"}>\n            <Box>\n              <Box className=\"stat-value\">{onlineCount}</Box>\n              <Box className={\"onlineCounter\"}>\n                <CircleIcon />\n                <div className=\"stat-text\">{okStatusText}</div>\n              </Box>\n            </Box>\n\n            <Box>\n              <Box className=\"stat-value\">{offlineCount}</Box>\n              <Box className={\"offlineCount\"}>\n                <CircleIcon />{\" \"}\n                <div className=\"stat-text\">{notOkStatusText}</div>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box className={\"indicatorIcon\"}>{icon}</Box>\n      </Box>\n    </StatusCountBase>\n  );\n};\n\nexport default StatusCountCard;\n"],"names":["LookupTableBase","styled","div","_ref","theme","marginTop","table","width","borderCollapse","fontWeight","fontSize","paddingLeft","textAlign","height","borderBottom","concat","get","display","alignItems","justifyContent","fill","_ref2","_ref2$matrixData","matrixData","_ref2$entityName","entityName","_ref2$entityType","entityType","_matrixData","_toArray","_matrixData$","header","rows","slice","tableHeader","map","hC","hcIdx","_jsx","className","children","tableRowsToRender","r","rIdx","v","cIdx","indicator","Box","CircleIcon","_jsxs","sx","marginBottom","syncStatus","mismatch","set","isEntityNotFound","sites","lookupList","lookupKey","Object","keys","find","sk","EntityNotFound","entityValue","marginLeft","marginRight","_ref$bucketStats","bucketStats","_ref$sites","_ref$lookupValue","lookupValue","rowsForStatus","bucketSites","siteKeys","resultMatrix","row","sCol","length","push","name","fi","sfRow","feature","sbStatus","si","rSite","deploymentID","TagMismatch","HasTagsSet","PolicyMismatch","HasPolicySet","QuotaCfgMismatch","HasQuotaCfgSet","OLockConfigMismatch","HasOLockConfigSet","SSEConfigMismatch","HasSSECfgSet","ReplicationCfgMismatch","HasReplicationCfg","LookupStatusTable","_ref$policyStats","policyStats","policySites","HasPolicy","_ref$groupStats","groupStats","groupSites","GroupDescMismatch","HasGroup","HasPolicyMapping","_ref$userStats","userStats","userSites","UserInfoMismatch","HasUser","_useState","useState","_useState2","_slicedToArray","setEntityType","_useState3","_useState4","setEntityValue","_useState5","_useState6","stats","setStats","_useState7","_useState8","statsLoaded","setStatsLoaded","_useApi","useApi","res","err","_useApi2","isStatsLoading","invokeSiteStatsApi","gridTemplateColumns","_defineProperty","breakPoints","sm","md","flexGrow","Select","id","onChange","value","label","options","disabled","flex","InputBox","e","target","placeholder","maxWidth","TooltipWrapper","tooltip","Button","type","onClick","arguments","undefined","url","getStats","icon","ClustersIcon","collapseOnSmall","Grid","item","xs","Loader","style","BucketEntityStatus","UserEntityStatus","GroupEntityStatus","PolicyEntityStatus","SREntityStatus","_Object$keys","_ref$maxValue","maxValue","_ref$entityStatObj","entityStatObj","_ref$entityTextPlural","entityTextPlural","_ref$icon","statEntityLen","withBorders","padding","StatusCountCard","onlineCount","offlineCount","okStatusText","notOkStatusText","_ref4","_ref5","navigate","useNavigate","_ref3","_ref3$maxBuckets","maxBuckets","_ref3$bucketStats","_ref3$maxGroups","maxGroups","_ref3$groupStats","_ref3$maxUsers","maxUsers","_ref3$userStats","_ref3$maxPolicies","maxPolicies","_ref3$policyStats","useEffect","dispatch","useAppDispatch","setHelpName","Fragment","PageHeaderWrapper","BackLink","IAM_PAGES","SITE_REPLICATION","actions","HelpMenu","PageLayout","SectionTitle","RefreshIcon","variant","separator","BucketsIcon","UsersIcon","GroupsIcon","IAMPoliciesIcon","minHeight","EntityReplicationLookup","StatusCountBase","_counterIndicator","_mainBox","fontFamily","cursor","color","flexFlow","gap","paddingBottom","lg","xl","_ref2$onlineCount","_ref2$offlineCount","_ref2$icon","_ref2$label","_ref2$okStatusText","_ref2$notOkStatusText"],"sourceRoot":""}