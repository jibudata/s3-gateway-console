{"version":3,"file":"static/js/4515.fb4bb451.chunk.js","mappings":"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","sources":["common/BackLink.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"300px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Button } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fileInputStyles,\n  formFieldStyles,\n  modalBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\nimport BackLink from \"../../../../common/BackLink\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    ...formFieldStyles,\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    fileInputFieldCss: {\n      margin: \"0\",\n    },\n    fileTextBoxContainer: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    fileReselectCss: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    ...fileInputStyles,\n  });\n\ninterface IAddNotificationEndpointProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n  match: any;\n  history: any;\n}\n\nconst AddTierConfiguration = ({\n  classes,\n  setErrorSnackMessage,\n  match,\n  history,\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(match, \"params.service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      if (type === \"minio\") {\n        tierType = \"s3\";\n      }\n\n      switch (type) {\n        case \"minio\":\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType,\n        ...request,\n      };\n\n      api\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\n        .then(() => {\n          setSaving(false);\n\n          history.push(IAM_PAGES.TIERS_ADD);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    history,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    setErrorSnackMessage,\n    storageClass,\n    type,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com/\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Tiers\" />\n\n      <BackLink to={IAM_PAGES.TIERS_ADD} label=\"Back To Tier Type Selection\" />\n\n      <PageLayout>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            border: \"1px solid #eaeaea\",\n            padding: \"25px\",\n          }}\n        >\n          <form noValidate onSubmit={submitForm}>\n            {type !== \"\" && targetElement ? (\n              <Grid\n                item\n                xs={12}\n                key={`icon-${targetElement.targetTitle}`}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  marginBottom: \"20px\",\n                }}\n              >\n                {targetElement.logo ? (\n                  <Box\n                    sx={{\n                      \"& .min-icon\": {\n                        height: \"60px\",\n                        width: \"60px\",\n                      },\n                    }}\n                  >\n                    {targetElement.logo}\n                  </Box>\n                ) : null}\n\n                <div className={classes.lambdaNotifTitle}>\n                  <b>\n                    {titleSelection ? titleSelection : \"\"} - Add Tier\n                    Configuration\n                  </b>\n                </div>\n              </Grid>\n            ) : null}\n\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"grid\",\n                gridTemplateColumns: { xs: \"1fr\", sm: \"1fr 1fr\" },\n                gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n                gridRowGap: 25,\n                gridColumnGap: 50,\n              }}\n            >\n              {type !== \"\" && (\n                <Fragment>\n                  <InputBoxWrapper\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                    value={name}\n                    onChange={updateTierName}\n                    error={nameInputError}\n                  />\n                  <InputBoxWrapper\n                    id=\"endpoint\"\n                    name=\"endpoint\"\n                    label=\"Endpoint\"\n                    placeholder=\"Enter Endpoint\"\n                    value={endpoint}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setEndpoint(e.target.value);\n                    }}\n                  />\n                  {(type === s3ServiceName || type === minioServiceName) && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accessKey\"\n                        name=\"accessKey\"\n                        label=\"Access Key\"\n                        placeholder=\"Enter Access Key\"\n                        value={accessKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccessKey(e.target.value);\n                        }}\n                      />\n                      <InputBoxWrapper\n                        id=\"secretKey\"\n                        name=\"secretKey\"\n                        label=\"Secret Key\"\n                        placeholder=\"Enter Secret Key\"\n                        value={secretKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setSecretKey(e.target.value);\n                        }}\n                      />\n                    </Fragment>\n                  )}\n                  {type === gcsServiceName && (\n                    <FileSelector\n                      accept=\".json\"\n                      classes={{\n                        fileInputField: classes.fileInputFieldCss,\n                        textBoxContainer: classes.fileTextBoxContainer,\n                        fileReselect: classes.fileReselectCss,\n                      }}\n                      id=\"creds\"\n                      label=\"Credentials\"\n                      name=\"creds\"\n                      onChange={(encodedValue, fileName) => {\n                        setEncodedCreds(encodedValue);\n                        setCreds(fileName);\n                      }}\n                      value={creds}\n                    />\n                  )}\n                  {type === azureServiceName && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accountName\"\n                        name=\"accountName\"\n                        label=\"Account Name\"\n                        placeholder=\"Enter Account Name\"\n                        value={accountName}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountName(e.target.value);\n                        }}\n                      />\n                      <InputBoxWrapper\n                        id=\"accountKey\"\n                        name=\"accountKey\"\n                        label=\"Account Key\"\n                        placeholder=\"Enter Account Key\"\n                        value={accountKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountKey(e.target.value);\n                        }}\n                      />\n                    </Fragment>\n                  )}\n                  <InputBoxWrapper\n                    id=\"bucket\"\n                    name=\"bucket\"\n                    label=\"Bucket\"\n                    placeholder=\"Enter Bucket\"\n                    value={bucket}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setBucket(e.target.value);\n                    }}\n                  />\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    label=\"Prefix\"\n                    placeholder=\"Enter Prefix\"\n                    value={prefix}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                  />\n                  <InputBoxWrapper\n                    id=\"region\"\n                    name=\"region\"\n                    label=\"Region\"\n                    placeholder=\"Enter Region\"\n                    value={region}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                  />\n                  {type === s3ServiceName ||\n                    (type === minioServiceName && (\n                      <InputBoxWrapper\n                        id=\"storageClass\"\n                        name=\"storageClass\"\n                        label=\"Storage Class\"\n                        placeholder=\"Enter Storage Class\"\n                        value={storageClass}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setStorageClass(e.target.value);\n                        }}\n                      />\n                    ))}\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item xs={12} className={classes.settingsButtonContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={saving || !isFormValid}\n              >\n                Save Tier Configuration\n              </Button>\n            </Grid>\n          </form>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddTierConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  AzureTierIcon,\n  GoogleTierIcon,\n  MinIOTierIcon,\n  MinIOTierIconXs,\n  S3TierIcon,\n  GoogleTierIconXs,\n  S3TierIconXs,\n  AzureTierIconXs,\n} from \"../../../../icons\";\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: <MinIOTierIcon />,\n    logoXs: <MinIOTierIconXs />,\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: <GoogleTierIcon />,\n    logoXs: <GoogleTierIconXs />,\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: <S3TierIcon />,\n    logoXs: <S3TierIconXs />,\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: <AzureTierIcon />,\n    logoXs: <AzureTierIconXs />,\n  },\n];\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","link","display","alignItems","textDecoration","maxWidth","padding","color","palette","primary","light","fontSize","icon","marginRight","justifyContent","to","label","classes","className","fieldBasic","tooltipHelper","valueString","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","flexGrow","position","overlayAction","right","top","maxHeight","autoComplete","multiline","index","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","container","clsx","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","disableTouchRipple","pageContentStyles","children","contentSpacer","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","width","minHeight","backgroundColor","left","boxShadow","labelStyle","marginLeft","rightMenu","textAlign","logo","fill","main","actions","direction","sm","md","style","height","variant","setErrorSnackMessage","modalBasic","settingsCommon","formFieldStyles","lambdaNotifTitle","fontFamily","fileInputFieldCss","fileTextBoxContainer","flex","fileReselectCss","match","history","saving","setSaving","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","s3","accesskey","secretkey","storageclass","gcs","azure","accountname","accountkey","payload","api","then","push","IAM_PAGES","catch","err","valid","targetElement","tierTypes","serviceName","Fragment","sx","noValidate","onSubmit","event","preventDefault","marginBottom","targetTitle","gridTemplateColumns","gridAutoFlow","gridRowGap","gridColumnGap","toUpperCase","s3ServiceName","minioServiceName","gcsServiceName","encodedValue","azureServiceName","settingsButtonContainer","logoXs","errorBlock","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}