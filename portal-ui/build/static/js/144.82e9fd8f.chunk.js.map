{"version":3,"sources":["screens/Console/Common/ProgressBarWrapper/ProgressBarWrapper.tsx","screens/Console/Common/ObjectManager/ObjectHandled.tsx","screens/Console/Common/ObjectManager/ObjectManager.tsx"],"names":["BorderLinearProgress","styled","LinearProgress","height","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","bar","LinearProgressWithLabel","props","sx","display","alignItems","width","mr","variant","minWidth","fontSize","className","Math","round","value","ProgressBarWrapper","ready","propsComponent","indeterminate","color","withLabel","withStyles","theme","createStyles","container","borderBottom","padding","margin","position","opacity","transitionDuration","visibility","headItem","whiteSpace","textOverflow","overflow","progressContainer","marginTop","objectDetails","iconContainer","paddingTop","marginRight","download","upload","closeIcon","content","transform","borderLeft","closeButton","border","right","fileName","classes","objectToDisplay","deleteFromList","prefix","done","clearListIcon","onClick","instanceID","disabled","clsx","type","bucketName","Tooltip","title","placement","waitingForFile","percentage","connector","connect","state","objects","objectBrowser","objectManager","objectsToManage","managerOpen","cleanList","downloadContainer","boxShadow","top","overflowY","overflowX","zIndex","minHeight","fontWeight","textAlign","marginBottom","paddingBottom","actionsContainer","maxHeight","flexDirection","cleanIcon","cleanButton","IconButton","size","map","object","key"],"mappings":"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","file":"static/js/144.82e9fd8f.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport LinearProgress, {\n  linearProgressClasses,\n  LinearProgressProps,\n} from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProgressBarWrapper {\n  value: number;\n  ready: boolean;\n  indeterminate?: boolean;\n  withLabel?: boolean;\n}\n\nconst BorderLinearProgress = styled(LinearProgress)(() => ({\n  height: 10,\n  borderRadius: 5,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor: \"#f1f1f1\",\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n  },\n}));\n\nfunction LinearProgressWithLabel(props: LinearProgressProps) {\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n      <Box sx={{ width: \"100%\", mr: 1 }}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35, fontSize: 14 }} className={\"value\"}>\n        {`${Math.round(props.value || 0)}%`}\n      </Box>\n    </Box>\n  );\n}\n\nconst ProgressBarWrapper = ({\n  value,\n  ready,\n  indeterminate,\n  withLabel,\n}: IProgressBarWrapper) => {\n  const propsComponent: LinearProgressProps = {\n    variant: indeterminate && !ready ? \"indeterminate\" : \"determinate\",\n    value: ready ? 100 : value,\n    color: ready ? \"success\" : \"primary\",\n  };\n  if (withLabel) {\n    return <LinearProgressWithLabel {...propsComponent} />;\n  }\n\n  return <BorderLinearProgress {...propsComponent} />;\n};\n\nexport default ProgressBarWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Tooltip } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport ProgressBarWrapper from \"../ProgressBarWrapper/ProgressBarWrapper\";\nimport { DownloadStatIcon, UploadStatIcon } from \"../../../../icons\";\nimport clsx from \"clsx\";\n\ninterface IObjectHandled {\n  classes: any;\n  objectToDisplay: IFileItem;\n  deleteFromList: (instanceID: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      borderBottom: \"#E2E2E2 1px solid\",\n      padding: \"15px 5px\",\n      margin: \"0 15px\",\n      position: \"relative\",\n      \"& .showOnHover\": {\n        opacity: 0,\n        transitionDuration: \"0.2s\",\n      },\n      \"&.inProgress\": {\n        \"& .hideOnProgress\": {\n          visibility: \"hidden\",\n        },\n      },\n      \"&:hover\": {\n        \"& .showOnHover\": {\n          opacity: 1,\n        },\n      },\n    },\n    headItem: {\n      color: \"#868686\",\n      fontSize: 12,\n      width: \"100%\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n    },\n    progressContainer: {\n      marginTop: 5,\n    },\n    objectDetails: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    iconContainer: {\n      paddingTop: 5,\n      marginRight: 5,\n      \"& svg\": {\n        width: 20,\n        height: 20,\n      },\n    },\n    download: {\n      color: \"rgb(113,200,150)\",\n    },\n    upload: {\n      color: \"rgb(66,127,172)\",\n    },\n    closeIcon: {\n      \"&::before\": {\n        width: 1,\n        height: 12,\n        content: \"' '\",\n        position: \"absolute\",\n        transform: \"rotate(45deg)\",\n        borderLeft: \"#9c9c9c 2px solid\",\n      },\n      \"&::after\": {\n        width: 1,\n        height: 12,\n        content: \"' '\",\n        position: \"absolute\",\n        transform: \"rotate(-45deg)\",\n        borderLeft: \"#9c9c9c 2px solid\",\n      },\n    },\n    closeButton: {\n      backgroundColor: \"transparent\",\n      border: 0,\n      right: 0,\n      position: \"absolute\",\n    },\n    fileName: {\n      width: 230,\n    },\n  });\n\nconst ObjectHandled = ({\n  classes,\n  objectToDisplay,\n  deleteFromList,\n}: IObjectHandled) => {\n  const prefix = `${objectToDisplay.prefix}`;\n  return (\n    <Fragment>\n      <div\n        className={`${classes.container} ${\n          !objectToDisplay.done ? \"inProgress\" : \"\"\n        }`}\n      >\n        <div className={classes.clearListIcon}>\n          <button\n            onClick={() => {\n              deleteFromList(objectToDisplay.instanceID);\n            }}\n            className={`${classes.closeButton} hideOnProgress showOnHover`}\n            disabled={!objectToDisplay.done}\n          >\n            <span className={classes.closeIcon}></span>\n          </button>\n        </div>\n        <div className={classes.objectDetails}>\n          <div\n            className={clsx(classes.iconContainer, {\n              [classes.download]: objectToDisplay.type === \"download\",\n              [classes.upload]: objectToDisplay.type !== \"download\",\n            })}\n          >\n            {objectToDisplay.type === \"download\" ? (\n              <DownloadStatIcon />\n            ) : (\n              <UploadStatIcon />\n            )}\n          </div>\n          <div className={classes.fileName}>\n            <div className={classes.headItem}>\n              <strong>Bucket: </strong>\n              {objectToDisplay.bucketName}\n            </div>\n            <Tooltip title={prefix} placement=\"top-start\">\n              <div className={classes.headItem}>{prefix}</div>\n            </Tooltip>\n          </div>\n        </div>\n        <div className={classes.progressContainer}>\n          {objectToDisplay.waitingForFile ? (\n            <ProgressBarWrapper indeterminate value={0} ready={false} />\n          ) : (\n            <ProgressBarWrapper\n              value={objectToDisplay.percentage}\n              ready={objectToDisplay.done}\n              withLabel\n            />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ObjectHandled);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Tooltip, IconButton } from \"@mui/material\";\nimport { AppState } from \"../../../../store\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { deleteFromList, cleanList } from \"../../ObjectBrowser/actions\";\nimport { TrashIcon } from \"../../../../icons\";\nimport ObjectHandled from \"./ObjectHandled\";\n\ninterface IObjectManager {\n  objects: IFileItem[];\n  classes: any;\n  managerOpen: boolean;\n  deleteFromList: typeof deleteFromList;\n  cleanList: typeof cleanList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    downloadContainer: {\n      border: \"#EAEDEE 1px solid\",\n      boxShadow: \"rgba(0, 0, 0, 0.08) 0 3px 10px\",\n      backgroundColor: \"#fff\",\n      position: \"absolute\",\n      right: 0,\n      top: 80,\n      width: 300,\n      overflowY: \"hidden\",\n      overflowX: \"hidden\",\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: 0,\n      height: 0,\n      transitionDuration: \"0.3s\",\n      visibility: \"hidden\",\n      \"&.open\": {\n        visibility: \"visible\",\n        minHeight: 400,\n      },\n    },\n    title: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      marginBottom: 5,\n      paddingBottom: 12,\n      borderBottom: \"#E2E2E2 1px solid\",\n      margin: \"15px 15px 5px 15px\",\n    },\n    actionsContainer: {\n      overflowY: \"auto\",\n      overflowX: \"hidden\",\n      minHeight: 250,\n      maxHeight: 335,\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    cleanIcon: {\n      position: \"absolute\",\n      right: 14,\n      top: 12,\n    },\n    cleanButton: {\n      \"& svg\": {\n        width: 20,\n      },\n    },\n  });\n\nconst ObjectManager = ({\n  objects,\n  classes,\n  managerOpen,\n  deleteFromList,\n  cleanList,\n}: IObjectManager) => {\n  return (\n    <Fragment>\n      {managerOpen && (\n        <div\n          className={`${classes.downloadContainer} ${\n            managerOpen ? \"open\" : \"\"\n          }`}\n        >\n          <div className={classes.cleanIcon}>\n            <Tooltip title={\"Clean Completed Objects\"} placement=\"bottom-start\">\n              <IconButton\n                aria-label={\"Clear Completed List\"}\n                size={\"small\"}\n                onClick={cleanList}\n                className={classes.cleanButton}\n              >\n                <TrashIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div className={classes.title}>Downloads / Uploads</div>\n          <div className={classes.actionsContainer}>\n            {objects.map((object, key) => (\n              <ObjectHandled\n                objectToDisplay={object}\n                key={`object-handled-${object.instanceID}`}\n                deleteFromList={deleteFromList}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  objects: state.objectBrowser.objectManager.objectsToManage,\n  managerOpen: state.objectBrowser.objectManager.managerOpen,\n});\n\nconst connector = connect(mapState, { deleteFromList, cleanList });\n\nexport default withStyles(styles)(connector(ObjectManager));\n"],"sourceRoot":""}