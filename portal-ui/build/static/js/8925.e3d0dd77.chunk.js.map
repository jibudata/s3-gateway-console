{"version":3,"file":"static/js/8925.e3d0dd77.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormLayout.tsx","screens/Console/KMS/ImportKey.tsx","screens/Console/KMS/KMSHelpbox.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport SectionTitle from \"./SectionTitle\";\n\ntype Props = {\n  title: string;\n  icon: React.ReactNode;\n  helpbox?: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst FormLayout: React.FC<Props> = ({ children, title, helpbox, icon }) => {\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        padding: \"25px\",\n        gap: \"25px\",\n        gridTemplateColumns: {\n          md: \"2fr 1.2fr\",\n          xs: \"1fr\",\n        },\n        border: \"1px solid #eaeaea\",\n      }}\n    >\n      <Box>\n        <SectionTitle icon={icon}>{title}</SectionTitle>\n        <Box sx={{ height: 16 }} />\n        {children}\n      </Box>\n\n      {helpbox}\n    </Box>\n  );\n};\n\nexport default FormLayout;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { AddAccessRuleIcon, BackLink, Button } from \"mds\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport FormLayout from \"../Common/FormLayout\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport KMSHelpBox from \"./KMSHelpbox\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nexport const emptyContent = '{\\n    \"bytes\": \"\"\\n}';\n\nconst ImportKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const onSuccess = () => navigate(`${IAM_PAGES.KMS_KEYS}`);\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n  const [keyName, setKeyName] = useState<string>(\"\");\n  const [keyContent, setKeyContent] = useState<string>(emptyContent);\n\n  const importRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let data = JSON.parse(keyContent);\n    invokeApi(\"POST\", `/api/v1/kms/keys/${keyName}/import`, data);\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n    setKeyContent(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              onClick={() => navigate(IAM_PAGES.KMS_KEYS)}\n              label={\"Keys\"}\n            />\n          }\n        />\n        <PageLayout>\n          <FormLayout\n            title={\"Import Key\"}\n            icon={<AddAccessRuleIcon />}\n            helpbox={\n              <KMSHelpBox\n                helpText={\"Encryption Key\"}\n                contents={[\n                  \"Import a cryptographic key in the Key Management Service server connected to MINIO.\",\n                ]}\n              />\n            }\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                importRecord(e);\n              }}\n            >\n              <Grid container item spacing={1}>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"key-name\"\n                    name=\"key-name\"\n                    label=\"Key Name\"\n                    autoFocus={true}\n                    value={keyName}\n                    error={validateKeyName(keyName)}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setKeyName(e.target.value);\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    label={\"Set key Content\"}\n                    value={keyContent}\n                    onBeforeChange={(editor, data, value) => {\n                      setKeyContent(value);\n                    }}\n                    editorHeight={\"350px\"}\n                  />\n                </Grid>\n                <Grid item xs={12} textAlign={\"right\"}>\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                      marginTop: \"20px\",\n                      gap: \"15px\",\n                    }}\n                  >\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n\n                    <Button\n                      id={\"import-key\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      disabled={loading || !validSave}\n                      label={\"Import\"}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </form>\n          </FormLayout>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ImportKey;\n","import React from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content) => (\n          <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default KMSHelpBox;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","_objectSpread","fieldBasic","_ref","value","_ref$label","label","_ref$tooltip","tooltip","_ref$mode","mode","classes","onBeforeChange","_ref$editorHeight","readOnly","editorHeight","_jsxs","React","children","_jsx","Grid","item","xs","sx","marginBottom","InputLabel","className","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","style","maxHeight","overflow","border","CodeEditor","language","onChange","evn","target","id","padding","fontSize","backgroundColor","fontFamily","minHeight","color","background","borderTop","Box","display","alignItems","paddingRight","justifyContent","height","width","marginLeft","TooltipWrapper","CopyToClipboard","text","Button","type","icon","CopyIcon","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","name","_ref$type","_ref$autoComplete","autoComplete","_ref$disabled","disabled","_ref$multiline","multiline","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","inputProps","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","fullWidth","helperText","inputRebase","concat","IconButton","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","helpbox","gap","gridTemplateColumns","md","SectionTitle","emptyContent","dispatch","useAppDispatch","navigate","useNavigate","_useApi","useApi","IAM_PAGES","err","setErrorSnackMessage","_useApi2","loading","invokeApi","keyName","setKeyName","_useState3","_useState4","keyContent","setKeyContent","validSave","trim","indexOf","Fragment","PageHeaderWrapper","BackLink","PageLayout","FormLayout","AddAccessRuleIcon","KMSHelpBox","helpText","contents","noValidate","onSubmit","e","event","preventDefault","data","JSON","parse","importRecord","spacing","InputBoxWrapper","validateKeyName","CodeMirrorWrapper","editor","textAlign","marginTop","flex","borderRadius","flexFlow","fontWeight","paddingBottom","marginRight","HelpIconFilled","map","content","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}