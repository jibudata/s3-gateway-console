{"version":3,"file":"static/js/841.31434f9c.chunk.js","mappings":"2LAuLA,IAlJyB,SAAHA,GAQI,IAPxBC,EAAQD,EAARC,SACAC,EAAIF,EAAJE,KACAC,EAAKH,EAALG,MAAKC,EAAAJ,EACLK,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAAN,EACZO,kBAAAA,OAAiB,IAAAD,EAAG,GAAEA,EACtBE,EAAQR,EAARQ,SAAQC,EAAAT,EACRU,WAAAA,OAAU,IAAAD,GAAQA,EAElBE,GAA8CC,EAAAA,EAAAA,UAAmB,CAAC,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GACpCI,GAAaC,EAAAA,EAAAA,cAGnBC,EAAAA,EAAAA,YAAU,WACR,GAC6B,IAA3BJ,EAAgBK,QACO,KAAvBL,EAAgB,IAChBd,GACa,KAAbA,EACA,CACA,IAAMoB,EAAgBpB,EAASqB,MAAM,KACrCD,EAAcE,KAAK,IAEnBP,EAAmBK,EACrB,CAGF,GAAG,CAACpB,EAAUc,KAGdI,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAgBK,OAAS,EAAG,CAC9B,IAAMI,EAAYP,EAAWQ,QACzBD,GACFA,EAAUE,gBAAe,EAE7B,CACF,GAAG,CAACX,EAAiBE,IAErB,IAAMU,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCrB,EAASqB,EACX,GACA,CAACrB,IAIGsB,GAAcC,EAAAA,EAAAA,SAAO,IAC3BZ,EAAAA,EAAAA,YAAU,WACR,GAAIW,EAAYL,QACdK,EAAYL,SAAU,MADxB,CAIA,IAAMO,EAAiBjB,EACpBkB,QAAO,SAACC,GAAO,MAAwB,KAAnBA,EAAQC,MAAa,IACzCC,KAAK,KAERT,EAAiBK,EALjB,CAQF,GAAG,CAACjB,IAGJ,IASMsB,EAAkB,SAACC,GACvBA,EAAEC,UAEF,IAAIC,GAAcC,EAAAA,EAAAA,GAAO1B,GACnB2B,EAAQC,IAAIL,EAAEM,OAAQ,gBAAiB,KAE7CJ,EADiBK,SAASH,IACCJ,EAAEM,OAAOE,MAEpC9B,EAAmBwB,EACrB,EAEMO,EAAShC,EAAgBiC,KAAI,SAACd,EAASQ,GAC3C,OACEO,EAAAA,EAAAA,KAACC,EAAAA,IAAQ,CAEPC,GAAE,GAAAC,OAAKlD,EAAI,KAAAkD,OAAIV,EAAMW,YACrBlD,MAAO,GACPD,KAAI,GAAAkD,OAAKlD,EAAI,KAAAkD,OAAIV,EAAMW,YACvBP,MAAO/B,EAAgB2B,GACvBlC,SAAU6B,EACVK,MAAOA,EACPY,YAAa/C,EACbgD,YAAab,IAAU3B,EAAgBK,OAAS,GAAI6B,EAAAA,EAAAA,KAACO,EAAAA,IAAO,IAAM,KAClEC,cAAe,YAhCA,SAACC,GACpB,GAAiD,KAA7CA,EAAWA,EAAWtC,OAAS,GAAGe,OAAe,CACnD,IAAMwB,GAAMlB,EAAAA,EAAAA,GAAOiB,GACnBC,EAAOpC,KAAK,IACZP,EAAmB2C,EACrB,CACF,CA2BQC,CAAa7C,EACf,GAAE,aAAAqC,OAXgBlD,EAAI,KAAAkD,OAAIV,EAAMW,YActC,IAEA,OACEJ,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAACC,EAAAA,IAAG,CAACC,GAAI,CAAEC,QAAS,QAAUC,UAAW,YAAYL,SAAA,EACnDC,EAAAA,EAAAA,MAACK,EAAAA,IAAU,CACTH,GAAI,CACFI,WAAY,cACZP,SAAA,EAEFb,EAAAA,EAAAA,KAAA,QAAAa,SAAO3D,IACM,KAAZE,IACC4C,EAAAA,EAAAA,KAACe,EAAAA,IAAG,CACFC,GAAI,CACFK,WAAY,EACZJ,QAAS,OACTG,WAAY,SACZ,cAAe,CACbE,MAAO,KAETT,UAEFb,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CAACnE,QAASA,EAASoE,UAAU,MAAKX,UACxCb,EAAAA,EAAAA,KAACe,EAAAA,IAAG,CAACG,UAAW9D,EAAQyD,UACtBb,EAAAA,EAAAA,KAACyB,EAAAA,IAAQ,cAMnBX,EAAAA,EAAAA,MAACC,EAAAA,IAAG,CACFW,YAAajE,EACbuD,GAAI,CACFM,MAAO,OACPK,UAAW,OACXC,OAAQ,IACRC,SAAU,YACVhB,SAAA,CAEDf,GACDE,EAAAA,EAAAA,KAAA,OAAK8B,IAAK9D,WAKpB,C,oJCzBA,KAAe+D,EAAAA,EAAAA,IAtHA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACAC,EAAAA,IAAa,IAChBC,YAAUH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLC,EAAAA,GAAWE,YAAU,IACxBC,SAAU,GACVC,OAAQ,EACRnB,WAAY,aACZoB,WAAY,OACZC,SAAU,OACVxB,QAAS,SAEXyB,iBAAkB,CAChBC,SAAU,EACVd,SAAU,YAEZe,iBAAkB,CAChBC,YAAa,UACbC,QAAS,IAEXC,cAAe,CACb,sCAAoCb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC/BC,EAAAA,GAAWE,YAAU,IACxBC,SAAU,GACVU,UAAW,MAEb,iDAAkD,CAChDH,YAAa,UACbI,YAAa,GAEf,aAAc,CACZC,MAAO,UACPZ,SAAU,GACVa,WAAY,IACZ,gBAAiB,CACfD,MAAO,UACPE,QAAS,EACTD,WAAY,SAIjB,GA4EL,EA1E0B,SAAHpG,GAaC,IAZtBG,EAAKH,EAALG,MACAK,EAAQR,EAARQ,SACAsC,EAAK9C,EAAL8C,MACAK,EAAEnD,EAAFmD,GACAjD,EAAIF,EAAJE,KAAIoG,EAAAtG,EACJuG,SAAAA,OAAQ,IAAAD,GAAQA,EAAAlG,EAAAJ,EAChBK,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAoG,EAAAxG,EACZ0C,MAAAA,OAAK,IAAA8D,EAAG,EAACA,EAAAC,EAAAzG,EACT0G,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAA3G,EACV4G,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA7G,EAChBsD,YAAAA,OAAW,IAAAuD,EAAG,GAAEA,EAChBC,EAAO9G,EAAP8G,QAEIC,EAAkB,CAAE,aAAcrE,GAEtC,OACEO,EAAAA,EAAAA,KAAC+D,EAAAA,SAAc,CAAAlD,UACbC,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJhD,UAAS,GAAAf,OAAK0D,EAAQM,eAAc,KAAAhE,OACxB,KAAVsD,EAAeI,EAAQO,aAAe,IACrCvD,SAAA,CAEQ,KAAV3D,IACC4D,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACkD,QAASnE,EAAIgB,UAAW2C,EAAQxB,WAAWxB,SAAA,EACrDC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACG3D,EACAyG,EAAW,IAAM,MAEP,KAAZvG,IACC4C,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQS,iBAAiBzD,UACvCb,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAACgD,MAAOnH,EAASoE,UAAU,YAAWX,UAC5Cb,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQzG,QAAQyD,UAC9Bb,EAAAA,EAAAA,KAACyB,EAAAA,IAAQ,cAQrBzB,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQnB,iBAAiB7B,UACvCb,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CACRtE,GAAIA,EACJjD,KAAMA,EACNwH,WAAS,EACT5E,MAAOA,EACPyD,SAAUA,EACV/F,SAAUA,EACVmH,WAAS,EACTC,KAAM,EACNb,WAAYA,EACZL,MAAiB,KAAVA,EACPmB,WAAYnB,EACZpD,YAAaA,EACbwE,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVlB,QAAS,CACPmB,eAAgBnB,EAAQjB,iBACxBqC,KAAMpB,EAAQd,gBAGlBmC,QAAQ,mBAMpB,G,mLCzFMC,GAAepD,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CAC1CiD,KAAM,CACJ3D,MAAO,GACPM,OAAQ,GACRkB,QAAS,EACTP,OAAQ,GAEV6C,WAAY,CACVtC,QAAS,EACT,YAAa,CACXuC,UAAW,mBACXnC,MAAOlB,EAAMsD,QAAQC,OAAOC,MAC5B,aAAc,CACZC,gBAAiB,UACjBC,UAAW,oCACXtC,QAAS,EACTuC,OAAQ,SAGZ,wBAAyB,CACvBzC,MAAO,UACPyC,OAAQ,mBAGZC,MAAO,CACLtE,MAAO,GACPM,OAAQ,GACR6D,gBAAiB,UACjBE,OAAQ,oBACRtE,WAAY,GAEdwE,MAAO,CACLC,aAAc,GACdL,gBAAiB,UACjBC,UAAW,oCACXtC,QAAS,EACT2C,WAAY/D,EAAMgE,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,CAAC,EACVC,aAAc,CAAC,EACfC,gBAAiB,CACfnF,QAAS,OACTG,WAAY,SACZiF,eAAgB,YAEnB,GA7CoBtE,CA6CjBuE,EAAAA,GAqGJ,KAAevE,EAAAA,EAAAA,IAxKA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXqE,iBAAkB,CAChBpD,WAAY,OACZD,MAAO,sBAETsD,eAAgB,CACdlE,SAAU,GACVY,MAAO,UACPX,OAAQ,gBAEVkE,iBAAkB,CAChBC,UAAW,EACXxD,MAAO,WAET9F,QAAS,CACPkF,SAAU,KAETqE,EAAAA,IACAxE,EAAAA,IACF,GAoJL,EAnG0B,SAAHpF,GAcH,IAAD6J,EAAA7J,EAbjBG,MAAAA,OAAK,IAAA0J,EAAG,GAAEA,EACVrJ,EAAQR,EAARQ,SACAsC,EAAK9C,EAAL8C,MACAK,EAAEnD,EAAFmD,GACAjD,EAAIF,EAAJE,KAAI4J,EAAA9J,EACJmJ,QAAAA,OAAO,IAAAW,GAAQA,EAAAxD,EAAAtG,EACfuG,SAAAA,OAAQ,IAAAD,GAAQA,EAAAyD,EAAA/J,EAChBgK,WAAAA,OAAU,IAAAD,GAAQA,EAAA3J,EAAAJ,EAClBK,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAA6J,EAAAjK,EACZkK,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBnD,EAAO9G,EAAP8G,QACAqD,EAAenK,EAAfmK,gBAAeC,EAAApK,EACfqK,gBAAAA,OAAe,IAAAD,EAAG,CAAC,EAACA,EAEdE,GACJvG,EAAAA,EAAAA,MAACiD,EAAAA,SAAc,CAAAlD,SAAA,EACXkG,IACA/G,EAAAA,EAAAA,KAAA,QACEkB,WAAWoG,EAAAA,EAAAA,GAAKzD,EAAQ2C,gBAAce,EAAAA,EAAAA,GAAA,GACnC1D,EAAQ0C,kBAAoBL,IAC5BrF,SAEFqG,GAAmBA,EAAgB/I,OAAS,EACzC+I,EAAgB,GAChB,SAGRlH,EAAAA,EAAAA,KAACmF,EAAY,CACXe,QAASA,EACT3I,SAAUA,EACV2F,MAAM,UACNjG,KAAMA,EACN6G,YAAU5B,EAAAA,EAAAA,GAAA,CAAI,aAAc,oBAAuBkF,GACnD9D,SAAUA,EACVkE,eAAa,EACbC,oBAAkB,EAClBC,oBAAkB,EAClB7H,MAAOA,EACPK,GAAIA,KAEJ6G,IACA/G,EAAAA,EAAAA,KAAA,QACEkB,WAAWoG,EAAAA,EAAAA,GAAKzD,EAAQ2C,gBAAce,EAAAA,EAAAA,GAAA,GACnC1D,EAAQ0C,iBAAmBL,IAC3BrF,SAEFqG,EAAkBA,EAAgB,GAAK,UAMhD,OAAIH,EACKM,GAIPrH,EAAAA,EAAAA,KAAA,OAAAa,UACEC,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CAAC2D,WAAS,EAACvG,WAAY,SAASP,SAAA,EACnCb,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI0D,GAAI,EAAGC,GAAI,EAAEhH,SACnB,KAAV3D,IACC4D,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACkD,QAASnE,EAAIgB,UAAW2C,EAAQxB,WAAWxB,SAAA,EACrDb,EAAAA,EAAAA,KAAA,QAAAa,SAAO3D,IACM,KAAZE,IACC4C,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQS,iBAAiBzD,UACvCb,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAACgD,MAAOnH,EAASoE,UAAU,YAAWX,UAC5Cb,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQzG,QAAQyD,UAC9Bb,EAAAA,EAAAA,KAACyB,EAAAA,IAAQ,gBAQvBzB,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ0D,GAAc,KAAV1K,EAAe,EAAI,GACvB2K,GAAc,KAAV3K,EAAe,EAAI,GACvB4K,UAAW,QACXzB,eAAgB,MAChBnF,UAAW2C,EAAQuC,gBAAgBvF,SAElCwG,IAEc,KAAhBJ,IACCjH,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI4D,UAAW,OAAOjH,UACnCb,EAAAA,EAAAA,KAAC+H,EAAAA,EAAU,CAACC,UAAU,IAAI9G,UAAW2C,EAAQ4C,iBAAiB5F,SAC3DoG,UAOf,G,qNCpHMgB,GAAcC,EAAAA,EAAAA,IAAW,SAAClG,GAAY,OAC1CC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAC,CAAC,EACTiG,EAAAA,IACH,IAGJ,SAASC,EAAWC,GAClB,IAAMxE,EAAUoE,IAEhB,OACEjI,EAAAA,EAAAA,KAACwE,EAAAA,GAAStC,EAAAA,EAAAA,GAAA,CACR6C,WAAY,CAAElB,QAAAA,IACVwE,GAGV,CAwJA,KAAetG,EAAAA,EAAAA,IA7LA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACAC,EAAAA,IAAa,IAChBM,iBAAkB,CAChBC,SAAU,EACVd,SAAU,YAEZrB,cAAe,CACbqB,SAAU,WACVyG,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,MAGR,GAyKL,EAtJwB,SAAHxL,GA8BC,IA7BpBG,EAAKH,EAALG,MACAK,EAAQR,EAARQ,SACAsC,EAAK9C,EAAL8C,MACAK,EAAEnD,EAAFmD,GACAjD,EAAIF,EAAJE,KAAIyL,EAAA3L,EACJ4L,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAA7L,EACb8L,aAAAA,OAAY,IAAAD,EAAG,MAAKA,EAAAvF,EAAAtG,EACpBuG,SAAAA,OAAQ,IAAAD,GAAQA,EAAAyF,EAAA/L,EAChB2H,UAAAA,OAAS,IAAAoE,GAAQA,EAAA3L,EAAAJ,EACjBK,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAoG,EAAAxG,EACZ0C,MAAAA,OAAK,IAAA8D,EAAG,EAACA,EAAAC,EAAAzG,EACT0G,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAA3G,EACV4G,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA7G,EAChBsD,YAAAA,OAAW,IAAAuD,EAAG,GAAEA,EAChBmF,EAAGhM,EAAHgM,IACAC,EAAGjM,EAAHiM,IACAC,EAASlM,EAATkM,UAASC,EAAAnM,EACTuD,YAAAA,OAAW,IAAA4I,EAAG,KAAIA,EAAAC,EAAApM,EAClBqM,cAAAA,OAAa,IAAAD,EAAG,KAAIA,EAAAhC,EAAApK,EACpBqK,gBAAAA,OAAe,IAAAD,EAAG,CAAC,EAACA,EACpB3G,EAAazD,EAAbyD,cAAa6I,EAAAtM,EACbuM,gBAAAA,OAAe,IAAAD,GAAQA,EAAAE,EAAAxM,EACvByM,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAA1M,EACZ2M,UAAAA,OAAS,IAAAD,GAAQA,EACjB5F,EAAO9G,EAAP8G,QAAO8F,GAAA5M,EACPmE,UAAAA,QAAS,IAAAyI,GAAG,GAAEA,GACdC,GAAU7M,EAAV6M,WACAC,GAAO9M,EAAP8M,QACAC,GAAO/M,EAAP+M,QAEIhG,IAAe5B,EAAAA,EAAAA,GAAA,CAAK,aAAczC,GAAU2H,GAChD1J,IAA8CC,EAAAA,EAAAA,WAAkB,GAAMC,IAAAC,EAAAA,EAAAA,GAAAH,GAAA,GAA/DqM,GAAenM,GAAA,GAAEoM,GAAkBpM,GAAA,GAE7B,WAAT+K,GAAqBI,IACvBjF,GAAgB,IAAIiF,GAGT,WAATJ,GAAqBK,IACvBlF,GAAgB,IAAIkF,GAGN,KAAZQ,IACF1F,GAAoB,QAAI0F,GAG1B,IAAIS,GAAsB3J,EACtB4J,GAAsBvB,EAW1B,MATa,aAATA,GAAuC,OAAhBrI,IACzB2J,GAAsBF,IACpB/J,EAAAA,EAAAA,KAACmK,EAAAA,EAAiB,KAElBnK,EAAAA,EAAAA,KAACoK,EAAAA,EAAgB,IAEnBF,GAAsBH,GAAkB,OAAS,aAIjD/J,EAAAA,EAAAA,KAAC+D,EAAAA,SAAc,CAAAlD,UACbC,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CACH2D,WAAS,EACTzG,WAAWoG,EAAAA,EAAAA,GACK,KAAdpG,GAAmBA,GAAY,GACrB,KAAVuC,EAAeI,EAAQO,aAAeP,EAAQwG,mBAC9CxJ,SAAA,CAES,KAAV3D,IACC4D,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CACTkD,QAASnE,EACTgB,UACEoI,EAAkBzF,EAAQyG,gBAAkBzG,EAAQxB,WACrDxB,SAAA,EAEDC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACG3D,EACAyG,EAAW,IAAM,MAEP,KAAZvG,IACC4C,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQS,iBAAiBzD,UACvCb,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAACgD,MAAOnH,EAASoE,UAAU,YAAWX,UAC5Cb,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQzG,QAAQyD,UAC9Bb,EAAAA,EAAAA,KAACyB,EAAAA,IAAQ,cAQrBX,EAAAA,EAAAA,MAAA,OAAKI,UAAW2C,EAAQnB,iBAAiB7B,SAAA,EACvCb,EAAAA,EAAAA,KAACoI,EAAU,CACTlI,GAAIA,EACJjD,KAAMA,EACNwH,WAAS,EACT5E,MAAOA,EACP6J,UAAWA,EACXpG,SAAUA,EACV/F,SAAUA,EACVoL,KAAMuB,GACNxF,UAAWA,EACXmE,aAAcA,EACd/E,WAAYA,GACZL,MAAiB,KAAVA,EACPmB,WAAYnB,EACZpD,YAAaA,EACba,UAAW2C,EAAQ0G,YACnBX,WAAYA,GACZC,QAASA,GACTC,QAASA,KAEVG,KACCjK,EAAAA,EAAAA,KAAA,OACEkB,UAAS,GAAAf,OAAK0D,EAAQrD,cAAa,KAAAL,OACvB,KAAVjD,EAAe,YAAc,IAC5B2D,UAEHb,EAAAA,EAAAA,KAACwK,EAAAA,EAAU,CACTC,QACEjK,EACI,WACEA,GACF,EACA,kBAAMwJ,IAAoBD,GAAgB,EAEhD7J,GAAI+I,EACJyB,KAAM,QACNjD,oBAAoB,EACpBD,eAAe,EACfE,oBAAoB,EAAM7G,SAEzBoJ,OAINb,IACCpJ,EAAAA,EAAAA,KAAA,OACEkB,UAAS,GAAAf,OAAK0D,EAAQrD,cAAa,KAAAL,OACvB,KAAVjD,EAAe,YAAc,IAC5B2D,SAEFuI,WAOf,G,wGCvMA,KAAerH,EAAAA,EAAAA,IA7CA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAC,CAAC,EACTyI,EAAAA,IACF,GA0CL,EAxCuB,SAAH5N,GAMI,IALtB8G,EAAO9G,EAAP8G,QAAO+C,EAAA7J,EACPG,MAAAA,OAAK,IAAA0J,EAAG,GAAEA,EACVgE,EAAO7N,EAAP6N,QAAOC,EAAA9N,EACP+N,UAAAA,OAAS,IAAAD,GAAQA,EACjBE,EAAYhO,EAAZgO,aAEA,OACE/K,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CAAC9C,UAAW2C,EAAQmH,kBAAkBnK,SAAA,CAC9B,KAAV3D,IACC8C,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIhD,UAAW2C,EAAQoH,gBAAgBpK,SACnD3D,KAGL4D,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJhD,UAAS,GAAAf,OAAK0D,EAAQ8G,eAAc,KAAAxK,OAClC4K,EAAelH,EAAQqH,qBAAuB,IAC7CrK,SAAA,EAEHb,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJhD,UACE4J,EAAYjH,EAAQsH,sBAAwBtH,EAAQuH,aACrDvK,SAEA+J,IAEFG,IACC/K,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQwH,mBAAmBxK,SAAEkK,WAMzD,G,sEC7BMO,GAAYpD,EAAAA,EAAAA,IAAW,SAAClG,GAAY,MAAM,CAC9CuJ,cAAe,CACbC,YAAa,QACbtI,MAAOlB,EAAMsD,QAAQmG,QAAQC,KAC7B,cAAe,CACbpK,MAAO,GACPM,OAAQ,IAEV,4BAA6B,CAC3BX,QAAS,SAGb0K,mBAAoB,CAClBzI,MAAO,OACP,4BAA6B,CAC3BsF,SAAU,MAGdoD,YAAa,CACX3K,QAAS,OACTG,WAAY,SACZiF,eAAgB,gBAChBvD,QAAS,EAET+I,aAAc,oBACd,4BAA6B,CAC3BC,SAAU,WAGdC,YAAa,CACXnK,OAAQ,OACRyE,eAAgB,SAChBpF,QAAS,OACT6K,SAAU,SACV1K,WAAY,aACZ,OAAQ,CACNkB,SAAU,KAGd0J,UAAW,CACT/K,QAAS,OACTG,WAAY,SACZ,4BAA6B,CAC3B0K,SAAU,SACVxK,MAAO,SAGX2K,WAAY,CACVhL,QAAS,OACTG,WAAY,SACZ,WAAY,CACVC,WAAY,GAEd,4BAA6B,CAC3BC,MAAO,SAGZ,IA+BD,IA7BoB,SAAHvE,GAMI,IALnBmP,EAAInP,EAAJmP,KACA3H,EAAKxH,EAALwH,MACA4H,EAAQpP,EAARoP,SACAC,EAAOrP,EAAPqP,QACAlL,EAASnE,EAATmE,UAEM2C,EAAUyH,IAChB,OACEtL,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAAC2D,WAAS,EAAA9G,UACbC,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJhD,UAAS,GAAAf,OAAK0D,EAAQ+H,YAAW,KAAAzL,OAAIe,GAAwB,IAAKL,SAAA,EAElEC,EAAAA,EAAAA,MAAA,OAAKI,UAAW2C,EAAQmI,UAAUnL,SAAA,CAC/BqL,GAAOlM,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQ0H,cAAc1K,SAAEqL,IAAc,MAC9DpL,EAAAA,EAAAA,MAAA,OAAKI,UAAW2C,EAAQkI,YAAYlL,SAAA,EAClCb,EAAAA,EAAAA,KAAA,MAAIqM,MAAO,CAAE9J,OAAQ,GAAI1B,SAAE0D,KAC3BvE,EAAAA,EAAAA,KAAA,QAAMkB,UAAW2C,EAAQ8H,mBAAmB9K,SAAEsL,WAIlDnM,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQoI,WAAWpL,SAAEuL,QAI7C,C,gTChCME,EAAgB,CACpBtJ,UAAW,IAgGb,GAAejB,EAAAA,EAAAA,IA9JA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,GAAa,CACXsK,cAAe,CACbtL,QAAS,OACTW,OAAQ,OACRN,MAAO,QAETkL,oBAAqB,CACnBlL,MAAO,QACPmL,WAAY,UACZC,YAAa,oBACb,kBAAmB,CACjB,uBAAwB,CACtBzL,QAAS,QAEX,iBAAkB,CAChBA,QAAS,OACT6K,SAAU,MACV1K,WAAY,SACZiF,eAAgB,aAChBwF,aAAc,oBACd,qBAAsB,CACpBL,YAAa,EACbmB,aAAc,GAEhB,iBAAkB,CAChBF,WAAY,UACZtJ,WAAY,MAIhB,sBAAuB,CACrBlC,QAAS,UAIf2L,oBAAqB,CACnBtL,MAAO,OACP,sBAAuB,CACrBM,OAAQ,SAGZiL,SAAU,CACRjL,OAAQ,QAGV,4BAA6B,CAC3B2K,cAAe,CACbT,SAAU,SACVgB,cAAe,UAEjBN,oBAAqB,CACnBlL,MAAO,OACPuK,aAAc,qBACd,wDAAyD,CACvDA,aAAc,WAInB,GAmGL,EA7FqB,SAAH9O,GAMQ,IALxB8D,EAAQ9D,EAAR8D,SACAgD,EAAO9G,EAAP8G,QAAOkJ,EAAAhQ,EACPiQ,YAAAA,OAAW,IAAAD,EAAG,IAAGA,EACjBE,EAAMlQ,EAANkQ,OACAC,EAAWnQ,EAAXmQ,YAEMlL,GAAQmL,EAAAA,EAAAA,KACyBC,GAAbC,EAAAA,EAAAA,MAAlBC,SAAAA,OAAQ,IAAAF,EAAG,GAAEA,EAEfG,GAAgBC,EAAAA,EAAAA,GAAcxL,EAAMyL,YAAYC,KAAK,OAE3DhQ,GAA0BC,EAAAA,EAAAA,UAASqP,GAAYpP,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCmC,EAAKjC,EAAA,GAAE+P,EAAQ/P,EAAA,GAEhBgQ,EAAyB,GACzBC,EAAiC,GAavC,IAZA3P,EAAAA,EAAAA,YAAU,WACR,GAAIgP,EAAa,CACf,IAAMY,EAAmBjN,EAASkN,MAChC,SAAC9J,GAAI,OAAKA,EAAK+J,UAAUC,KAAOX,CAAQ,IAGtCQ,GACFH,EAASG,EAAiBE,UAAUnO,MAExC,CACF,GAAG,CAACqN,EAAarM,EAAUyM,KAEtBzM,EAAU,OAAO,KAEtBA,EAASqN,SAAQ,SAACC,GAChBP,EAAWtP,KAAK6P,EAAMH,WACtBH,EAAYvP,KAAK6P,EAAMvD,QACzB,IAMA,OACE5K,EAAAA,EAAAA,KAACoO,EAAAA,GAAU,CAACvO,MAAK,GAAAM,OAAKN,GAAQgB,UAC5BC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACG,UAAW2C,EAAQ0I,cAAc1L,SAAA,EACpCb,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAACG,UAAW2C,EAAQ2I,oBAAoB3L,UAC1Cb,EAAAA,EAAAA,KAACqO,EAAAA,EAAO,CACN9Q,SATW,SAAC+Q,EAA6BC,GACjDZ,EAASY,EACX,EAQUC,YAAajB,EAAgB,aAAe,WAC5CrI,QAASqI,EAAgB,aAAe,WACxCkB,cAAc,OACdvN,UAAW2C,EAAQ6K,QAAQ7N,SAE1B+M,EAAW7N,KAAI,SAACkE,EAAMxE,GACrB,OAAIwE,GAEAjE,EAAAA,EAAAA,KAAC2O,EAAAA,GAAGzM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACFhB,UAAW2C,EAAQ+K,UAEnB/O,MAAK,GAAAM,OAAKV,GACV4M,MAAOC,GACHrI,GAAI,IACRuD,eAAa,EACbE,oBAAkB,EAClBmH,aAAa,IAAK,SAAA1O,OANJV,IAUb,IACT,SAIJqB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACG,UAAW2C,EAAQ+I,oBAAoB/L,SAAA,CACxCqM,EAYE,KAXAW,EAAY9N,KAAI,SAACkE,EAAMxE,GACrB,OACEO,EAAAA,EAAAA,KAAC8O,EAAAA,EAAQ,CACPjL,SAAO3B,EAAAA,EAAAA,GAAA,GAAO2B,EAAQgJ,UAEtBhN,MAAK,GAAAM,OAAKV,GAAQoB,SAEjBoD,GAAc,MAAI,WAAA9D,OAHHV,GAMtB,IAEHyN,GACClN,EAAAA,EAAAA,KAAA,OAAKkB,UAAW2C,EAAQgJ,SAAShM,SAAEoM,IACjC,YAKd,I,4KCwEA,EAjNyB,SAAHlQ,GAAyD,IAAnDgS,EAAIhS,EAAJgS,KAAMpG,EAAI5L,EAAJ4L,KAAMqG,EAAejS,EAAfiS,gBACtCtR,GAAwBC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCT,EAAIW,EAAA,GAAEqR,EAAOrR,EAAA,GACpBsR,GAAgCvR,EAAAA,EAAAA,UAAiB,IAAGwR,GAAAtR,EAAAA,EAAAA,GAAAqR,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkC3R,EAAAA,EAAAA,UAAiB,IAAG4R,GAAA1R,EAAAA,EAAAA,GAAAyR,EAAA,GAA/CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4B/R,EAAAA,EAAAA,WAAkB,GAAMgS,GAAA9R,EAAAA,EAAAA,GAAA6R,EAAA,GAA7CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAyCnS,EAAAA,EAAAA,UAAmB,CAC1D,OACA,aACAoS,GAAAlS,EAAAA,EAAAA,GAAAiS,EAAA,GAHKE,EAAaD,EAAA,GAAEE,EAAeF,EAAA,GAIrCG,GAA0CvS,EAAAA,EAAAA,UAAmB,CAC3D,OACA,WACA,eACAwS,GAAAtS,EAAAA,EAAAA,GAAAqS,EAAA,GAJKE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAMhCG,GAAWC,EAAAA,EAAAA,MAyDXC,EAAkB,SAACvT,GACvBoT,EAAiBD,EAAcpR,QAAO,SAACiF,GAAI,OAAKA,IAAShH,CAAI,IAC/D,EAEMwT,EAAgB,SAACxT,EAAcyT,GAC/BV,EAAcW,SAAS1T,IAASyT,EAClCT,EAAgBD,EAAchR,QAAO,SAACiF,GAAI,OAAKA,IAAShH,CAAI,KAIzDyT,GAAUV,EAAcW,SAAS1T,IACpCgT,EAAgB,GAAD9P,QAAAX,EAAAA,EAAAA,GAAKwQ,GAAa,CAAE/S,IAEvC,EAEIsH,EAAQ,kBACR2H,GAAOlM,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAO,IAEnB,OAAQjI,GACN,IAAK,iBACHpE,EAAQ,qBACR2H,GAAOlM,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAgB,IACxB,MACF,IAAK,gBACHtM,EAAQ,oBACR2H,GAAOlM,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAkB,IAI9B,OACE9Q,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAACiQ,EAAAA,EAAY,CACXC,UAAWjC,EACXxK,MAAOA,EACP0M,QAASjC,EACTkC,UAAWhF,EAAKrL,SAAA,EAEhBb,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdnR,GAAG,OACHjD,KAAK,OACLM,SAAU,SAAC+Q,GACTkC,EAAgB,QAChBvB,EAAQX,EAAM3O,OAAOE,OACrB4Q,EAAc,OAAQnC,EAAM3O,OAAO2R,SAASZ,MAC9C,EACAjN,MACEuM,EAAcW,SAAS,UAAYP,EAAcO,SAAS,QACtD,eACA,GAENzT,MAAM,OACN2C,MAAO5C,EACPuM,QAAS,2BACT7F,UAAQ,OAGZ3D,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdnR,GAAG,WACHjD,KAAK,WACLM,SAAU,SAAC+Q,GACTkC,EAAgB,YAChBnB,EAAYf,EAAM3O,OAAOE,OACzB4Q,EAAc,WAAYnC,EAAM3O,OAAO2R,SAASZ,MAClD,EACAjN,MACEuM,EAAcW,SAAS,cACtBP,EAAcO,SAAS,YACpB,uBACA,GAENzT,MAAM,WACN2C,MAAOuP,EACP5F,QACE,yEAEF7F,UAAQ,OAGZ3D,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdnR,GAAG,aACHjD,KAAK,aACLM,SAAU,SAAC+Q,GACTkC,EAAgB,cAChBf,EAAanB,EAAM3O,OAAOE,MAC5B,EACA3C,MAAM,aACN2C,MAAO2P,MAGVI,IACC5P,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACF2L,aAAc,IACd9L,UAEFb,EAAAA,EAAAA,KAACuR,EAAAA,EAAc,OAGnBzQ,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACFC,QAAS,OACToF,eAAgB,YAChBxF,SAAA,EAEFb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,QACJyI,KAAK,SACLzD,QAAQ,UACR5B,SAAUsM,EACVnF,QAASuE,EACT9R,MAAO,SACP8D,GAAI,CACFwK,YAAa,OAGjBxL,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,iBACJyI,KAAK,SACLzD,QAAQ,aACRhC,MAAM,UACNI,SAAUsM,GAAmC,IAAzBI,EAAc7R,OAClCjB,MAAO,OACPuN,QAxLU,WAClB,IAAImF,GAIyB,IAAzBI,EAAc7R,OAIlB,GAAoB,KAAhBlB,EAAKiC,OAMT,GAAwB,KAApBkQ,EAASlQ,OAAb,CAMA2Q,GAAU,GAEV,IAAM4B,EAAU,CACdC,WAAY,CACV,CACEC,IAAK,WACL9R,MAAOuP,GAET,CACEuC,IAAK,aACL9R,MAAO2P,IAGXoC,gBAAiB3U,GAGnB4U,EAAAA,EAAIC,QACDC,UAAUpJ,EAAM8I,GAChBO,MAAK,SAACC,GACLpC,GAAU,GACVS,GAAS4B,EAAAA,EAAAA,IAAsBD,EAAIE,KAAKC,UAAW,IAC9CH,EAAIE,KAAKC,SACZ9B,GAAS+B,EAAAA,EAAAA,IAAmB,qCAG9BrD,IACAsB,GAASgC,EAAAA,EAAAA,KAAuB,GAClC,IACCC,OAAM,SAACC,GACN3C,GAAU,GACVS,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,GAjCF,MAHEwM,EAAgB,GAAD9P,QAAAX,EAAAA,EAAAA,GAAKwQ,GAAa,CAAE,mBANnCC,EAAgB,GAAD9P,QAAAX,EAAAA,EAAAA,GAAKwQ,GAAa,CAAE,SA2CvC,WAyIF,E,sBCzJA,EA3D8B,SAAHjT,GAKI,IAJ7BiU,EAASjU,EAATiU,UACAC,EAAOlU,EAAPkU,QACA0B,EAAW5V,EAAX4V,YAGAjV,GAFIX,EAAJ4L,MAE0ChL,EAAAA,EAAAA,WAAkB,IAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DkV,EAAahV,EAAA,GAAEiV,EAAgBjV,EAAA,GAEhC0S,GAAWC,EAAAA,EAAAA,OAEjBrS,EAAAA,EAAAA,YAAU,WACJ0U,GACFf,EAAAA,EAAIC,QACDgB,YAAYH,GACZX,MAAK,WACJa,GAAiB,GACjBvC,GAAS4B,EAAAA,EAAAA,KAAsB,IAC/B5B,GAASgC,EAAAA,EAAAA,KAAuB,IAChCrB,GACF,IACCsB,OAAM,SAACC,GACNK,GAAiB,GACjBvC,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,GAEN,GAAG,CAACmP,EAAetC,EAAUW,EAAS0B,IAEtC,IAIMI,GAAaJ,EAAYhC,SAAS,KAEpCqC,EAAU,0DAOd,OAJID,IACFC,EAAU,+CAIVhT,EAAAA,EAAAA,KAACiT,EAAAA,EAAa,CACZ1O,MAAOwO,EAAS,yCAChBG,YAAaH,EAAY,QAAU,SACnCI,OAAQnC,EACRoC,UAAWR,EACXS,UAnBoB,WACtBR,GAAiB,EACnB,EAkBI3B,WAAWlR,EAAAA,EAAAA,KAACsT,EAAAA,IAAiB,IAC7BrC,QAASA,EACTsC,qBACEzS,EAAAA,EAAAA,MAAC0S,EAAAA,EAAiB,CAAA3S,SAAA,IAAAV,OACZ6S,EAAO,MACXhT,EAAAA,EAAAA,KAAA,UAAAa,SAAS8R,IAAqB,QAKxC,E,sBC+RA,EA9U0B,SAAH5V,GAKA,IAAD0W,EAAAC,EAAAC,EAJpB5E,EAAIhS,EAAJgS,KACApG,EAAI5L,EAAJ4L,KACAiL,EAAY7W,EAAZ6W,aACA5E,EAAejS,EAAfiS,gBAEAtR,GAAwBC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCT,EAAIW,EAAA,GAAEqR,EAAOrR,EAAA,GACpBsR,GAAgCvR,EAAAA,EAAAA,UAAiB,IAAGwR,GAAAtR,EAAAA,EAAAA,GAAAqR,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkC3R,EAAAA,EAAAA,UAAiB,IAAG4R,GAAA1R,EAAAA,EAAAA,GAAAyR,EAAA,GAA/CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0C/R,EAAAA,EAAAA,UAAiB,MAAKgS,GAAA9R,EAAAA,EAAAA,GAAA6R,EAAA,GAAzDmE,EAAalE,EAAA,GAAEmE,EAAgBnE,EAAA,GACtCG,GAA4BnS,EAAAA,EAAAA,WAAkB,GAAMoS,GAAAlS,EAAAA,EAAAA,GAAAiS,EAAA,GAA7CF,EAAMG,EAAA,GAAEF,EAASE,EAAA,GACxBG,GAAyCvS,EAAAA,EAAAA,UAAmB,IAAGwS,GAAAtS,EAAAA,EAAAA,GAAAqS,EAAA,GAAxDF,EAAaG,EAAA,GAAEF,EAAeE,EAAA,GAE/BG,GAAWC,EAAAA,EAAAA,OAEjBrS,EAAAA,EAAAA,YAAU,WACR,GAAI0V,EAAc,CAChB,IAAMG,EAAiBH,EAAalC,WAAW3D,MAC7C,SAAC4D,GAAG,MAAiB,aAAZA,EAAIA,GAAkB,IAE3BqC,EAAcJ,EAAalC,WAAW3D,MAC1C,SAAC4D,GAAG,MAAiB,eAAZA,EAAIA,GAAoB,IAE7BsC,EAASL,EAAalC,WAAW3D,MACrC,SAAC4D,GAAG,MAAiB,WAAZA,EAAIA,GAAgB,IAG3B3B,EAA0B,GAE9B,GAAI+D,EAAgB,CAClB,IAAMG,EAAgBH,EAAelU,MAEf,KAAlBqU,EACFlE,EAAc1R,KAAK,YAEnB+Q,EAAY6E,EAEhB,CAEA,GAAIF,EAAa,CACf,IAAMG,EAAaH,EAAYnU,MAEZ,KAAfsU,EACFnE,EAAc1R,KAAK,cAEnBmR,EAAa0E,EAEjB,CAEIF,GACmB,QAAjBA,EAAOpU,OACTiU,EAAiBG,EAAOpU,OAI5BoP,EAAQ2E,EAAa3W,MAAQ,IAC7BgT,EAAgBD,EAClB,CACF,GAAG,CAAC4D,IAEJ,IA+DMb,GAAa9V,EAAK0T,SAAS,KAC3ByD,GAAcR,EAAalC,WAAW1S,QAC1C,SAACqV,GAAG,QAAOA,EAAIC,YAAY,IAGvBC,IAAiBC,EAAAA,EAAAA,IAAeJ,IAElC7P,GAAQ,eACR2H,IAAOlM,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAO,IAEnB,OAAQjI,GACN,IAAK,iBACHpE,GAAK,QAAApE,OAAW4S,EAAY,gBAAkB,GAAE,kBAChD7G,IAAOlM,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAgB,IACxB,MACF,IAAK,gBACHtM,GAAK,QAAApE,OAAW4S,EAAY,gBAAkB,GAAE,iBAChD7G,IAAOlM,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAkB,IAQ9B,OAJIsD,GAAYjW,OAAS,IACvBoG,GAAQ,8BAIRvE,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPb,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAY,CACXC,UAAWjC,EACXxK,MAAK,GAAApE,OAAKoE,IAAKpE,OAAG4S,EAAY,GAAE,MAAA5S,OAASlD,IACzCgU,QAASjC,EACTkC,UAAWhF,GAAKrL,SAEfuT,GAAYjW,OAAS,GACpB2C,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,EACPb,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACyU,EAAAA,EAAc,CACbvX,MAAO,UACP0N,SAA8B,QAArB6I,EAAAc,GAAeN,cAAM,IAAAR,OAAA,EAArBA,EAAuB5T,QAAS,IACzCkL,cACE/K,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJjD,GAAI,CACFC,QAAS,OACToF,eAAgB,WAChBqO,aAAc,QACd7T,UAEFb,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CACNnE,QACEmX,GAAeN,OAAM,8BAAA9T,OACaoU,GAAeN,OAAOU,YAAW,yBAC/D,GAENnT,UAAW,OAAOX,UAElBb,EAAAA,EAAAA,KAAC4U,EAAAA,IAAW,CAACvI,MAAO,CAAE/K,MAAO,eAMvCtB,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACyU,EAAAA,EAAc,CACbvX,MAAO,WACP0N,SAAgC,QAAvB8I,EAAAa,GAAenF,gBAAQ,IAAAsE,OAAA,EAAvBA,EAAyB7T,QAAS,IAC3CkL,cACE/K,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJjD,GAAI,CACFC,QAAS,OACToF,eAAgB,WAChBqO,aAAc,QACd7T,UAEFb,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CACNnE,QACEmX,GAAeN,OAAM,8BAAA9T,OACaoU,GAAenF,SAASuF,YAAW,yBACjE,GAENnT,UAAW,OAAOX,UAElBb,EAAAA,EAAAA,KAAC4U,EAAAA,IAAW,CAACvI,MAAO,CAAE/K,MAAO,eAMvCtB,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACyU,EAAAA,EAAc,CACbvX,MAAO,aACP0N,SAAkC,QAAzB+I,EAAAY,GAAeM,kBAAU,IAAAlB,OAAA,EAAzBA,EAA2B9T,QAAS,IAC7CkL,cACE/K,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJjD,GAAI,CACFC,QAAS,OACToF,eAAgB,WAChBqO,aAAc,QACd7T,UAEFb,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CACNnE,QACEmX,GAAeN,OAAM,8BAAA9T,OACaoU,GAAeM,WAAWF,YAAW,yBACnE,GAENnT,UAAW,OAAOX,UAElBb,EAAAA,EAAAA,KAAC4U,EAAAA,IAAW,CAACvI,MAAO,CAAE/K,MAAO,kBAQzCR,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,EACPb,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAAC8U,EAAAA,EAAiB,CAChBvX,SAAU,SAAC8B,GACT,IAAMQ,EAAQR,EAAEM,OAAOuG,QAAU,KAAO,MACxC4N,EAAiBjU,EACnB,EACAK,GAAI,mBACJjD,KAAM,mBACNC,MAAO,UACP2C,MAAO,YACPqG,QAA2B,OAAlB2N,OAGb7T,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdnR,GAAG,WACHjD,KAAK,WACLM,SAAU,SAAC+Q,GACTe,EAAYf,EAAM3O,OAAOE,OApJnB,SAAC5C,EAAcyT,GAC/BV,EAAcW,SAAS1T,IAASyT,EAClCT,EAAgBD,EAAchR,QAAO,SAACiF,GAAI,OAAKA,IAAShH,CAAI,KAIzDyT,GAAUV,EAAcW,SAAS1T,IACpCgT,EAAgB,GAAD9P,QAAAX,EAAAA,EAAAA,GAAKwQ,GAAa,CAAE/S,IAEvC,CA4IgBwT,CAAc,WAAYnC,EAAM3O,OAAO2R,SAASZ,MAClD,EACAjN,MACEuM,EAAcW,SAAS,YACnB,uBACA,GAENzT,MAAM,WACN2C,MAAOuP,EACP5F,QACE,yEAEF7F,UAAQ,OAGZ3D,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,IAAEkB,EAAAA,EAAAA,GAAA,GAAOiP,EAAAA,GAAgBC,cAAevQ,UACzDb,EAAAA,EAAAA,KAACqR,EAAAA,EAAe,CACdnR,GAAG,aACHjD,KAAK,aACLM,SAAU,SAAC+Q,GACTmB,EAAanB,EAAM3O,OAAOE,MAC5B,EACA3C,MAAM,aACN2C,MAAO2P,MAGVI,IACC5P,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACF2L,aAAc,IACd9L,UAEFb,EAAAA,EAAAA,KAACuR,EAAAA,EAAc,OAGnBzQ,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACFC,QAAS,OACToF,eAAgB,YAChBxF,SAAA,EAEFb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,QACJyI,KAAK,SACLzD,QAAQ,UACR5B,SAAUsM,EACVnF,QAASuE,EACT9R,MAAO,SACP8D,GAAI,CACFwK,YAAa,OAGjBxL,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,iBACJyI,KAAK,SACLzD,QAAQ,aACRhC,MAAM,UACNI,SAAUsM,GAAmC,IAAzBI,EAAc7R,OAClCjB,MAAO,SACPuN,QAxQQ,WACpB,IAAImF,GAIyB,IAAzBI,EAAc7R,OAIlB,GAAKiR,GAAgC,KAApBA,EAASlQ,OAA1B,CAMA2Q,GAAU,GAEV,IAAM4B,EAAU,CACdC,WAAY,CACV,CACEC,IAAK,WACL9R,MAAOuP,GAET,CACEuC,IAAK,aACL9R,MAAO2P,GAET,CACEmC,IAAK,SACL9R,MAAOgU,KAKbhC,EAAAA,EAAIC,QACDC,UAAU9U,EAAMwU,GAChBO,MAAK,SAACC,GACLpC,GAAU,GACVS,GAAS4B,EAAAA,EAAAA,IAAsBD,EAAIE,KAAKC,UAAW,IAC9CH,EAAIE,KAAKC,SACZ9B,GAAS+B,EAAAA,EAAAA,IAAmB,qCAG9BrD,IACAsB,GAASgC,EAAAA,EAAAA,KAAuB,GAClC,IACCC,OAAM,SAACC,GACN3C,GAAU,GACVS,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,GApCF,MAHEwM,EAAgB,GAAD9P,QAAAX,EAAAA,EAAAA,GAAKwQ,GAAa,CAAE,aAwCvC,aA8NF,ECvIA,EA9MwB,SAAHjT,GACMA,EAAzBgY,0BAG2B,IAF3BC,EAAmBjY,EAAnBiY,oBACArM,EAAI5L,EAAJ4L,KAEAjL,GAA8CC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DuX,EAAerX,EAAA,GAAEsX,EAAkBtX,EAAA,GAC1CsR,GAAkDvR,EAAAA,EAAAA,WAAkB,GAAMwR,GAAAtR,EAAAA,EAAAA,GAAAqR,EAAA,GAAnEiG,EAAiBhG,EAAA,GAAEiG,EAAoBjG,EAAA,GAC9CG,GAA8C3R,EAAAA,EAAAA,WAAkB,GAAM4R,GAAA1R,EAAAA,EAAAA,GAAAyR,EAAA,GAA/D+F,EAAe9F,EAAA,GAAE+F,EAAkB/F,EAAA,GAC1CG,GAAsC/R,EAAAA,EAAAA,UAAiB,IAAGgS,GAAA9R,EAAAA,EAAAA,GAAA6R,EAAA,GAAnDiD,EAAWhD,EAAA,GAAE4F,EAAc5F,EAAA,GAClCG,GACEnS,EAAAA,EAAAA,UAAmC,MAAKoS,GAAAlS,EAAAA,EAAAA,GAAAiS,EAAA,GADnC0F,EAAgBzF,EAAA,GAAE0F,EAAmB1F,EAAA,GA0FtC3D,EAAU,CACd,CACEzD,KAAM,OACN8B,QAAS,SAACxG,GACJA,EAAKhH,OACPqY,GAAmB,GACnBG,EAAoBxR,GAExB,GAEF,CACE0E,KAAM,SACN8B,QAAS,SAACxG,GACJA,EAAKhH,OACPmY,GAAqB,GACrBG,EAAetR,EAAKhH,MAExB,EACAyY,sBAAuB,SAACzR,GACtB,IAAM0R,EAAQX,EAAoBjH,MAChC,SAAC9O,GAAO,OAAKA,EAAQhC,OAASgH,CAAI,IAGpC,GAAI0R,EAAO,CAAC,IAADC,EACHxB,EAA8B,QAAnBwB,EAAGD,EAAMjE,kBAAU,IAAAkE,OAAA,EAAhBA,EAAkB5W,QACpC,SAACqV,GAAG,QAAOA,EAAIC,YAAY,IAI7B,SAAIF,GAAeA,EAAYjW,OAAS,EAK1C,CACA,OAAO,CACT,IAGJ,OACE2C,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CAAC2D,WAAS,EAAA9G,SAAA,CACZoU,IACCjV,EAAAA,EAAAA,KAAC6V,EAAgB,CACf9G,KAAMkG,EACNtM,KAAMA,EACNqG,gBAAiB,WACfkG,GAAmB,EACrB,IAGHC,IACCnV,EAAAA,EAAAA,KAAC8V,EAAqB,CACpB9E,UAAWmE,EACXlE,QA/Dc,WACpBmE,GAAqB,GACrBG,EAAe,GACjB,EA6DQ5C,YAAaA,EACbhK,KAAMA,IAGT0M,GAAmBG,IAClBxV,EAAAA,EAAAA,KAAC+V,EAAmB,CAClBhH,KAAMsG,EACN1M,KAAMA,EACNiL,aAAc4B,EACdxG,gBApEmB,WACzBsG,GAAmB,GACnBG,EAAoB,KACtB,KAoEIzV,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,GAAI,CAAEC,QAAS,OAAQoF,eAAgB,YAAaxF,UACrEb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,aACJgF,QAAQ,aACRuF,QAAS,WACPyK,GAAmB,EACrB,EAAErU,SACH,oBAIHb,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,GAAI,CAAE8B,QAAS,eAAgBjC,UAChDC,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,EACPb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,oCACJb,EAAAA,EAAAA,KAACgW,EAAAA,IAAS,CACRC,QAAS,CACP,CACE/Y,MAAO,SACPgZ,WAAY,aACZC,eA9Jc,SAAClS,GAC3B,IAAMmS,EAAenS,EAAK8J,MAAK,SAACsG,GAAG,MAAiB,WAAZA,EAAI1C,GAAgB,IAE5D,GAAgB,OAAZyE,QAAY,IAAZA,GAAAA,EAAc9B,aAAc,CAC9B,IAAM+B,EACS,OAAZD,QAAY,IAAZA,GAAAA,EAAc9B,aAAazU,OACS,QAAzB,OAAZuW,QAAY,IAAZA,OAAY,EAAZA,EAAc9B,aAAazU,QACd,OAAZuW,QAAY,IAAZA,GAAAA,EAAc9B,aAAazU,MAExB,WADA,UAEN,OACEiB,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CACH2D,WAAS,EACT3G,GAAI,CACFC,QAAS,OACT6L,cAAe,SACf1L,WAAY,SACZkV,aAAc,QACdhU,SAAU,OACVzB,SAAA,EAEFb,EAAAA,EAAAA,KAAC4U,EAAAA,IAAW,CAACvI,MAAO,CAAEkK,KAAM,UAAWjV,MAAO,UAC7C+U,EAAkB,UAAY,aAGrC,CAGA,OAAKD,GAAuC,OAAvBA,EAAavW,OAAmBuW,EAAavW,OAmBhEiB,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CACH2D,WAAS,EACT3G,GAAI,CACFC,QAAS,OACT6L,cAAe,SACf1L,WAAY,SACZkV,aAAc,QACdhU,SAAU,OACVzB,SAAA,EAEFb,EAAAA,EAAAA,KAACwW,EAAAA,IAAe,CAACnK,MAAO,CAAEkK,KAAM,UAAWjV,MAAO,GAAIM,OAAQ,MAAQ,eA3BtEd,EAAAA,EAAAA,MAACkD,EAAAA,IAAI,CACH2D,WAAS,EACT3G,GAAI,CACFC,QAAS,OACT6L,cAAe,SACf1L,WAAY,SACZkV,aAAc,QACdhU,SAAU,OACVzB,SAAA,EAEFb,EAAAA,EAAAA,KAACyW,EAAAA,IAAc,CAACpK,MAAO,CAAEkK,KAAM,UAAWjV,MAAO,GAAIM,OAAQ,MAAQ,YAqB7E,EAkGcN,MAAO,IAET,CAAEpE,MAAO,OAAQgZ,WAAY,QAC7B,CACEhZ,MAAO,WACPgZ,WAAY,aACZC,eAnLS,SAAClS,GACtB,IAAMyS,EAAiBzS,EAAK8J,MAAK,SAACsG,GAAG,MAAiB,aAAZA,EAAI1C,GAAkB,IAEhE,OAAI+E,EACEA,EAAepC,aACVoC,EAAepC,aAAazU,MAG9B6W,EAAe7W,MAGjB,EACT,IA0KU8W,YAAavK,EACbwK,QAAQ,OACRxD,WAAW,EACXyD,QAAS7B,EACT8B,WAAW,YACXC,kBAAmB,+BAM/B,E,WC+CA,GAAehV,EAAAA,EAAAA,IAxOA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACA6U,EAAAA,IAAc,IACjBC,sBAAuB,CACrBhW,QAAS,OACTiW,oBAAqB,MACrBC,QAAS,UAEV,GA+NL,EAvN0B,SAAHpa,GAIe,IAHpCqa,EAAqBra,EAArBqa,sBACAvT,EAAO9G,EAAP8G,QAAO8F,EAAA5M,EACPmE,UAAAA,OAAS,IAAAyI,EAAG,GAAEA,EAER2G,GAAWC,EAAAA,EAAAA,MACX8G,GAAWC,EAAAA,EAAAA,MACsBlK,GAAbC,EAAAA,EAAAA,MAAlBC,SAAAA,OAAQ,IAAAF,EAAG,GAAEA,EAEjBmK,EAAejK,EAASkK,UAAUlK,EAASmK,YAAY,KAAO,GAClEF,EAAgC,aAAjBA,EAA8B,SAAWA,EAGxD,IAAA7Z,GAAiCC,EAAAA,EAAAA,UAA0B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDga,EAAS9Z,EAAA,GAAE+Z,EAAW/Z,EAAA,GAC7BsR,GAA4BvR,EAAAA,EAAAA,WAAkB,GAAMwR,GAAAtR,EAAAA,EAAAA,GAAAqR,EAAA,GAA7CU,EAAMT,EAAA,GAAEU,EAASV,EAAA,GACxBG,GAAwC3R,EAAAA,EAAAA,UAA0B,IAAG4R,GAAA1R,EAAAA,EAAAA,GAAAyR,EAAA,GAA9DsI,EAAYrI,EAAA,GAAEsI,EAAetI,EAAA,GACpCG,GAAgD/R,EAAAA,EAAAA,UAA0B,IAAGgS,GAAA9R,EAAAA,EAAAA,GAAA6R,EAAA,GAAtEoI,EAAgBnI,EAAA,GAAEoI,EAAmBpI,EAAA,GAC5CG,GACEnS,EAAAA,EAAAA,WAAkB,GAAMoS,GAAAlS,EAAAA,EAAAA,GAAAiS,EAAA,GADnBkI,EAAsBjI,EAAA,GAAEgF,EAAyBhF,EAAA,GAExDG,GAAwCvS,EAAAA,EAAAA,UAAuB,CAAC,GAAEwS,GAAAtS,EAAAA,EAAAA,GAAAqS,EAAA,GAA3D+H,EAAY9H,EAAA,GAAE+H,EAAe/H,EAAA,GAE9BgI,GAAgBC,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMC,OAAOC,qBAAqB,KAGzDra,EAAAA,EAAAA,YAAU,WACRoS,GAASgC,EAAAA,EAAAA,KAAuB,GAClC,GAAG,CAACiF,EAAcjH,KAElBpS,EAAAA,EAAAA,YAAU,WACR,GAAIia,EAAe,CACjB,IAAMK,EAAW9Y,IAAI0X,EAAuB,oBAAoB,GAEhE,GAAIoB,EAgCF,YA/BA3G,EAAAA,EAAIC,QACD2G,WAAWD,GACXxG,MAAK,SAACC,GACL8F,EAAoB9F,EAAIE,MACxB,IAAIuG,EAA4BhZ,IAAIuS,EAAIE,KAAK,GAAI,aAAc,IAIzDwG,EAF0BC,EAAAA,GAAqBJ,GAExBzY,KAAI,SAAC8Y,GAChC,IAAMC,EAAgBJ,EAAO3K,MAC3B,SAAC9O,GAAwB,OAAKA,EAAQ0S,MAAQkH,EAAM5b,IAAI,IAEpD8b,GAA2B,OAAbD,QAAa,IAAbA,OAAa,EAAbA,EAAejZ,QAAS,GAE5C,MAAO,CACL8R,IAAKkH,EAAM5b,KACX4C,MAAOgZ,EAAMG,mBACTH,EAAMG,mBAAmBD,GACzBA,EAER,IAEAlB,EAAgBc,GAChBT,GAAgB1D,EAAAA,EAAAA,IAAemE,IAC/BrI,GAASgC,EAAAA,EAAAA,KAAuB,GAClC,IACCC,OAAM,SAACC,GACNlC,GAASgC,EAAAA,EAAAA,KAAuB,IAChChC,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,IAIJ6M,GAASgC,EAAAA,EAAAA,KAAuB,GAClC,CACF,GAAG,CAAC6F,EAAef,EAAuB9G,KAE1CpS,EAAAA,EAAAA,YAAU,WACR,GAAI0R,EAAQ,CACV,IAAM6B,EAAU,CACdC,YAAYuH,EAAAA,EAAAA,IAAkBvB,IAEhC7F,EAAAA,EAAIC,QACDC,UAAUqF,EAAsB8B,iBAAkBzH,GAClDO,MAAK,SAACC,GACLpC,GAAU,GACVS,GAAS4B,EAAAA,EAAAA,IAAsBD,EAAIE,KAAKC,UAAW,IACnD9B,GAASgC,EAAAA,EAAAA,KAAuB,IAC3BL,EAAIE,KAAKC,SACZ9B,GAAS+B,EAAAA,EAAAA,IAAmB,oCAEhC,IACCE,OAAM,SAACC,GACN3C,GAAU,GACVS,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,GACJ,CACF,GAAG,CAACmM,EAAQU,EAAU8G,EAAuBM,EAAWL,IAGxD,IAKM8B,GAAgBxa,EAAAA,EAAAA,cACpB,SAAC4P,GACCoJ,EAAYpJ,EACd,GACA,CAACoJ,IAWGyB,EAA0B,WAC9BrE,GAA0B,EAC5B,EAEA,OACE/U,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAAA,OACEuY,YAAa,WACX/I,GACEgJ,EAAAA,EAAAA,IAAY,YAADnZ,OACGiX,EAAsBmC,sBAGxC,EAAE1Y,SAAA,CAEDmX,IACChY,EAAAA,EAAAA,KAACwZ,EAAAA,EAAuB,CACtBC,kBAAmBrC,EAAsB8B,iBACzCQ,0BA1BY,SAACtH,GACrB2C,GAA0B,GAC1BzE,GAAS4B,EAAAA,EAAAA,IAAsBE,IAC3BA,GACF9B,GAASgC,EAAAA,EAAAA,KAAuB,GAEpC,EAqBUqH,UAAW3B,IAGdG,GACCnY,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,GAAI,CAAE8G,UAAW,SAAUtF,WAAY,QAAS3B,UACjEb,EAAAA,EAAAA,KAAC4Z,EAAAA,IAAM,OAGT5Z,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CACFC,GAAI,CACF8B,QAAS,OACTlB,OAAQ,QACRf,SAE0C,mBAA3CuW,EAAsB8B,kBACoB,kBAA3C9B,EAAsB8B,kBACpBlZ,EAAAA,EAAAA,KAAC6Z,EAAe,CACd7E,oBAAqB8C,EACrB/C,0BAA2BqE,EAC3BzQ,KAAMyO,EAAsB8B,oBAG9BlZ,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAAA,QACEgZ,YAAU,EACVC,SAhEG,SAACzL,GAClBA,EAAM0L,iBACNnK,GAAU,EACZ,EA8DgB3O,UAAWA,EACXmL,MAAO,CACLzK,OAAQ,OACRX,QAAS,OACT6K,SAAU,UACVjL,SAAA,EAEFb,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIhD,UAAW2C,EAAQoT,sBAAsBpW,UAC1Db,EAAAA,EAAAA,KAACia,EAAAA,QAAiB,CAChBC,OACEtB,EAAAA,GACExB,EAAsB8B,kBAG1B3b,SAAU4b,EACVgB,YAAavC,EACbjD,YAAasD,OAGjBnX,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACFwB,WAAY,QACZsF,UAAW,QACXW,UAAW,OACXxH,QAAS,OACTG,WAAY,SACZiF,eAAgB,YAChBxF,SAAA,EAEFb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,mBACJgF,QAAQ,YACRuF,QAAS2O,EACTlc,MAAO,qBACP,aAEF8C,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,OACJyI,KAAK,SACLzD,QAAQ,aACR5B,SAAUsM,EACV1S,MAAO,uBAW7B,ICvOA,EAlC2B,WACzB,IAAuCkQ,GAAbC,EAAAA,EAAAA,MAAlBC,SAAAA,OAAQ,IAAAF,EAAG,GAAEA,EAEfgN,EAAa9M,EAASkK,UAAUlK,EAASmK,YAAY,KAAO,GAE5D4C,EAAoBC,EAAAA,GAAsBvM,MAC9C,SAAC9O,GAAO,OAAKA,EAAQia,mBAAqBkB,CAAU,IAEhDG,EAAkB,GAAApa,OAAMia,GAC9B,OACEpa,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJlD,GAAI,CACFY,OAAQ,OAER,yBAA0B,CACxB,UAAW,CACT4Y,SAAU,IACVhP,YAAa,KAGjB3K,SAEDwZ,IACCra,EAAAA,EAAAA,KAACya,EAAiB,CAChBvZ,UAAS,GAAAf,OAAKoa,GACdnD,sBAAuBiD,KAKjC,E,sECZA,GAjC2B,WACzB,IAAM/J,GAAWoK,EAAAA,EAAAA,MACjBC,GAAkCC,EAAAA,GAAAA,IAChC,SAAC3I,IAEC4I,EAAAA,GAAAA,IACE,IAAIC,KAAK,CAACC,OAAOC,KAAK/I,EAAIpS,SAAS,uBAADM,OACX8a,GAAAA,GAASC,MAAMC,SACpC,uBACD,SAEL,IACA,SAAC3I,GACClC,GAASmC,EAAAA,EAAAA,IAAqBD,GAChC,IACD4I,GAAAvd,EAAAA,EAAAA,GAAA8c,EAAA,GAbMU,EAAYD,EAAA,GAAEE,EAASF,EAAA,GAe9B,OACEpb,EAAAA,EAAAA,KAACub,GAAAA,EAAc,CAACne,QAAQ,0FAAyFyD,UAC/Gb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,gBACJuK,QAAS,WACP6Q,EAAU,MAAM,wBAClB,EACApP,MAAMlM,EAAAA,EAAAA,KAACwb,EAAAA,IAAU,IACjBte,MAAO,SACPgI,QAAS,UACT5B,SAAU+X,KAIlB,ECkDA,GA9E2B,WACzB,IAAMhE,GAAWC,EAAAA,EAAAA,MACXhH,GAAWoK,EAAAA,EAAAA,MAEXe,GAAerD,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMC,OAAOoD,kBAAkB,IAGtDhe,GAAsCC,EAAAA,EAAAA,eACpCge,GACD/d,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMke,EAAWhe,EAAA,GAAEie,EAAcje,EAAA,GAG5Bke,GAAahd,EAAAA,EAAAA,QAAyB,MAE5C6b,GAAkCC,EAAAA,GAAAA,IAChC,SAAC3I,GAEC3B,GAAS4B,EAAAA,EAAAA,KAAsB,IAC/B2J,GAAe,EACjB,IACA,SAACrJ,GACClC,GAASmC,EAAAA,EAAAA,IAAqBD,GAChC,IACD4I,GAAAvd,EAAAA,EAAAA,GAAA8c,EAAA,GATMU,EAAYD,EAAA,GAAEE,EAASF,EAAA,IAW9Bld,EAAAA,EAAAA,YAAU,YACHud,GAAgBG,GACnBvE,EAAS,EAEb,GAAG,CAACoE,EAAcG,EAAavE,IAwB/B,OACEvW,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,EACPb,EAAAA,EAAAA,KAAA,SACE2I,KAAK,OACLpL,SA1BqB,SAAC8B,GAC1B,GACQ,OAANA,QACMsc,IAANtc,GACmB,OAAnBA,EAAEM,OAAOoc,YACUJ,IAAnBtc,EAAEM,OAAOoc,MAJX,CAQA1c,EAAE2a,iBACF,IAAOgC,GAAPne,EAAAA,EAAAA,GAAuBwB,EAAEM,OAAOoc,MAAK,GAAlB,GAEbE,EAAW,IAAIC,SACfC,EAAW,IAAIrB,KAAK,CAACkB,GAAe,CAAErT,KAAMqT,EAAarT,OAE/DsT,EAASG,OAAO,OAAQD,EAAUH,EAAa/e,MAE/Cqe,EAAU,OAAO,wBAA0BW,GAE3C5c,EAAEM,OAAOE,MAAQ,EAXjB,CAYF,EAOMwM,MAAO,CAAEpL,QAAS,QAClBa,IAAKga,KAEP9b,EAAAA,EAAAA,KAACub,GAAAA,EAAc,CAACne,QAAQ,8DAA6DyD,UACnFb,EAAAA,EAAAA,KAACwR,EAAAA,IAAM,CACLtR,GAAI,gBACJuK,QAAS,WACHqR,GAAcA,EAAWtd,SAC3Bsd,EAAWtd,QAAQ6d,OAEvB,EACAnQ,MAAMlM,EAAAA,EAAAA,KAACsc,EAAAA,IAAY,IACnBpf,MAAO,SACPgI,QAAS,UACT5B,SAAU+X,QAKpB,E,YClBMkB,GAA2B,CAAC,UAC5BC,GAAyB,CAAC,SAsIhC,IAAeza,EAAAA,EAAAA,IA5JA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXua,yBAA0B,CACxBxb,QAAS,OACT6L,cAAe,MACfzG,eAAgB,aAChB5D,SAAU,OACVkD,OAAQ,oBACRG,aAAc,EACdL,gBAAiB,SAEhBiX,EAAAA,IACA/V,EAAAA,IACAgW,EAAAA,IACF,GA8IL,EApI6B,SAAH5f,GAA4C,IAAtC8G,EAAO9G,EAAP8G,QACSuJ,GAAbC,EAAAA,EAAAA,MAAlBC,SAAAA,OAAQ,IAAAF,EAAG,GAAEA,EACfkD,GAAWC,EAAAA,EAAAA,MAEjB7S,GAAgDC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Dkf,EAAgBhf,EAAA,GAAEif,EAAmBjf,EAAA,GACtCkf,GAAwBne,EAAAA,EAAAA,cAAWoe,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxCzL,EAAAA,EAAIC,QACDyL,aACAvL,MAAK,SAACC,GAAS,IAADuL,EACb,GAAIvL,GAAU,OAAHA,QAAG,IAAHA,GAAAA,EAAKE,MAAW,OAAHF,QAAG,IAAHA,GAAS,QAANuL,EAAHvL,EAAKE,YAAI,IAAAqL,GAATA,EAAWC,eAAgB,CAAC,IAADC,EAC3CC,IAAqB,OAAH1L,QAAG,IAAHA,GAAS,QAANyL,EAAHzL,EAAKE,YAAI,IAAAuL,OAAN,EAAHA,EAAWD,iBAAkB,IAAIG,QACvD,SAACC,EAAaC,GAAoB,IAADC,EAAAD,EAAfnM,IAAAA,OAAG,IAAAoM,EAAG,GAAEA,EAIxB,OAHKvB,GAAuB7L,SAASgB,IACnCkM,EAAIvf,KAAKqT,GAEJkM,CACT,GACA,IAGFhB,EAAoBc,EACtB,CACF,IACCpL,OAAM,SAACC,GACNlC,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,IAC/C,IAAG,wBAAA4K,EAAAY,OAAA,GAAAd,EAAA,KACJ,CAAC5M,IAEAiH,EAAejK,EAASkK,UAAUlK,EAASmK,YAAY,KAAO,GAClEF,EAAgC,aAAjBA,EAA8B,SAAWA,GACxDrZ,EAAAA,EAAAA,YAAU,WACR4e,IACAxM,GAASgJ,EAAAA,EAAAA,IAAY,mBAEvB,GAAG,IAEH,IAAM2E,EAAwB3D,EAAAA,GAAsBtb,QAClD,SAAAkf,GAAqC,IAAlChF,EAAgBgF,EAAhBhF,iBACD,OACEqD,GAAyB5L,SAASuI,IAClC0D,EAAiBjM,SAASuI,KACzB0D,EAAiBze,MAEtB,IAGF,OACE2C,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,EACPb,EAAAA,EAAAA,KAACme,GAAAA,EAAiB,CAACjhB,MAAO,WAAYkP,SAASpM,EAAAA,EAAAA,KAACoe,GAAAA,EAAQ,OACxDtd,EAAAA,EAAAA,MAACud,EAAAA,IAAU,CAAAxd,SAAA,EACTb,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGrD,UAChBC,EAAAA,EAAAA,MAAA,OACEZ,GAAG,qBACHgB,UAAW2C,EAAQ4Y,yBAAyB5b,SAAA,EAE5Cb,EAAAA,EAAAA,KAACse,EAAAA,EAAW,CACVpS,MAAMlM,EAAAA,EAAAA,KAACue,EAAAA,IAAY,IACnBha,MAAO,uBACP6H,SACEtL,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTud,IAAK,GACL3d,SAAA,EAEFb,EAAAA,EAAAA,KAACye,GAAkB,KACnBze,EAAAA,EAAAA,KAAC0e,GAAkB,UAIzB1e,EAAAA,EAAAA,KAAC2e,EAAY,CACX3R,YAAauK,EACbrK,aAAW,EACXD,QACEnM,EAAAA,EAAAA,MAAC8d,EAAAA,GAAM,CAAA/d,SAAA,CACJod,EAAsBle,KAAI,SAACd,GAAO,OACjCe,EAAAA,EAAAA,KAAC6e,EAAAA,GAAK,CAEJC,KAAI,GAAA3e,OAAKlB,EAAQia,kBACjBja,SAASe,EAAAA,EAAAA,KAAC+e,EAAiB,KAAI,cAAA5e,OAFZlB,EAAQsa,qBAG3B,KAEJvZ,EAAAA,EAAAA,KAAC6e,EAAAA,GAAK,CACJC,KAAM,IACN7f,SAASe,EAAAA,EAAAA,KAACgf,EAAAA,GAAQ,CAAC/Q,GAAE,GAAA9N,OAAK8e,EAAAA,GAAUC,SAAQ,kBAGjDre,SAEAod,EAAsBle,KAAI,SAACd,GAC1B,IAlGM6f,EAkGE5F,EAAgDja,EAAhDia,iBACR,MAAO,CACLlL,UAAW,CACT9Q,MAHoD+B,EAA9Bsa,oBAItB1Z,MAAOqZ,EACPhN,KALoDjN,EAATiN,KAM3ClE,UAAWmX,EAAAA,GACXlR,IAzGE6Q,EAyGe5F,EAxG7B,GAAN/Y,OAAU8e,EAAAA,GAAUC,SAAQ,KAAA/e,OAAI2e,KA2GpB,YAIN9e,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAIlD,GAAI,CAAEwB,WAAY,QAAS3B,UAC5Cb,EAAAA,EAAAA,KAACof,EAAAA,IAAO,CACN7a,MAAO,kCACP8a,eAAerf,EAAAA,EAAAA,KAACue,EAAAA,IAAY,IAC5Be,MACExe,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,gHAGRb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,4BACoB,KAC1BA,EAAAA,EAAAA,KAAA,KACEuf,KAAK,4FACL5f,OAAO,SACP6f,IAAI,WAAU3e,SACf,kBAEG,gBASpB,G,qTChLayZ,EAAoC,CAC/C,CACEpO,MAAMlM,EAAAA,EAAAA,KAACyf,EAAAA,EAAU,IACjBvG,iBAAkB,SAClBK,oBAAqB,UAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC0f,EAAAA,EAAY,IACnBxG,iBAAkB,cAClBK,oBAAqB,eAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC2f,EAAAA,EAAQ,IACfzG,iBAAkB,MAClBK,oBAAqB,OAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC4f,EAAAA,EAAiB,IACxB1G,iBAAkB,OAClBK,oBAAqB,QAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC6f,EAAAA,EAAe,IACtB3G,iBAAkB,UAClBK,oBAAqB,WAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC8f,EAAAA,EAAU,IACjB5G,iBAAkB,OAClBK,oBAAqB,QAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAgB,IACvBqI,iBAAkB,iBAClBK,oBAAqB,kBAEvB,CACErN,MAAMlM,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAkB,IACzBoI,iBAAkB,gBAClBK,oBAAqB,iBAEvB,CACErN,MACElM,EAAAA,EAAAA,KAAC+f,EAAAA,IAAQ,CACP7e,UACE,0FAEFmL,MAAO,CAAE/K,MAAO,GAAIM,OAAQ,MAGhCsX,iBAAkB,cAClBK,oBAAqB,gBAIZX,EAA4B,CACvCoH,OAAQ,CACN,CACE/iB,KAAM,OACN0G,UAAU,EACVzG,MAAO,kBACPE,QAAS,0DACTuL,KAAM,SACNtI,YAAa,uBAEf,CACEpD,KAAM,UACN0G,UAAU,EACVzG,MAAO,UACPE,QAAS,wCACTuL,KAAM,UACNtI,YAAa,8BAGjB4f,YAAa,CACX,CACEhjB,KAAM,aACN0G,UAAU,EACVzG,MAAO,aACPE,QACE,sFACFuL,KAAM,MACNtI,YAAa,qBACb5C,YAAY,GAEd,CACER,KAAM,aACN0G,UAAU,EACVzG,MAAO,aACPE,QACE,kGACFuL,KAAM,MACNtI,YAAa,oBACb5C,YAAY,IAGhBoU,IAAK,CACH,CACE5U,KAAM,eACN0G,UAAU,EACVzG,MAAO,eACPE,QAAS,qDACTuL,KAAM,SACNtI,YAAa,sBAEf,CACEpD,KAAM,oBACN0G,UAAU,EACVzG,MAAO,oBACPE,QAAS,4CACTuL,KAAM,MACNtI,YAAa,iDAEf,CACEpD,KAAM,sBACN0G,UAAU,EACVzG,MAAO,sBACPE,QAAS,iDACTuL,KAAM,SACNtI,YAAa,6BAEf,CACEpD,KAAM,6BACN0G,UAAU,EACVzG,MAAO,6BACPE,QACE,4EACFuL,KAAM,SACNtI,YAAa,qCAGjB6f,KAAM,CACJ,CACEjjB,KAAM,aACN0G,UAAU,EACVzG,MAAO,cACPE,QACE,oEACFuL,KAAM,UAER,CACE1L,KAAM,YACN0G,UAAU,EACVzG,MAAO,YACPE,QACE,8EACFuL,KAAM,WACNtI,YAAa,4BAEf,CACEpD,KAAM,SACN0G,UAAU,EACVzG,MAAO,SACPE,QACE,kFACFuL,KAAM,SACNtI,YAAa,iBAGjB8f,QAAS,CACP,CACEljB,KAAM,QACN0G,UAAU,EACVzG,MAAO,mBACPE,QAAS,+CACTuL,KAAM,SACNtI,YAAa,eAEf,CACEpD,KAAM,WACN0G,UAAU,EACVzG,MAAO,WACPE,QAAS,0DACTuL,KAAM,WACNtI,YAAa,kBAEf,CACEpD,KAAM,QACN0G,UAAU,EACVzG,MAAO,QACPE,QAAS,yDACTuL,KAAM,WACNtI,YAAa,gBAGjB+f,KAAM,CACJ,CACEnjB,KAAM,YACN0G,UAAU,EACVzG,MAAO,YACPE,QACE,oFACFuL,KAAM,MACNtI,YAAa,kBAEf,CACEpD,KAAM,cACN0G,UAAU,EACVzG,MAAO,cACPE,QAAS,wDACTuL,KAAM,SACNtI,YAAa,qBAEf,CACEpD,KAAM,eACN0G,UAAU,EACVzG,MAAO,eACPE,QAAS,kDACTuL,KAAM,SACNtI,YAAa,sBAEf,CACEpD,KAAM,cACN0G,UAAU,EACVzG,MAAO,cACPE,QAAS,sCACTuL,KAAM,SACNtI,YAAa,qBAEf,CACEpD,KAAM,kBACN0G,UAAU,EACVzG,MAAO,kBACPE,QAAS,0CACTuL,KAAM,SACNtI,YAAa,yBAEf,CACEpD,KAAM,UACN0G,UAAU,EACVzG,MAAO,UACPE,QAAS,wCACTuL,KAAM,UACNjE,WAAW,EACXrE,YAAa,8BAGjBggB,eAAgB,CACd,CACEpjB,KAAM,WACN0G,UAAU,EACVzG,MAAO,WACPyL,KAAM,SACNtI,YAAa,kBAEf,CACEpD,KAAM,aACN0G,UAAU,EACVzG,MAAO,aACPyL,KAAM,SACNtI,YAAa,qBAGjBigB,cAAe,CACb,CACErjB,KAAM,WACN0G,UAAU,EACVzG,MAAO,WACPyL,KAAM,SACNtI,YAAa,kBAEf,CACEpD,KAAM,aACN0G,UAAU,EACVzG,MAAO,aACPyL,KAAM,SACNtI,YAAa,qBAGjBkgB,YAAa,CACX,CACEtjB,KAAM,SACN0G,UAAU,EACVzG,MAAO,SACPE,QAAS,4BACTuL,KAAM,SACNqQ,mBAAoB,SAACwH,GACnB,MAAqB,KAAdA,GAAkC,OAAdA,EAAqB,KAAO,KACzD,GAEF,CACEvjB,KAAM,UACN0G,UAAU,EACVzG,MAAO,UACPyL,KAAM,MACNtI,YAAa,sBAEf,CACEpD,KAAM,QACN0G,UAAU,EACVzG,MAAO,QACPyL,KAAM,SACNtI,YAAa,oBACbjD,QAAS,6CAEX,CACEH,KAAM,OACN0G,UAAU,EACVzG,MAAO,WACPE,QACE,wEACFuL,KAAM,UAER,CACE1L,KAAM,gBACN0G,UAAU,EACVzG,MAAO,gBACPyL,KAAM,SACNtI,YAAa,sBACbjD,QAAS,wDAEX,CACEH,KAAM,gBACN0G,UAAU,EACVzG,MAAO,gBACPyL,KAAM,WACNtI,YAAa,sBACbjD,QAAS,wDAEX,CACEH,KAAM,iBACN0G,UAAU,EACVzG,MAAO,iBACPyL,KAAM,SACNtI,YAAa,uBACbjD,QAAS,iCAEX,CACEH,KAAM,MACN0G,UAAU,EACVzG,MAAO,UACPE,QAAS,wCACTuL,KAAM,UAER,CACE1L,KAAM,kBACN0G,UAAU,EACVzG,MAAO,wBACPE,QAAS,wCACTuL,KAAM,UAER,CACE1L,KAAM,kBACN0G,UAAU,EACVzG,MAAO,cACPE,QAAS,sCACTuL,KAAM,SACNtI,YAAa,qBAEf,CACEpD,KAAM,iBACN0G,UAAU,EACVzG,MAAO,kBACPE,QAAS,0CACTuL,KAAM,SACNtI,YAAa,yBAEf,CACEpD,KAAM,kBACN0G,UAAU,EACVzG,MAAO,kBACPE,QACE,+EACFuL,KAAM,UAER,CACE1L,KAAM,UACN0G,UAAU,EACVzG,MAAO,UACPE,QAAS,2CACTuL,KAAM,YAKCsQ,EAAoB,SAACwH,GAGhC,OAFuBA,EAAWzhB,QAAO,SAAC6Z,GAAK,MAAqB,KAAhBA,EAAMhZ,KAAY,GAGxE,EAEa6gB,EAAY,SACvBrhB,EACAshB,EACAC,GAEA,IAAMC,EAAUxhB,EAAEM,OACZE,EAAQghB,EAAQhhB,MAChBqG,EAAU2a,EAAQ3a,QAEpBlJ,GAAkBwC,EAAAA,EAAAA,GAAOohB,GAS7B,OARI1a,EAEFlJ,EAASsB,KAAKuB,GAGd7C,EAAWA,EAASgC,QAAO,SAACC,GAAO,OAAKA,IAAYY,CAAK,IAE3D8gB,EAAe3jB,GACRA,CACT,EAEawX,EAAiB,SAACiM,GAC7B,IAAIK,EAA+B,CAAC,EAcpC,OAZAL,EAAWvS,SAAQ,SAAC6S,GAElB,GAAIA,EAAQzM,aAAc,CACxB,IAAMzU,EAAuB,CAC3BA,MAAOkhB,EAAQzM,aAAazU,MAC5B8U,YAAaoM,EAAQzM,aAAarX,MAGpC6jB,GAAc5e,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4e,GAAc,IAAAvZ,EAAAA,EAAAA,GAAA,GAAGwZ,EAAQpP,IAAM9R,GACvD,CACF,IAEOihB,CACT,C,wNC3YaE,EAAW,SACtBrP,EACAhJ,EACAsY,GAEA,IAAIC,EAAoB,WAATvY,EAAoB,MAAQ,GAE3C,GAAIsY,EAAS9iB,OAAS,EAAG,CACvB,IAAMgjB,EAAeF,EAASlT,MAAK,SAAC9O,GAAO,OAAKA,EAAQ0S,MAAQA,CAAG,IAE/DwP,IACFD,EAAWC,EAAathB,OAAS,GAErC,CAEA,OAAOqhB,CACT,EA8JA,WAAenf,EAAAA,EAAAA,IAzLA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTiP,EAAAA,IAAe,IAClBC,cAAYlP,EAAAA,EAAAA,GAAA,GACPiP,EAAAA,GAAgBC,eAElBgQ,EAAAA,IACF,GAkLL,EA5J0B,SAAHrkB,GAMG,IALxBQ,EAAQR,EAARQ,SACA2c,EAAMnd,EAANmd,OACAC,EAAWpd,EAAXod,YACAxF,EAAW5X,EAAX4X,YACA9Q,EAAO9G,EAAP8G,QAEAnG,GAAsCC,EAAAA,EAAAA,UAA0B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5D2jB,EAAWzjB,EAAA,GAAE0jB,EAAc1jB,EAAA,GAC5B2jB,EAAkBrH,GAAS,GAC3BsH,EAAcrH,GAAc,IAGlCjc,EAAAA,EAAAA,YAAU,WACR,IAAMwa,EAA0BwB,EAAOna,KAAI,SAAC8Y,GAK1C,MAJmC,CACjClH,IAAKkH,EAAM5b,KACX4C,MAAOmhB,EAASnI,EAAM5b,KAAM4b,EAAMlQ,KAAM6Y,GAG5C,IAEAF,EAAe5I,EAEjB,GAAG,CAACwB,EAAQC,KAEZjc,EAAAA,EAAAA,YAAU,WACRX,EAAS8jB,EAEX,GAAG,CAACA,IAEJ,IAAMI,EAAkB,SAAC9P,EAAa9R,EAAeJ,GACnD,IAAMiiB,GAASliB,EAAAA,EAAAA,GAAO6hB,GACtBxhB,EAAQA,EAAMX,OACdwiB,EAAUjiB,GAAS,CAAEkS,IAAAA,EAAK9R,MAAAA,GAE1ByhB,EAAeI,EACjB,EAEMC,EAAkB,SAAC9I,EAAgB5U,GACvC,IAAM2d,EAAaP,EAAYpd,GAE/B,GAAI2d,EAAY,CAEd,IAAMC,EAAsB,OAAXlN,QAAW,IAAXA,OAAW,EAAXA,EAAW,GAAAxU,OAAMyhB,EAAWjQ,MAE7C,GAAIkQ,EACF,OACE7hB,EAAAA,EAAAA,KAACyU,EAAAA,EAAc,CACbvX,MAAO2b,EAAM3b,MACb0N,QAASiX,EAAShiB,MAClBkL,cACE/K,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CACHC,MAAI,EACJjD,GAAI,CACFC,QAAS,OACToF,eAAgB,WAChBqO,aAAc,QACd7T,UAEFb,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CACNnE,QAAO,8BAAA+C,OAAgC0hB,EAASlN,YAAW,yBAC3DnT,UAAW,OAAOX,UAElBb,EAAAA,EAAAA,KAAC4U,EAAAA,IAAW,CAACvI,MAAO,CAAE/K,MAAO,WAO3C,CAEA,OAAQuX,EAAMlQ,MACZ,IAAK,SACH,IAAM9I,EAAQ+hB,EAAaA,EAAW/hB,MAAQ,MAE9C,OACEG,EAAAA,EAAAA,KAACsG,EAAAA,IAAM,CACL/I,SAAU,SAAC8B,GACT,IAAMQ,EAAQR,EAAEM,OAAOuG,QAAU,KAAO,MACxCub,EAAgB5I,EAAM5b,KAAM4C,EAAOoE,EACrC,EACA/D,GAAI2Y,EAAM5b,KACVA,KAAM4b,EAAM5b,KACZC,MAAO2b,EAAM3b,MACb2C,MAAO,YACPzC,QAASyb,EAAMzb,QACf8I,QAAmB,OAAVrG,IAGf,IAAK,MACH,OACEG,EAAAA,EAAAA,KAAC8hB,EAAAA,EAAgB,CACf9kB,SAAU4kB,EAAaA,EAAW/hB,MAAQ,GAC1C3C,MAAO2b,EAAM3b,MACbD,KAAM4b,EAAM5b,KACZM,SAAU,SAACsC,GACT,IAAIkiB,EAAQ,GAGVA,EADEC,MAAMC,QAAQpiB,GACRA,EAAMV,KAAK,KAEXU,EAGV4hB,EAAgB5I,EAAM5b,KAAM8kB,EAAO9d,EACrC,EACA7G,QAASyb,EAAMzb,QACfE,kBAAmBub,EAAMxY,YACzB5C,YAAY,IAGlB,IAAK,UACH,OACEuC,EAAAA,EAAAA,KAACkiB,EAAAA,EAAiB,CAChBhiB,GAAI2Y,EAAM5b,KACVA,KAAM4b,EAAM5b,KACZC,MAAO2b,EAAM3b,MACbE,QAASyb,EAAMzb,QACfyC,MAAO+hB,EAAaA,EAAW/hB,MAAQ,GACvCtC,SAAU,SAAC8B,GAAsC,OAC/CoiB,EAAgB5I,EAAM5b,KAAMoC,EAAEM,OAAOE,MAAOoE,EAAK,EAEnD5D,YAAawY,EAAMxY,cAGzB,QACE,OACEL,EAAAA,EAAAA,KAACC,EAAAA,IAAQ,CACPC,GAAI2Y,EAAM5b,KACVA,KAAM4b,EAAM5b,KACZC,MAAO2b,EAAM3b,MACbE,QAASyb,EAAMzb,QACfyC,MAAO+hB,EAAaA,EAAW/hB,MAAQ,GACvCtC,SAAU,SAAC8B,GAAsC,OAC/CoiB,EAAgB5I,EAAM5b,KAAMoC,EAAEM,OAAOE,MAAOoE,EAAK,EAEnD5D,YAAawY,EAAMxY,cAI7B,EAEA,OACEL,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAAC2D,WAAS,EAAA9G,UACbb,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACE,GAAI,GAAID,MAAI,EAAC/C,UAAW2C,EAAQse,SAASthB,SAC5C0gB,EAAexhB,KAAI,SAAC8Y,EAAO5U,GAAI,OAC9BjE,EAAAA,EAAAA,KAACgE,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAqBhD,UAAW2C,EAAQuN,aAAavQ,SACjE8gB,EAAgB9I,EAAO5U,IADF4U,EAAM5b,KAEvB,OAKjB,G,0IClIA,IA7DgC,SAAHF,GAID,IAH1B0c,EAAiB1c,EAAjB0c,kBACAC,EAAyB3c,EAAzB2c,0BACAC,EAAS5c,EAAT4c,UAEMrJ,GAAWC,EAAAA,EAAAA,MACjB7S,GAAwCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzD0kB,EAAYxkB,EAAA,GAAEykB,EAAezkB,EAAA,IAEpCM,EAAAA,EAAAA,YAAU,WACJkkB,GACFvQ,EAAAA,EAAIC,QACDgB,YAAY2G,GACZzH,MAAK,WACJqQ,GAAgB,GAChB3I,GAA0B,EAC5B,IACCnH,OAAM,SAACC,GACN6P,GAAgB,GAChB/R,GAASmC,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAI/O,QACnD,GAEN,GAAG,CAACiW,EAA2BD,EAAmB2I,EAAc9R,IAMhE,OACEtQ,EAAAA,EAAAA,KAACiT,EAAAA,EAAa,CACZ1O,MAAK,mBACL2O,YAAa,2BACbC,OAAQwG,EACRzI,WAAWlR,EAAAA,EAAAA,KAACsT,EAAAA,IAAiB,IAC7BF,UAAWgP,EACX/O,UAXuB,WACzBgP,GAAgB,EAClB,EAUIpR,QAAS,WACPyI,GAA0B,EAC5B,EACAnG,qBACEzS,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CACNuhB,IAAgBpiB,EAAAA,EAAAA,KAACuR,EAAAA,EAAc,KAChCzQ,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,4EAGRb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KACEqM,MAAO,CACL7D,SAAU,QACV8Z,WAAY,SACZC,SAAU,cACV1hB,SACH,4EAQb,C","sources":["screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/ConfTargetGeneric.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useLocation } from \"react-router-dom\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const theme = useTheme();\n  const { pathname = \"\" } = useLocation();\n\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [value, setValue] = useState(selectedTab);\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n  useEffect(() => {\n    if (isRouteTabs) {\n      const tabConfigElement = children.find(\n        (item) => item.tabConfig.to === pathname,\n      );\n\n      if (tabConfigElement) {\n        setValue(tabConfigElement.tabConfig.value);\n      }\n    }\n  }, [isRouteTabs, children, pathname]);\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api.configs\n      .setConfig(type, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </Grid>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { DialogContentText } from \"@mui/material\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n  type,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api.configs\n        .resetConfig(selectedARN)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, ConsoleIcon, Grid, Tooltip } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { overrideFields } from \"../../Configurations/utils\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\",\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\",\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\",\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api.configs\n      .setConfig(name, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.data.restart || false));\n        if (!res.data.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override,\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        {hasOverride.length > 0 ? (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Enabled\"}\n                content={overrideValues.enable?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.enable.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Endpoint\"}\n                content={overrideValues.endpoint?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.endpoint.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Auth Token\"}\n                content={overrideValues.auth_token?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.auth_token.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <FormSwitchWrapper\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n            </Grid>\n            {saving && (\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 10,\n                }}\n              >\n                <LinearProgress />\n              </Grid>\n            )}\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={saving}\n                onClick={onCloseEndpoint}\n                label={\"Cancel\"}\n                sx={{\n                  marginRight: 10,\n                }}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={saving || invalidInputs.length !== 0}\n                label={\"Update\"}\n                onClick={updateWebhook}\n              />\n            </Grid>\n          </Fragment>\n        )}\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\nimport { Configuration } from \"api/consoleApi\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: Configuration[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item,\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values?.filter(\n            (itm) => !!itm.env_override,\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride && hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Button, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\n\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { Configuration, ConfigurationKV } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    settingsFormContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gridGap: \"10px\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  classes,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<Configuration[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations,\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api.configs\n          .configInfo(configId)\n          .then((res) => {\n            setConfigSubsysList(res.data);\n            let values: ConfigurationKV[] = get(res.data[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: ConfigurationKV) => element.key === field.name,\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api.configs\n        .setConfig(selectedConfiguration.configuration_id, payload)\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.data.restart || false));\n          dispatch(configurationIsLoading(true));\n          if (!res.data.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj],\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(\n              `settings_${selectedConfiguration.configuration_label}`,\n            ),\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid item xs={12} className={classes.settingsFormContainer}>\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName,\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","import React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\",\n        )}.conf`,\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart,\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined,\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { HelpBox, PageLayout, SettingsIcon } from \"mds\";\nimport { Link, Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport VerticalTabs from \"../../Common/VerticalTabs/VerticalTabs\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\nimport { Box } from \"@mui/material\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"../../../../api\";\nimport { IElement } from \"../types\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IConfigurationOptions {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    settingsOptionsContainer: {\n      display: \"flex\" as const,\n      flexDirection: \"row\" as const,\n      justifyContent: \"flex-start\" as const,\n      flexWrap: \"wrap\" as const,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      backgroundColor: \"#fff\",\n    },\n    ...searchField,\n    ...actionsTray,\n    ...containerForHeader,\n  });\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\n// region is not part of config subsystem list.\nconst NON_SUB_SYS_CONFIG_ITEMS = [\"region\"];\nconst IGNORED_CONFIG_SUB_SYS = [\"cache\"]; // cache config is not supported.\n\nconst ConfigurationOptions = ({ classes }: IConfigurationOptions) => {\n  const { pathname = \"\" } = useLocation();\n  const dispatch = useAppDispatch();\n\n  const [configSubSysList, setConfigSubSysList] = useState<string[]>([]);\n  const fetchConfigSubSysList = useCallback(async () => {\n    api.configs\n      .listConfig() // get a list of available config subsystems.\n      .then((res) => {\n        if (res && res?.data && res?.data?.configurations) {\n          const confSubSysList = (res?.data?.configurations || []).reduce(\n            (acc: string[], { key = \"\" }) => {\n              if (!IGNORED_CONFIG_SUB_SYS.includes(key)) {\n                acc.push(key);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          setConfigSubSysList(confSubSysList);\n        }\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      });\n  }, [dispatch]);\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n  useEffect(() => {\n    fetchConfigSubSysList();\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const availableConfigSubSys = configurationElements.filter(\n    ({ configuration_id }: IElement) => {\n      return (\n        NON_SUB_SYS_CONFIG_ITEMS.includes(configuration_id) ||\n        configSubSysList.includes(configuration_id) ||\n        !configSubSysList.length\n      );\n    },\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Settings\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12}>\n          <div\n            id=\"settings-container\"\n            className={classes.settingsOptionsContainer}\n          >\n            <ScreenTitle\n              icon={<SettingsIcon />}\n              title={\"MinIO Configuration:\"}\n              actions={\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    gap: 2,\n                  }}\n                >\n                  <ImportConfigButton />\n                  <ExportConfigButton />\n                </Box>\n              }\n            />\n            <VerticalTabs\n              selectedTab={selConfigTab}\n              isRouteTabs\n              routes={\n                <Routes>\n                  {availableConfigSubSys.map((element) => (\n                    <Route\n                      key={`configItem-${element.configuration_label}`}\n                      path={`${element.configuration_id}`}\n                      element={<ConfigurationForm />}\n                    />\n                  ))}\n                  <Route\n                    path={\"/\"}\n                    element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                  />\n                </Routes>\n              }\n            >\n              {availableConfigSubSys.map((element) => {\n                const { configuration_id, configuration_label, icon } = element;\n                return {\n                  tabConfig: {\n                    label: configuration_label,\n                    value: configuration_id,\n                    icon: icon,\n                    component: Link,\n                    to: getRoutePath(configuration_id),\n                  },\n                };\n              })}\n            </VerticalTabs>\n          </div>\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationOptions);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport CompressIcon from \"@mui/icons-material/Compress\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport FindReplaceIcon from \"@mui/icons-material/FindReplace\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport { LogsIcon } from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <LocalHospitalIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <VpnKeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <CallToActionIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingActionsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: (\n      <LogsIcon\n        className={\n          \"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiTab-iconWrapper css-i4bv87-MuiSvgIcon-root\"\n        }\n        style={{ width: 24, height: 24 }}\n      />\n    ),\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[],\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value,\n        overrideEnv: envItem.env_override.name,\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { ConsoleIcon, InputBox, Switch, Tooltip } from \"mds\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[],\n) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <PredefinedList\n            label={field.label}\n            content={override.value}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n          />\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { LinearProgress } from \"@mui/material\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IResetConfiguration {\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api.configs\n        .resetConfig(configurationName)\n        .then(() => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Fragment>\n          {resetLoading && <LinearProgress />}\n          <Fragment>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b\n              style={{\n                maxWidth: \"200px\",\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n              }}\n            >\n              Please note that this may cause your system to not be accessible\n            </b>\n          </Fragment>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default ResetConfigurationModal;\n"],"names":["_ref","elements","name","label","_ref$tooltip","tooltip","_ref$commonPlaceholde","commonPlaceholder","onChange","_ref$withBorder","withBorder","_useState","useState","_useState2","_slicedToArray","currentElements","setCurrentElements","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","element","trim","join","onChangeElement","e","persist","updatedElement","_toConsumableArray","index","get","target","parseInt","value","inputs","map","_jsx","InputBox","id","concat","toString","placeholder","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Fragment","children","_jsxs","Box","sx","display","className","InputLabel","alignItems","marginLeft","width","Tooltip","placement","HelpIcon","withBorders","overflowY","height","position","ref","withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","paddingTop","flexWrap","textBoxContainer","flexGrow","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","_ref$disabled","disabled","_ref$index","_ref$error","error","_ref$required","required","_ref$placeholder","classes","inputProps","React","Grid","item","xs","fieldContainer","errorInField","htmlFor","tooltipContainer","title","TextField","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","StyledSwitch","switchBase","transform","palette","common","white","backgroundColor","boxShadow","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","indicatorLabelOn","indicatorLabel","fieldDescription","marginTop","actionsTray","_ref$label","_ref$checked","_ref$switchOnly","switchOnly","_ref$description","description","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","clsx","_defineProperty","disableRipple","disableFocusRipple","disableTouchRipple","container","sm","md","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","right","top","maxWidth","maxHeight","_ref$type","type","_ref$autoComplete","autoComplete","_ref$multiline","min","max","overlayId","_ref$overlayIcon","_ref$overlayObject","overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","inputBoxContainer","noMinWidthLabel","inputRebase","IconButton","onClick","size","predefinedList","content","_ref$multiLine","multiLine","actionButton","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","useStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","style","tabStripStyle","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","tabContentContainer","tabPanel","flexDirection","_ref$selectedTab","selectedTab","routes","isRouteTabs","useTheme","_useLocation$pathname","useLocation","pathname","isSmallScreen","useMediaQuery","breakpoints","down","setValue","headerList","contentList","tabConfigElement","find","tabConfig","to","forEach","child","TabContext","TabList","event","newValue","orientation","scrollButtons","tabList","Tab","tabHeader","focusRipple","TabPanel","open","onCloseEndpoint","setName","_useState3","_useState4","endpoint","setEndpoint","_useState5","_useState6","authToken","setAuthToken","_useState7","_useState8","saving","setSaving","_useState9","_useState10","invalidInputs","setInvalidInput","_useState11","_useState12","initialInputs","setInitialInputs","dispatch","useAppDispatch","initializeInput","validateInput","valid","includes","Webhook","CallToActionIcon","PendingActionsIcon","ModalWrapper","modalOpen","onClose","titleIcon","formFieldStyles","formFieldRow","InputBoxWrapper","validity","LinearProgress","Button","payload","key_values","key","arn_resource_id","api","configs","setConfig","then","res","setServerNeedsRestart","data","restart","setSnackBarMessage","configurationIsLoading","catch","err","setErrorSnackMessage","errorToHandler","selectedARN","deleteLoading","setDeleteLoading","resetConfig","defaultWH","message","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","ConfirmDeleteIcon","confirmationContent","DialogContentText","_overrideValues$enabl","_overrideValues$endpo","_overrideValues$auth_","endpointInfo","endpointState","setEndpointState","endpointLocate","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","PredefinedList","paddingRight","overrideEnv","ConsoleIcon","auth_token","FormSwitchWrapper","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","disableButtonFunction","wHook","_wHook$key_values","AddEndpointModal","DeleteWebhookEndpoint","EditWebhookEndpoint","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","justifyItems","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","settingsCommon","settingsFormContainer","gridTemplateColumns","gridGap","selectedConfiguration","navigate","useNavigate","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","configInfo","values","keyVals","fieldsConfigurations","field","includedValue","customValue","customValueProcess","removeEmptyFields","configuration_id","onValueChange","resetConfigurationMOpen","onMouseMove","setHelpName","configuration_label","ResetConfigurationModal","configurationName","closeResetModalAndRefresh","resetOpen","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","ConfTargetGeneric","fields","defaultVals","configName","validActiveConfig","configurationElements","containerClassName","minWidth","EditConfiguration","useDispatch","_useApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","_useApi2","isReqLoading","invokeApi","TooltipWrapper","UploadIcon","needsRestart","serverNeedsRestart","undefined","refreshPage","setRefreshPage","fileUpload","files","fileToUpload","formData","FormData","blobFile","append","click","DownloadIcon","NON_SUB_SYS_CONFIG_ITEMS","IGNORED_CONFIG_SUB_SYS","settingsOptionsContainer","searchField","containerForHeader","configSubSysList","setConfigSubSysList","fetchConfigSubSysList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","listConfig","_res$data","configurations","_res$data2","confSubSysList","reduce","acc","_ref3","_ref3$key","stop","availableConfigSubSys","_ref4","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","gap","ImportConfigButton","ExportConfigButton","VerticalTabs","Routes","Route","path","ConfigurationForm","Navigate","IAM_PAGES","SETTINGS","Link","HelpBox","iconComponent","help","href","rel","PublicIcon","CompressIcon","CodeIcon","LocalHospitalIcon","FindReplaceIcon","VpnKeyIcon","LogsIcon","region","compression","heal","scanner","etcd","logger_webhook","audit_webhook","audit_kafka","origValue","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","overrideReturn","envItem","valueDef","defaults","defValue","storedConfig","modalBasic","valueHolder","setValueHolder","fieldsElements","defValList","setValueElement","valuesDup","fieldDefinition","holderItem","override","CSVMultiSelector","valCh","Array","isArray","CommentBoxWrapper","fieldBox","resetLoading","setResetLoading","whiteSpace","wordWrap"],"sourceRoot":""}