{"version":3,"file":"static/js/9679.0973c488.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EnableVersioningModal.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../icons\";\n\ninterface IVersioningEventProps {\n  closeVersioningModalAndRefresh: (refresh: boolean) => void;\n  modalOpen: boolean;\n  selectedBucket: string;\n  versioningCurrentState: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst EnableVersioningModal = ({\n  closeVersioningModalAndRefresh,\n  modalOpen,\n  selectedBucket,\n  versioningCurrentState,\n  setErrorSnackMessage,\n}: IVersioningEventProps) => {\n  const [versioningLoading, setVersioningLoading] = useState<boolean>(false);\n\n  const enableVersioning = () => {\n    if (versioningLoading) {\n      return;\n    }\n    setVersioningLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/versioning`, {\n        versioning: !versioningCurrentState,\n      })\n      .then(() => {\n        setVersioningLoading(false);\n        closeVersioningModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setVersioningLoading(false);\n        setErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Versioning on Bucket`}\n      confirmText={versioningCurrentState ? \"Disable\" : \"Enable\"}\n      isOpen={modalOpen}\n      isLoading={versioningLoading}\n      titleIcon={<ConfirmModalIcon />}\n      onConfirm={enableVersioning}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      onClose={() => {\n        closeVersioningModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to{\" \"}\n          <strong>{versioningCurrentState ? \"disable\" : \"enable\"}</strong>{\" \"}\n          versioning for this bucket?\n          {versioningCurrentState && (\n            <Fragment>\n              <br />\n              <br />\n              <strong>File versions won't be automatically deleted.</strong>\n            </Fragment>\n          )}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default connector(EnableVersioningModal);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["connector","connect","setErrorSnackMessage","closeVersioningModalAndRefresh","modalOpen","selectedBucket","versioningCurrentState","useState","versioningLoading","setVersioningLoading","title","confirmText","isOpen","isLoading","titleIcon","onConfirm","api","versioning","then","catch","err","confirmButtonProps","color","variant","onClose","confirmationContent","id","Fragment","withStyles","theme","createStyles","deleteDialogStyles","onCancel","classes","cancelText","cancelButtonProps","open","event","reason","className","root","sx","padding","titleText","closeContainer","closeButton","onClick","disableRipple","size","content","actions","cancelButton","disabled","type","confirmButton","loading","loadingPosition","startIcon","autoFocus","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","position","visibility","display","left","transform","palette","action","right","React","inProps","ref","useThemeProps","children","idProp","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","slots","endIcon","composedClasses","composeClasses","useUtilityClasses","_jsxs","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","alignItems","justifyContent","flex","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","Typography","component"],"sourceRoot":""}