{"version":3,"file":"static/js/9059.bfb04f0e.chunk.js","mappings":"mKA8RA,UA7PkB,SAAHA,GAAuC,IAAjCC,EAAQD,EAARC,SAEnBC,GAAwCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BT,EAAAA,EAAAA,UAAiB,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAID,EAAA,GAAEE,EAAWF,EAAA,GACxBG,GAA4Bb,EAAAA,EAAAA,UAAiB,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAzCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwBjB,EAAAA,EAAAA,UAAiB,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBrB,EAAAA,EAAAA,UAAiB,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAArCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCzB,EAAAA,EAAAA,UAAiB,IAAG0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,GAA0B7B,EAAAA,EAAAA,UAAiB,IAAG8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAvCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BjC,EAAAA,EAAAA,UAAiB,aAAYkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAlDE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgCrC,EAAAA,EAAAA,UAAiB,IAAGsC,GAAApC,EAAAA,EAAAA,GAAAmC,EAAA,GAA7CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCzC,EAAAA,EAAAA,UAAiB,IAAG0C,GAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GAAjDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8B7C,EAAAA,EAAAA,UAAiB,IAAG8C,GAAA5C,EAAAA,EAAAA,GAAA2C,EAAA,GAA3CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAiCpBG,IAAoBC,EAAAA,EAAAA,cAAY,WACpC,MAAM,GAANC,OAAU5B,EAAI,KAAA4B,OAAIxB,EAAQ,SAAAwB,OAAQxC,EAAI,KAAAwC,OAAIhC,EAAI,MAAAgC,OAAKpC,EACrD,GAAG,CAACQ,EAAMI,EAAUhB,EAAMQ,EAAMJ,KAEhCqC,EAAAA,EAAAA,YAAU,WACU,KAAd7C,GAUFT,EATmB,CACjB,CAAEuD,IAAK,aAAcC,MAAO/C,GAC5B,CAAE8C,IAAK,QAASC,MAAOvB,GACvB,CAAEsB,IAAK,SAAUC,MAAOnB,GACxB,CAAEkB,IAAK,YAAaC,MAAOf,GAC3B,CAAEc,IAAK,cAAeC,MAAOX,GAC7B,CAAEU,IAAK,UAAWC,MAAOP,IAK/B,GAAG,CAACxC,EAAWwB,EAAOI,EAAQI,EAAUI,EAAYI,EAASjD,KAE7DsD,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAKN,KACXzC,EAAa+C,EACf,GAAG,CAAChC,EAAMR,EAAQY,EAAUR,EAAMR,EAAMH,EAAcyC,KA0BtD,OACEO,EAAAA,EAAAA,MAACC,EAAAA,IAAU,CAACC,aAAa,EAAOC,kBAAkB,EAAMC,SAAA,EACtDC,EAAAA,EAAAA,KAACC,EAAAA,IAAM,CACLC,MAAO,mBACPC,QAAS7D,EACT8D,GAAG,WACHC,KAAK,WACLpE,SA/BoB,SAACqE,GACzB,GAAIA,EAAMC,OAAOJ,QAAS,CAExB,IAAMT,EAAKN,KACXzC,EAAa+C,EACf,KAAO,CAEL,IAAMc,EAvDa,SACrBC,EACAC,GAMA,IAJA,IAEIC,EAFAC,EAAgC,IAAIC,IAClCC,EAAQ,2CAGqB,QAA3BH,EAAIG,EAAMC,KAAKN,KAEjBE,EAAEK,QAAUF,EAAMG,WACpBH,EAAMG,YAGRL,EAASM,IAAI,OAAQP,EAAE,IACvBC,EAASM,IAAI,WAAYP,EAAE,IAC3BC,EAASM,IAAI,OAAQP,EAAE,IACvBC,EAASM,IAAI,OAAQP,EAAE,IACvBC,EAASM,IAAI,SAAUP,EAAE,IAG3B,OAAOC,CACT,CAiCeO,CAAezE,GAO1BK,EAAYyD,EAAGY,IAAI,QAAUZ,EAAGY,IAAI,QAAU,GAAK,IACnD7D,EAAQiD,EAAGY,IAAI,QAAUZ,EAAGY,IAAI,QAAU,GAAK,IAC/CjE,EAAUqD,EAAGY,IAAI,UAAYZ,EAAGY,IAAI,UAAY,GAAK,IACrDzD,EAAQ6C,EAAGY,IAAI,QAAUZ,EAAGY,IAAI,QAAU,GAAK,IAC/CrD,EAAYyC,EAAGY,IAAI,YAAcZ,EAAGY,IAAI,YAAc,GAAK,GAC7D,CAEA7E,EAAgB+D,EAAMC,OAAOJ,QAC/B,EAUMV,MAAO,cAERnD,GACC0D,EAAAA,EAAAA,KAACqB,EAAAA,SAAc,CAAAtB,UACbC,EAAAA,EAAAA,KAACsB,EAAAA,IAAG,CAACC,UAAW,YAAYxB,UAC1BC,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,aACHC,KAAK,aACLH,MAAM,aACNT,MAAO/C,EACPT,SAAU,SAACwF,GACT9E,EAAa8E,EAAElB,OAAOd,MACxB,SAKNE,EAAAA,EAAAA,MAAC0B,EAAAA,SAAc,CAAAtB,SAAA,EACbC,EAAAA,EAAAA,KAACsB,EAAAA,IAAG,CAAAvB,UACFJ,EAAAA,EAAAA,MAAC2B,EAAAA,IAAG,CACFzB,aAAW,EACX6B,eAAa,EACbC,GAAI,CACFC,UAAW,OACXC,OAAQ,IACRC,aAAc,IACd/B,SAAA,EAEFC,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,OACHC,KAAK,OACLH,MAAM,GACN6B,YAAY,aACZtC,MAAO3C,EACPb,SAAU,SAACwF,GACT1E,EAAY0E,EAAElB,OAAOd,MACvB,KAEFO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,UACHC,KAAK,UACLH,MAAM,GACN6B,YAAY,gBACZtC,MAAOvC,EACPjB,SAAU,SAACwF,GACTtE,EAAUsE,EAAElB,OAAOd,MACrB,KAEFO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,OACHC,KAAK,OACLH,MAAM,GACN6B,YAAY,aACZtC,MAAOnC,EACPrB,SAAU,SAACwF,GACTlE,EAAQkE,EAAElB,OAAOd,MACnB,KAEFO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,OACHC,KAAK,OACLH,MAAM,GACN6B,YAAY,aACZtC,MAAO/B,EACPzB,SAAU,SAACwF,GACT9D,EAAQ8D,EAAElB,OAAOd,MACnB,KAEFO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,WACHC,KAAK,WACLH,MAAM,GACN6B,YAAY,iBACZC,KAAK,WACLvC,MAAO3B,EACP7B,SAAU,SAACwF,GACT1D,EAAY0D,EAAElB,OAAOd,MACvB,UAINO,EAAAA,EAAAA,KAACiC,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIR,GAAI,CAAES,OAAQ,UAAWrC,UAC1CC,EAAAA,EAAAA,KAACqC,EAAAA,IAAO,CAACnC,MAAO,oBAAqBoC,WAAS,EAAAvC,SAC3CrD,UAKTsD,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,QACHC,KAAK,QACLH,MAAM,QACN6B,YAAY,mBACZtC,MAAOvB,EACPqE,QAAQ,8DACRtG,SAAU,SAACwF,GACTtD,EAASsD,EAAElB,OAAOd,MACpB,KAEFO,EAAAA,EAAAA,KAACwC,EAAAA,IAAU,CACTC,aAAcnE,EACd8B,GAAG,SACHC,KAAK,SACLH,MAAM,SACNjE,SAAU,SAACwF,GACTlD,EAAUkD,EAAElB,OAAOd,MACrB,EACA8C,QAAQ,gIACRG,gBAAiB,CACf,CAAExC,MAAO,YAAaT,MAAO,aAC7B,CAAES,MAAO,SAAUT,MAAO,cAG9BO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,YACHC,KAAK,YACLH,MAAM,YACN6B,YAAY,kBACZtC,MAAOf,EACP6D,QAAQ,iEACRtG,SAAU,SAACwF,GACT9C,EAAY8C,EAAElB,OAAOd,MACvB,KAEFO,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CACPpB,GAAG,cACHC,KAAK,cACLH,MAAM,cACN6B,YAAY,oBACZC,KAAK,SACLvC,MAAOX,EACPyD,QAAQ,8DACRtG,SAAU,SAACwF,GACT1C,EAAc0C,EAAElB,OAAOd,MACzB,KAEFO,EAAAA,EAAAA,KAAC2C,EAAAA,IAAU,CACTvC,GAAG,UACHC,KAAK,UACLH,MAAM,UACN6B,YAAY,4BACZtC,MAAOP,EACPjD,SAAU,SAACwF,GACTtC,EAAWsC,EAAElB,OAAOd,MACtB,MAIR,C","sources":["screens/Console/EventDestinations/CustomForms/ConfMySql.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  Box,\n  CommentBox,\n  FormLayout,\n  Grid,\n  InputBox,\n  RadioGroup,\n  ReadBox,\n  Switch,\n} from \"mds\";\n\ninterface IConfMySqlProps {\n  onChange: (newValue: IElementValue[]) => void;\n}\n\nconst ConfMySql = ({ onChange }: IConfMySqlProps) => {\n  //Local States\n  const [useDsnString, setUseDsnString] = useState<boolean>(false);\n  const [dsnString, setDsnString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // dsn_string*  (string)             MySQL data-source-name connection string e.g. \"<user>:<password>@tcp(<host>:<port>)/<database>\"\n  // table*       (string)             DB table name to store/update events, table is auto-created\n  // format*      (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir    (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit  (number)             maximum limit for undelivered messages, defaults to '100000'\n  // comment      (sentence)           optionally add a comment to this setting\n\n  const parseDsnString = (\n    input: string,\n    keys: string[],\n  ): Map<string, string> => {\n    let kvFields: Map<string, string> = new Map();\n    const regex = /(.*?):(.*?)@tcp\\((.*?):(.*?)\\)\\/(.*?)$/gm;\n    let m;\n\n    while ((m = regex.exec(input)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      kvFields.set(\"user\", m[1]);\n      kvFields.set(\"password\", m[2]);\n      kvFields.set(\"host\", m[3]);\n      kvFields.set(\"port\", m[4]);\n      kvFields.set(\"dbname\", m[5]);\n    }\n\n    return kvFields;\n  };\n\n  const configToDsnString = useCallback((): string => {\n    return `${user}:${password}@tcp(${host}:${port})/${dbName}`;\n  }, [user, password, host, port, dbName]);\n\n  useEffect(() => {\n    if (dsnString !== \"\") {\n      const formValues = [\n        { key: \"dsn_string\", value: dsnString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [dsnString, table, format, queueDir, queueLimit, comment, onChange]);\n\n  useEffect(() => {\n    const cs = configToDsnString();\n    setDsnString(cs);\n  }, [user, dbName, password, port, host, setDsnString, configToDsnString]);\n\n  const switcherChangeEvt = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      // build dsn_string\n      const cs = configToDsnString();\n      setDsnString(cs);\n    } else {\n      // parse dsn_string\n      const kv = parseDsnString(dsnString, [\n        \"host\",\n        \"port\",\n        \"dbname\",\n        \"user\",\n        \"password\",\n      ]);\n      setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n      setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n      setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n      setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n      setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    }\n\n    setUseDsnString(event.target.checked);\n  };\n\n  return (\n    <FormLayout withBorders={false} containerPadding={false}>\n      <Switch\n        label={\"Enter DNS String\"}\n        checked={useDsnString}\n        id=\"checkedB\"\n        name=\"checkedB\"\n        onChange={switcherChangeEvt}\n        value={\"dnsString\"}\n      />\n      {useDsnString ? (\n        <React.Fragment>\n          <Box className={\"inputItem\"}>\n            <InputBox\n              id=\"dsn-string\"\n              name=\"dsn_string\"\n              label=\"DSN String\"\n              value={dsnString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDsnString(e.target.value);\n              }}\n            />\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Box>\n            <Box\n              withBorders\n              useBackground\n              sx={{\n                overflowY: \"auto\",\n                height: 170,\n                marginBottom: 12,\n              }}\n            >\n              <InputBox\n                id=\"host\"\n                name=\"host\"\n                label=\"\"\n                placeholder=\"Enter Host\"\n                value={host}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setHostname(e.target.value);\n                }}\n              />\n              <InputBox\n                id=\"db-name\"\n                name=\"db-name\"\n                label=\"\"\n                placeholder=\"Enter DB Name\"\n                value={dbName}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setDbName(e.target.value);\n                }}\n              />\n              <InputBox\n                id=\"port\"\n                name=\"port\"\n                label=\"\"\n                placeholder=\"Enter Port\"\n                value={port}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPort(e.target.value);\n                }}\n              />\n              <InputBox\n                id=\"user\"\n                name=\"user\"\n                label=\"\"\n                placeholder=\"Enter User\"\n                value={user}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setUser(e.target.value);\n                }}\n              />\n              <InputBox\n                id=\"password\"\n                name=\"password\"\n                label=\"\"\n                placeholder=\"Enter Password\"\n                type=\"password\"\n                value={password}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPassword(e.target.value);\n                }}\n              />\n            </Box>\n          </Box>\n          <Grid item xs={12} sx={{ margin: \"12px 0\" }}>\n            <ReadBox label={\"Connection String\"} multiLine>\n              {dsnString}\n            </ReadBox>\n          </Grid>\n        </React.Fragment>\n      )}\n      <InputBox\n        id=\"table\"\n        name=\"table\"\n        label=\"Table\"\n        placeholder=\"Enter Table Name\"\n        value={table}\n        tooltip=\"DB table name to store/update events, table is auto-created\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setTable(e.target.value);\n        }}\n      />\n      <RadioGroup\n        currentValue={format}\n        id=\"format\"\n        name=\"format\"\n        label=\"Format\"\n        onChange={(e) => {\n          setFormat(e.target.value);\n        }}\n        tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n        selectorOptions={[\n          { label: \"Namespace\", value: \"namespace\" },\n          { label: \"Access\", value: \"access\" },\n        ]}\n      />\n      <InputBox\n        id=\"queue-dir\"\n        name=\"queue_dir\"\n        label=\"Queue Dir\"\n        placeholder=\"Enter Queue Dir\"\n        value={queueDir}\n        tooltip=\"Staging directory for undelivered messages e.g. '/home/events'\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setQueueDir(e.target.value);\n        }}\n      />\n      <InputBox\n        id=\"queue-limit\"\n        name=\"queue_limit\"\n        label=\"Queue Limit\"\n        placeholder=\"Enter Queue Limit\"\n        type=\"number\"\n        value={queueLimit}\n        tooltip=\"Maximum limit for undelivered messages, defaults to '10000'\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setQueueLimit(e.target.value);\n        }}\n      />\n      <CommentBox\n        id=\"comment\"\n        name=\"comment\"\n        label=\"Comment\"\n        placeholder=\"Enter custom notes if any\"\n        value={comment}\n        onChange={(e) => {\n          setComment(e.target.value);\n        }}\n      />\n    </FormLayout>\n  );\n};\n\nexport default ConfMySql;\n"],"names":["_ref","onChange","_useState","useState","_useState2","_slicedToArray","useDsnString","setUseDsnString","_useState3","_useState4","dsnString","setDsnString","_useState5","_useState6","host","setHostname","_useState7","_useState8","dbName","setDbName","_useState9","_useState10","port","setPort","_useState11","_useState12","user","setUser","_useState13","_useState14","password","setPassword","_useState15","_useState16","table","setTable","_useState17","_useState18","format","setFormat","_useState19","_useState20","queueDir","setQueueDir","_useState21","_useState22","queueLimit","setQueueLimit","_useState23","_useState24","comment","setComment","configToDsnString","useCallback","concat","useEffect","key","value","cs","_jsxs","FormLayout","withBorders","containerPadding","children","_jsx","Switch","label","checked","id","name","event","target","kv","input","keys","m","kvFields","Map","regex","exec","index","lastIndex","set","parseDsnString","get","React","Box","className","InputBox","e","useBackground","sx","overflowY","height","marginBottom","placeholder","type","Grid","item","xs","margin","ReadBox","multiLine","tooltip","RadioGroup","currentValue","selectorOptions","CommentBox"],"sourceRoot":""}