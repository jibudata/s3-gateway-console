{"version":3,"sources":["screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/Hooks/useApi.tsx","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","screens/Console/Account/DeleteServiceAccount.tsx"],"names":["withStyles","theme","createStyles","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","classes","title","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","open","event","reason","className","root","sx","padding","titleText","closeContainer","closeButton","onClick","disableRipple","size","content","actions","cancelButton","disabled","type","variant","color","confirmButton","loading","loadingPosition","startIcon","Fragment","autoFocus","useApi","onSuccess","onError","useState","setIsLoading","method","url","data","api","invoke","then","res","catch","err","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","disableSpacing","spacing","_extends","display","alignItems","justifyContent","flex","marginLeft","DialogActions","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentTextUtilityClass","DialogContentTextRoot","Typography","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","component","getLoadingButtonUtilityClass","loadingButtonClasses","LoadingButtonRoot","Button","startIconLoadingStart","endIconLoadingEnd","transition","transitions","create","duration","short","opacity","fullWidth","marginRight","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","position","visibility","left","transform","palette","action","right","LoadingIndicator","CircularProgress","LoadingButton","children","endIcon","_jsxs","mapDispatchToProps","setErrorSnackMessage","connector","connect","wrapText","maxWidth","whiteSpace","wordWrap","closeDeleteModalAndRefresh","deleteOpen","selectedServiceAccount","deleteLoading","invokeDeleteApi"],"mappings":"6PAyHeA,iBAxGA,SAACC,GAAD,OACbC,YAAa,eACRC,QAsGQH,EAnFO,SAAC,GAcI,IAAD,IAbxBI,cAawB,SAZxBC,EAYwB,EAZxBA,QACAC,EAWwB,EAXxBA,SACAC,EAUwB,EAVxBA,UAUwB,IATxBC,eASwB,MATd,GASc,MARxBC,aAQwB,MARhB,GAQgB,EAPxBC,EAOwB,EAPxBA,UACAC,EAMwB,EANxBA,oBAMwB,IALxBC,kBAKwB,MALX,SAKW,MAJxBC,mBAIwB,MAJV,UAIU,MAHxBC,0BAGwB,MAHH,GAGG,MAFxBC,yBAEwB,MAFJ,GAEI,MADxBC,iBACwB,MADZ,KACY,EACxB,OACE,eAAC,IAAD,CACEC,KAAMb,EACNC,QAAS,SAACa,EAAOC,GACA,kBAAXA,GACFd,KAGJe,UAAWZ,EAAQa,KACnBC,GAAI,CACF,mBAAoB,CAClBC,QAAS,wBAVf,UAcE,eAAC,IAAD,CAAaH,UAAWZ,EAAQC,MAAhC,UACE,sBAAKW,UAAWZ,EAAQgB,UAAxB,UACGR,EADH,IACeP,KAEf,qBAAKW,UAAWZ,EAAQiB,eAAxB,SACE,cAAC,IAAD,CACE,aAAW,QACXL,UAAWZ,EAAQkB,YACnBC,QAAStB,EACTuB,eAAa,EACbC,KAAK,QALP,SAOE,cAAC,IAAD,WAKN,cAAC,IAAD,CAAeT,UAAWZ,EAAQsB,QAAlC,SACGnB,IAEH,eAAC,IAAD,CAAeS,UAAWZ,EAAQuB,QAAlC,UACE,cAAC,IAAD,yBACEX,UAAWZ,EAAQwB,aACnBL,QAASrB,GAAYD,EACrB4B,SAAUvB,EACVwB,KAAK,UACDnB,GALN,IAMEoB,QAAQ,WACRC,MAAM,UAPR,SASGxB,KAGH,cAAC,IAAD,yBACEQ,UAAWZ,EAAQ6B,cACnBH,KAAK,SACLP,QAASpB,EACT+B,QAAS5B,EACTuB,SAAUvB,EACVyB,QAAQ,WACRC,MAAM,YACNG,gBAAgB,QAChBC,UAAW,cAAC,IAAMC,SAAP,IACXC,WAAS,GACL5B,GAXN,aAaGD,e,4DCnFI8B,IAvBA,SACbC,EACAC,GAEA,MAAkCC,oBAAkB,GAApD,mBAAOpC,EAAP,KAAkBqC,EAAlB,KAgBA,MAAO,CAACrC,EAdQ,SAACsC,EAAgBC,EAAaC,GAC5CH,GAAa,GACbI,IACGC,OAAOJ,EAAQC,EAAKC,GACpBG,MAAK,SAACC,GACLP,GAAa,GACbH,EAAUU,MAEXC,OAAM,SAACC,GACNT,GAAa,GACbF,EAAQW,U,gHCvBT,SAASC,EAA6BC,GAC3C,OAAOC,YAAqB,mBAAoBD,GAErBE,YAAuB,mBAAoB,CAAC,OAAQ,YAAjF,I,OCFMC,EAAY,CAAC,YAAa,kBAqB1BC,EAAoBC,YAAO,MAAO,CACtCC,KAAM,mBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAO9C,MAAO+C,EAAWC,gBAAkBF,EAAOG,WAPpCP,EASvB,gBACDK,EADC,EACDA,WADC,OAEGG,YAAS,CACbC,QAAS,OACTC,WAAY,SACZlD,QAAS,EACTmD,eAAgB,WAChBC,KAAM,aACJP,EAAWC,gBAAkB,CAC/B,2BAA4B,CAC1BO,WAAY,QAGVC,EAA6BC,cAAiB,SAAuBC,EAASC,GAClF,IAAMd,EAAQe,YAAc,CAC1Bf,MAAOa,EACPf,KAAM,qBAIN5C,EAEE8C,EAFF9C,UADF,EAGI8C,EADFG,sBAFF,SAIMa,EAAQC,YAA8BjB,EAAOL,GAE7CO,EAAaG,YAAS,GAAIL,EAAO,CACrCG,mBAGI7D,EAjDkB,SAAA4D,GACxB,IACE5D,EAEE4D,EAFF5D,QAGI4E,EAAQ,CACZ/D,KAAM,CAAC,QAFL+C,EADFC,gBAGkC,YAEpC,OAAOgB,YAAeD,EAAO3B,EAA8BjD,GAyC3C8E,CAAkBlB,GAClC,OAAoBmB,cAAKzB,EAAmBS,YAAS,CACnDnD,UAAWoE,YAAKhF,EAAQa,KAAMD,GAC9BgD,WAAYA,EACZY,IAAKA,GACJE,OAoCUL,O,iHCrGR,SAASY,EAAiC/B,GAC/C,OAAOC,YAAqB,uBAAwBD,GAErBE,YAAuB,uBAAwB,CAAC,SAAjF,I,OCFMC,EAAY,CAAC,YAqBb6B,EAAwB3B,YAAO4B,IAAY,CAC/CC,kBAAmB,SAAAC,GAAI,OAAIC,YAAsBD,IAAkB,YAATA,GAC1D7B,KAAM,uBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAO9C,OAJjB0C,CAK3B,IACGgC,EAAiCjB,cAAiB,SAA2BC,EAASC,GAC1F,IAAMd,EAAQe,YAAc,CAC1Bf,MAAOa,EACPf,KAAM,yBAGFI,EAAae,YAA8BjB,EAAOL,GAElDrD,EAzBkB,SAAA4D,GACxB,IACE5D,EACE4D,EADF5D,QAKIwF,EAAkBX,YAHV,CACZhE,KAAM,CAAC,SAEqCoE,EAAkCjF,GAChF,OAAO+D,YAAS,GAAI/D,EAASwF,GAiBbV,CAAkBlB,GAClC,OAAoBmB,cAAKG,EAAuBnB,YAAS,CACvD0B,UAAW,IACX9D,QAAS,QACTC,MAAO,iBACP4C,IAAKA,EACLZ,WAAYA,GACXF,EAAO,CACR1D,QAASA,QA0BEuF,O,0ICtER,SAASG,EAA6BxC,GAC3C,OAAOC,YAAqB,mBAAoBD,GAElD,IACeyC,EADcvC,YAAuB,mBAAoB,CAAC,OAAQ,UAAW,mBAAoB,yBAA0B,wBAAyB,sBAAuB,oBAAqB,0B,OCFzMC,EAAY,CAAC,WAAY,WAAY,UAAW,mBAAoB,kBAAmB,WAgCvFuC,EAAoBrC,YAAOsC,IAAQ,CACvCT,kBAAmB,SAAAC,GAAI,OAHK,SAAAA,GAAI,MAAa,eAATA,GAAkC,UAATA,GAA6B,OAATA,GAA0B,OAATA,GAA0B,YAATA,EAGxFC,CAAsBD,IAAkB,YAATA,GAC1D7B,KAAM,mBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,MAAO,CAACA,EAAO9C,KAAM8C,EAAOmC,uBAAP,4BACZH,EAAqBG,uBAA0BnC,EAAOmC,uBAC5DnC,EAAOoC,mBAAP,4BACMJ,EAAqBI,mBAAsBpC,EAAOoC,sBARrCxC,EAWvB,gBACDK,EADC,EACDA,WACAnE,EAFC,EAEDA,MAFC,OAGGsE,YAAS,4BACN4B,EAAqBG,sBADhB,gBAC6CH,EAAqBI,mBAAsB,CAClGC,WAAYvG,EAAMwG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAU1G,EAAMwG,YAAYE,SAASC,QAEvCC,QAAS,IAEqB,WAA/BzC,EAAW7B,iBAAX,aACDiE,WAAYvG,EAAMwG,YAAYC,OAAO,CAAC,mBAAoB,aAAc,gBAAiB,CACvFC,SAAU1G,EAAMwG,YAAYE,SAASC,SAFtC,YAIKT,EAAqB7D,SAAY,CACrCF,MAAO,gBAEuB,UAA/BgC,EAAW7B,iBAA+B6B,EAAW0C,WAArD,4BACMX,EAAqBG,sBAD3B,gBACwDH,EAAqBI,mBAAsB,CAClGC,WAAYvG,EAAMwG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAU1G,EAAMwG,YAAYE,SAASC,QAEvCC,QAAS,EACTE,aAAc,IAEgB,QAA/B3C,EAAW7B,iBAA6B6B,EAAW0C,WAAnD,4BACMX,EAAqBG,sBAD3B,gBACwDH,EAAqBI,mBAAsB,CAClGC,WAAYvG,EAAMwG,YAAYC,OAAO,CAAC,WAAY,CAChDC,SAAU1G,EAAMwG,YAAYE,SAASC,QAEvCC,QAAS,EACTjC,YAAa,QAGXoC,EAAgCjD,YAAO,MAAO,CAClDC,KAAM,mBACNN,KAAM,mBACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAO8C,iBAAkB9C,EAAO,mBAAD,OAAoB+C,YAAW9C,EAAW7B,sBAP/CwB,EASnC,gBACD9D,EADC,EACDA,MACAmE,EAFC,EAEDA,WAFC,OAGGG,YAAS,CACb4C,SAAU,WACVC,WAAY,UACZ5C,QAAS,QACuB,UAA/BJ,EAAW7B,kBAAuD,aAAvB6B,EAAWjC,SAAiD,cAAvBiC,EAAWjC,UAA4B,CACxHkF,KAAM,IAC0B,UAA/BjD,EAAW7B,iBAAsD,SAAvB6B,EAAWjC,SAAsB,CAC5EkF,KAAM,GAC0B,WAA/BjD,EAAW7B,iBAAgC,CAC5C8E,KAAM,MACNC,UAAW,kBACXlF,MAAOnC,EAAMsH,QAAQC,OAAOvF,UACI,QAA/BmC,EAAW7B,kBAAqD,aAAvB6B,EAAWjC,SAAiD,cAAvBiC,EAAWjC,UAA4B,CACtHsF,MAAO,IACyB,QAA/BrD,EAAW7B,iBAAoD,SAAvB6B,EAAWjC,SAAsB,CAC1EsF,MAAO,GACyB,UAA/BrD,EAAW7B,iBAA+B6B,EAAW0C,WAAa,CACnEK,SAAU,WACVE,MAAO,IACyB,QAA/BjD,EAAW7B,iBAA6B6B,EAAW0C,WAAa,CACjEK,SAAU,WACVM,OAAQ,QAGJC,EAAgCnC,cAAKoC,IAAkB,CAC3DvF,MAAO,UACPP,KAAM,KAGF+F,EAA6B9C,cAAiB,SAAuBC,EAASC,GAClF,IAAMd,EAAQe,YAAc,CAC1Bf,MAAOa,EACPf,KAAM,qBAIN6D,EAME3D,EANF2D,SADF,EAOI3D,EALFjC,gBAFF,WAOIiC,EAJF5B,eAHF,WAOI4B,EAHF+C,wBAJF,MAIqBS,EAJrB,IAOIxD,EAFF3B,uBALF,MAKoB,SALpB,IAOI2B,EADF/B,eANF,MAMY,OANZ,EAQM+C,EAAQC,YAA8BjB,EAAOL,GAE7CO,EAAaG,YAAS,GAAIL,EAAO,CACrCjC,WACAK,UACA2E,mBACA1E,kBACAJ,YAGI3B,EAjIkB,SAAA4D,GACxB,IACE9B,EAGE8B,EAHF9B,QACAC,EAEE6B,EAFF7B,gBACA/B,EACE4D,EADF5D,QAEI4E,EAAQ,CACZ/D,KAAM,CAAC,OAAQiB,GAAW,WAC1BE,UAAW,CAACF,GAAW,mBAAJ,OAAuB4E,YAAW3E,KACrDuF,QAAS,CAACxF,GAAW,iBAAJ,OAAqB4E,YAAW3E,KACjD0E,iBAAkB,CAAC,mBAAoB3E,GAAW,mBAAJ,OAAuB4E,YAAW3E,MAE5EyD,EAAkBX,YAAeD,EAAOc,EAA8B1F,GAC5E,OAAO+D,YAAS,GAAI/D,EAASwF,GAoHbV,CAAkBlB,GAClC,OAAoBmB,cAAKa,EAAmB7B,YAAS,CACnDtC,SAAUA,GAAYK,EACtB0C,IAAKA,GACJE,EAAO,CACR/C,QAASA,EACT3B,QAASA,EACT4D,WAAYA,EACZyD,SAAyC,QAA/BzD,EAAW7B,gBAAyCwF,eAAMjD,WAAgB,CAClF+C,SAAU,CAACA,EAAUvF,GAAwBiD,cAAKyB,EAA+B,CAC/E5F,UAAWZ,EAAQyG,iBACnB7C,WAAYA,EACZyD,SAAUZ,OAEIc,eAAMjD,WAAgB,CACtC+C,SAAU,CAACvF,GAAwBiD,cAAKyB,EAA+B,CACrE5F,UAAWZ,EAAQyG,iBACnB7C,WAAYA,EACZyD,SAAUZ,IACRY,WAmEKD,O,uIC9ITI,EAAqB,CACzBC,0BAGIC,EAAYC,YAAQ,KAAMH,GAEjBhI,uBAlEA,SAACC,GAAD,OACbC,YAAa,CACXkI,SAAU,CACRC,SAAU,QACVC,WAAY,SACZC,SAAU,kBA6DDvI,CAAmBkI,GAjDL,SAAC,GAMK,IALjC1H,EAKgC,EALhCA,QACAgI,EAIgC,EAJhCA,2BACAC,EAGgC,EAHhCA,WACAC,EAEgC,EAFhCA,uBACAT,EACgC,EADhCA,qBAMA,EAAyCtF,aAJpB,kBAAM6F,GAA2B,MACnC,SAAChF,GAAD,OAA+ByE,EAAqBzE,MAGvE,mBAAOmF,EAAP,KAAsBC,EAAtB,KAEA,IAAKF,EACH,OAAO,KAUT,OACE,cAAC,IAAD,CACEjI,MAAK,yBACLI,YAAa,SACbT,OAAQqI,EACRzH,UAAW,cAAC,IAAD,IACXN,UAAWiI,EACXpI,UAdoB,WACtBqI,EACE,SADa,mCAEeF,KAY5BrI,QAvBY,kBAAMmI,GAA2B,IAwB7C7H,oBACE,eAAC,IAAD,6DACkD,IAChD,mBAAGS,UAAWZ,EAAQ4H,SAAtB,SAAiCM,IAFnC","file":"static/js/88.132343e1.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\n\nconst LoadingIndicator = /*#__PURE__*/_jsx(CircularProgress, {\n  color: \"inherit\",\n  size: 16\n});\n\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    loading = false,\n    loadingIndicator = LoadingIndicator,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n  });\n\ninterface IDeleteServiceAccountProps {\n  classes: any;\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedServiceAccount: string | null;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteServiceAccount = ({\n  classes,\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedServiceAccount,\n  setErrorSnackMessage,\n}: IDeleteServiceAccountProps) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedServiceAccount) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/service-accounts/${selectedServiceAccount}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Service Account`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete service account{\" \"}\n          <b className={classes.wrapText}>{selectedServiceAccount}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(DeleteServiceAccount));\n"],"sourceRoot":""}