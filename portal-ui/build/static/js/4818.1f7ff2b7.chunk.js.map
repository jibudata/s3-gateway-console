{"version":3,"file":"static/js/4818.1f7ff2b7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Groups/AddGroup.tsx","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { CreateGroupIcon } from \"../../../icons\";\n\ninterface IGroupProps {\n  open: boolean;\n  selectedGroup: any;\n  closeModalAndRefresh: any;\n  classes: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\ninterface MainGroupProps {\n  members: string[];\n  name: string;\n  status: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...formFieldStyles,\n    ...spacingUtils,\n    ...modalStyleUtils,\n  });\n\nconst AddGroup = ({\n  open,\n  selectedGroup,\n  closeModalAndRefresh,\n  classes,\n  setModalErrorSnackMessage,\n}: IGroupProps) => {\n  //Local States\n  const [groupName, setGroupName] = useState<string>(\"\");\n  const [groupEnabled, setGroupEnabled] = useState<boolean>(false);\n  const [saving, isSaving] = useState<boolean>(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [loadingGroup, isLoadingGroup] = useState<boolean>(false);\n  const [validGroup, setValidGroup] = useState<boolean>(false);\n\n  //Effects\n  useEffect(() => {\n    if (selectedGroup !== null) {\n      isLoadingGroup(true);\n    } else {\n      setGroupName(\"\");\n      setSelectedUsers([]);\n    }\n  }, [selectedGroup]);\n\n  useEffect(() => {\n    setValidGroup(groupName.trim() !== \"\");\n  }, [groupName, selectedUsers]);\n\n  useEffect(() => {\n    if (saving) {\n      const saveRecord = () => {\n        if (selectedGroup !== null) {\n          api\n            .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(groupName)}`, {\n              group: groupName,\n              members: selectedUsers,\n              status: groupEnabled ? \"enabled\" : \"disabled\",\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        } else {\n          api\n            .invoke(\"POST\", \"/api/v1/groups\", {\n              group: groupName,\n              members: selectedUsers,\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        }\n      };\n      saveRecord();\n    }\n  }, [\n    saving,\n    groupName,\n    selectedUsers,\n    groupEnabled,\n    selectedGroup,\n    closeModalAndRefresh,\n    setModalErrorSnackMessage,\n  ]);\n\n  useEffect(() => {\n    if (selectedGroup && loadingGroup) {\n      const fetchGroupInfo = () => {\n        api\n          .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n          .then((res: MainGroupProps) => {\n            setGroupEnabled(res.status === \"enabled\");\n            setGroupName(res.name);\n            setSelectedUsers(res.members);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setModalErrorSnackMessage(err);\n            isLoadingGroup(false);\n          });\n      };\n      fetchGroupInfo();\n    }\n  }, [loadingGroup, selectedGroup, setModalErrorSnackMessage]);\n\n  //Fetch Actions\n  const setSaving = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    isSaving(true);\n  };\n\n  const resetForm = () => {\n    if (selectedGroup === null) {\n      setGroupName(\"\");\n    }\n\n    setSelectedUsers([]);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={closeModalAndRefresh}\n      title={selectedGroup !== null ? `Edit Group` : \"Create Group\"}\n      titleIcon={<CreateGroupIcon />}\n    >\n      {selectedGroup !== null && (\n        <div className={classes.floatingEnabled}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={groupEnabled}\n            value={\"group_enabled\"}\n            id=\"group-status\"\n            name=\"group-status\"\n            onChange={(e) => {\n              setGroupEnabled(e.target.checked);\n            }}\n            switchOnly\n          />\n        </div>\n      )}\n      <form noValidate autoComplete=\"off\" onSubmit={setSaving}>\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            {selectedGroup === null ? (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"group-name\"\n                  name=\"group-name\"\n                  label=\"Group Name\"\n                  autoFocus={true}\n                  value={groupName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setGroupName(e.target.value);\n                  }}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <PredefinedList label={\"Group Name\"} content={selectedGroup} />\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.userSelector}>\n              <UsersSelectors\n                selectedUsers={selectedUsers}\n                setSelectedUsers={setSelectedUsers}\n                editMode={selectedGroup !== null}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.spacerRight}\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saving || !validGroup}\n            >\n              Save\n            </Button>\n          </Grid>\n          {saving && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddGroup));\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","inputLabel","fontWeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","className","onKeyPress","inputProps","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","mapDispatchToProps","setModalErrorSnackMessage","connector","connect","buttonContainer","textAlign","userSelector","padding","marginBottom","formFieldStyles","spacingUtils","modalStyleUtils","open","selectedGroup","closeModalAndRefresh","useState","groupName","setGroupName","groupEnabled","setGroupEnabled","saving","isSaving","selectedUsers","setSelectedUsers","loadingGroup","isLoadingGroup","validGroup","setValidGroup","useEffect","trim","api","encodeURI","group","members","status","then","res","catch","err","modalOpen","onClose","titleIcon","floatingEnabled","indicatorLabels","checked","e","target","switchOnly","noValidate","onSubmit","event","preventDefault","item","xs","modalFormScrollable","formFieldRow","content","editMode","variant","color","spacerRight","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","styles","ownerState","root","edge","capitalize","_extends","display","width","height","overflow","boxSizing","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","switchClasses","transform","SwitchSwitchBase","SwitchBase","switchBase","input","left","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","opacity","backgroundColor","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","track","borderRadius","black","SwitchThumb","thumb","boxShadow","shadows","React","inProps","ref","useThemeProps","sx","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","children","checkedIcon"],"sourceRoot":""}