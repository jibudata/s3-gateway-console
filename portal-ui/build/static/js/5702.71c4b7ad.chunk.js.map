{"version":3,"file":"static/js/5702.71c4b7ad.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/BucketEventsPanel.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { AddIcon, Button, HelpBox, LambdaIcon, DataTable, Grid } from \"mds\";\nimport { api } from \"api\";\nimport { NotificationConfig } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst DeleteEvent = withSuspense(React.lazy(() => import(\"./DeleteEvent\")));\nconst AddEvent = withSuspense(React.lazy(() => import(\"./AddEvent\")));\n\nconst BucketEventsPanel = () => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n\n  const [addEventScreenOpen, setAddEventScreenOpen] = useState<boolean>(false);\n  const [loadingEvents, setLoadingEvents] = useState<boolean>(true);\n  const [records, setRecords] = useState<NotificationConfig[]>([]);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedEvent, setSelectedEvent] = useState<NotificationConfig | null>(\n    null\n  );\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayEvents = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_NOTIFICATIONS,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingEvents(true);\n    }\n  }, [loadingBucket, setLoadingEvents]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_events\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingEvents) {\n      if (displayEvents) {\n        api.buckets\n          .listBucketEvents(bucketName)\n          .then((res) => {\n            const events = get(res.data, \"events\", []);\n            setLoadingEvents(false);\n            setRecords(events || []);\n          })\n          .catch((err) => {\n            setLoadingEvents(false);\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n      } else {\n        setLoadingEvents(false);\n      }\n    }\n  }, [loadingEvents, dispatch, bucketName, displayEvents]);\n\n  const eventsDisplay = (events: string[]) => {\n    return <Fragment>{events.join(\", \")}</Fragment>;\n  };\n\n  const confirmDeleteEvent = (evnt: NotificationConfig) => {\n    setDeleteOpen(true);\n    setSelectedEvent(evnt);\n  };\n\n  const closeAddEventAndRefresh = () => {\n    setAddEventScreenOpen(false);\n    setLoadingEvents(true);\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    if (refresh) {\n      setLoadingEvents(true);\n    }\n  };\n\n  const tableActions = [{ type: \"delete\", onClick: confirmDeleteEvent }];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteEvent\n          deleteOpen={deleteOpen}\n          selectedBucket={bucketName}\n          bucketEvent={selectedEvent}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      {addEventScreenOpen && (\n        <AddEvent\n          open={addEventScreenOpen}\n          selectedBucket={bucketName}\n          closeModalAndRefresh={closeAddEventAndRefresh}\n        />\n      )}\n\n      <Grid container>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          <PanelTitle>Events</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_BUCKET_NOTIFICATIONS,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n              IAM_SCOPES.ADMIN_SERVER_INFO,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Subscribe to Event\"}>\n              <Button\n                id={\"Subscribe-bucket-event\"}\n                onClick={() => {\n                  setAddEventScreenOpen(true);\n                }}\n                label={\"Subscribe to Event\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_BUCKET_NOTIFICATIONS,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={tableActions}\n              columns={[\n                { label: \"SQS\", elementKey: \"arn\" },\n                {\n                  label: \"Events\",\n                  elementKey: \"events\",\n                  renderFunction: eventsDisplay,\n                },\n                { label: \"Prefix\", elementKey: \"prefix\" },\n                { label: \"Suffix\", elementKey: \"suffix\" },\n              ]}\n              isLoading={loadingEvents}\n              records={records}\n              entityName=\"Events\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingEvents && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Event Notifications\"}\n              iconComponent={<LambdaIcon />}\n              help={\n                <Fragment>\n                  MinIO bucket notifications allow administrators to send\n                  notifications to supported external services on certain object\n                  or bucket events. MinIO supports bucket and object-level S3\n                  events similar to the Amazon S3 Event Notifications.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/monitoring/bucket-notifications.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketEventsPanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["DeleteEvent","withSuspense","React","AddEvent","dispatch","useAppDispatch","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","_useState","useState","_useState2","_slicedToArray","addEventScreenOpen","setAddEventScreenOpen","_useState3","_useState4","loadingEvents","setLoadingEvents","_useState5","_useState6","records","setRecords","_useState7","_useState8","deleteOpen","setDeleteOpen","_useState9","_useState10","selectedEvent","setSelectedEvent","bucketName","displayEvents","hasPermission","IAM_SCOPES","S3_GET_BUCKET_NOTIFICATIONS","S3_GET_ACTIONS","useEffect","setHelpName","api","buckets","listBucketEvents","then","res","events","get","data","catch","err","setErrorSnackMessage","errorToHandler","error","tableActions","type","onClick","evnt","_jsxs","Fragment","children","_jsx","selectedBucket","bucketEvent","closeDeleteModalAndRefresh","refresh","open","closeModalAndRefresh","Grid","container","item","xs","sx","actionsTray","PanelTitle","SecureComponent","scopes","S3_PUT_BUCKET_NOTIFICATIONS","S3_PUT_ACTIONS","ADMIN_SERVER_INFO","resource","matchAll","errorProps","disabled","TooltipWrapper","tooltip","Button","id","label","icon","AddIcon","variant","DataTable","itemActions","columns","elementKey","renderFunction","join","isLoading","entityName","idField","customPaperHeight","HelpBox","title","iconComponent","LambdaIcon","help","href","target","rel","withStyles","theme","createStyles","root","padding","margin","fontSize","_ref","classes","className"],"sourceRoot":""}