{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/NotificationEndpoints/CustomForms/ConfMySql.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","item","xs","sm","md","textAlign","component","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","skipSx","ownerState","_extends","edge","marginRight","SwitchBaseInput","cursor","left","zIndex","SwitchBase","React","ref","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","inputRef","onBlur","onFocus","readOnly","tabIndex","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","slots","capitalize","input","composeClasses","useUtilityClasses","_jsxs","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","predefinedList","content","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","radioStyles","radioIcons","RadioButton","radioSelectedIcon","radioUnselectedIcon","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","radioOptionsLayout","row","style","map","selectorOption","control","getSwitchUtilityClass","switchClasses","SwitchRoot","overridesResolver","styles","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","SwitchSwitchBase","mode","grey","duration","shortest","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","black","SwitchThumb","shadows","inProps","useThemeProps","sx","composedClasses","cssOutlinedInput","borderColor","rootContainer","minHeight","borderWidth","fieldContainer","rows","InputLabelProps","shrink","notchedOutline","variant","modalBasic","formFieldStyles","useState","useDsnString","setUseDsnString","dsnString","setDsnString","host","setHostname","dbName","setDbName","port","setPort","user","setUser","password","setPassword","table","setTable","format","setFormat","queueDir","setQueueDir","queueLimit","setQueueLimit","comment","setComment","configToDsnString","useCallback","useEffect","key","cs","kv","keys","m","kvFields","Map","regex","exec","lastIndex","set","parseDsnString","get","formFieldRow","e","configureString"],"mappings":"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","file":"static/js/66.6f5359b7.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern=\"\",\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if(pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfMySqlProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfMySql = ({ onChange, classes }: IConfMySqlProps) => {\n  //Local States\n  const [useDsnString, setUseDsnString] = useState<boolean>(false);\n  const [dsnString, setDsnString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // dsn_string*  (string)             MySQL data-source-name connection string e.g. \"<user>:<password>@tcp(<host>:<port>)/<database>\"\n  // table*       (string)             DB table name to store/update events, table is auto-created\n  // format*      (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir    (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit  (number)             maximum limit for undelivered messages, defaults to '100000'\n  // comment      (sentence)           optionally add a comment to this setting\n\n  const parseDsnString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let kvFields: Map<string, string> = new Map();\n    const regex = /(.*?):(.*?)@tcp\\((.*?):(.*?)\\)\\/(.*?)$/gm;\n    let m;\n\n    while ((m = regex.exec(input)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      kvFields.set(\"user\", m[1]);\n      kvFields.set(\"password\", m[2]);\n      kvFields.set(\"host\", m[3]);\n      kvFields.set(\"port\", m[4]);\n      kvFields.set(\"dbname\", m[5]);\n    }\n\n    return kvFields;\n  };\n\n  const configToDsnString = useCallback((): string => {\n    return `${user}:${password}@tcp(${host}:${port})/${dbName}`;\n  }, [user, password, host, port, dbName]);\n\n  useEffect(() => {\n    if (dsnString !== \"\") {\n      const formValues = [\n        { key: \"dsn_string\", value: dsnString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [dsnString, table, format, queueDir, queueLimit, comment, onChange]);\n\n  useEffect(() => {\n    const cs = configToDsnString();\n    setDsnString(cs);\n  }, [user, dbName, password, port, host, setDsnString, configToDsnString]);\n\n  const switcherChangeEvt = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      // build dsn_string\n      const cs = configToDsnString();\n      setDsnString(cs);\n    } else {\n      // parse dsn_string\n      const kv = parseDsnString(dsnString, [\n        \"host\",\n        \"port\",\n        \"dbname\",\n        \"user\",\n        \"password\",\n      ]);\n      setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n      setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n      setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n      setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n      setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    }\n\n    setUseDsnString(event.target.checked);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Enter DNS String\"}\n          checked={useDsnString}\n          id=\"checkedB\"\n          name=\"checkedB\"\n          onChange={switcherChangeEvt}\n          value={\"dnsString\"}\n        />\n      </Grid>\n      {useDsnString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"dsn-string\"\n              name=\"dsn_string\"\n              label=\"DSN String\"\n              value={dsnString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDsnString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  placeholder=\"Enter Password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList label={\"Connection String\"} content={dsnString} />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder=\"Enter Table Name\"\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Dir\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter Comment\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfMySql);\n"],"sourceRoot":""}