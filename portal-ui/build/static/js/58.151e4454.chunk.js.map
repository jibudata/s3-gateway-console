{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","common/BackLink.tsx","screens/shared/ErrorBlock.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","textBoxWithIcon","paddingRight","errorState","color","fontSize","top","right","overlayAction","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","justifyContent","alignItems","labelStyle","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","actions","direction","xs","sm","md","item","style","height","variant","length","component","pageContainer","pageContentStyles","children","contentSpacer","link","textDecoration","padding","light","icon","marginRight","to","errorBlock","errorMessage","withBreak","flexWrap","errorText","margin","fontFamily","lineHeight","valueString","whiteSpace","overflow","textOverflow","fileReselect","fieldBottom","borderBottom","fileInputField","accept","useState","showFileSelector","setShowSelector","Grid","fieldContainer","InputLabel","fieldLabelError","Tooltip","HelpIcon","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","ErrorBlock","minioServiceName","gcsServiceName","s3ServiceName","azureServiceName","tierTypes","serviceName","targetTitle","setErrorSnackMessage","modalBasic","settingsCommon","formFieldStyles","strongText","keyName","buttonContainer","customTitle","settingsFormContainer","lambdaNotif","background","border","borderRadius","marginBottom","cursor","lambdaNotifIcon","lambdaNotifTitle","paddingLeft","mainCont","backTo","formBox","fileInputStyles","match","history","saving","setSaving","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","s3","accesskey","secretkey","storageclass","gcs","azure","accountname","accountkey","payload","api","invoke","then","push","catch","err","valid","targetElement","find","src","logoButton","alt","noValidate","onSubmit","event","preventDefault","formFieldRow","toUpperCase","encodedValue","settingsButtonContainer"],"mappings":"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","file":"static/js/58.151e4454.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      width: \"100%\",\n    },\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n}\n\nconst BackLink = ({ to, label, classes }: IBackLink) => {\n  return (\n    <Link to={to} className={classes.link}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst componentHeight = 48;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      height: componentHeight,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    errorText: {\n      margin: \"0\",\n      fontSize: \"0.75rem\",\n      marginTop: 3,\n      textAlign: \"left\",\n      fontFamily: \"Lato,sans-serif\",\n      fontWeight: 400,\n      lineHeight: \"1.66\",\n      color: \"#dc1f2e\",\n    },\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileReselect: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: componentHeight,\n    },\n    fieldBottom: {\n      borderBottom: \"#9c9c9c 1px solid\",\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"large\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"large\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: \"/minio-logo.svg\",\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: \"/gcs-logo.svg\",\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: \"/aws-logo.svg\",\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: \"/azure-logo.svg\",\n  },\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fileInputStyles,\n  formFieldStyles,\n  modalBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\nimport BackLink from \"../../../../common/BackLink\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    ...formFieldStyles,\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n    settingsFormContainer: {\n      ...settingsCommon.settingsFormContainer,\n      height: \"calc(100vh - 422px)\",\n    },\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    mainCont: {\n      maxWidth: 1180,\n      paddingLeft: 38,\n      paddingRight: 38,\n    },\n    backTo: {\n      margin: \"20px 0px 0\",\n    },\n    formBox: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n    },\n    ...fileInputStyles,\n  });\n\ninterface IAddNotificationEndpointProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n  match: any;\n  history: any;\n}\n\nconst AddTierConfiguration = ({\n  classes,\n  setErrorSnackMessage,\n  match,\n  history,\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(match, \"params.service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      if (type === \"minio\") {\n        tierType = \"s3\";\n      }\n\n      switch (type) {\n        case \"minio\":\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType,\n        ...request,\n      };\n\n      api\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\n        .then(() => {\n          setSaving(false);\n\n          history.push(\"/tiers\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    history,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    setErrorSnackMessage,\n    storageClass,\n    type,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com/\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Tiers\" />\n\n      <BackLink to=\"/tiers/add\" label=\"Back To Tier Type Selection\" />\n\n      <PageLayout>\n        {type !== \"\" && (\n          <Fragment>\n            <Grid item xs={12}>\n              {targetElement && (\n                <div\n                  key={`icon-${targetElement.targetTitle}`}\n                  className={classes.lambdaNotif}\n                >\n                  <div className={classes.lambdaNotifIcon}>\n                    <img\n                      src={targetElement.logo}\n                      className={classes.logoButton}\n                      alt={targetElement.targetTitle}\n                    />\n                  </div>\n\n                  <div className={classes.lambdaNotifTitle}>\n                    <b>\n                      {titleSelection ? titleSelection : \"\"} Tier Configuration\n                    </b>\n                  </div>\n                </div>\n              )}\n            </Grid>\n          </Fragment>\n        )}\n        <Grid item xs={12}>\n          <div className={classes.formBox}>\n            <form noValidate onSubmit={submitForm}>\n              <Grid item xs={12}>\n                {type !== \"\" && (\n                  <Fragment>\n                    <div className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"name\"\n                        name=\"name\"\n                        label=\"Name\"\n                        placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                        value={name}\n                        onChange={updateTierName}\n                        error={nameInputError}\n                      />\n                    </div>\n                    <div className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"endpoint\"\n                        name=\"endpoint\"\n                        label=\"Endpoint\"\n                        placeholder=\"Enter Endpoint\"\n                        value={endpoint}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setEndpoint(e.target.value);\n                        }}\n                      />\n                    </div>\n                    {(type === s3ServiceName || type === minioServiceName) && (\n                      <Fragment>\n                        <div className={classes.formFieldRow}>\n                          <InputBoxWrapper\n                            id=\"accessKey\"\n                            name=\"accessKey\"\n                            label=\"Access Key\"\n                            placeholder=\"Enter Access Key\"\n                            value={accessKey}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setAccessKey(e.target.value);\n                            }}\n                          />\n                        </div>\n                        <div className={classes.formFieldRow}>\n                          <InputBoxWrapper\n                            id=\"secretKey\"\n                            name=\"secretKey\"\n                            label=\"Secret Key\"\n                            placeholder=\"Enter Secret Key\"\n                            value={secretKey}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setSecretKey(e.target.value);\n                            }}\n                          />\n                        </div>\n                      </Fragment>\n                    )}\n                    {type === gcsServiceName && (\n                      <div className={classes.formFieldRow}>\n                        <FileSelector\n                          accept=\".json\"\n                          classes={classes}\n                          id=\"creds\"\n                          label=\"Credentials\"\n                          name=\"creds\"\n                          onChange={(encodedValue, fileName) => {\n                            setEncodedCreds(encodedValue);\n                            setCreds(fileName);\n                          }}\n                          value={creds}\n                        />\n                      </div>\n                    )}\n                    {type === azureServiceName && (\n                      <Fragment>\n                        <div className={classes.formFieldRow}>\n                          <InputBoxWrapper\n                            id=\"accountName\"\n                            name=\"accountName\"\n                            label=\"Account Name\"\n                            placeholder=\"Enter Account Name\"\n                            value={accountName}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setAccountName(e.target.value);\n                            }}\n                          />\n                        </div>\n                        <div className={classes.formFieldRow}>\n                          <InputBoxWrapper\n                            id=\"accountKey\"\n                            name=\"accountKey\"\n                            label=\"Account Key\"\n                            placeholder=\"Enter Account Key\"\n                            value={accountKey}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setAccountKey(e.target.value);\n                            }}\n                          />\n                        </div>\n                      </Fragment>\n                    )}\n                    <div className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"bucket\"\n                        name=\"bucket\"\n                        label=\"Bucket\"\n                        placeholder=\"Enter Bucket\"\n                        value={bucket}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setBucket(e.target.value);\n                        }}\n                      />\n                    </div>\n                    <div className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"prefix\"\n                        name=\"prefix\"\n                        label=\"Prefix\"\n                        placeholder=\"Enter Prefix\"\n                        value={prefix}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setPrefix(e.target.value);\n                        }}\n                      />\n                    </div>\n                    <div className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"region\"\n                        name=\"region\"\n                        label=\"Region\"\n                        placeholder=\"Enter Region\"\n                        value={region}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setRegion(e.target.value);\n                        }}\n                      />\n                    </div>\n                    {type === s3ServiceName ||\n                      (type === minioServiceName && (\n                        <div className={classes.formFieldRow}>\n                          <InputBoxWrapper\n                            id=\"storageClass\"\n                            name=\"storageClass\"\n                            label=\"Storage Class\"\n                            placeholder=\"Enter Storage Class\"\n                            value={storageClass}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setStorageClass(e.target.value);\n                            }}\n                          />\n                        </div>\n                      ))}\n                  </Fragment>\n                )}\n              </Grid>\n              <Grid item xs={12} className={classes.settingsButtonContainer}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={saving || !isFormValid}\n                >\n                  Save\n                </Button>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddTierConfiguration));\n"],"sourceRoot":""}