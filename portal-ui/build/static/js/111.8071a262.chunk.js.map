{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx","screens/Console/NotificationEndpoints/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","textBoxWithIcon","paddingRight","errorState","color","fontSize","top","right","overlayAction","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","width","height","padding","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","Switch","seeMore","marginTop","spacing","paper","display","overflow","flexDirection","paddingTop","addSideBar","tableToolbar","paddingLeft","wrapCell","whiteSpace","wordWrap","minTableHeader","fontWeight","noFound","textAlign","tableContainer","stickyHeader","actionsTitle","alignSelf","tableBlock","filterField","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","alignItems","item","xs","sm","md","component","switchContainer","cssOutlinedInput","borderColor","rootContainer","minHeight","borderWidth","fieldContainer","rows","InputLabelProps","shrink","notchedOutline","variant","inputWithBorder","overflowY","labelContainer","elements","commonPlaceholder","withBorder","useState","currentElements","setCurrentElements","bottomList","createRef","useEffect","elementsSplit","split","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeElement","e","persist","updatedElement","get","target","debounce","elementsString","filter","element","trim","join","inputs","map","InputBoxWrapper","toString","AddIcon","elementsUp","cpList","addEmptyLine","Grid","InputLabel","Tooltip","HelpIcon","ref","valueDef","key","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","minWidth","background","modalBasic","fields","defaultVals","valueHolder","setValueHolder","fieldsElements","defValList","values","forEach","field","stateInsert","setValueElement","valuesDup","fieldDefinition","FormSwitchWrapper","CommentBoxWrapper","fieldBox","mapDispatchToProps","serverNeedsRestart","setErrorSnackMessage","connector","connect","settingsCommon","strongText","keyName","buttonContainer","logoButton","customTitle","selectedConfiguration","history","valuesObj","setValueObj","saving","setSaving","loadingConfig","setLoadingConfig","configValues","setConfigValues","configId","api","invoke","then","res","keyVals","catch","err","payload","key_values","removeEmptyFields","configuration_id","restart","onValueChange","useCallback","newValue","noValidate","onSubmit","event","preventDefault","settingsFormContainer","LinearProgress","ConfTargetGeneric","fieldsConfigurations","settingsButtonContainer","Button","searchField","containerForHeader","iconText","lineHeight","customConfigurationPage","scrollbarWidth","mainCont","match","activeConfRoute","configName","substring","lastIndexOf","validActiveConfig","configurationElements","containerClassName"],"mappings":"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","file":"static/js/111.8071a262.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      paddingTop: 15,\n      boxShadow: \"none\",\n    },\n    addSideBar: {\n      width: \"320px\",\n      padding: \"20px\",\n    },\n    tableToolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(0),\n    },\n    wrapCell: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    tableContainer: {\n      maxHeight: 200,\n    },\n    stickyHeader: {\n      backgroundColor: \"#fff\",\n    },\n    actionsTitle: {\n      fontWeight: 600,\n      color: \"#081C42\",\n      fontSize: 16,\n      alignSelf: \"center\",\n    },\n    tableBlock: {\n      marginTop: 15,\n    },\n    filterField: {\n      width: 375,\n      fontWeight: 600,\n      \"& .input\": {\n        \"&::placeholder\": {\n          fontWeight: 600,\n          color: \"#081C42\",\n        },\n      },\n    },\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  useState,\n  useEffect,\n  createRef,\n  useLayoutEffect,\n  ChangeEvent,\n  useRef,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    labelContainer: {\n      display: \"flex\",\n    },\n  });\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChange(elementsString);\n  }, 500);\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBoxWrapper\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        classes={classes}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        key={`csv-${name}-${index.toString()}`}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  fieldBasic,\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    inputBoxContainer: {\n      marginBottom: 7,\n      \"& .MuiInputLabel-root\": {\n        minWidth: 200,\n        \"& svg\": {\n          width: 16,\n          height: 16,\n        },\n      },\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      display: \"flex\",\n    },\n    overlayAction: {\n      top: 0,\n      right: 0,\n      position: \"relative\",\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    fieldContainer: {\n      \"& .MuiInputLabel-root\": {\n        minWidth: 200,\n      },\n    },\n    tooltipContainer: {\n      ...fieldBasic.tooltipContainer,\n      \"& svg\": {\n        width: 16,\n        height: 16,\n      },\n    },\n\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"false\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value;\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = [];\n    fields.forEach((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      values.push(stateInsert);\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"false\";\n\n        return (\n          <FormSwitchWrapper\n            classes={classes}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"true\" : \"false\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"true\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            classes={classes}\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) =>\n              setValueElement(field.name, value, item)\n            }\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            classes={classes}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            classes={classes}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport { serverNeedsRestart, setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    logoButton: {\n      height: \"80px\",\n    },\n\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  serverNeedsRestart: typeof serverNeedsRestart;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  history: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  serverNeedsRestart,\n  selectedConfiguration,\n  setErrorSnackMessage,\n  classes,\n  history,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [loadingConfig, setLoadingConfig] = useState<boolean>(true);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  //Effects\n  useEffect(() => {\n    const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n    if (configId) {\n      api\n        .invoke(\"GET\", `/api/v1/configs/${configId}`)\n        .then((res) => {\n          const keyVals = get(res, \"key_values\", []);\n          setConfigValues(keyVals);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingConfig(false);\n          setErrorSnackMessage(err);\n        });\n    }\n    setLoadingConfig(false);\n  }, [selectedConfiguration, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          serverNeedsRestart(res.restart);\n\n          history.push(\"/settings\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    saving,\n    history,\n    serverNeedsRestart,\n    selectedConfiguration,\n    valuesObj,\n    setErrorSnackMessage,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  return (\n    <Fragment>\n      <form noValidate onSubmit={submitForm} className={className}>\n        <Grid item xs={12} className={classes.settingsFormContainer}>\n          {loadingConfig && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <ConfTargetGeneric\n            fields={\n              fieldsConfigurations[selectedConfiguration.configuration_id]\n            }\n            onChange={onValueChange}\n            defaultVals={configValues}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.settingsButtonContainer}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={saving}\n          >\n            Save\n          </Button>\n        </Grid>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  serverNeedsRestart,\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(EditConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../NotificationEndpoints/CustomForms/EditConfiguration\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\ninterface IListConfiguration {\n  classes: any;\n  match: any;\n  history: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    ...settingsCommon,\n    ...containerForHeader(theme.spacing(4)),\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    iconText: {\n      lineHeight: \"24px\",\n    },\n    customConfigurationPage: {\n      height: \"calc(100vh - 324px)\",\n      scrollbarWidth: \"none\" as const,\n      \"&::-webkit-scrollbar\": {\n        display: \"none\",\n      },\n    },\n    mainCont: {\n      ...settingsCommon.mainCont,\n      maxWidth: 1180,\n    },\n  });\n\nconst ConfigurationsList = ({ match, history }: IListConfiguration) => {\n  const activeConfRoute = get(match, \"url\", \"\");\n\n  const configName = activeConfRoute.substring(\n    activeConfRoute.lastIndexOf(\"/\") + 1\n  );\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid item xs={12}>\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n          history={history}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationsList);\n"],"sourceRoot":""}