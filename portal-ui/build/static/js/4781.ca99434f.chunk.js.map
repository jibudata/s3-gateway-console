{"version":3,"file":"static/js/4781.ca99434f.chunk.js","mappings":"yOA6JA,KAAeA,EAAAA,EAAAA,IAtHA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAFO,IAGVC,YAAW,kBACNF,EAAAA,GAAAA,YADK,IAERG,SAAU,GACVC,OAAQ,EACRC,WAAY,aACZC,WAAY,OACZC,SAAU,OACVC,QAAS,SAEXC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,iBAAkB,CAChBC,YAAa,UACbC,QAAS,IAEXC,cAAe,CACb,sCAAqC,kBAChCf,EAAAA,GAAAA,YADL,IAEEG,SAAU,GACVa,UAAW,MAEb,iDAAkD,CAChDH,YAAa,UACbI,YAAa,GAEf,aAAc,CACZC,MAAO,UACPf,SAAU,GACVgB,WAAY,IACZ,gBAAiB,CACfD,MAAO,UACPE,QAAS,EACTD,WAAY,YAgFtB,EA1E0B,SAAC,GAaH,IAZtBE,EAYqB,EAZrBA,MACAC,EAWqB,EAXrBA,SACAC,EAUqB,EAVrBA,MACAC,EASqB,EATrBA,GACAC,EAQqB,EARrBA,KAQqB,IAPrBC,SAAAA,OAOqB,aANrBC,QAAAA,OAMqB,MANX,GAMW,MALrBC,MAAAA,OAKqB,MALb,EAKa,MAJrBC,MAAAA,OAIqB,MAJb,GAIa,MAHrBC,SAAAA,OAGqB,aAFrBC,YAAAA,OAEqB,MAFP,GAEO,EADrBC,EACqB,EADrBA,QAEIC,EAAkB,CAAE,aAAcL,GAEtC,OACE,SAAC,WAAD,WACE,UAAC,KAAD,CACEM,MAAI,EACJC,GAAI,GACJC,UAAS,UAAKJ,EAAQK,eAAb,YACG,KAAVR,EAAeG,EAAQM,aAAe,IAJ1C,UAOa,KAAVjB,IACC,UAAC,IAAD,CAAYkB,QAASf,EAAIY,UAAWJ,EAAQ9B,WAA5C,WACE,4BACGmB,EACAS,EAAW,IAAM,MAEP,KAAZH,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAxB,UACE,SAAC,IAAD,CAASC,MAAOd,EAASe,UAAU,YAAnC,UACE,gBAAKN,UAAWJ,EAAQL,QAAxB,UACE,SAAC,IAAD,cAQZ,gBAAKS,UAAWJ,EAAQvB,iBAAxB,UACE,SAAC,IAAD,CACEe,GAAIA,EACJC,KAAMA,EACNkB,WAAS,EACTpB,MAAOA,EACPG,SAAUA,EACVJ,SAAUA,EACVsB,WAAS,EACTC,KAAM,EACNZ,WAAYA,EACZJ,MAAiB,KAAVA,EACPiB,WAAYjB,EACZE,YAAaA,EACbgB,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVjB,QAAS,CACPkB,eAAgBlB,EAAQpB,iBACxBuC,KAAMnB,EAAQjB,gBAGlBqC,QAAQ,wB,sGCpGpB,KAAevD,EAAAA,EAAAA,IAnCA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRsD,EAAAA,OAiCP,EA9BuB,SAAC,GAKA,IAJtBrB,EAIqB,EAJrBA,QAIqB,IAHrBX,MAAAA,OAGqB,MAHb,GAGa,EAFrBiC,EAEqB,EAFrBA,QAEqB,IADrBC,UAAAA,OACqB,SACrB,OACE,SAAC,EAAAC,SAAD,WACE,UAAC,KAAD,CAAMpB,UAAWJ,EAAQyB,kBAAzB,UACa,KAAVpC,IACC,SAAC,KAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQ0B,gBAAtC,SACGrC,KAGL,SAAC,KAAD,CAAMa,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQqB,eAAtC,UACE,SAAC,KAAD,CACEnB,MAAI,EACJC,GAAI,GACJC,UACEmB,EAAYvB,EAAQ2B,sBAAwB3B,EAAQ4B,aAJxD,SAOGN,e,wMCiCPO,GAAcC,EAAAA,EAAAA,IAAW,QAC7BX,KAAM,CACJ,UAAW,CACTY,gBAAiB,iBAGlBC,EAAAA,KAGCC,EAAc,SAACC,GACnB,IAAMlC,EAAU6B,IAEhB,OACE,SAAC,KAAD,QACEzB,UAAWJ,EAAQmB,KACnBgB,eAAa,EACbjD,MAAM,UACNkD,aAAa,iBAAMhC,UAAWJ,EAAQqC,oBACtCC,MAAM,iBAAMlC,UAAWJ,EAAQuC,uBAC3BL,KAgEV,KAAerE,EAAAA,EAAAA,IA9GA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAFO,IAGVuE,YAAa,CACX,iBAAkB,CAChB,+BAAgC,CAC9BtD,MAAO,YAGX,eAAgB,CACduD,YAAa,GAEf,+BAAgC,CAC9BtE,SAAU,GACVe,MAAO,YAGXwD,cAAe,CACb,+BAAgC,CAC9BvE,SAAU,GACVe,MAAO,UACPC,WAAY,WAwFpB,EA3DkC,SAAC,GAWX,IAAD,IAVrBwD,gBAAAA,OAUqB,MAVH,GAUG,EATrBC,EASqB,EATrBA,iBACAvD,EAQqB,EARrBA,MACAG,EAOqB,EAPrBA,GACAC,EAMqB,EANrBA,KACAH,EAKqB,EALrBA,SAKqB,IAJrBK,QAAAA,OAIqB,MAJX,GAIW,MAHrBkD,eAAAA,OAGqB,SAFrB7C,EAEqB,EAFrBA,QAEqB,IADrB8C,gBAAAA,OACqB,SACrB,OACE,UAAC,KAAD,CAAMC,WAAS,EAAC1E,WAAY,SAA5B,WACE,SAAC,KAAD,CAAM6B,MAAI,EAACC,IAAE,EAAb,UACE,UAAC,IAAD,CAAYI,QAASf,EAAIY,UAAWJ,EAAQ9B,WAA5C,WACE,0BAAOmB,IACM,KAAZM,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAxB,UACE,SAAC,IAAD,CAASC,MAAOd,EAASe,UAAU,YAAnC,UACE,0BACE,SAAC,IAAD,gBAOZ,SAAC,KAAD,CAAMR,MAAI,EAACC,IAAE,EAACC,UAAWJ,EAAQgD,mBAAjC,UACE,SAAC,IAAD,CACE,aAAYxD,EACZA,GAAIA,EACJC,KAAMA,EACNF,MAAOqD,EACPtD,SAAUA,EACV2D,KAAMH,EACNI,MAAO,CAAE1E,QAAS,QAAS2E,UAAW,SAPxC,SASGR,EAAgBS,KAAI,SAACC,GACpB,OACE,SAAC,IAAD,CAEE9D,MAAO8D,EAAe9D,MACtB+D,SAAS,SAACrB,EAAD,IACT5C,MAAOgE,EAAehE,MACtBK,SAAUmD,EACVzC,WAAWmD,EAAAA,EAAAA,GAAKvD,EAAQwC,aAAT,UACZxC,EAAQ0C,cACPW,EAAe9D,QAAUqD,KAR/B,aACanD,EADb,YACqB4D,EAAe9D,sB,+KC2KlD,WAAe1B,EAAAA,EAAAA,IAjRA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACRyF,EAAAA,IACAC,EAAAA,OA8QP,EA3QkB,SAAC,GAA4C,IAA1CnE,EAAyC,EAAzCA,SAAUU,EAA+B,EAA/BA,QAE7B,GAAwC0D,EAAAA,EAAAA,WAAkB,GAA1D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,UAAiB,IAAnD,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAiB,IAA7C,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BN,EAAAA,EAAAA,UAAiB,IAA7C,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAwBR,EAAAA,EAAAA,UAAiB,IAAzC,eAAOS,EAAP,KAAaC,EAAb,KACA,GAAwBV,EAAAA,EAAAA,UAAiB,IAAzC,eAAOW,EAAP,KAAaC,EAAb,KACA,GAAgCZ,EAAAA,EAAAA,UAAiB,IAAjD,eAAOa,EAAP,KAAiBC,EAAjB,KAEA,GAA0Bd,EAAAA,EAAAA,UAAiB,IAA3C,eAAOe,EAAP,KAAcC,EAAd,KACA,GAA4BhB,EAAAA,EAAAA,UAAiB,aAA7C,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAgClB,EAAAA,EAAAA,UAAiB,IAAjD,eAAOmB,EAAP,KAAiBC,EAAjB,KACA,GAAoCpB,EAAAA,EAAAA,UAAiB,IAArD,eAAOqB,GAAP,KAAmBC,GAAnB,KACA,IAA8BtB,EAAAA,EAAAA,UAAiB,IAA/C,iBAAOuB,GAAP,MAAgBC,GAAhB,MAiCMC,IAAoBC,EAAAA,EAAAA,cAAY,WACpC,MAAM,GAAN,OAAUf,EAAV,YAAkBE,EAAlB,gBAAkCR,EAAlC,YAA0CI,EAA1C,aAAmDF,KAClD,CAACI,EAAME,EAAUR,EAAMI,EAAMF,KAEhCoB,EAAAA,EAAAA,YAAU,WACU,KAAdxB,GAUFvE,EATmB,CACjB,CAAEgG,IAAK,aAAc/F,MAAOsE,GAC5B,CAAEyB,IAAK,QAAS/F,MAAOkF,GACvB,CAAEa,IAAK,SAAU/F,MAAOoF,GACxB,CAAEW,IAAK,YAAa/F,MAAOsF,GAC3B,CAAES,IAAK,cAAe/F,MAAOwF,IAC7B,CAAEO,IAAK,UAAW/F,MAAO0F,QAK5B,CAACpB,EAAWY,EAAOE,EAAQE,EAAUE,GAAYE,GAAS3F,KAE7D+F,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAKJ,KACXrB,EAAayB,KACZ,CAAClB,EAAMJ,EAAQM,EAAUJ,EAAMJ,EAAMD,EAAcqB,KA0BtD,OACE,UAAC,KAAD,CAAMpC,WAAS,EAAf,WACE,SAAC,KAAD,CAAM7C,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEd,MAAO,mBACPmG,QAAS7B,EACTnE,GAAG,WACHC,KAAK,WACLH,SAhCkB,SAACmG,GACzB,GAAIA,EAAMC,OAAOF,QAAS,CAExB,IAAMD,EAAKJ,KACXrB,EAAayB,OACR,CAEL,IAAMI,EAvDa,SACrBC,EACAC,GAMA,IAJA,IAEIC,EAFAC,EAAgC,IAAIC,IAClCC,EAAQ,2CAGqB,QAA3BH,EAAIG,EAAMC,KAAKN,KAEjBE,EAAElG,QAAUqG,EAAME,WACpBF,EAAME,YAGRJ,EAASK,IAAI,OAAQN,EAAE,IACvBC,EAASK,IAAI,WAAYN,EAAE,IAC3BC,EAASK,IAAI,OAAQN,EAAE,IACvBC,EAASK,IAAI,OAAQN,EAAE,IACvBC,EAASK,IAAI,SAAUN,EAAE,IAG3B,OAAOC,EAkCMM,CAAexC,GAO1BG,EAAY2B,EAAGW,IAAI,QAAUX,EAAGW,IAAI,QAAU,GAAK,IACnDlC,EAAQuB,EAAGW,IAAI,QAAUX,EAAGW,IAAI,QAAU,GAAK,IAC/CpC,EAAUyB,EAAGW,IAAI,UAAYX,EAAGW,IAAI,UAAY,GAAK,IACrDhC,EAAQqB,EAAGW,IAAI,QAAUX,EAAGW,IAAI,QAAU,GAAK,IAC/C9B,EAAYmB,EAAGW,IAAI,YAAcX,EAAGW,IAAI,YAAc,GAAK,IAG7D1C,EAAgB6B,EAAMC,OAAOF,UAYvBjG,MAAO,gBAGVoE,GACC,SAAC,WAAD,WACE,SAAC,KAAD,CAAMzD,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,aACHC,KAAK,aACLJ,MAAM,aACNE,MAAOsE,EACPvE,SAAU,SAACkH,GACT1C,EAAa0C,EAAEd,OAAOnG,eAM9B,UAAC,WAAD,YACE,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAf,UACE,UAAC,KAAD,CAAMD,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQyG,gBAAtC,WACE,SAAC,KAAD,CAAMvG,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAOwE,EACPzE,SAAU,SAACkH,GACTxC,EAAYwC,EAAEd,OAAOnG,aAI3B,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,UACHC,KAAK,UACLJ,MAAM,GACNU,YAAY,gBACZR,MAAO0E,EACP3E,SAAU,SAACkH,GACTtC,EAAUsC,EAAEd,OAAOnG,aAIzB,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAO4E,EACP7E,SAAU,SAACkH,GACTpC,EAAQoC,EAAEd,OAAOnG,aAKvB,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAO8E,EACP/E,SAAU,SAACkH,GACTlC,EAAQkC,EAAEd,OAAOnG,aAIvB,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,WACHC,KAAK,WACLJ,MAAM,GACNU,YAAY,iBACZ2G,KAAK,WACLnH,MAAOgF,EACPjF,SAAU,SAACkH,GACThC,EAAYgC,EAAEd,OAAOnG,kBAM/B,SAAC,IAAD,CAAgBF,MAAO,oBAAqBiC,QAASuC,KACrD,SAAC,KAAD,CAAM3D,MAAI,EAACC,GAAI,GAAf,UACE,wBAIN,SAAC,KAAD,CAAMD,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,QACHC,KAAK,QACLJ,MAAM,QACNU,YAAY,mBACZR,MAAOkF,EACP9E,QAAQ,8DACRL,SAAU,SAACkH,GACT9B,EAAS8B,EAAEd,OAAOnG,aAIxB,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE3D,iBAAkB+B,EAClBnF,GAAG,SACHC,KAAK,SACLJ,MAAM,SACNC,SAAU,SAACkH,GACT5B,EAAU4B,EAAEd,OAAOnG,QAErBI,QAAQ,gIACRgD,gBAAiB,CACf,CAAEtD,MAAO,YAAaE,MAAO,aAC7B,CAAEF,MAAO,SAAUE,MAAO,gBAIhC,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,YACHC,KAAK,YACLJ,MAAM,YACNU,YAAY,kBACZR,MAAOsF,EACPlF,QAAQ,2DACRL,SAAU,SAACkH,GACT1B,EAAY0B,EAAEd,OAAOnG,aAI3B,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,cACHC,KAAK,cACLJ,MAAM,cACNU,YAAY,oBACZ2G,KAAK,SACLnH,MAAOwF,GACPpF,QAAQ,8DACRL,SAAU,SAACkH,GACTxB,GAAcwB,EAAEd,OAAOnG,aAI7B,SAAC,KAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,aAAtC,UACE,SAAC,IAAD,CACE/G,GAAG,UACHC,KAAK,UACLJ,MAAM,UACNU,YAAY,4BACZR,MAAO0F,GACP3F,SAAU,SAACkH,GACTtB,GAAWsB,EAAEd,OAAOnG","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/NotificationEndpoints/CustomForms/ConfMySql.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfMySqlProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfMySql = ({ onChange, classes }: IConfMySqlProps) => {\n  //Local States\n  const [useDsnString, setUseDsnString] = useState<boolean>(false);\n  const [dsnString, setDsnString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // dsn_string*  (string)             MySQL data-source-name connection string e.g. \"<user>:<password>@tcp(<host>:<port>)/<database>\"\n  // table*       (string)             DB table name to store/update events, table is auto-created\n  // format*      (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir    (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit  (number)             maximum limit for undelivered messages, defaults to '100000'\n  // comment      (sentence)           optionally add a comment to this setting\n\n  const parseDsnString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let kvFields: Map<string, string> = new Map();\n    const regex = /(.*?):(.*?)@tcp\\((.*?):(.*?)\\)\\/(.*?)$/gm;\n    let m;\n\n    while ((m = regex.exec(input)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      kvFields.set(\"user\", m[1]);\n      kvFields.set(\"password\", m[2]);\n      kvFields.set(\"host\", m[3]);\n      kvFields.set(\"port\", m[4]);\n      kvFields.set(\"dbname\", m[5]);\n    }\n\n    return kvFields;\n  };\n\n  const configToDsnString = useCallback((): string => {\n    return `${user}:${password}@tcp(${host}:${port})/${dbName}`;\n  }, [user, password, host, port, dbName]);\n\n  useEffect(() => {\n    if (dsnString !== \"\") {\n      const formValues = [\n        { key: \"dsn_string\", value: dsnString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [dsnString, table, format, queueDir, queueLimit, comment, onChange]);\n\n  useEffect(() => {\n    const cs = configToDsnString();\n    setDsnString(cs);\n  }, [user, dbName, password, port, host, setDsnString, configToDsnString]);\n\n  const switcherChangeEvt = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      // build dsn_string\n      const cs = configToDsnString();\n      setDsnString(cs);\n    } else {\n      // parse dsn_string\n      const kv = parseDsnString(dsnString, [\n        \"host\",\n        \"port\",\n        \"dbname\",\n        \"user\",\n        \"password\",\n      ]);\n      setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n      setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n      setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n      setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n      setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    }\n\n    setUseDsnString(event.target.checked);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Enter DNS String\"}\n          checked={useDsnString}\n          id=\"checkedB\"\n          name=\"checkedB\"\n          onChange={switcherChangeEvt}\n          value={\"dnsString\"}\n        />\n      </Grid>\n      {useDsnString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"dsn-string\"\n              name=\"dsn_string\"\n              label=\"DSN String\"\n              value={dsnString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDsnString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  placeholder=\"Enter Password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList label={\"Connection String\"} content={dsnString} />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder=\"Enter Table Name\"\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Dir\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter custom notes if any\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfMySql);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","label","onChange","value","id","name","disabled","tooltip","index","error","required","placeholder","classes","inputProps","item","xs","className","fieldContainer","errorInField","htmlFor","tooltipContainer","title","placement","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","predefinedList","content","multiLine","Fragment","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","radioStyles","makeStyles","backgroundColor","radioIcons","RadioButton","props","disableRipple","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","optionLabel","marginRight","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","container","radioOptionsLayout","row","style","textAlign","map","selectorOption","control","clsx","modalBasic","formFieldStyles","useState","useDsnString","setUseDsnString","dsnString","setDsnString","host","setHostname","dbName","setDbName","port","setPort","user","setUser","password","setPassword","table","setTable","format","setFormat","queueDir","setQueueDir","queueLimit","setQueueLimit","comment","setComment","configToDsnString","useCallback","useEffect","key","cs","checked","event","target","kv","input","keys","m","kvFields","Map","regex","exec","lastIndex","set","parseDsnString","get","formFieldRow","e","configureString","type"],"sourceRoot":""}