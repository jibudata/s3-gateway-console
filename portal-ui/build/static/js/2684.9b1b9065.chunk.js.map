{"version":3,"file":"static/js/2684.9b1b9065.chunk.js","mappings":"yUAuLA,GAAeA,EAAAA,EAAAA,IAvIA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kCACRC,EAAAA,IACAC,EAAAA,IAFO,IAGVC,YAAa,CACXC,SAAU,IACVC,WAAY,SACZC,SAAU,SACVC,aAAc,WACdC,UAAW,GAEbC,eAAgB,CACdC,OAAQ,SACR,4BAA6B,CAC3BC,SAAU,YAGXC,EAAAA,IAhBO,IAiBVC,YAAW,kBACNZ,EAAAA,GAAAA,YADK,IAERa,WAAY,WAEdC,kBAAiB,kBACZd,EAAAA,GAAAA,kBADW,IAEdG,SAAU,OACVY,OAAQ,oBACRC,YAAa,cA6GnB,EAzGqB,SAAC,GAYA,IAXpBC,EAWmB,EAXnBA,MACAC,EAUmB,EAVnBA,QACAC,EASmB,EATnBA,SACAC,EAQmB,EARnBA,GACAC,EAOmB,EAPnBA,KAOmB,IANnBC,SAAAA,OAMmB,aALnBC,QAAAA,OAKmB,MALT,GAKS,EAJnBC,EAImB,EAJnBA,SAImB,IAHnBC,MAAAA,OAGmB,MAHX,GAGW,MAFnBC,OAAAA,OAEmB,MAFV,GAEU,MADnBC,MAAAA,OACmB,MADX,GACW,EACnB,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAyBC,EAAzB,KAEA,OACE,SAAC,WAAD,WACE,UAACC,EAAA,GAAD,CACEC,MAAI,EACJC,GAAI,GACJC,UAAS,UAAKhB,EAAQV,eAAb,YAA+BU,EAAQiB,YAAvC,YACPjB,EAAQkB,eADD,YAEK,KAAVX,EAAeP,EAAQmB,aAAe,IAL5C,UAOa,KAAVpB,IACC,UAACqB,EAAA,EAAD,CACEC,QAASnB,EACTc,UAAS,UAAe,KAAVT,EAAeP,EAAQsB,gBAAkB,GAA9C,YACPtB,EAAQN,YAHZ,WAME,4BACGK,EACAO,EAAW,IAAM,MAEP,KAAZD,IACC,gBAAKW,UAAWhB,EAAQuB,iBAAxB,UACE,SAACC,EAAA,EAAD,CAASC,MAAOpB,EAASqB,UAAU,YAAnC,UACE,gBAAKV,UAAWhB,EAAQK,QAAxB,UACE,SAACsB,EAAA,EAAD,aAQXhB,GAA8B,KAAVF,GACnB,iBAAKO,UAAWhB,EAAQJ,iBAAxB,WACE,kBACEgC,KAAK,OACLzB,KAAMA,EACNF,SAAU,SAAC4B,GACT,IAAMC,EAAWC,GAAAA,CAAIF,EAAG,uBAAwB,KCnHrC,SAACG,EAAUC,GACpC,IAAMC,EAAOF,EAAIG,OAAOC,MAAM,GACxBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,GAErBG,EAAOG,OAAS,WAGd,IAAMC,EAAaJ,EAAOK,OAC1B,GAAID,EAAY,CACd,IAAME,EAAYF,EAAWG,WAAWC,MAAM,WAErB,IAArBF,EAAUG,QACZb,EAASU,EAAU,MDuGXI,CAAYlB,GAAG,SAACmB,GACd/C,EAAS+C,EAAMlB,OAGnBtB,OAAQA,EACRF,SAAUA,EACVF,SAAUA,EACVY,UAAWhB,EAAQV,iBAGV,KAAVmB,IACC,SAACwC,EAAA,EAAD,CACEC,MAAM,UACN,aAAW,iBACXC,UAAU,OACVC,QAAS,WACPxC,GAAgB,IAElByC,eAAe,EACfC,oBAAoB,EACpBC,KAAK,QATP,UAWE,SAACC,EAAA,EAAD,MAIO,KAAVjD,IAAgB,SAACkD,EAAA,EAAD,CAAYC,aAAcnD,QAG7C,iBAAKS,UAAWhB,EAAQ2D,aAAxB,WACE,gBAAK3C,UAAWhB,EAAQhB,YAAxB,SAAsCyB,KACtC,SAACwC,EAAA,EAAD,CACEC,MAAM,UACN,aAAW,iBACXC,UAAU,OACVC,QAAS,WACPxC,GAAgB,IAElByC,eAAe,EACfC,oBAAoB,EACpBC,KAAK,QATP,UAWE,SAACK,EAAA,EAAD,kB,kLEnDd,KAAejF,EAAAA,EAAAA,IA1GA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRgF,EAAAA,OAwGP,EArFsB,SAAC,GAcI,IAAD,IAbxBC,OAAAA,OAawB,SAZxBC,EAYwB,EAZxBA,QACAC,EAWwB,EAXxBA,SACAC,EAUwB,EAVxBA,UAUwB,IATxBjE,QAAAA,OASwB,MATd,GASc,MARxByB,MAAAA,OAQwB,MARhB,GAQgB,EAPxByC,EAOwB,EAPxBA,UACAC,EAMwB,EANxBA,oBAMwB,IALxBC,WAAAA,OAKwB,MALX,SAKW,MAJxBC,YAAAA,OAIwB,MAJV,UAIU,MAHxBC,mBAAAA,OAGwB,MAHH,GAGG,MAFxBC,kBAAAA,OAEwB,MAFJ,GAEI,MADxBC,UAAAA,OACwB,MADZ,KACY,EACxB,OACE,UAAC,IAAD,CACEC,KAAMX,EACNC,QAAS,SAACW,EAAOC,GACA,kBAAXA,GACFZ,KAGJ/C,UAAWhB,EAAQ4E,KACnBC,GAAI,CACF,mBAAoB,CAClBC,QAAS,wBAVf,WAcE,UAAC,IAAD,CAAa9D,UAAWhB,EAAQyB,MAAhC,WACE,iBAAKT,UAAWhB,EAAQ+E,UAAxB,UACGP,EADH,IACe/C,MAEf,gBAAKT,UAAWhB,EAAQgF,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXhE,UAAWhB,EAAQiF,YACnB7B,QAASW,EACTV,eAAa,EACbE,KAAK,QALP,UAOE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAevC,UAAWhB,EAAQkF,QAAlC,SACGf,KAEH,UAAC,IAAD,CAAenD,UAAWhB,EAAQmF,QAAlC,WACE,SAAC,KAAD,gBACEnE,UAAWhB,EAAQoF,aACnBhC,QAASY,GAAYD,EACrB3D,SAAU8D,EACVtC,KAAK,UACD2C,GALN,IAMEc,QAAQ,WACRnC,MAAM,UACNhD,GAAI,iBARN,SAUGkE,MAGH,SAAC,KAAD,gBACEpD,UAAWhB,EAAQsF,cACnB1D,KAAK,SACLwB,QAASa,EACTsB,QAASrB,EACT9D,SAAU8D,EACVmB,QAAQ,WACRnC,MAAM,YACNsC,gBAAgB,QAChBC,WAAW,SAAC,WAAD,IACXC,WAAS,EACTxF,GAAI,cACAoE,GAZN,aAcGD,e,2TCogBLsB,EAAqB,CACzBC,qBAAAA,EAAAA,GACAC,qBAAAA,EAAAA,IAGIC,GAAYC,EAAAA,EAAAA,KAXD,SAACC,GAAD,MAAsB,CACrCC,cAAeD,EAAME,QAAQC,cAAcF,cAC3CG,eAAgBJ,EAAME,QAAQC,cAAcE,cAC5CC,OAAQN,EAAME,QAAQC,cAAcI,cAQFZ,GAEpC,WAAehH,EAAAA,EAAAA,IA1kBA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0BACR2H,EAAAA,IACAC,EAAAA,IAFO,IAGVC,YAAa,CACXC,UAAW,UAEblF,MAAO,CACLpC,UAAW,IAEbuH,KAAM,CAAEjH,WAAY,QACpBkH,OAAQ,CAAEC,UAAW,UACrBC,eAAgB,CACdjC,QAAS,uBAEXkC,gBAAiB,CACfC,OAAQ,OACR1H,OAAQ,GAEV2H,SAAU,CACRC,YAAa,GACbC,QAAS,OACT,cAAe,CACbC,SAAU,IAGZ,4BAA6B,CAC3B7H,SAAU,WAGd8H,aAAc,CACZF,QAAS,OACTG,WAAY,SACZC,aAAc,oBACdC,aAAc,IAEhBC,WAAY,CACVF,aAAc,oBACdJ,QAAS,OACTG,WAAY,SACZE,aAAc,MAEbE,EAAAA,EAAAA,IAAmB/I,EAAMgJ,QAAQ,QAgiBxC,CAAkC9B,GA7hBX,SAAC,GAMA,IALtB9F,EAKqB,EALrBA,QACAsG,EAIqB,EAJrBA,OACAL,EAGqB,EAHrBA,cACAL,EAEqB,EAFrBA,qBAGA,GADqB,EADrBC,sBAEkCnF,EAAAA,EAAAA,WAAkB,IAApD,eAAOmH,EAAP,KAAkBC,EAAlB,KACA,GAAoCpH,EAAAA,EAAAA,WAAkB,GAAtD,eAAOqH,EAAP,KAAmBC,EAAnB,KACA,GAA4CtH,EAAAA,EAAAA,WAAkB,GAA9D,eAAOuH,EAAP,KAAuBC,EAAvB,KACA,GAAkDxH,EAAAA,EAAAA,WAAkB,GAApE,eAAOyH,EAAP,KAA0BC,EAA1B,KACA,GAA8D1H,EAAAA,EAAAA,UAE5D,IAFF,eAAO2H,EAAP,KAAgCC,EAAhC,KAIA,GAAkD5H,EAAAA,EAAAA,UAAoB,IAAtE,eAAO6H,EAAP,KAA0BC,EAA1B,KACA,GAAsD9H,EAAAA,EAAAA,UAAoB,IAA1E,eAAO+H,EAAP,KAA4BC,EAA5B,KACA,GAAoEhI,EAAAA,EAAAA,UAElE,IAFF,eAAOiI,GAAP,KAAmCC,GAAnC,KAGA,IACElI,EAAAA,EAAAA,UAA6B,IAD/B,iBAAOmI,GAAP,MAAqCC,GAArC,MAGMC,IAAwBC,EAAAA,EAAAA,cAAY,WACxCC,EAAAA,EAAAA,OAEI,MAFJ,oCAG0B3C,QAH1B,IAG0BA,OAH1B,EAG0BA,EAAQ4C,UAHlC,2BAGuD5C,QAHvD,IAGuDA,OAHvD,EAGuDA,EAAQnG,KAH/D,cAKGgJ,MAAK,SAACC,GACLlB,EAAkBkB,EAAIC,WAClBD,EAAIE,mBAAmBC,OAASH,EAAIE,mBAAmBE,WACzDpB,GAAqB,GAEvBQ,GAA8BQ,EAAIE,mBAAmBC,OAAS,IAC9DT,GAAgCM,EAAIE,mBAAmBE,UAAY,OAEpEC,OAAM,SAACC,GACN9D,EAAqB8D,QAExB,CAACpD,EAAQV,KAEZ+D,EAAAA,EAAAA,YAAU,WACJrD,GACFyC,OAED,CAACzC,EAAQyC,KAEZ,IAkEMa,GAAoB,SAAC5C,GAIzBsB,EAA2B,GAAD,eACrBD,GADqB,CAExBrB,EAAgB7G,QAIlB,IAAM0J,EAAoClB,GAA2BmB,QACnE,SAACC,GAAD,OAAuBA,EAAkB5J,OAAS6G,EAAgB7G,QAE9D6J,EACJnB,GAA6BiB,QAC3B,SAACC,GAAD,OAAuBA,EAAkB5J,OAAS6G,EAAgB7G,QAEtEyI,GAA8BiB,GAC9Bf,GAAgCkB,IAG5BC,GAAmB,SACvBrI,EACA1B,EACAgK,EACApI,EACArB,GAEA,IAAI0J,EAAe5B,EACf6B,EAA0B,aAE9B,OAAQxI,GACN,IAAK,QACHuI,EAAe5B,EACf6B,EAAqB5B,EACrB,MAEF,IAAK,WACH2B,EAAe1B,EACf2B,EAAqB1B,EAgBzB0B,EAVkBD,EAAaE,KAAI,SAACvJ,GACb,IAAD,EAApB,OAAIA,EAAKZ,KAAOA,GACP,kBACFY,GADL,mBAEGoJ,EAAMpI,IAFT,2BAGcoI,GAAQzJ,GAHtB,IAMKK,OAKLwJ,GAAgB,SAAC1I,EAAc1B,GACnC,IAAIiK,EAAe5B,EACf6B,EAA0B,aAE9B,OAAQxI,GACN,IAAK,QACHuI,EAAe5B,EACf6B,EAAqB5B,EACrB,MAEF,IAAK,WACH2B,EAAe1B,EACf2B,EAAqB1B,EAMrByB,EAAarH,OAAS,GAIxBsH,EAHuBD,EAAaL,QAClC,SAAChJ,GAAD,OAAmBA,EAAKZ,KAAOA,OAM/BqK,GAAa,SAAC3I,GAClB,IAAIuI,EAAe5B,EACf6B,EAA0B,aAE9B,OAAQxI,GACN,IAAK,QACHuI,EAAe5B,EACf6B,EAAqB5B,EACrB,MAEF,IAAK,WACH2B,EAAe1B,EACf2B,EAAqB1B,EAezB0B,EAVyB,kBACpBD,GADoB,CAEvB,CACEjK,GAAIsK,KAAKC,MAAM7H,WACfsH,IAAK,GACLQ,KAAM,GACNC,YAAa,GACbC,aAAc,QAKpB,OACE,UAAC,WAAD,YACE,SAAC,IAAD,CACEnJ,MAAO,mBACP4C,YAAa,UACbD,WAAW,SACXI,WAAW,SAAC,KAAD,IACXN,UAAW2D,EACX9D,QAAS,kBAAMiE,GAAc,IAC7BlE,OAAQiE,EACR9D,UA7LuB,WAC3B6D,GAAa,GACb,IAAI+C,EAAU,CACZxB,SAAUpB,EACVqB,mBAAoB,IAGpBuB,EAAO,mBADL1C,EAC8B,CAC9B2C,mBAAoBzC,EACpBkB,MAAOhB,EACJ8B,KAAI,SAACU,GAAD,MAAuB,CAC1BC,IAAKD,EAAQH,aACbV,IAAKa,EAAQJ,gBAEdb,QAAO,SAACY,GAAD,OAAeA,EAAKM,KAAON,EAAKR,OAC1CV,SAAUf,EACP4B,KAAI,SAACU,GAAD,OAAsBA,EAAQH,gBAClCd,QAAO,SAACY,GAAD,OAAeA,MAGK,CAC9BI,mBAAmB,GAAD,eACbnC,GAA2B0B,KAAI,SAACK,GAAD,OAAUA,EAAKvK,UADjC,OAEb0I,GAA6BwB,KAAI,SAACK,GAAD,OAAUA,EAAKvK,UAErDoJ,MAAO,GACPC,SAAU,IAGdP,EAAAA,EAAAA,OAEI,OAFJ,oCAG0B3C,QAH1B,IAG0BA,OAH1B,EAG0BA,EAAQ4C,UAHlC,2BAGuD5C,QAHvD,IAGuDA,OAHvD,EAGuDA,EAAQnG,KAH/D,aAII0K,GAED1B,MAAK,WACJrB,GAAa,GAEbE,GAAc,GAEdQ,EAAqB,CACnB,CACEkC,KAAM,GACNE,aAAc,GACdD,YAAa,GACbzK,GAAIsK,KAAKC,MAAM7H,WACfsH,IAAK,MAGTxB,EAAuB,CACrB,CACEgC,KAAM,GACNE,aAAc,GACdD,YAAa,GACbzK,GAAIsK,KAAKC,MAAM7H,WACfsH,IAAK,MAGTnB,QAEDU,OAAM,SAACC,GACN9D,EAAqB8D,GACrB5B,GAAa,OAgIb3D,qBACE,SAAC,IAAD,mFAKH8B,GACC,SAAC,IAAD,CAAOjF,UAAWhB,EAAQ+G,eAA1B,UACE,gBAAK/F,UAAWhB,EAAQ0G,YAAxB,UACE,SAAC,IAAD,SAIJ,UAAC,EAAAuE,SAAD,YACE,eAAIjK,UAAWhB,EAAQkL,aAAvB,uBACA,UAAC,IAAD,CAAOlK,UAAWhB,EAAQ+G,eAA1B,WACE,UAAC,KAAD,CAAMjG,MAAI,EAACC,GAAI,GAAIC,UAAWhB,EAAQyB,MAAtC,WACE,SAAC,IAAD,CACEhB,MAAM,iBACNP,GAAG,iBACHC,KAAK,iBACLgL,QAASlD,EACThI,SAAU,SAAC4B,GACT,IACMsJ,EADUtJ,EAAEM,OACMgJ,QACxBjD,EAAkBiD,IAEpBpL,MAAO,MACPqL,YACE,gFAGJ,SAAC,IAAD,CACE3K,MAAM,oBACNP,GAAG,oBACHC,KAAK,oBACLgL,QAAShD,EACTlI,SAAU,SAAC4B,GACT,IACMsJ,EADUtJ,EAAEM,OACMgJ,QACxB/C,EAAqB+C,IAEvBpL,MAAO,2BAIVoI,IACC,UAAC,KAAD,CAAMkD,WAAS,EAAf,WACE,SAAC,KAAD,CAAMA,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,UACE,kDAEF,SAAC,KAAD,CAAMsK,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,SACG4H,GAA2B0B,KAC1B,SAACrD,GAAD,OACE,SAAC,IAAD,CAEE3B,QAAQ,WACRnC,MAAM,UACNlC,UAAWhB,EAAQgH,gBACnBjH,OACE,4BACE,SAAC,IAAD,CACEsF,QAAQ,YACR+B,QAAQ,QACRkE,cAAY,EAHd,SAKGtE,EAAgB7G,QAEnB,SAAC,IAAD,CACEa,UAAWhB,EAAQ6G,OACnBxB,QAAQ,UACR+B,QAAQ,QACRkE,cAAY,EAJd,SAMGtE,EAAgBuE,SACfvE,EAAgBuE,QAAQlB,KAAI,SAACmB,GAC3B,OAAO,yBAA4BA,GAA5B,iBAAoBA,UAGjC,SAAC,IAAD,CACExK,UAAWhB,EAAQ4G,KACnBvB,QAAQ,WACRiG,cAAY,EAHd,0BAOA,SAAC,IAAD,CAAYjG,QAAQ,UAAUiG,cAAY,EAA1C,UACE,SAAC,IAAD,CAAQG,OAAO,aAAf,SACGzE,EAAgB0E,cAKzBC,SAAU,kBAAM/B,GAAkB5C,KAtC7BA,EAAgB7G,YA4C7B,SAAC,KAAD,CAAMkL,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,SACGwH,EAAkB8B,KAAI,SAACU,GAAD,OACrB,UAAC,KAAD,CACEjK,MAAI,EACJC,GAAI,GAEJC,UAAWhB,EAAQsH,aAJrB,WAME,UAAC,KAAD,CAAMxG,MAAI,EAACC,GAAI,EAAGC,UAAWhB,EAAQkH,SAArC,WACE,SAAC,KAAD,CAAMpG,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEd,SAAU,SAAC2L,EAAc9J,GAAf,OACRmI,GACE,QACAc,EAAQ7K,GACR,OACA4B,EACA8J,IAGJpL,OAAO,uBACPN,GAAG,UACHC,KAAK,UACLJ,MAAM,OACNU,MAAOsK,EAAQL,UAGnB,SAAC,KAAD,CAAM5J,MAAI,EAACC,GAAI,EAAGC,UAAWhB,EAAQ6L,WAArC,UACE,SAAC,IAAD,CACE5L,SAAU,SAAC2L,EAAc9J,GAAf,OACRmI,GACE,QACAc,EAAQ7K,GACR,MACA4B,EACA8J,IAGJpL,OAAO,YACPN,GAAG,SACHC,KAAK,SACLJ,MAAM,MACNU,MAAOsK,EAAQb,YAIrB,SAAC,KAAD,CAAMpJ,MAAI,EAACgL,GAAI,EAAG/K,GAAI,EAAtB,UACE,SAAC,IAAD,CACEsE,QAAQ,WACRnC,MAAM,YACNE,QAAS,kBAAMkH,GAAc,QAASS,EAAQ7K,KAHhD,wBA1CG6K,EAAQ7K,UAqDnB,SAAC,KAAD,CAAMmL,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,UACE,SAAC,IAAD,CACEsE,QAAQ,WACRnC,MAAM,UACN6I,SAAS,SAAC,KAAD,IACT3I,QAAS,kBAAMmH,GAAW,UAJ5B,gCAUF,SAAC,KAAD,CAAMc,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,UACE,qDAEF,SAAC,KAAD,CAAMsK,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,SACG8H,GAA6BwB,KAC5B,SAACrD,GAAD,OACE,SAAC,IAAD,CAEE3B,QAAQ,WACRnC,MAAM,UACNlC,UAAWhB,EAAQgH,gBACnBjH,OACE,4BACE,SAAC,IAAD,CACEsF,QAAQ,YACR+B,QAAQ,QACRkE,cAAY,EAHd,SAKGtE,EAAgB7G,QAEnB,SAAC,IAAD,CACEa,UAAWhB,EAAQ6G,OACnBxB,QAAQ,UACR+B,QAAQ,QACRkE,cAAY,EAJd,SAMGtE,EAAgBuE,SACfvE,EAAgBuE,QAAQlB,KAAI,SAACmB,GAC3B,OACE,yBAA+BA,GAA/B,oBAAuBA,UAI/B,SAAC,IAAD,CACExK,UAAWhB,EAAQ4G,KACnBvB,QAAQ,WACRiG,cAAY,EAHd,0BAOA,SAAC,IAAD,CAAYjG,QAAQ,UAAUiG,cAAY,EAA1C,UACE,SAAC,IAAD,CAAQG,OAAO,aAAf,SACGzE,EAAgB0E,cAKzBC,SAAU,kBAAM/B,GAAkB5C,KAxC7BA,EAAgB7G,YA8C7B,SAAC,KAAD,CAAMkL,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,SACG0H,EAAoB4B,KAAI,SAACU,GAAD,OACvB,UAAC,KAAD,CACEjK,MAAI,EACJC,GAAI,GACJC,UAAWhB,EAAQ0H,WAHrB,WAME,SAAC,KAAD,CAAM5G,MAAI,EAACC,GAAI,EAAGC,UAAWhB,EAAQkH,SAArC,UACE,SAAC,IAAD,CACEjH,SAAU,SAAC2L,EAAc9J,GAAf,OACRmI,GACE,WACAc,EAAQ7K,GACR,OACA4B,EACA8J,IAGJpL,OAAO,uBACPN,GAAG,UACHC,KAAK,UACLJ,MAAM,OACNU,MAAOsK,EAAQL,UAGnB,SAAC,KAAD,CAAM5J,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEsE,QAAQ,WACRnC,MAAM,YACNE,QAAS,kBAAMkH,GAAc,WAAYS,EAAQ7K,KAHnD,wBArBG6K,EAAQ7K,UAgCnB,SAAC,KAAD,CAAMmL,WAAS,EAACvK,MAAI,EAACC,GAAI,GAAzB,UACE,SAAC,IAAD,CACEsE,QAAQ,WACRnC,MAAM,UACN6I,SAAS,SAAC,KAAD,IACT3I,QAAS,kBAAMmH,GAAW,aAJ5B,sCAYN,SAAC,KAAD,CAAMzJ,MAAI,EAACC,GAAI,GAAIC,UAAWhB,EAAQgM,gBAAtC,UACE,SAAC,IAAD,CACEpK,KAAK,SACLyD,QAAQ,YACRnC,MAAM,UACN9C,SAAU2H,GAAcF,EACxBzE,QAAS,kBAAM4E,GAAc,IAL/B,kC,iFC9jBd,KAAerJ,EAAAA,EAAAA,IA5BA,SAACC,GAAD,aACbC,EAAAA,EAAAA,GAAa,CACXoN,WAAY,CACV/I,OAAO,UAAAtE,EAAMsN,eAAN,eAAe3L,MAAM4L,OAAQ,eAyB1C,EAfmB,SAAC,GAIK,IAHvBnM,EAGsB,EAHtBA,QACA0D,EAEsB,EAFtBA,aAEsB,IADtB0I,UAAAA,OACsB,SACtB,OACE,UAAC,WAAD,WACGA,IAAa,mBACd,SAAC,IAAD,CAAYjJ,UAAU,IAAIkC,QAAQ,QAAQrE,UAAWhB,EAAQiM,WAA7D,SACGvI,W,0BC3BL2I,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iQACD,cAEJN,EAAQ,EAAUG,G,0BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,oLACD,UAEJN,EAAQ,EAAUG,G,0BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQ,EAAUG","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Tenants/TenantDetails/TenantSecurity.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"../ListTenants/types\";\nimport { ICertificateInfo, ITenantSecurityResponse } from \"../types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  spacingUtils,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Chip from \"@mui/material/Chip\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Moment from \"react-moment\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { Button, DialogContentText, Typography } from \"@mui/material\";\nimport { KeyPair } from \"../ListTenants/utils\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setTenantDetailsLoad } from \"../actions\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { AddIcon, ConfirmModalIcon } from \"../../../../icons\";\nimport Loader from \"../../Common/Loader/Loader\";\n\ninterface ITenantSecurity {\n  classes: any;\n  loadingTenant: boolean;\n  tenant: ITenant | null;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    title: {\n      marginTop: 35,\n    },\n    bold: { fontWeight: \"bold\" },\n    italic: { fontStyle: \"italic\" },\n    paperContainer: {\n      padding: \"15px 15px 15px 50px\",\n    },\n    certificateInfo: {\n      height: \"auto\",\n      margin: 5,\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    certInputRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #eaeaea\",\n      marginBottom: 10,\n    },\n    caCertsRow: {\n      borderBottom: \"1px solid #eaeaea\",\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: 10,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantSecurity = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n}: ITenantSecurity) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [enableAutoCert, setEnableAutoCert] = useState<boolean>(false);\n  const [enableCustomCerts, setEnableCustomCerts] = useState<boolean>(false);\n  const [certificatesToBeRemoved, setCertificatesToBeRemoved] = useState<\n    string[]\n  >([]);\n  // MinIO certificates\n  const [minioCertificates, setMinioCertificates] = useState<KeyPair[]>([]);\n  const [minioCaCertificates, setMinioCaCertificates] = useState<KeyPair[]>([]);\n  const [minioTLSCertificateSecrets, setMinioTLSCertificateSecrets] = useState<\n    ICertificateInfo[]\n  >([]);\n  const [minioTLSCaCertificateSecrets, setMinioTLSCaCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n\n  const getTenantSecurityInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`\n      )\n      .then((res: ITenantSecurityResponse) => {\n        setEnableAutoCert(res.autoCert);\n        if (res.customCertificates.minio || res.customCertificates.minioCAs) {\n          setEnableCustomCerts(true);\n        }\n        setMinioTLSCertificateSecrets(res.customCertificates.minio || []);\n        setMinioTLSCaCertificateSecrets(res.customCertificates.minioCAs || []);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n      });\n  }, [tenant, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantSecurityInfo();\n    }\n  }, [tenant, getTenantSecurityInfo]);\n\n  const updateTenantSecurity = () => {\n    setIsSending(true);\n    let payload = {\n      autoCert: enableAutoCert,\n      customCertificates: {},\n    };\n    if (enableCustomCerts) {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: certificatesToBeRemoved,\n        minio: minioCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioCAs: minioCaCertificates\n          .map((keyPair: KeyPair) => keyPair.encoded_cert)\n          .filter((cert: any) => cert),\n      };\n    } else {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: [\n          ...minioTLSCertificateSecrets.map((cert) => cert.name),\n          ...minioTLSCaCertificateSecrets.map((cert) => cert.name),\n        ],\n        minio: [],\n        minioCAs: [],\n      };\n    }\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        // Close confirmation modal\n        setDialogOpen(false);\n        // Refresh Information and reset forms\n        setMinioCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioCaCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        getTenantSecurityInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n        setIsSending(false);\n      });\n  };\n\n  const removeCertificate = (certificateInfo: ICertificateInfo) => {\n    // TLS certificate secrets can be referenced MinIO, Console or KES, we need to remove the secret from all list and update\n    // the arrays\n    // Add certificate to the global list of secrets to be removed\n    setCertificatesToBeRemoved([\n      ...certificatesToBeRemoved,\n      certificateInfo.name,\n    ]);\n\n    // Update MinIO TLS certificate secrets\n    const updatedMinIOTLSCertificateSecrets = minioTLSCertificateSecrets.filter(\n      (certificateSecret) => certificateSecret.name !== certificateInfo.name\n    );\n    const updatedMinIOTLSCaCertificateSecrets =\n      minioTLSCaCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name\n      );\n    setMinioTLSCertificateSecrets(updatedMinIOTLSCertificateSecrets);\n    setMinioTLSCaCertificateSecrets(updatedMinIOTLSCaCertificateSecrets);\n  };\n\n  const addFileToKeyPair = (\n    type: string,\n    id: string,\n    key: string,\n    fileName: string,\n    value: string\n  ) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    const NCertList = certificates.map((item: KeyPair) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          [key]: fileName,\n          [`encoded_${key}`]: value,\n        };\n      }\n      return item;\n    });\n    updateCertificates(NCertList);\n  };\n\n  const deleteKeyPair = (type: string, id: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    if (certificates.length > 1) {\n      const cleanCertsList = certificates.filter(\n        (item: KeyPair) => item.id !== id\n      );\n      updateCertificates(cleanCertsList);\n    }\n  };\n\n  const addKeyPair = (type: string) => {\n    let certificates = minioCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioCertificates;\n        updateCertificates = setMinioCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n    const updatedCertificates = [\n      ...certificates,\n      {\n        id: Date.now().toString(),\n        key: \"\",\n        cert: \"\",\n        encoded_key: \"\",\n        encoded_cert: \"\",\n      },\n    ];\n    updateCertificates(updatedCertificates);\n  };\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantSecurity}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <Paper className={classes.paperContainer}>\n          <div className={classes.loaderAlign}>\n            <Loader />\n          </div>\n        </Paper>\n      ) : (\n        <Fragment>\n          <h1 className={classes.sectionTitle}>Security</h1>\n          <Paper className={classes.paperContainer}>\n            <Grid item xs={12} className={classes.title}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableAutoCert(checked);\n                }}\n                label={\"TLS\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableCustomCerts(checked);\n                }}\n                label={\"Custom Certificates\"}\n              />\n            </Grid>\n\n            {enableCustomCerts && (\n              <Grid container>\n                <Grid container item xs={12}>\n                  <h4>MinIO Certificates</h4>\n                </Grid>\n                <Grid container item xs={12}>\n                  {minioTLSCertificateSecrets.map(\n                    (certificateInfo: ICertificateInfo) => (\n                      <Chip\n                        key={certificateInfo.name}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.certificateInfo}\n                        label={\n                          <div>\n                            <Typography\n                              variant=\"subtitle1\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.name}\n                            </Typography>\n                            <Typography\n                              className={classes.italic}\n                              variant=\"caption\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.domains &&\n                                certificateInfo.domains.map((dom) => {\n                                  return <div key={`domain-${dom}`}>{dom}</div>;\n                                })}\n                            </Typography>\n                            <Typography\n                              className={classes.bold}\n                              variant=\"overline\"\n                              gutterBottom\n                            >\n                              Expiry:&nbsp;\n                            </Typography>\n                            <Typography variant=\"caption\" gutterBottom>\n                              <Moment format=\"YYYY-MM-DD\">\n                                {certificateInfo.expiry}\n                              </Moment>\n                            </Typography>\n                          </div>\n                        }\n                        onDelete={() => removeCertificate(certificateInfo)}\n                      />\n                    )\n                  )}\n                </Grid>\n\n                <Grid container item xs={12}>\n                  {minioCertificates.map((keyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={keyPair.id}\n                      className={classes.certInputRow}\n                    >\n                      <Grid item xs={9} className={classes.fileItem}>\n                        <Grid item xs={6}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) =>\n                              addFileToKeyPair(\n                                \"minio\",\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              )\n                            }\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                        </Grid>\n                        <Grid item xs={6} className={classes.spacerLeft}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) =>\n                              addFileToKeyPair(\n                                \"minio\",\n                                keyPair.id,\n                                \"key\",\n                                fileName,\n                                encodedValue\n                              )\n                            }\n                            accept=\".key,.pem\"\n                            id=\"tlsKey\"\n                            name=\"tlsKey\"\n                            label=\"Key\"\n                            value={keyPair.key}\n                          />\n                        </Grid>\n                      </Grid>\n                      <Grid item md={2} xs={1}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => deleteKeyPair(\"minio\", keyPair.id)}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid container item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    endIcon={<AddIcon />}\n                    onClick={() => addKeyPair(\"minio\")}\n                  >\n                    Add Certificate\n                  </Button>\n                </Grid>\n\n                <Grid container item xs={12}>\n                  <h4>MinIO CA Certificates</h4>\n                </Grid>\n                <Grid container item xs={12}>\n                  {minioTLSCaCertificateSecrets.map(\n                    (certificateInfo: ICertificateInfo) => (\n                      <Chip\n                        key={certificateInfo.name}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.certificateInfo}\n                        label={\n                          <div>\n                            <Typography\n                              variant=\"subtitle1\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.name}\n                            </Typography>\n                            <Typography\n                              className={classes.italic}\n                              variant=\"caption\"\n                              display=\"block\"\n                              gutterBottom\n                            >\n                              {certificateInfo.domains &&\n                                certificateInfo.domains.map((dom) => {\n                                  return (\n                                    <div key={`CA-domain-${dom}`}>{dom}</div>\n                                  );\n                                })}\n                            </Typography>\n                            <Typography\n                              className={classes.bold}\n                              variant=\"overline\"\n                              gutterBottom\n                            >\n                              Expiry:&nbsp;\n                            </Typography>\n                            <Typography variant=\"caption\" gutterBottom>\n                              <Moment format=\"YYYY-MM-DD\">\n                                {certificateInfo.expiry}\n                              </Moment>\n                            </Typography>\n                          </div>\n                        }\n                        onDelete={() => removeCertificate(certificateInfo)}\n                      />\n                    )\n                  )}\n                </Grid>\n\n                <Grid container item xs={12}>\n                  {minioCaCertificates.map((keyPair: KeyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.caCertsRow}\n                      key={keyPair.id}\n                    >\n                      <Grid item xs={9} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) =>\n                            addFileToKeyPair(\n                              \"minioCAs\",\n                              keyPair.id,\n                              \"cert\",\n                              fileName,\n                              encodedValue\n                            )\n                          }\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={1}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => deleteKeyPair(\"minioCAs\", keyPair.id)}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid container item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    endIcon={<AddIcon />}\n                    onClick={() => addKeyPair(\"minioCAs\")}\n                  >\n                    Add CA Certificate\n                  </Button>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid item xs={12} className={classes.buttonContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={dialogOpen || isSending}\n                onClick={() => setDialogOpen(true)}\n              >\n                Save\n              </Button>\n            </Grid>\n          </Paper>\n        </Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantSecurity));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","open","event","reason","root","sx","padding","titleText","closeContainer","closeButton","content","actions","cancelButton","variant","confirmButton","loading","loadingPosition","startIcon","autoFocus","mapDispatchToProps","setErrorSnackMessage","setTenantDetailsLoad","connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","tenantDetailsStyles","spacingUtils","loaderAlign","textAlign","bold","italic","fontStyle","paperContainer","certificateInfo","height","fileItem","marginRight","display","minWidth","certInputRow","alignItems","borderBottom","marginBottom","caCertsRow","containerForHeader","spacing","isSending","setIsSending","dialogOpen","setDialogOpen","enableAutoCert","setEnableAutoCert","enableCustomCerts","setEnableCustomCerts","certificatesToBeRemoved","setCertificatesToBeRemoved","minioCertificates","setMinioCertificates","minioCaCertificates","setMinioCaCertificates","minioTLSCertificateSecrets","setMinioTLSCertificateSecrets","minioTLSCaCertificateSecrets","setMinioTLSCaCertificateSecrets","getTenantSecurityInfo","useCallback","api","namespace","then","res","autoCert","customCertificates","minio","minioCAs","catch","err","useEffect","removeCertificate","updatedMinIOTLSCertificateSecrets","filter","certificateSecret","updatedMinIOTLSCaCertificateSecrets","addFileToKeyPair","key","certificates","updateCertificates","map","deleteKeyPair","addKeyPair","Date","now","cert","encoded_key","encoded_cert","payload","secretsToBeDeleted","keyPair","crt","Fragment","sectionTitle","checked","description","container","gutterBottom","domains","dom","format","expiry","onDelete","encodedValue","spacerLeft","md","endIcon","buttonContainer","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}