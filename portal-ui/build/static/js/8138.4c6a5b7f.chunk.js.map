{"version":3,"file":"static/js/8138.4c6a5b7f.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/TenantDetails/TenantYAML.tsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    className = \"\",\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      className={className}\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            className={isDarkTheme ? \"dark-theme\" : \"\"}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n\n              \"&.dark-theme button\": {\n                background: \"#FFFFFF\",\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fieldBasic,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport CodeMirrorWrapper from \"../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport { EditYamlIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    codeMirrorContainer: {\n      marginBottom: 20,\n      paddingLeft: 15,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...modalStyleUtils,\n    ...fieldBasic,\n  });\n\ninterface ITenantYAML {\n  yaml: string;\n}\n\ninterface ITenantYAMLProps {\n  classes: any;\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => void;\n  tenant: string;\n  namespace: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst TenantYAML = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  tenant,\n  namespace,\n  setModalErrorSnackMessage,\n}: ITenantYAMLProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [tenantYaml, setTenantYaml] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const updateTenant = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    setErrorMessage(\"\");\n    api\n      .invoke(\"PUT\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`, {\n        yaml: tenantYaml,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n        setErrorMessage(\"\");\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setErrorMessage(err.errorMessage);\n      });\n  };\n\n  // check the permissions for creating bucket\n  useEffect(() => {\n    api\n      .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`)\n      .then((res: ITenantYAML) => {\n        setLoading(false);\n        setTenantYaml(res.yaml);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [tenant, namespace, setModalErrorSnackMessage]);\n\n  useEffect(() => {}, []);\n\n  const validSave = tenantYaml.trim() !== \"\";\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`YAML`}\n      titleIcon={<EditYamlIcon />}\n    >\n      {addLoading ||\n        (loading && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        ))}\n      {errorMessage !== \"\" && (\n        <div className={classes.errorState}>{errorMessage}</div>\n      )}\n\n      {!loading && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            updateTenant(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.codeMirrorContainer}>\n              <CodeMirrorWrapper\n                label={`Tenant Specification`}\n                value={tenantYaml}\n                mode={\"yaml\"}\n                onBeforeChange={(editor, data, value) => {\n                  setTenantYaml(value);\n                }}\n                editorHeight={\"550px\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !validSave}\n              >\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantYAML));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["useStyles","makeStyles","theme","root","padding","color","props","variant","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","classes","onClick","disabled","tooltip","icon","className","restProps","size","sx","border","fontSize","display","langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","backgroundColor","caretColor","borderLeftColor","borderRight","fontWeight","dark","darkTheme","withStyles","createStyles","fieldBasic","value","label","mode","onBeforeChange","readOnly","editorHeight","useState","isDarkTheme","setIsDarkTheme","extensionList","inputLabel","tooltipContainer","title","placement","item","xs","extensions","editable","basicSetup","height","onChange","v","vu","borderTop","background","alignItems","paddingRight","justifyContent","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","useEffect","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","titleText","closeContainer","id","closeButton","disableRipple","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","mapDispatchToProps","setModalErrorSnackMessage","buttonContainer","textAlign","errorState","codeMirrorContainer","marginBottom","paddingLeft","modalStyleUtils","closeModalAndRefresh","tenant","namespace","addLoading","setAddLoading","loading","setLoading","tenantYaml","setTenantYaml","errorMessage","setErrorMessage","api","then","res","catch","err","validSave","trim","noValidate","autoComplete","onSubmit","e","preventDefault","container","editor","data","modalButtonBar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","writable","configurable","defineProperty","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","call","assertThisInitialized"],"sourceRoot":""}