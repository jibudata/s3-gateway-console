{"version":3,"file":"static/js/6247.52533242.chunk.js","mappings":"8OA6JA,KAAeA,EAAAA,EAAAA,IAtHA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAAa,IAChBC,YAAW,kBACNF,EAAAA,GAAAA,YAAqB,IACxBG,SAAU,GACVC,OAAQ,EACRC,WAAY,aACZC,WAAY,OACZC,SAAU,OACVC,QAAS,SAEXC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,iBAAkB,CAChBC,YAAa,UACbC,QAAS,IAEXC,cAAe,CACb,sCAAqC,kBAChCf,EAAAA,GAAAA,YAAqB,IACxBG,SAAU,GACVa,UAAW,MAEb,iDAAkD,CAChDH,YAAa,UACbI,YAAa,GAEf,aAAc,CACZC,MAAO,UACPf,SAAU,GACVgB,WAAY,IACZ,gBAAiB,CACfD,MAAO,UACPE,QAAS,EACTD,WAAY,SAIjB,GA4EL,EA1E0B,SAAH,GAaC,IAZtBE,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAE,EAAFA,GACAC,EAAI,EAAJA,KAAK,EAAD,EACJC,SAAAA,OAAQ,OAAQ,MAChBC,QAAAA,OAAO,MAAG,GAAE,MACZC,MAAAA,OAAK,MAAG,EAAC,MACTC,MAAAA,OAAK,MAAG,GAAE,MACVC,SAAAA,OAAQ,OAAQ,MAChBC,YAAAA,OAAW,MAAG,GAAE,EAChBC,EAAO,EAAPA,QAEIC,EAAkB,CAAE,aAAcL,GAEtC,OACE,SAAC,WAAc,WACb,UAAC,KAAI,CACHM,MAAI,EACJC,GAAI,GACJC,UAAS,UAAKJ,EAAQK,eAAc,YACxB,KAAVR,EAAeG,EAAQM,aAAe,IACrC,UAEQ,KAAVjB,IACC,UAAC,IAAU,CAACkB,QAASf,EAAIY,UAAWJ,EAAQ9B,WAAW,WACrD,4BACGmB,EACAS,EAAW,IAAM,MAEP,KAAZH,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAiB,UACvC,SAAC,IAAO,CAACC,MAAOd,EAASe,UAAU,YAAW,UAC5C,gBAAKN,UAAWJ,EAAQL,QAAQ,UAC9B,SAAC,MAAQ,cAQrB,gBAAKS,UAAWJ,EAAQvB,iBAAiB,UACvC,SAAC,IAAS,CACRe,GAAIA,EACJC,KAAMA,EACNkB,WAAS,EACTpB,MAAOA,EACPG,SAAUA,EACVJ,SAAUA,EACVsB,WAAS,EACTC,KAAM,EACNZ,WAAYA,EACZJ,MAAiB,KAAVA,EACPiB,WAAYjB,EACZE,YAAaA,EACbgB,gBAAiB,CACfC,QAAQ,GAEVC,WAAY,CACVjB,QAAS,CACPkB,eAAgBlB,EAAQpB,iBACxBuC,KAAMnB,EAAQjB,gBAGlBqC,QAAQ,mBAMpB,G,mLCzFMC,GAAexD,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CAC1CqD,KAAM,CACJG,MAAO,GACPC,OAAQ,GACRzC,QAAS,EACTV,OAAQ,GAEVoD,WAAY,CACV1C,QAAS,EACT,YAAa,CACX2C,UAAW,mBACXvC,MAAOpB,EAAM4D,QAAQC,OAAOC,MAC5B,aAAc,CACZC,gBAAiB,UACjBC,UAAW,oCACX1C,QAAS,EACT2C,OAAQ,SAGZ,wBAAyB,CACvB7C,MAAO,UACP6C,OAAQ,mBAGZC,MAAO,CACLV,MAAO,GACPC,OAAQ,GACRM,gBAAiB,UACjBE,OAAQ,oBACRE,WAAY,GAEdC,MAAO,CACLC,aAAc,GACdN,gBAAiB,UACjBC,UAAW,oCACX1C,QAAS,EACTgD,WAAYtE,EAAMuE,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,CAAC,EACVC,aAAc,CAAC,EACfC,gBAAiB,CACfjE,QAAS,OACTH,WAAY,SACZqE,eAAgB,YAEnB,GA7CoB7E,CA6CjB8E,EAAAA,GAqGJ,KAAe9E,EAAAA,EAAAA,IAxKA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,gBACX6E,iBAAkB,CAChBzD,WAAY,OACZD,MAAO,sBAET2D,eAAgB,CACd1E,SAAU,GACVe,MAAO,UACPd,OAAQ,gBAEV0E,iBAAkB,CAChBC,UAAW,EACX7D,MAAO,WAETS,QAAS,CACPxB,SAAU,KAET6E,EAAAA,IACAhF,EAAAA,IACF,GAoJL,EAnG0B,SAAH,GAcH,IAAD,IAbjBqB,MAAAA,OAAK,MAAG,GAAE,EACVC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAE,EAAFA,GACAC,EAAI,EAAJA,KAAK,EAAD,EACJ8C,QAAAA,OAAO,OAAQ,MACf7C,SAAAA,OAAQ,OAAQ,MAChBuD,WAAAA,OAAU,OAAQ,MAClBtD,QAAAA,OAAO,MAAG,GAAE,MACZuD,YAAAA,OAAW,MAAG,GAAE,EAChBlD,EAAO,EAAPA,QACAmD,EAAe,EAAfA,gBAAgB,EAAD,EACfC,gBAAAA,OAAe,MAAG,CAAC,EAAC,EAEdC,GACJ,UAAC,WAAc,YACXJ,IACA,iBACE7C,WAAWkD,EAAAA,EAAAA,GAAKtD,EAAQ6C,gBAAe,UACpC7C,EAAQ4C,kBAAoBL,IAC5B,SAEFY,GAAmBA,EAAgBI,OAAS,EACzCJ,EAAgB,GAChB,SAGR,SAAC9B,EAAY,CACXkB,QAASA,EACTjD,SAAUA,EACVJ,MAAM,UACNO,KAAMA,EACNQ,YAAU,QAAI,aAAc,oBAAuBmD,GACnD1D,SAAUA,EACV8D,eAAa,EACbC,oBAAkB,EAClBC,oBAAkB,EAClBnE,MAAOA,EACPC,GAAIA,KAEJyD,IACA,iBACE7C,WAAWkD,EAAAA,EAAAA,GAAKtD,EAAQ6C,gBAAe,UACpC7C,EAAQ4C,iBAAmBL,IAC3B,SAEFY,EAAkBA,EAAgB,GAAK,UAMhD,OAAIF,EACKI,GAIP,0BACE,UAAC,KAAI,CAACM,WAAS,EAACtF,WAAY,SAAS,WACnC,SAAC,KAAI,CAAC6B,MAAI,EAACC,GAAI,GAAIyD,GAAI,EAAGC,GAAI,EAAE,SACnB,KAAVxE,IACC,UAAC,IAAU,CAACkB,QAASf,EAAIY,UAAWJ,EAAQ9B,WAAW,WACrD,0BAAOmB,IACM,KAAZM,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAiB,UACvC,SAAC,IAAO,CAACC,MAAOd,EAASe,UAAU,YAAW,UAC5C,gBAAKN,UAAWJ,EAAQL,QAAQ,UAC9B,SAAC,MAAQ,gBAQvB,SAAC,KAAI,CACHO,MAAI,EACJC,GAAI,GACJyD,GAAc,KAAVvE,EAAe,EAAI,GACvBwE,GAAc,KAAVxE,EAAe,EAAI,GACvByE,UAAW,QACXpB,eAAgB,MAChBtC,UAAWJ,EAAQyC,gBAAgB,SAElCY,IAEc,KAAhBH,IACC,SAAC,KAAI,CAAChD,MAAI,EAACC,GAAI,GAAI2D,UAAW,OAAO,UACnC,SAAC,IAAU,CAACC,UAAU,IAAI3D,UAAWJ,EAAQ8C,iBAAiB,SAC3DI,UAOf,G,qNCpHMc,GAAcC,EAAAA,EAAAA,IAAW,SAACnG,GAAY,OAC1CC,EAAAA,EAAAA,IAAa,UACRmG,EAAAA,IACH,IAGJ,SAASC,EAAWC,GAClB,IAAMpE,EAAUgE,IAEhB,OACE,SAAC,KAAS,QACR/C,WAAY,CAAEjB,QAAAA,IACVoE,GAGV,CAwJA,KAAevG,EAAAA,EAAAA,IA7LA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAAa,IAChBQ,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZ0F,cAAe,CACb1F,SAAU,WACV2F,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,MAGR,GAyKL,EAtJwB,SAAH,GA8BC,IA7BpBlF,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAE,EAAFA,GACAC,EAAI,EAAJA,KAAK,EAAD,EACJiF,KAAAA,OAAI,MAAG,OAAM,MACbC,aAAAA,OAAY,MAAG,MAAK,MACpBjF,SAAAA,OAAQ,OAAQ,MAChBkB,UAAAA,OAAS,OAAQ,MACjBjB,QAAAA,OAAO,MAAG,GAAE,MACZC,MAAAA,OAAK,MAAG,EAAC,MACTC,MAAAA,OAAK,MAAG,GAAE,MACVC,SAAAA,OAAQ,OAAQ,MAChBC,YAAAA,OAAW,MAAG,GAAE,EAChB6E,EAAG,EAAHA,IACAC,EAAG,EAAHA,IACAC,EAAS,EAATA,UAAU,EAAD,EACTC,YAAAA,OAAW,MAAG,KAAI,MAClBC,cAAAA,OAAa,MAAG,KAAI,MACpB5B,gBAAAA,OAAe,MAAG,CAAC,EAAC,EACpBiB,EAAa,EAAbA,cAAc,EAAD,EACbY,gBAAAA,OAAe,OAAQ,MACvBC,QAAAA,OAAO,MAAG,GAAE,MACZC,UAAAA,OAAS,OAAQ,EACjBnF,EAAO,EAAPA,QAAQ,GAAD,EACPI,UAAAA,QAAS,OAAG,GAAE,GACdgF,GAAU,EAAVA,WACAC,GAAO,EAAPA,QACAC,GAAO,EAAPA,QAEIrF,IAAe,QAAK,aAAcL,GAAUwD,GAChD,IAA8CmC,EAAAA,EAAAA,WAAkB,GAAM,iBAA/DC,GAAe,MAAEC,GAAkB,MAE7B,WAATf,GAAqBE,IACvB3E,GAAgB,IAAI2E,GAGT,WAATF,GAAqBG,IACvB5E,GAAgB,IAAI4E,GAGN,KAAZK,IACFjF,GAAoB,QAAIiF,GAG1B,IAAIQ,GAAsBX,EACtBY,GAAsBjB,EAW1B,MATa,aAATA,GAAuC,OAAhBK,IACzBW,GAAsBF,IACpB,SAAC,IAAiB,KAElB,SAAC,IAAgB,IAEnBG,GAAsBH,GAAkB,OAAS,aAIjD,SAAC,WAAc,WACb,UAAC,KAAI,CACH7B,WAAS,EACTvD,WAAWkD,EAAAA,EAAAA,GACK,KAAdlD,GAAmBA,GAAY,GACrB,KAAVP,EAAeG,EAAQM,aAAeN,EAAQ4F,mBAC9C,UAES,KAAVvG,IACC,UAAC,IAAU,CACTkB,QAASf,EACTY,UACE6E,EAAkBjF,EAAQ6F,gBAAkB7F,EAAQ9B,WACrD,WAED,4BACGmB,EACAS,EAAW,IAAM,MAEP,KAAZH,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAiB,UACvC,SAAC,IAAO,CAACC,MAAOd,EAASe,UAAU,YAAW,UAC5C,gBAAKN,UAAWJ,EAAQL,QAAQ,UAC9B,SAAC,MAAQ,cAQrB,iBAAKS,UAAWJ,EAAQvB,iBAAiB,WACvC,SAAC0F,EAAU,CACT3E,GAAIA,EACJC,KAAMA,EACNkB,WAAS,EACTpB,MAAOA,EACP4F,UAAWA,EACXzF,SAAUA,EACVJ,SAAUA,EACVoF,KAAMiB,GACN/E,UAAWA,EACX+D,aAAcA,EACd1E,WAAYA,GACZJ,MAAiB,KAAVA,EACPiB,WAAYjB,EACZE,YAAaA,EACbK,UAAWJ,EAAQ8F,YACnBV,WAAYA,GACZC,QAASA,GACTC,QAASA,KAEVI,KACC,gBACEtF,UAAS,UAAKJ,EAAQqE,cAAa,YACvB,KAAVhF,EAAe,YAAc,IAC5B,UAEH,SAAC,IAAU,CACT0G,QACE1B,EACI,WACEA,GACF,EACA,kBAAMoB,IAAoBD,GAAgB,EAEhDhG,GAAIsF,EACJkB,KAAM,QACNvC,oBAAoB,EACpBD,eAAe,EACfE,oBAAoB,EAAM,SAEzBgC,OAINV,IACC,gBACE5E,UAAS,UAAKJ,EAAQqE,cAAa,YACvB,KAAVhF,EAAe,YAAc,IAC5B,SAEF2F,WAOf,G,wGCvMA,KAAenH,EAAAA,EAAAA,IA7CA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,UACRkI,EAAAA,IACF,GA0CL,EAxCuB,SAAH,GAMI,IALtBjG,EAAO,EAAPA,QAAQ,EAAD,EACPX,MAAAA,OAAK,MAAG,GAAE,EACV6G,EAAO,EAAPA,QAAQ,EAAD,EACPC,UAAAA,OAAS,OAAQ,EACjBC,EAAY,EAAZA,aAEA,OACE,SAAC,EAAAC,SAAQ,WACP,UAAC,KAAI,CAACjG,UAAWJ,EAAQsG,kBAAkB,UAC9B,KAAVjH,IACC,SAAC,KAAI,CAACa,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQuG,gBAAgB,SACnDlH,KAGL,UAAC,KAAI,CACHa,MAAI,EACJC,GAAI,GACJC,UAAS,UAAKJ,EAAQiG,eAAc,YAClCG,EAAepG,EAAQwG,qBAAuB,IAC7C,WAEH,SAAC,KAAI,CACHtG,MAAI,EACJC,GAAI,GACJC,UACE+F,EAAYnG,EAAQyG,sBAAwBzG,EAAQ0G,aACrD,SAEAR,IAEFE,IACC,gBAAKhG,UAAWJ,EAAQ2G,mBAAmB,SAAEP,WAMzD,G,0MCgBMQ,GAAc3C,EAAAA,EAAAA,IAAW,QAC7B9C,KAAM,CACJ,UAAW,CACTU,gBAAiB,iBAGlBgF,EAAAA,KAGCC,EAAc,SAAC1C,GACnB,IAAMpE,EAAU4G,IAEhB,OACE,SAAC,KAAK,QACJxG,UAAWJ,EAAQmB,KACnBqC,eAAa,EACbtE,MAAM,UACN6H,aAAa,iBAAM3G,UAAWJ,EAAQgH,oBACtCC,MAAM,iBAAM7G,UAAWJ,EAAQkH,uBAC3B9C,GAGV,EA6DA,KAAevG,EAAAA,EAAAA,IA9GA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAAa,IAChBkJ,YAAa,CACX,iBAAkB,CAChB,+BAAgC,CAC9BjI,MAAO,YAGX,eAAgB,CACdkI,YAAa,GAEf,+BAAgC,CAC9BjJ,SAAU,GACVe,MAAO,YAGXmI,cAAe,CACb,+BAAgC,CAC9BlJ,SAAU,GACVe,MAAO,UACPC,WAAY,QAGf,GAqFL,EA3DkC,SAAH,GAWP,IAAD,IAVrBmI,gBAAAA,OAAe,MAAG,GAAE,EACpBC,EAAgB,EAAhBA,iBACAlI,EAAK,EAALA,MACAG,EAAE,EAAFA,GACAC,EAAI,EAAJA,KACAH,EAAQ,EAARA,SAAS,EAAD,EACRK,QAAAA,OAAO,MAAG,GAAE,MACZ6H,eAAAA,OAAc,OAAQ,EACtBxH,EAAO,EAAPA,QAAQ,EAAD,EACPyH,gBAAAA,OAAe,OAAQ,EAEvB,OACE,UAAC,KAAI,CAAC9D,WAAS,EAAC+D,QAAS,EAAE,WACzB,SAAC,KAAI,CAACxH,MAAI,EAAC/B,SAAU,GAAG,UACtB,UAAC,IAAU,CAACoC,QAASf,EAAIY,UAAWJ,EAAQ9B,WAAW,WACrD,0BAAOmB,IACM,KAAZM,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAiB,UACvC,SAAC,IAAO,CAACC,MAAOd,EAASe,UAAU,YAAW,UAC5C,0BACE,SAAC,MAAQ,gBAOrB,SAAC,KAAI,CAACR,MAAI,YACR,SAAC,IAAU,CACT,aAAYV,EACZA,GAAIA,EACJC,KAAMA,EACNF,MAAOgI,EACPjI,SAAUA,EACVqI,KAAMF,EACNG,MAAO,CAAEpJ,QAAS,OAAQsF,UAAW,SAAU,SAE9CwD,EAAgBO,KAAI,SAACC,GACpB,OACE,SAAC,IAAgB,CAEfvI,MAAOuI,EAAevI,MACtBwI,SAAS,SAACjB,EAAW,IACrBzH,MAAOyI,EAAezI,MACtBK,SAAU8H,EACVpH,WAAWkD,EAAAA,EAAAA,GAAKtD,EAAQmH,aAAY,UACjCnH,EAAQqH,cACPS,EAAevI,QAAUgI,KAC1B,aARQ9H,EAAI,YAAIqI,EAAevI,OAWxC,UAKV,G,oLC9FMyI,GAAenK,EAAAA,EAAAA,IAAW,SAACC,GAAY,OAC3CC,EAAAA,EAAAA,GAAa,CACXoD,KAAM,CACJI,OAAQ,GACR0G,WAAY,EACZ,YAAa,CACXlF,UAAWjF,EAAM4J,QAAQ,KAG7BQ,MAAO,CACL3G,OAAQ,GACR5C,SAAU,WACVO,MAAO,UACPf,SAAU,GACVgB,WAAY,IACZL,QAAS,qBACTiD,OAAQ,oBACRI,aAAc,EACd3D,QAAS,OACTH,WAAY,SACZ,UAAW,CACTQ,YAAa,WAEf,UAAW,CACTgD,gBAAiB,UAGrB,GA3BiBhE,CA4BnBsK,EAAAA,IAsDF,KAAetK,EAAAA,EAAAA,IA9FA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IAAa,IAChBoC,eAAgB,CACd7B,QAAS,OACT,4BAA6B,CAC3B4J,SAAU,aAGb,GAoFL,EApDsB,SAAH,GAUC,IATlBpI,EAAO,EAAPA,QACAR,EAAE,EAAFA,GACAC,EAAI,EAAJA,KACAH,EAAQ,EAARA,SACA+I,EAAO,EAAPA,QACAhJ,EAAK,EAALA,MAAM,EAAD,EACLM,QAAAA,OAAO,MAAG,GAAE,EACZJ,EAAK,EAALA,MAAM,EAAD,EACLG,SAAAA,OAAQ,OAAQ,EAEhB,OACE,SAAC,WAAc,WACb,UAAC,KAAI,CAACQ,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQK,eAAe,UACxC,KAAVhB,IACC,UAAC,IAAU,CAACkB,QAASf,EAAIY,UAAWJ,EAAQ9B,WAAW,WACrD,0BAAOmB,IACM,KAAZM,IACC,gBAAKS,UAAWJ,EAAQQ,iBAAiB,UACvC,SAAC,IAAO,CAACC,MAAOd,EAASe,UAAU,YAAW,UAC5C,gBAAKN,UAAWJ,EAAQL,QAAQ,UAC9B,SAAC,MAAQ,cAOrB,SAAC,IAAW,CAACgB,WAAS,YACpB,SAAC,IAAM,CACLnB,GAAIA,EACJC,KAAMA,EACNF,MAAOA,EACPD,SAAUA,EACV4I,OAAO,SAACF,EAAY,IACpBtI,SAAUA,EAAS,SAElB2I,EAAQR,KAAI,SAACS,GAAM,OAClB,SAAC,IAAQ,CACP/I,MAAO+I,EAAO/I,MAAM,SAGnB+I,EAAOjJ,OAAK,iBAFEI,EAAI,YAAI6I,EAAOjJ,OAGrB,YAOzB,G,uMCoQA,WAAexB,EAAAA,EAAAA,IA3WA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,kBACRwK,EAAAA,IACAC,EAAAA,IACF,GAuWL,EArWqB,SAAH,GAAmD,IAA7ClJ,EAAQ,EAARA,SAAUU,EAAO,EAAPA,QAEhC,GACEuF,EAAAA,EAAAA,WAAkB,GAAM,eADnBkD,EAAmB,KAAEC,EAAsB,KAElD,GAAgDnD,EAAAA,EAAAA,UAAiB,IAAG,eAA7DoD,EAAgB,KAAEC,EAAmB,KAC5C,GAA4BrD,EAAAA,EAAAA,UAAiB,IAAG,eAAzCsD,EAAI,KAAEC,EAAW,KACxB,GAA4BvD,EAAAA,EAAAA,UAAiB,IAAG,eAAzCwD,EAAM,KAAEC,EAAS,KACxB,GAAwBzD,EAAAA,EAAAA,UAAiB,IAAG,eAArC0D,EAAI,KAAEC,EAAO,KACpB,GAAwB3D,EAAAA,EAAAA,UAAiB,IAAG,eAArC4D,EAAI,KAAEC,EAAO,KACpB,GAAgC7D,EAAAA,EAAAA,UAAiB,IAAG,eAA7C8D,EAAQ,KAAEC,EAAW,KAC5B,GAA8B/D,EAAAA,EAAAA,UAAiB,KAAI,eAA5CgE,EAAO,KAAEC,EAAU,KAE1B,GAA0BjE,EAAAA,EAAAA,UAAiB,IAAG,eAAvCkE,EAAK,KAAEC,EAAQ,KACtB,GAA4BnE,EAAAA,EAAAA,UAAiB,aAAY,eAAlDoE,EAAM,KAAEC,EAAS,KACxB,IAAgCrE,EAAAA,EAAAA,UAAiB,IAAG,iBAA7CsE,GAAQ,MAAEC,GAAW,MAC5B,IAAoCvE,EAAAA,EAAAA,UAAiB,IAAG,iBAAjDwE,GAAU,MAAEC,GAAa,MAChC,IAA8BzE,EAAAA,EAAAA,UAAiB,IAAG,iBAA3C0E,GAAO,MAAEC,GAAU,MAuDpBC,IAAiBC,EAAAA,EAAAA,cAAY,WACjC,IAAIC,EAAW,GAsBf,MArBa,KAATxB,IACFwB,EAAQ,UAAMA,EAAQ,iBAASxB,IAElB,KAAXE,IACFsB,EAAQ,UAAMA,EAAQ,mBAAWtB,IAEtB,KAATI,IACFkB,EAAQ,UAAMA,EAAQ,iBAASlB,IAEhB,KAAbE,IACFgB,EAAQ,UAAMA,EAAQ,qBAAahB,IAExB,KAATJ,IACFoB,EAAQ,UAAMA,EAAQ,iBAASpB,IAEjB,MAAZM,IACFc,EAAQ,UAAMA,EAAQ,oBAAYd,KAGpCc,EAAQ,UAAMA,EAAQ,MAENC,MAClB,GAAG,CAACzB,EAAME,EAAQI,EAAME,EAAUJ,EAAMM,IAkExC,OAhEAgB,EAAAA,EAAAA,YAAU,WACiB,KAArB5B,GAUFrJ,EATmB,CACjB,CAAEkL,IAAK,oBAAqBjL,MAAOoJ,GACnC,CAAE6B,IAAK,QAASjL,MAAOkK,GACvB,CAAEe,IAAK,SAAUjL,MAAOoK,GACxB,CAAEa,IAAK,YAAajL,MAAOsK,IAC3B,CAAEW,IAAK,cAAejL,MAAOwK,IAC7B,CAAES,IAAK,UAAWjL,MAAO0K,KAK/B,GAAG,CACDtB,EACAc,EACAE,EACAE,GACAE,GACAE,GACA3K,KAGFiL,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAKN,KACXvB,EAAoB6B,EACtB,GAAG,CACDtB,EACAJ,EACAM,EACAJ,EACAM,EACAV,EACAD,EACAuB,MAGFI,EAAAA,EAAAA,YAAU,WACR,GAAI9B,EAAJ,CAEE,IAAMgC,EAAKN,KACXvB,EAAoB6B,EAGtB,KANA,CAQA,IAAMC,EA7GsB,SAC5BxC,EACAyC,GAEA,IAEsB,EAFlBC,EAAyB,GAAG,UAEdD,GAAI,IAAtB,2BAAwB,CAAC,IAAdH,EAAG,QACNK,EAAI3C,EAAM4C,QAAQN,EARR,MASL,IAAPK,GAGJD,EAAaG,KAAKF,EACpB,CAAC,+BACDD,EAAaI,MAAK,SAACC,EAAIC,GAAE,OAAKD,EAAKC,CAAE,IAIrC,IAFA,IAAIC,EAAW,IAAIC,IACfC,EAAmB,IAAIC,MAAcV,EAAarH,QAC7CsH,EAAI,EAAGA,EAAID,EAAarH,OAAQsH,IAAK,CAC5C,IAAMU,EAAIV,EAAI,EACVU,EAAIX,EAAarH,OACnB8H,EAAOR,GAAK3C,EAAMsD,MAAMZ,EAAaC,GAAID,EAAaW,IAEtDF,EAAOR,GAAK3C,EAAMsD,MAAMZ,EAAaC,GAEzC,CAEA,cAAkBQ,EAAM,eAAE,CAArB,IAAII,EAAK,KACZ,QAAcC,IAAVD,EAAJ,CAGA,IAAMjB,EAAMiB,EAAMD,MAAM,EAAGC,EAAMX,QAAQ,MACnCvL,EAAQkM,EAAMD,MAAMC,EAAMX,QAAQ,KAAO,GAAGR,OAClDa,EAASQ,IAAInB,EAAKjL,EAHlB,CAIF,CACA,OAAO4L,CACT,CA0EaS,CAAsBjD,EAAkB,CACjD,OACA,OACA,SACA,OACA,WACA,YAEFG,EAAY4B,EAAGmB,IAAI,QAAUnB,EAAGmB,IAAI,QAAU,GAAK,IACnD3C,EAAQwB,EAAGmB,IAAI,QAAUnB,EAAGmB,IAAI,QAAU,GAAK,IAC/C7C,EAAU0B,EAAGmB,IAAI,UAAYnB,EAAGmB,IAAI,UAAY,GAAK,IACrDzC,EAAQsB,EAAGmB,IAAI,QAAUnB,EAAGmB,IAAI,QAAU,GAAK,IAC/CvC,EAAYoB,EAAGmB,IAAI,YAAcnB,EAAGmB,IAAI,YAAc,GAAK,IAC3DrC,EAAWkB,EAAGmB,IAAI,WAAanB,EAAGmB,IAAI,WAAa,GAAK,IAfxD,CAkBF,GAAG,CAACpD,KAGF,UAAC,KAAI,CAAC9E,WAAS,aACb,SAAC,KAAI,CAACzD,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC,IAAiB,CAChBd,MAAO,4BACPkD,QAASkG,EACTjJ,GAAG,eACHC,KAAK,eACLH,SAAU,SAACwM,GACTpD,EAAuBoD,EAAEC,OAAOxJ,QAClC,EACAhD,MAAO,mBAGVkJ,GACC,SAAC,WAAc,WACb,SAAC,KAAI,CAACvI,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,oBACHC,KAAK,oBACLJ,MAAM,oBACNE,MAAOoJ,EACPrJ,SAAU,SAACwM,GACTlD,EAAoBkD,EAAEC,OAAOxM,MAC/B,SAKN,UAAC,WAAc,YACb,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAG,UAChB,UAAC,KAAI,CAACD,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQiM,gBAAgB,WACpD,SAAC,KAAI,CAAC/L,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAOsJ,EACPvJ,SAAU,SAACwM,GACThD,EAAYgD,EAAEC,OAAOxM,MACvB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,UACHC,KAAK,UACLJ,MAAM,GACNU,YAAY,gBACZR,MAAOwJ,EACPzJ,SAAU,SAACwM,GACT9C,EAAU8C,EAAEC,OAAOxM,MACrB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAO0J,EACP3J,SAAU,SAACwM,GACT5C,EAAQ4C,EAAEC,OAAOxM,MACnB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAa,CACZzM,MAAOgK,EACPlK,MAAM,GACNG,GAAG,UACHC,KAAK,UACLH,SAAU,SAACwM,QACcJ,IAAnBI,EAAEC,OAAOxM,OACXiK,EAAWsC,EAAEC,OAAOxM,MAAQ,GAEhC,EACA8I,QAAS,CACP,CAAEhJ,MAAO,iBAAkBE,MAAO,KAClC,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,YAAaE,MAAO,aAC7B,CAAEF,MAAO,cAAeE,MAAO,qBAIrC,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,OACHC,KAAK,OACLJ,MAAM,GACNU,YAAY,aACZR,MAAO4J,EACP7J,SAAU,SAACwM,GACT1C,EAAQ0C,EAAEC,OAAOxM,MACnB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,WACHC,KAAK,WACLJ,MAAM,GACNqF,KAAK,WACL3E,YAAY,iBACZR,MAAO8J,EACP/J,SAAU,SAACwM,GACTxC,EAAYwC,EAAEC,OAAOxM,MACvB,YAKR,SAAC,IAAc,CACbF,MAAO,oBACP6G,QAASyC,KAEX,SAAC,KAAI,CAACzI,MAAI,EAACC,GAAI,GAAG,UAChB,wBAIN,SAAC,KAAI,CAACD,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,QACHC,KAAK,QACLJ,MAAM,QACNU,YAAa,mBACbR,MAAOkK,EACP9J,QAAQ,8DACRL,SAAU,SAACwM,GACTpC,EAASoC,EAAEC,OAAOxM,MACpB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAkB,CACjBzE,iBAAkBoC,EAClBnK,GAAG,SACHC,KAAK,SACLJ,MAAM,SACNC,SAAU,SAACwM,GACTlC,EAAUkC,EAAEC,OAAOxM,MACrB,EACAI,QAAQ,gIACR2H,gBAAiB,CACf,CAAEjI,MAAO,YAAaE,MAAO,aAC7B,CAAEF,MAAO,SAAUE,MAAO,gBAIhC,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,YACHC,KAAK,YACLJ,MAAM,YACNU,YAAY,wBACZR,MAAOsK,GACPlK,QAAQ,2DACRL,SAAU,SAACwM,GACThC,GAAYgC,EAAEC,OAAOxM,MACvB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAe,CACdxM,GAAG,cACHC,KAAK,cACLJ,MAAM,cACNU,YAAY,oBACZ2E,KAAK,SACLnF,MAAOwK,GACPpK,QAAQ,8DACRL,SAAU,SAACwM,GACT9B,GAAc8B,EAAEC,OAAOxM,MACzB,OAGJ,SAAC,KAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,UAAWJ,EAAQgM,aAAa,UACjD,SAAC,IAAiB,CAChBxM,GAAG,UACHC,KAAK,UACLJ,MAAM,UACNU,YAAY,4BACZR,MAAO0K,GACP3K,SAAU,SAACwM,GACT5B,GAAW4B,EAAEC,OAAOxM,MACtB,QAKV,G,2BC7YI2M,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sNACD,gBACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBACJN,EAAQ,EAAUG,C,yMCVX,SAASI,EAAsBC,GACpC,OAAOC,EAAAA,EAAAA,GAAqB,YAAaD,EAC3C,CACA,IACA,GADsBE,EAAAA,EAAAA,GAAuB,YAAa,CAAC,OAAQ,YAAa,UAAW,aAAc,eAAgB,iBAAkB,YAAa,aAAc,UAAW,WAAY,QAAS,QAAS,U,WCHzMC,EAAY,CAAC,YAAa,QAAS,OAAQ,OAAQ,MAkCnDC,GAAaC,EAAAA,EAAAA,IAAO,OAAQ,CAChCxN,KAAM,YACNmN,KAAM,OACNM,kBAAmB,SAAC9I,EAAO+I,GACzB,IACEC,EACEhJ,EADFgJ,WAEF,MAAO,CAACD,EAAOhM,KAAMiM,EAAWC,MAAQF,EAAO,OAAD,QAAQG,EAAAA,EAAAA,GAAWF,EAAWC,QAAUF,EAAO,OAAD,QAAQG,EAAAA,EAAAA,GAAWF,EAAWpH,QAC5H,GARiBiH,EAShB,kBACDG,EAAU,EAAVA,WAAU,OACNG,EAAAA,EAAAA,GAAS,CACb/O,QAAS,cACT8C,MAAO,GACPC,OAAQ,GACRiM,SAAU,SACV1O,QAAS,GACT2O,UAAW,aACX9O,SAAU,WACV+O,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,UAEM,UAApBT,EAAWC,MAAoB,CAChCpL,YAAa,GACQ,QAApBmL,EAAWC,MAAkB,CAC9BjG,aAAc,GACO,UAApBgG,EAAWpH,OAAgB,GAC5B1E,MAAO,GACPC,OAAQ,GACRzC,QAAS,IAAC,sBACHgP,EAAAA,OAAwB,CAC7BxM,MAAO,GACPC,OAAQ,MACT,sBACMuM,EAAAA,aAAwB,QAC7BhP,QAAS,GAAC,YACJgP,EAAAA,SAA0B,CAC9BrM,UAAW,sBACZ,GAEH,IACIsM,GAAmBd,EAAAA,EAAAA,IAAOe,EAAAA,EAAY,CAC1CvO,KAAM,YACNmN,KAAM,aACNM,kBAAmB,SAAC9I,EAAO+I,GACzB,IACEC,EACEhJ,EADFgJ,WAEF,MAAO,CAACD,EAAO3L,YAAY,uBAClBsM,EAAAA,OAAwBX,EAAOjF,OAChB,YAArBkF,EAAWlO,OAAuBiO,EAAO,QAAD,QAASG,EAAAA,EAAAA,GAAWF,EAAWlO,SAC5E,GAVuB+N,EAWtB,kBACDnP,EAAK,EAALA,MAAK,UAELa,SAAU,WACV4F,IAAK,EACL0J,KAAM,EACNN,OAAQ,EAERzO,MAAOpB,EAAMoQ,KAAOpQ,EAAMoQ,KAAKxM,QAAQiB,OAAOwL,aAAe,GAAH,OAA6B,UAAvBrQ,EAAM4D,QAAQ0M,KAAmBtQ,EAAM4D,QAAQC,OAAOC,MAAQ9D,EAAM4D,QAAQ2M,KAAK,MACjJjM,WAAYtE,EAAMuE,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DgM,SAAUxQ,EAAMuE,YAAYiM,SAASC,aACrC,qBACIT,EAAAA,SAA0B,CAC9BrM,UAAW,sBACZ,qBACKqM,EAAAA,UAA2B,CAC/B5O,MAAOpB,EAAMoQ,KAAOpQ,EAAMoQ,KAAKxM,QAAQiB,OAAO6L,qBAAuB,GAAH,OAA6B,UAAvB1Q,EAAM4D,QAAQ0M,KAAmBtQ,EAAM4D,QAAQ2M,KAAK,KAAOvQ,EAAM4D,QAAQ2M,KAAK,SACvJ,qBACKP,EAAAA,QAAqB,eAAOA,EAAAA,OAAwB,CACxD1O,QAAS,MACV,qBACK0O,EAAAA,SAAsB,eAAOA,EAAAA,OAAwB,CACzD1O,QAAStB,EAAMoQ,KAAOpQ,EAAMoQ,KAAK9O,QAAQqP,oBAAsB,GAAH,OAA6B,UAAvB3Q,EAAM4D,QAAQ0M,KAAmB,IAAO,OAC3G,sBACMN,EAAAA,OAAwB,CAC7BG,KAAM,QACN3M,MAAO,SACR,KACC,kBACFxD,EAAK,EAALA,MACAsP,EAAU,EAAVA,WAAU,OACNG,EAAAA,EAAAA,GAAS,CACb,UAAW,CACT1L,gBAAiB/D,EAAMoQ,KAAO,QAAH,OAAWpQ,EAAMoQ,KAAKxM,QAAQgN,OAAOC,cAAa,cAAM7Q,EAAMoQ,KAAKxM,QAAQgN,OAAOE,aAAY,MAAMC,EAAAA,EAAAA,IAAM/Q,EAAM4D,QAAQgN,OAAOI,OAAQhR,EAAM4D,QAAQgN,OAAOE,cAEvL,uBAAwB,CACtB/M,gBAAiB,iBAGC,YAArBuL,EAAWlO,QAAmB,2BACzB4O,EAAAA,UAAqB,QACzB5O,OAAQpB,EAAMoQ,MAAQpQ,GAAO4D,QAAQ0L,EAAWlO,OAAO6P,KACvD,UAAW,CACTlN,gBAAiB/D,EAAMoQ,KAAO,QAAH,OAAWpQ,EAAMoQ,KAAKxM,QAAQ0L,EAAWlO,OAAO8P,YAAW,cAAMlR,EAAMoQ,KAAKxM,QAAQgN,OAAOE,aAAY,MAAMC,EAAAA,EAAAA,IAAM/Q,EAAM4D,QAAQ0L,EAAWlO,OAAO6P,KAAMjR,EAAM4D,QAAQgN,OAAOE,cACzM,uBAAwB,CACtB/M,gBAAiB,iBAEpB,YACKiM,EAAAA,UAA2B,CAC/B5O,MAAOpB,EAAMoQ,KAAOpQ,EAAMoQ,KAAKxM,QAAQiB,OAAO,GAAD,OAAIyK,EAAWlO,MAAK,kBAAmB,GAAH,OAA6B,UAAvBpB,EAAM4D,QAAQ0M,MAAmBa,EAAAA,EAAAA,IAAQnR,EAAM4D,QAAQ0L,EAAWlO,OAAO6P,KAAM,MAAQG,EAAAA,EAAAA,IAAOpR,EAAM4D,QAAQ0L,EAAWlO,OAAO6P,KAAM,UAC5N,qBAEGjB,EAAAA,QAAqB,eAAOA,EAAAA,OAAwB,CACxDjM,iBAAkB/D,EAAMoQ,MAAQpQ,GAAO4D,QAAQ0L,EAAWlO,OAAO6P,OAClE,GACD,IACII,GAAclC,EAAAA,EAAAA,IAAO,OAAQ,CACjCxN,KAAM,YACNmN,KAAM,QACNM,kBAAmB,SAAC9I,EAAO+I,GAAM,OAAKA,EAAOjL,KAAK,GAHhC+K,EAIjB,gBACDnP,EAAK,EAALA,MAAK,MACA,CACLyD,OAAQ,OACRD,MAAO,OACPa,aAAc,EACdwL,QAAS,EACTvL,WAAYtE,EAAMuE,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEgM,SAAUxQ,EAAMuE,YAAYiM,SAASC,WAEvC1M,gBAAiB/D,EAAMoQ,KAAOpQ,EAAMoQ,KAAKxM,QAAQC,OAAOyN,aAAe,GAAH,OAA6B,UAAvBtR,EAAM4D,QAAQ0M,KAAmBtQ,EAAM4D,QAAQC,OAAO0N,MAAQvR,EAAM4D,QAAQC,OAAOC,OAC7JxC,QAAStB,EAAMoQ,KAAOpQ,EAAMoQ,KAAK9O,QAAQkQ,YAAc,GAAH,OAA6B,UAAvBxR,EAAM4D,QAAQ0M,KAAmB,IAAO,IACnG,IACKmB,GAActC,EAAAA,EAAAA,IAAO,OAAQ,CACjCxN,KAAM,YACNmN,KAAM,QACNM,kBAAmB,SAAC9I,EAAO+I,GAAM,OAAKA,EAAOnL,KAAK,GAHhCiL,EAIjB,gBACDnP,EAAK,EAALA,MAAK,MACA,CACLgE,WAAYhE,EAAMoQ,MAAQpQ,GAAO0R,QAAQ,GACzC3N,gBAAiB,eACjBP,MAAO,GACPC,OAAQ,GACRY,aAAc,MACf,IA0ID,EAzI4BsN,EAAAA,YAAiB,SAAgBC,EAASC,GACpE,IAAMvL,GAAQwL,EAAAA,EAAAA,GAAc,CAC1BxL,MAAOsL,EACPjQ,KAAM,cAGJW,EAKEgE,EALFhE,UAAS,EAKPgE,EAJFlF,MAAAA,OAAK,IAAG,YAAS,IAIfkF,EAHFiJ,KAAAA,OAAI,IAAG,GAAK,IAGVjJ,EAFF4B,KAAAA,OAAI,IAAG,WAAQ,EACf6J,EACEzL,EADFyL,GAEFC,GAAQC,EAAAA,EAAAA,GAA8B3L,EAAO2I,GACzCK,GAAaG,EAAAA,EAAAA,GAAS,CAAC,EAAGnJ,EAAO,CACrClF,MAAAA,EACAmO,KAAAA,EACArH,KAAAA,IAEIhG,EApLkB,SAAAoN,GACxB,IACEpN,EAMEoN,EANFpN,QACAqN,EAKED,EALFC,KACArH,EAIEoH,EAJFpH,KACA9G,EAGEkO,EAHFlO,MACAqD,EAEE6K,EAFF7K,QACA7C,EACE0N,EADF1N,SAEIsQ,EAAQ,CACZ7O,KAAM,CAAC,OAAQkM,GAAQ,OAAJ,QAAWC,EAAAA,EAAAA,GAAWD,IAAS,OAAF,QAASC,EAAAA,EAAAA,GAAWtH,KACpExE,WAAY,CAAC,aAAc,QAAF,QAAU8L,EAAAA,EAAAA,GAAWpO,IAAUqD,GAAW,UAAW7C,GAAY,YAC1FsC,MAAO,CAAC,SACRE,MAAO,CAAC,SACRgG,MAAO,CAAC,UAEJ+H,GAAkBC,EAAAA,EAAAA,GAAeF,EAAOrD,EAAuB3M,GACrE,OAAOuN,EAAAA,EAAAA,GAAS,CAAC,EAAGvN,EAASiQ,EAC/B,CAkKkBE,CAAkB/C,GAC5BnG,GAAoBmJ,EAAAA,EAAAA,KAAKb,EAAa,CAC1CnP,UAAWJ,EAAQgC,MACnBoL,WAAYA,IAEd,OAAoBiD,EAAAA,EAAAA,MAAMrD,EAAY,CACpC5M,WAAWkD,EAAAA,EAAAA,GAAKtD,EAAQmB,KAAMf,GAC9ByP,GAAIA,EACJzC,WAAYA,EACZkD,SAAU,EAAcF,EAAAA,EAAAA,KAAKrC,GAAkBR,EAAAA,EAAAA,GAAS,CACtD7I,KAAM,WACNuC,KAAMA,EACNF,YAAaE,EACb0I,IAAKA,EACLvC,WAAYA,GACX0C,EAAO,CACR9P,SAASuN,EAAAA,EAAAA,GAAS,CAAC,EAAGvN,EAAS,CAC7BmB,KAAMnB,EAAQwB,iBAEA4O,EAAAA,EAAAA,KAAKjB,EAAa,CAClC/O,UAAWJ,EAAQkC,MACnBkL,WAAYA,MAGlB,G","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/EventDestinations/CustomForms/ConfPostgres.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface SelectorTypes {\n  label: any;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: any;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item fontSize={60}>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"flex\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfPostgresProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfPostgres = ({ onChange, classes }: IConfPostgresProps) => {\n  //Local States\n  const [useConnectionString, setUseConnectionString] =\n    useState<boolean>(false);\n  const [connectionString, setConnectionString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [sslMode, setSslMode] = useState<string>(\" \");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // connection_string*  (string)             Postgres server connection-string e.g. \"host=localhost port=5432 dbname=minio_events user=postgres password=password sslmode=disable\"\n\n  //  \"host=localhost\n  // port=5432\n  //dbname=minio_events\n  //user=postgres\n  //password=password\n  //sslmode=disable\"\n\n  // table*              (string)             DB table name to store/update events, table is auto-created\n  // format*             (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir           (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit         (number)             maximum limit for undelivered messages, defaults to '10000'\n  // comment             (sentence)           optionally add a comment to this setting\n\n  const KvSeparator = \"=\";\n  const parseConnectionString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let valueIndexes: number[] = [];\n\n    for (const key of keys) {\n      const i = input.indexOf(key + KvSeparator);\n      if (i === -1) {\n        continue;\n      }\n      valueIndexes.push(i);\n    }\n    valueIndexes.sort((n1, n2) => n1 - n2);\n\n    let kvFields = new Map<string, string>();\n    let fields: string[] = new Array<string>(valueIndexes.length);\n    for (let i = 0; i < valueIndexes.length; i++) {\n      const j = i + 1;\n      if (j < valueIndexes.length) {\n        fields[i] = input.slice(valueIndexes[i], valueIndexes[j]);\n      } else {\n        fields[i] = input.slice(valueIndexes[i]);\n      }\n    }\n\n    for (let field of fields) {\n      if (field === undefined) {\n        continue;\n      }\n      const key = field.slice(0, field.indexOf(\"=\"));\n      const value = field.slice(field.indexOf(\"=\") + 1).trim();\n      kvFields.set(key, value);\n    }\n    return kvFields;\n  };\n\n  const configToString = useCallback((): string => {\n    let strValue = \"\";\n    if (host !== \"\") {\n      strValue = `${strValue} host=${host}`;\n    }\n    if (dbName !== \"\") {\n      strValue = `${strValue} dbname=${dbName}`;\n    }\n    if (user !== \"\") {\n      strValue = `${strValue} user=${user}`;\n    }\n    if (password !== \"\") {\n      strValue = `${strValue} password=${password}`;\n    }\n    if (port !== \"\") {\n      strValue = `${strValue} port=${port}`;\n    }\n    if (sslMode !== \" \") {\n      strValue = `${strValue} sslmode=${sslMode}`;\n    }\n\n    strValue = `${strValue} `;\n\n    return strValue.trim();\n  }, [host, dbName, user, password, port, sslMode]);\n\n  useEffect(() => {\n    if (connectionString !== \"\") {\n      const formValues = [\n        { key: \"connection_string\", value: connectionString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [\n    connectionString,\n    table,\n    format,\n    queueDir,\n    queueLimit,\n    comment,\n    onChange,\n  ]);\n\n  useEffect(() => {\n    const cs = configToString();\n    setConnectionString(cs);\n  }, [\n    user,\n    dbName,\n    password,\n    port,\n    sslMode,\n    host,\n    setConnectionString,\n    configToString,\n  ]);\n\n  useEffect(() => {\n    if (useConnectionString) {\n      // build connection_string\n      const cs = configToString();\n      setConnectionString(cs);\n\n      return;\n    }\n    // parse connection_string\n    const kv = parseConnectionString(connectionString, [\n      \"host\",\n      \"port\",\n      \"dbname\",\n      \"user\",\n      \"password\",\n      \"sslmode\",\n    ]);\n    setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n    setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n    setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n    setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n    setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    setSslMode(kv.get(\"sslmode\") ? kv.get(\"sslmode\") + \"\" : \" \");\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useConnectionString]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Manually Configure String\"}\n          checked={useConnectionString}\n          id=\"manualString\"\n          name=\"manualString\"\n          onChange={(e) => {\n            setUseConnectionString(e.target.checked);\n          }}\n          value={\"manualString\"}\n        />\n      </Grid>\n      {useConnectionString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"connection-string\"\n              name=\"connection_string\"\n              label=\"Connection String\"\n              value={connectionString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setConnectionString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <SelectWrapper\n                  value={sslMode}\n                  label=\"\"\n                  id=\"sslmode\"\n                  name=\"sslmode\"\n                  onChange={(e): void => {\n                    if (e.target.value !== undefined) {\n                      setSslMode(e.target.value + \"\");\n                    }\n                  }}\n                  options={[\n                    { label: \"Enter SSL Mode\", value: \" \" },\n                    { label: \"Require\", value: \"require\" },\n                    { label: \"Disable\", value: \"disable\" },\n                    { label: \"Verify CA\", value: \"verify-ca\" },\n                    { label: \"Verify Full\", value: \"verify-full\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList\n            label={\"Connection String\"}\n            content={connectionString}\n          />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder={\"Enter Table Name\"}\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Directory\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter custom notes if any\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfPostgres);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","label","onChange","value","id","name","disabled","tooltip","index","error","required","placeholder","classes","inputProps","item","xs","className","fieldContainer","errorInField","htmlFor","tooltipContainer","title","placement","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","StyledSwitch","width","height","switchBase","transform","palette","common","white","backgroundColor","boxShadow","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","indicatorLabelOn","indicatorLabel","fieldDescription","marginTop","actionsTray","switchOnly","description","indicatorLabels","extraInputProps","switchComponent","clsx","length","disableRipple","disableFocusRipple","disableTouchRipple","container","sm","md","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","useState","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","inputBoxContainer","noMinWidthLabel","inputRebase","onClick","size","predefinedList","content","multiLine","actionButton","Fragment","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","optionLabel","marginRight","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","spacing","row","style","map","selectorOption","control","SelectStyled","lineHeight","input","InputBase","flexFlow","options","option","modalBasic","formFieldStyles","useConnectionString","setUseConnectionString","connectionString","setConnectionString","host","setHostname","dbName","setDbName","port","setPort","user","setUser","password","setPassword","sslMode","setSslMode","table","setTable","format","setFormat","queueDir","setQueueDir","queueLimit","setQueueLimit","comment","setComment","configToString","useCallback","strValue","trim","useEffect","key","cs","kv","keys","valueIndexes","i","indexOf","push","sort","n1","n2","kvFields","Map","fields","Array","j","slice","field","undefined","set","parseConnectionString","get","e","target","formFieldRow","configureString","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","styles","ownerState","edge","capitalize","_extends","overflow","boxSizing","flexShrink","zIndex","verticalAlign","colorAdjust","switchClasses","SwitchSwitchBase","SwitchBase","left","vars","defaultColor","mode","grey","duration","shortest","defaultDisabledColor","switchTrackDisabled","action","activeChannel","hoverOpacity","alpha","active","main","mainChannel","lighten","darken","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","shadows","React","inProps","ref","useThemeProps","sx","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","children"],"sourceRoot":""}