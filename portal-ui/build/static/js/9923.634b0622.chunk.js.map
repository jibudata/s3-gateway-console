{"version":3,"file":"static/js/9923.634b0622.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/VolumesSummary.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IPVCsResponse, IStoragePVCs } from \"../../Storage/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport SearchIcon from \"../../../../icons/SearchIcon\";\n\ninterface ITenantVolumesProps {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  match: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"450px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantVolumes = ({\n  classes,\n  setErrorSnackMessage,\n  match,\n}: ITenantVolumesProps) => {\n  const [records, setRecords] = useState<IStoragePVCs[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/pvcs`\n        )\n        .then((res: IPVCsResponse) => {\n          let volumes = get(res, \"pvcs\", []);\n          setRecords(volumes ? volumes : []);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [loading, setErrorSnackMessage, tenantName, tenantNamespace]);\n\n  const filteredRecords: IStoragePVCs[] = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <Fragment>\n      <h1 className={classes.sectionTitle}>Volumes</h1>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Search Volumes (PVCs)\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => {\n            setFilter(e.target.value);\n          }}\n          variant=\"standard\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12} className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={[]}\n          columns={[\n            {\n              label: \"Name\",\n              elementKey: \"name\",\n            },\n            {\n              label: \"Status\",\n              elementKey: \"status\",\n              width: 120,\n            },\n            {\n              label: \"Capacity\",\n              elementKey: \"capacity\",\n              width: 120,\n            },\n            {\n              label: \"Storage Class\",\n              elementKey: \"storageClass\",\n            },\n          ]}\n          isLoading={loading}\n          records={filteredRecords}\n          entityName=\"PVCs\"\n          idField=\"name\"\n          customPaperHeight={classes.tableWrapper}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantVolumes));\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["mapDispatchToProps","setErrorSnackMessage","connector","connect","withStyles","theme","createStyles","tableWrapper","height","actionsTray","searchField","tableStyles","containerForHeader","spacing","classes","match","useState","records","setRecords","filter","setFilter","loading","setLoading","tenantName","params","tenantNamespace","useEffect","api","then","res","volumes","get","catch","err","filteredRecords","elementItem","name","includes","Fragment","className","sectionTitle","item","xs","placeholder","id","label","InputProps","disableUnderline","startAdornment","position","onChange","e","target","value","variant","tableBlock","itemActions","columns","elementKey","width","isLoading","entityName","idField","customPaperHeight","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","_extends","display","maxHeight","alignItems","whiteSpace","color","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","dangerouslySetInnerHTML","__html","Typography"],"sourceRoot":""}