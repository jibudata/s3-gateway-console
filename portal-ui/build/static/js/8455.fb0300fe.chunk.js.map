{"version":3,"file":"static/js/8455.fb0300fe.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditAccessRule.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IEditAccessRule {\n  classes: any;\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toEdit: string;\n  initial: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst EditAccessRule = ({\n  modalOpen,\n  onClose,\n  classes,\n  bucket,\n  toEdit,\n  initial,\n}: IEditAccessRule) => {\n  const dispatch = useAppDispatch();\n  const [selectedAccess, setSelectedAccess] = useState<any>(initial);\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setSelectedAccess(initial);\n  };\n\n  const createProcess = () => {\n    api\n      .invoke(\"PUT\", `/api/v1/bucket/${bucket}/access-rules`, {\n        prefix: toEdit,\n        access: selectedAccess,\n      })\n      .then((res: any) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        onClose();\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title={`Edit Anonymous Access Rule for ${`${bucket}/${toEdit || \"\"}`}`}\n        onClose={onClose}\n        titleIcon={<AddAccessRuleIcon />}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.spacerTop}>\n            <SelectWrapper\n              id=\"access\"\n              name=\"Access\"\n              onChange={(e) => {\n                setSelectedAccess(e.target.value);\n              }}\n              label=\"Access\"\n              value={selectedAccess}\n              options={accessOptions}\n              disabled={false}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"clear\"}\n              type=\"button\"\n              variant=\"regular\"\n              onClick={resetForm}\n              label={\"Clear\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              onClick={createProcess}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditAccessRule);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n"],"names":["withStyles","theme","createStyles","_objectSpread","modalStyleUtils","spacingUtils","_ref","modalOpen","onClose","classes","bucket","toEdit","initial","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","selectedAccess","setSelectedAccess","_jsx","React","children","ModalWrapper","title","concat","titleIcon","AddAccessRuleIcon","_jsxs","Grid","container","item","xs","className","spacerTop","SelectWrapper","id","name","onChange","e","target","value","label","options","disabled","modalButtonBar","Button","type","variant","onClick","api","invoke","prefix","access","then","res","catch","err","setErrorSnackMessage","SelectStyled","root","height","lineHeight","marginTop","spacing","input","position","color","fontSize","fontWeight","padding","border","borderRadius","display","alignItems","borderColor","backgroundColor","InputBase","fieldBasic","tooltipHelper","fieldContainer","flexFlow","_ref$tooltip","tooltip","_ref$disabled","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","FormControl","fullWidth","Select","map","option","MenuItem"],"sourceRoot":""}