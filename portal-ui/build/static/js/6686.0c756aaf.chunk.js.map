{"version":3,"file":"static/js/6686.0c756aaf.chunk.js","mappings":"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","sources":["screens/Console/EventDestinations/ConfirmDeleteDestinationModal.tsx","screens/Console/EventDestinations/ListEventDestinations.tsx","screens/Console/EventDestinations/utils.ts","../node_modules/@mui/icons-material/FiberManualRecord.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/material/utils/createChainedFunction.js","../node_modules/@mui/material/utils/deprecatedPropType.js","../node_modules/@mui/utils/esm/deprecatedPropType.js","../node_modules/@mui/material/utils/requirePropFactory.js","../node_modules/@mui/utils/esm/requirePropFactory.js","../node_modules/@mui/material/utils/setRef.js","../node_modules/@mui/material/utils/unsupportedProp.js","../node_modules/@mui/utils/esm/unsupportedProp.js","../node_modules/@mui/material/utils/index.js","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement.js","../node_modules/@mui/utils/esm/createChainedFunction.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\n\nconst ConfirmDeleteDestinationModal = ({\n  onConfirm,\n  onClose,\n  serviceName,\n  status,\n}: {\n  onConfirm: () => void;\n  onClose: () => void;\n  serviceName: string;\n  status: string;\n}) => {\n  return (\n    <ConfirmDialog\n      title={`Delete Endpoint`}\n      confirmText={\"Delete\"}\n      isOpen={true}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={false}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      confirmationContent={\n        <React.Fragment>\n          Are you sure you want to delete the event destination ?\n          <br />\n          <b>{serviceName}</b> which is <b>{status}</b>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default ConfirmDeleteDestinationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  AddIcon,\n  Box,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  LambdaIcon,\n  PageLayout,\n  RefreshIcon,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport { TransformedEndpointItem } from \"./types\";\nimport { getNotificationConfigKey, notificationTransform } from \"./utils\";\n\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport AButton from \"../Common/AButton/AButton\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport ConfirmDeleteDestinationModal from \"./ConfirmDeleteDestinationModal\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { setDestinationLoading } from \"./destinationsSlice\";\nimport { api } from \"api\";\nimport { NotificationEndpointItem } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IListNotificationEndpoints {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...settingsCommon,\n    ...containerForHeader,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    rightActionItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        whiteSpace: \"nowrap\",\n      },\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n  });\n\nconst ListEventDestinations = ({ classes }: IListNotificationEndpoints) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  // Reducer States\n  const isLoading = useSelector((state: AppState) => state.destination.loading);\n\n  //Local States\n  const [records, setRecords] = useState<TransformedEndpointItem[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const [isDelConfirmOpen, setIsDelConfirmOpen] = useState<boolean>(false);\n  const [selNotifyEndPoint, setSelNotifyEndpoint] =\n    useState<TransformedEndpointItem | null>();\n\n  //Effects\n  // load records on mount\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api.admin\n          .notificationEndpointList()\n          .then((res) => {\n            let resNotEndList: NotificationEndpointItem[] = [];\n            if (res.data.notification_endpoints) {\n              resNotEndList = res.data.notification_endpoints;\n            }\n            setRecords(notificationTransform(resNotEndList));\n            dispatch(setDestinationLoading(false));\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n            dispatch(setDestinationLoading(false));\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    dispatch(setDestinationLoading(true));\n  }, [dispatch]);\n\n  const resetNotificationConfig = (\n    ep: TransformedEndpointItem | undefined | null,\n  ) => {\n    if (ep?.name) {\n      const configKey = getNotificationConfigKey(ep.name);\n      let accountId = `:${ep.account_id}`;\n      if (configKey) {\n        api.configs\n          .resetConfig(`${configKey}${accountId}`)\n          .then(() => {\n            dispatch(setServerNeedsRestart(true));\n            setSelNotifyEndpoint(null);\n            setIsDelConfirmOpen(false);\n            dispatch(setDestinationLoading(true));\n          })\n          .catch((err) => {\n            setIsDelConfirmOpen(false);\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n      } else {\n        setSelNotifyEndpoint(null);\n        setIsDelConfirmOpen(false);\n        console.log(`Unable to find Config key for ${ep.name}`);\n      }\n    }\n  };\n\n  const confirmDelNotifyEndpoint = (record: TransformedEndpointItem) => {\n    setSelNotifyEndpoint(record);\n    setIsDelConfirmOpen(true);\n  };\n\n  const tableActions = [{ type: \"delete\", onClick: confirmDelNotifyEndpoint }];\n\n  const filteredRecords = records.filter((b: TransformedEndpointItem) => {\n    if (filter === \"\") {\n      return true;\n    }\n    return b.service_name.indexOf(filter) >= 0;\n  });\n\n  const statusDisplay = (status: string) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <FiberManualRecordIcon\n          style={status === \"Offline\" ? { color: red[500] } : {}}\n        />\n        {status}\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageLayout>\n        <Grid container sx={{ width: \"100%\" }}>\n          <Grid item xs={12} className={classes.actionsTray}>\n            <SearchBox\n              placeholder=\"Search target\"\n              onChange={setFilter}\n              overrideClass={classes.searchField}\n              value={filter}\n            />\n            <div className={classes.rightActionItems}>\n              <TooltipWrapper tooltip={\"Refresh List\"}>\n                <Button\n                  id={\"reload-event-destinations\"}\n                  label={\"Refresh\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => {\n                    dispatch(setDestinationLoading(true));\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Add Event Destination\"}>\n                <Button\n                  id={\"add-notification-target\"}\n                  label={\"Add Event Destination\"}\n                  variant=\"callAction\"\n                  icon={<AddIcon />}\n                  onClick={() => {\n                    navigate(IAM_PAGES.EVENT_DESTINATIONS_ADD);\n                  }}\n                />\n              </TooltipWrapper>\n            </div>\n          </Grid>\n          {isLoading && <LinearProgress />}\n          {!isLoading && (\n            <Fragment>\n              {records.length > 0 && (\n                <Fragment>\n                  <Grid item xs={12} className={classes.tableBlock}>\n                    <Box sx={{ width: \"100%\" }}>\n                      <DataTable\n                        itemActions={tableActions}\n                        columns={[\n                          {\n                            label: \"Status\",\n                            elementKey: \"status\",\n                            renderFunction: statusDisplay,\n                            width: 150,\n                          },\n                          { label: \"Service\", elementKey: \"service_name\" },\n                        ]}\n                        isLoading={isLoading}\n                        records={filteredRecords}\n                        entityName=\"Event Destinations\"\n                        idField=\"service_name\"\n                        customPaperHeight={\"400px\"}\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sx={{ marginTop: 15 }}>\n                    <HelpBox\n                      title={\"Event Destinations\"}\n                      iconComponent={<LambdaIcon />}\n                      help={\n                        <Fragment>\n                          MinIO bucket notifications allow administrators to\n                          send notifications to supported external services on\n                          certain object or bucket events. MinIO supports bucket\n                          and object-level S3 events similar to the Amazon S3\n                          Event Notifications.\n                          <br />\n                          <br />\n                          You can learn more at our{\" \"}\n                          <a\n                            href=\"https://min.io/docs/minio/linux/administration/monitoring/bucket-notifications.html?ref=con\"\n                            target=\"_blank\"\n                            rel=\"noopener\"\n                          >\n                            documentation\n                          </a>\n                          .\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Fragment>\n              )}\n              {records.length === 0 && (\n                <Grid\n                  container\n                  sx={{\n                    justifyContent: \"center\",\n                    alignContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Grid item xs={8}>\n                    <HelpBox\n                      title={\"Event Destinations\"}\n                      iconComponent={<LambdaIcon />}\n                      help={\n                        <Fragment>\n                          MinIO bucket notifications allow administrators to\n                          send notifications to supported external services on\n                          certain object or bucket events. MinIO supports bucket\n                          and object-level S3 events similar to the Amazon S3\n                          Event Notifications.\n                          <br />\n                          <br />\n                          To get started,{\" \"}\n                          <AButton\n                            onClick={() => {\n                              navigate(IAM_PAGES.EVENT_DESTINATIONS_ADD);\n                            }}\n                          >\n                            Add an Event Destination\n                          </AButton>\n                          .\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n\n          {isDelConfirmOpen ? (\n            <ConfirmDeleteDestinationModal\n              onConfirm={() => {\n                resetNotificationConfig(selNotifyEndPoint);\n              }}\n              status={`${selNotifyEndPoint?.status}`}\n              serviceName={`${selNotifyEndPoint?.service_name}`}\n              onClose={() => {\n                setIsDelConfirmOpen(false);\n              }}\n            />\n          ) : null}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListEventDestinations);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"api/consoleApi\";\nimport { IElementValue } from \"../Configurations/types\";\nimport { TransformedEndpointItem } from \"./types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[],\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  }) as TransformedEndpointItem[];\n};\n\nexport class DestType {\n  static DB: string = \"database\";\n  static Queue: string = \"queue\";\n  static Func: string = \"functions\";\n}\n\nexport const destinationList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n    category: DestType.Queue,\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n    category: DestType.DB,\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n    category: DestType.Func,\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n    category: DestType.Queue,\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue_dir\",\n    label: \"Queue Directory\",\n    required: false,\n\n    tooltip: \"Staging directory for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue_limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"Maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS authorization\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address e.g. `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"Name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Interval\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on' to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on' to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS authorization\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"Webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"Opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"8\"\n}), 'FiberManualRecord');\nexports.default = _default;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","import { unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nexport default createChainedFunction;","import { unstable_deprecatedPropType as deprecatedPropType } from '@mui/utils';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n    return null;\n  };\n}","import { unstable_requirePropFactory as requirePropFactory } from '@mui/utils';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}","import { unstable_setRef as setRef } from '@mui/utils';\nexport default setRef;","import { unstable_unsupportedProp as unsupportedProp } from '@mui/utils';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n  const propFullNameSafe = propFullName || propName;\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n  return null;\n}","'use client';\n\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/className';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';\n// TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    }\n    ClassNameGenerator.configure(generator);\n  }\n};","import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","/**\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n */\nexport default function createChainedFunction(...funcs) {\n  return funcs.reduce((acc, func) => {\n    if (func == null) {\n      return acc;\n    }\n    return function chainedFunction(...args) {\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, () => {});\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_ref","onConfirm","onClose","serviceName","status","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmModalIcon","isLoading","confirmationContent","_jsxs","React","children","withStyles","theme","createStyles","_objectSpread","actionsTray","settingsCommon","containerForHeader","tableBlock","tableStyles","rightActionItems","display","alignItems","whiteSpace","searchField","maxWidth","classes","dispatch","useAppDispatch","navigate","useNavigate","useSelector","state","destination","loading","_useState","useState","_useState2","_slicedToArray","records","setRecords","_useState3","_useState4","filter","setFilter","_useState5","_useState6","isDelConfirmOpen","setIsDelConfirmOpen","_useState7","_useState8","selNotifyEndPoint","setSelNotifyEndpoint","useEffect","api","admin","notificationEndpointList","then","res","resNotEndList","data","notification_endpoints","notificationTransform","setDestinationLoading","catch","err","setErrorSnackMessage","errorToHandler","error","tableActions","type","onClick","record","filteredRecords","b","service_name","indexOf","Fragment","PageLayout","Grid","container","sx","width","item","xs","className","SearchBox","placeholder","onChange","overrideClass","value","TooltipWrapper","tooltip","Button","id","label","variant","icon","RefreshIcon","AddIcon","IAM_PAGES","EVENT_DESTINATIONS_ADD","LinearProgress","length","Box","DataTable","itemActions","columns","elementKey","renderFunction","style","FiberManualRecordIcon","color","red","entityName","idField","customPaperHeight","marginTop","HelpBox","iconComponent","LambdaIcon","help","href","target","rel","justifyContent","alignContent","AButton","ConfirmDeleteDestinationModal","ep","name","configKey","getNotificationConfigKey","accountId","concat","account_id","configs","resetConfig","setServerNeedsRestart","console","log","resetNotificationConfig","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationElements","map","element","service","DestType","_createClass","_classCallCheck","DB","Queue","Func","destinationList","actionTrigger","targetTitle","logo","category","commonFields","required","removeEmptyFields","formFields","field","notificationEndpointsFields","_notificationEndpoint","_defineProperty","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","Object","defineProperty","enumerable","get","_utils","createSvgIcon","createChainedFunction","validator","reason","componentNameInError","Component","props","propName","componentName","location","propFullName","unstable_ClassNameGenerator","configure","generator","ClassNameGenerator","muiNames","muiName","_len","arguments","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","module","obj","__esModule"],"sourceRoot":""}