{"version":3,"file":"static/js/3067.bbee77bd.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Support/RegisterCluster.tsx","screens/Console/Support/CallHomeConfirmation.tsx","screens/Console/Support/CallHome.tsx","screens/Console/Tools/Tools.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HelpBox, WarnIcon, Grid } from \"mds\";\n\ninterface IRegisterCluster {\n  compactMode?: boolean;\n}\n\nconst RegisterCluster = ({ compactMode = false }: IRegisterCluster) => {\n  const navigate = useNavigate();\n\n  const redirectButton = (\n    <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => navigate(\"/support/register\")}\n    >\n      Register your Cluster\n    </Button>\n  );\n\n  const registerMessage =\n    \"Use your MinIO Subscription Network login credentials to register this cluster.\";\n\n  if (compactMode) {\n    return (\n      <Fragment>\n        <Grid\n          sx={{\n            \"& div.leftItems\": {\n              marginBottom: 0,\n            },\n          }}\n        >\n          <HelpBox\n            title={\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  flexGrow: 1,\n                }}\n              >\n                <span>{registerMessage}</span> {redirectButton}\n              </div>\n            }\n            iconComponent={<WarnIcon />}\n            help={<Fragment />}\n          />\n        </Grid>\n        <br />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        padding: \"25px\",\n        border: \"1px solid #eaeaea\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n        marginBottom: \"15px\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              marginRight: \"8px\",\n              fontSize: \"16px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n\n              \"& .min-icon\": {\n                width: \"83px\",\n                height: \"14px\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n              },\n            }}\n          >\n            Register your cluster\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: {\n                xs: \"column\",\n                md: \"row\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                flex: \"2\",\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {registerMessage}\n              </Box>\n              <Box\n                sx={{\n                  flex: \"1\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  {redirectButton}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegisterCluster;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, CallHomeMenuIcon, CircleIcon, Grid } from \"mds\";\nimport { LinearProgress } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { ICallHomeResponse } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage, setSnackBarMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\n\ninterface ICallHomeConfirmation {\n  onClose: (refresh: boolean) => any;\n  open: boolean;\n  diagStatus: boolean;\n  logsStatus: boolean;\n  disable?: boolean;\n}\n\nconst CallHomeConfirmation = ({\n  onClose,\n  diagStatus,\n  logsStatus,\n  open,\n  disable = false,\n}: ICallHomeConfirmation) => {\n  const dispatch = useAppDispatch();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onConfirmAction = () => {\n    setLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/support/callhome`, {\n        diagState: disable ? false : diagStatus,\n        logsState: disable ? false : logsStatus,\n      })\n      .then((res: ICallHomeResponse) => {\n        dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        setLoading(false);\n        onClose(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      title={disable ? \"Disable Call Home\" : \"Edit Call Home Configurations\"}\n      onClose={() => onClose(false)}\n      titleIcon={<CallHomeMenuIcon />}\n    >\n      {disable ? (\n        <Fragment>\n          Please Acknowledge that after doing this action, we will no longer\n          receive updated cluster information automatically, losing the\n          potential benefits that Call Home provides to your MinIO cluster.\n          <Grid item xs={12} sx={{ margin: \"15px 0\" }}>\n            Are you sure you want to disable SUBNET Call Home?\n          </Grid>\n          <br />\n          {loading && (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                marginBottom: 10,\n              }}\n            >\n              <LinearProgress />\n            </Grid>\n          )}\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"reset\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => onClose(false)}\n              label={\"Cancel\"}\n              sx={{\n                marginRight: 10,\n              }}\n            />\n            <Button\n              id={\"save-lifecycle\"}\n              type=\"submit\"\n              variant={\"secondary\"}\n              color=\"primary\"\n              disabled={loading}\n              label={\"Yes, Disable Call Home\"}\n              onClick={onConfirmAction}\n            />\n          </Grid>\n        </Fragment>\n      ) : (\n        <Fragment>\n          Are you sure you want to change the following configurations for\n          SUBNET Call Home:\n          <Grid\n            item\n            sx={{\n              margin: \"20px 0\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 15,\n            }}\n          >\n            <Grid item sx={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\n              <CircleIcon\n                style={{ fill: diagStatus ? \"#4CCB92\" : \"#C83B51\", width: 20 }}\n              />\n              <span>\n                <strong>{diagStatus ? \"Enable\" : \"Disable\"}</strong> - Send\n                Diagnostics Information to SUBNET\n              </span>\n            </Grid>\n            <Grid item sx={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\n              <CircleIcon\n                style={{ fill: logsStatus ? \"#4CCB92\" : \"#C83B51\", width: 20 }}\n              />\n              <span>\n                <strong>{logsStatus ? \"Enable\" : \"Disable\"}</strong> - Send Logs\n                Information to SUBNET\n              </span>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sx={{ margin: \"15px 0\" }}>\n            Please Acknowledge that the information provided will only be\n            available in your SUBNET Account and it will not be shared to other\n            persons or entities besides MinIO team and you.\n          </Grid>\n          {loading && (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                marginBottom: 10,\n              }}\n            >\n              <LinearProgress />\n            </Grid>\n          )}\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"reset\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => onClose(false)}\n              label={\"Cancel\"}\n              sx={{\n                marginRight: 10,\n              }}\n            />\n            <Button\n              id={\"save-lifecycle\"}\n              type=\"submit\"\n              variant={\"callAction\"}\n              color=\"primary\"\n              disabled={loading}\n              label={\"Yes, Save this Configuration\"}\n              onClick={onConfirmAction}\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default CallHomeConfirmation;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button, CallHomeMenuIcon, HelpBox, Loader } from \"mds\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { ICallHomeResponse } from \"./types\";\nimport { registeredCluster } from \"../../../config\";\nimport CallHomeConfirmation from \"./CallHomeConfirmation\";\nimport RegisterCluster from \"./RegisterCluster\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst PromoLabels = ({ title, text }: { title: string; text: string }) => {\n  return (\n    <div style={{ marginTop: 15 }}>\n      <div style={{ marginBottom: 10, fontWeight: \"bold\" }}>{title}</div>\n      <div style={{ color: \"#969696\", fontSize: 12, marginBottom: 40 }}>\n        {text}\n      </div>\n    </div>\n  );\n};\n\nconst CallHome = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showConfirmation, setShowConfirmation] = useState<boolean>(false);\n  const [diagEnabled, setDiagEnabled] = useState<boolean>(false);\n  const [oDiagEnabled, setODiagEnabled] = useState<boolean>(false);\n  const [oLogsEnabled, setOLogsEnabled] = useState<boolean>(false);\n  const [logsEnabled, setLogsEnabled] = useState<boolean>(false);\n  const [disableMode, setDisableMode] = useState<boolean>(false);\n\n  const clusterRegistered = registeredCluster();\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/support/callhome`)\n        .then((res: ICallHomeResponse) => {\n          setLoading(false);\n\n          setDiagEnabled(!!res.diagnosticsStatus);\n          setLogsEnabled(!!res.logsStatus);\n\n          setODiagEnabled(!!res.diagnosticsStatus);\n          setOLogsEnabled(!!res.logsStatus);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, dispatch]);\n\n  const callHomeClose = (refresh: boolean) => {\n    if (refresh) {\n      setLoading(true);\n    }\n    setShowConfirmation(false);\n  };\n\n  const confirmCallHomeAction = () => {\n    if (!clusterRegistered) {\n      navigate(\"/support/register\");\n      return;\n    }\n    setDisableMode(false);\n    setShowConfirmation(true);\n  };\n\n  const disableCallHomeAction = () => {\n    setDisableMode(true);\n    setShowConfirmation(true);\n  };\n\n  let mainVariant: \"regular\" | \"callAction\" = \"regular\";\n\n  if (\n    clusterRegistered &&\n    (diagEnabled !== oDiagEnabled || logsEnabled !== oLogsEnabled)\n  ) {\n    mainVariant = \"callAction\";\n  }\n\n  return (\n    <Fragment>\n      {showConfirmation && (\n        <CallHomeConfirmation\n          onClose={callHomeClose}\n          open={showConfirmation}\n          logsStatus={logsEnabled}\n          diagStatus={diagEnabled}\n          disable={disableMode}\n        />\n      )}\n      <PageHeaderWrapper label=\"Call Home\" />\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n            border: \"1px solid #eaeaea\",\n            padding: {\n              lg: \"40px\",\n              xs: \"15px\",\n            },\n            flexWrap: \"wrap\",\n            gap: {\n              lg: \"55px\",\n              xs: \"20px\",\n            },\n            height: {\n              md: \"calc(100vh - 120px)\",\n              xs: \"100%\",\n            },\n            flexFlow: {\n              lg: \"row\",\n              xs: \"column\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              border: \"1px solid #eaeaea\",\n              flex: {\n                md: 2,\n                xs: 1,\n              },\n              width: {\n                lg: \"auto\",\n                xs: \"100%\",\n              },\n              padding: {\n                lg: \"40px\",\n                xs: \"15px\",\n              },\n            }}\n          >\n            {loading ? (\n              <span style={{ marginLeft: 5 }}>\n                <Loader style={{ width: 16, height: 16 }} />\n              </span>\n            ) : (\n              <Fragment>\n                <div style={{ marginBottom: 25 }}>\n                  <FormSwitchWrapper\n                    value=\"enableDiag\"\n                    id=\"enableDiag\"\n                    name=\"enableDiag\"\n                    checked={diagEnabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      setDiagEnabled(event.target.checked);\n                    }}\n                    label={\"Daily Health Report\"}\n                    disabled={!clusterRegistered}\n                  />\n                  <PromoLabels\n                    title={\"When you enable diagnostics\"}\n                    text={\n                      \"Daily Health Report enables you to proactively identify potential issues in your deployment before they escalate.\"\n                    }\n                  />\n                </div>\n                <div>\n                  <FormSwitchWrapper\n                    value=\"enableLogs\"\n                    id=\"enableLogs\"\n                    name=\"enableLogs\"\n                    checked={logsEnabled}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      setLogsEnabled(event.target.checked);\n                    }}\n                    label={\"Live Error Logs\"}\n                    disabled={!clusterRegistered}\n                  />\n                  <PromoLabels\n                    title={\"When you enable logs\"}\n                    text={\n                      \"Live Error Logs will enable MinIO's support team and automatic diagnostics system to catch failures early.\"\n                    }\n                  />\n                </div>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"55px\",\n                    gap: \"0px 10px\",\n                  }}\n                >\n                  {(oDiagEnabled || oLogsEnabled) && (\n                    <Button\n                      id={\"callhome-action\"}\n                      variant={\"secondary\"}\n                      data-test-id=\"call-home-toggle-button\"\n                      onClick={disableCallHomeAction}\n                      disabled={loading}\n                    >\n                      Disable Call Home\n                    </Button>\n                  )}\n                  <Button\n                    id={\"callhome-action\"}\n                    type=\"button\"\n                    variant={mainVariant}\n                    data-test-id=\"call-home-toggle-button\"\n                    onClick={confirmCallHomeAction}\n                    disabled={loading}\n                  >\n                    Save Configuration\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n          </Box>\n          <Box\n            sx={{\n              flex: 1,\n              minWidth: {\n                md: \"365px\",\n                xs: \"100%\",\n              },\n              width: \"100%\",\n            }}\n          >\n            <HelpBox\n              title={\"\"}\n              iconComponent={null}\n              help={\n                <Fragment>\n                  <Box\n                    sx={{\n                      marginTop: \"-25px\",\n                      fontSize: \"16px\",\n                      fontWeight: 600,\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                      padding: \"2px\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        backgroundColor: \"#07193E\",\n                        height: \"15px\",\n                        width: \"15px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        borderRadius: \"50%\",\n                        marginRight: \"18px\",\n                        padding: \"3px\",\n                        \"& .min-icon\": {\n                          height: \"11px\",\n                          width: \"11px\",\n                          fill: \"#ffffff\",\n                        },\n                      }}\n                    >\n                      <CallHomeMenuIcon />\n                    </Box>\n                    Learn more about Call Home\n                  </Box>\n\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      flexFlow: \"column\",\n                      fontSize: \"14px\",\n                      flex: \"2\",\n                      marginTop: \"10px\",\n                    }}\n                  >\n                    <Box>\n                      Enabling Call Home sends cluster health & status to your\n                      registered MinIO Subscription Network account every 24\n                      hours.\n                      <br />\n                      <br />\n                      This helps the MinIO support team to provide quick\n                      incident responses along with suggestions for possible\n                      improvements that can be made to your MinIO instances.\n                      <br />\n                      <br />\n                      Your cluster must be{\" \"}\n                      <Link to={\"/support/register\"}>registered</Link> in the\n                      MinIO Subscription Network (SUBNET) before enabling this\n                      feature.\n                    </Box>\n                  </Box>\n                </Fragment>\n              }\n            />\n          </Box>\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default CallHome;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport NotFoundPage from \"../../NotFoundPage\";\nimport CallHome from \"../Support/CallHome\";\n\nconst Inspect = withSuspense(React.lazy(() => import(\"./Inspect\")));\nconst Register = withSuspense(React.lazy(() => import(\"../Support/Register\")));\nconst Profile = withSuspense(React.lazy(() => import(\"../Support/Profile\")));\n\nconst Tools = () => {\n  return (\n    <Routes>\n      <Route path={\"register\"} element={<Register />} />\n      <Route path={\"profile\"} element={<Profile />} />\n      <Route path={\"call-home\"} element={<CallHome />} />\n      <Route path={\"inspect\"} element={<Inspect />} />\n      <Route path={\"*\"} element={<NotFoundPage />} />\n    </Routes>\n  );\n};\n\nexport default Tools;\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","compactMode","navigate","useNavigate","redirectButton","type","variant","color","onClick","registerMessage","Fragment","sx","marginBottom","title","style","display","justifyContent","alignItems","flexGrow","iconComponent","help","padding","border","flexFlow","sm","xs","container","item","marginRight","fontSize","fontWeight","width","height","marginLeft","md","flex","marginTop","onClose","diagStatus","logsStatus","open","disable","dispatch","useAppDispatch","useState","loading","setLoading","onConfirmAction","api","diagState","logsState","then","res","setSnackBarMessage","catch","err","setErrorSnackMessage","ModalWrapper","modalOpen","titleIcon","margin","LinearProgress","id","disabled","label","flexDirection","gap","fill","PromoLabels","text","showConfirmation","setShowConfirmation","diagEnabled","setDiagEnabled","oDiagEnabled","setODiagEnabled","oLogsEnabled","setOLogsEnabled","logsEnabled","setLogsEnabled","disableMode","setDisableMode","clusterRegistered","registeredCluster","useEffect","diagnosticsStatus","mainVariant","refresh","PageHeaderWrapper","PageLayout","RegisterCluster","Box","lg","flexWrap","FormSwitchWrapper","value","name","checked","onChange","event","target","minWidth","backgroundColor","borderRadius","to","Inspect","withSuspense","React","Register","Profile","path","element","NotFoundPage"],"sourceRoot":""}