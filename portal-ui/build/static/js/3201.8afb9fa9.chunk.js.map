{"version":3,"file":"static/js/3201.8afb9fa9.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Common/FormComponents/DateTimePickerWrapper/DateTimePickerWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Button } from \"@mui/material\";\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\nimport WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport { actionsTray, widgetContainerCommon } from \"../common/styleLibrary\";\nimport DateTimePickerWrapper from \"../DateTimePickerWrapper/DateTimePickerWrapper\";\nimport SyncIcon from \"../../../../../icons/SyncIcon\";\n\ninterface IDateRangeSelector {\n  classes: any;\n  timeStart: any;\n  setTimeStart: (date: any) => void;\n  timeEnd: any;\n  setTimeEnd: (date: any) => void;\n  triggerSync?: () => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...widgetContainerCommon,\n    syncButton: {\n      \"&.MuiButton-root .MuiButton-iconSizeMedium > *:first-of-type\": {\n        fontSize: 18,\n      },\n    },\n    schedulerIcon: {\n      opacity: 0.4,\n      fontSize: 10,\n      \"& svg\": {\n        width: 18,\n        height: 18,\n      },\n    },\n    selectorLabel: {\n      color: \"#9D9E9D\",\n      fontWeight: \"bold\",\n      whiteSpace: \"nowrap\",\n      marginLeft: 10,\n      fontSize: 12,\n    },\n  });\n\nconst DateRangeSelector = ({\n  classes,\n  timeStart,\n  setTimeStart,\n  timeEnd,\n  setTimeEnd,\n  triggerSync,\n}: IDateRangeSelector) => {\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.timeContainers}>\n        <span className={classes.filterTitle}>Filter:</span>\n        <div className={classes.filterContainer}>\n          <span className={`${classes.filterTitle} ${classes.schedulerIcon}`}>\n            <ScheduleIcon />\n          </span>\n          <span className={classes.selectorLabel}>Start Time:</span>\n          <DateTimePickerWrapper\n            value={timeStart}\n            onChange={setTimeStart}\n            forFilterContained\n            id=\"stTime\"\n            noInputIcon\n          />\n          <span className={classes.divisorLine}>&nbsp;</span>\n          <span className={`${classes.filterTitle} ${classes.schedulerIcon}`}>\n            <WatchLaterIcon />\n          </span>\n          <span className={classes.selectorLabel}>End Time:</span>\n          <DateTimePickerWrapper\n            value={timeEnd}\n            onChange={setTimeEnd}\n            forFilterContained\n            id=\"endTime\"\n            noInputIcon\n          />\n        </div>\n        {triggerSync && (\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={triggerSync}\n            endIcon={<SyncIcon />}\n            className={classes.syncButton}\n          >\n            Sync\n          </Button>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DateRangeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport AdapterMoment from \"@mui/lab/AdapterMoment\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport OpenListIcon from \"../../../../../icons/OpenListIcon\";\n\ninterface IDateTimePicker {\n  value: any;\n  onChange: (value: any) => any;\n  classes: any;\n  forSearchBlock?: boolean;\n  forFilterContained?: boolean;\n  label?: string;\n  required?: boolean;\n  tooltip?: string;\n  id: string;\n  disabled?: boolean;\n  noInputIcon?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelectorOverride: {\n      height: 40,\n      border: \"#EAEDEE 1px solid\",\n      marginLeft: 15,\n      backgroundColor: \"#fff\",\n      padding: \"0 16px\",\n      borderRadius: 5,\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\n        borderBottom: 0,\n      },\n      \"&:hover\": {\n        borderColor: \"#000\",\n        \"&:before, &:after\": {\n          borderColor: \"transparent\",\n          borderBottom: 0,\n        },\n      },\n      \"&:before, &:after\": {\n        borderColor: \"transparent\",\n        borderBottom: 0,\n      },\n      \"& input\": {\n        fontSize: 12,\n        fontWeight: 600,\n        color: \"#393939\",\n      },\n    },\n    dateSelectorFilterOverride: {\n      width: 180,\n      height: 42,\n      marginLeft: 20,\n      padding: 0,\n      borderRadius: 5,\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\n        borderBottom: 0,\n      },\n      \"&:hover\": {\n        \"&:before, &:after\": {\n          borderColor: \"transparent\",\n          borderBottom: 0,\n        },\n      },\n      \"&:before, &:after\": {\n        borderColor: \"transparent\",\n        borderBottom: 0,\n      },\n      \"& input\": {\n        fontSize: 12,\n        fontWeight: \"bold\",\n        color: \"#081C42\",\n      },\n      \"@media (max-width: 900px)\": {\n        width: 103,\n      },\n    },\n    dateSelectorFormOverride: {\n      width: \"100%\",\n      maxWidth: 840,\n    },\n    parentDateOverride: {\n      flexGrow: 1,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n    },\n    openListIcon: {\n      color: \"#9D9E9D\",\n      width: 8,\n      marginTop: 2,\n    },\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst DateTimePickerWrapper = ({\n  value,\n  onChange,\n  classes,\n  forSearchBlock = false,\n  forFilterContained = false,\n  label,\n  tooltip = \"\",\n  required,\n  id,\n  disabled = false,\n  noInputIcon = false,\n}: IDateTimePicker) => {\n  let adornment = {};\n\n  if (!noInputIcon) {\n    adornment = {\n      startAdornment: (\n        <InputAdornment position=\"start\">\n          <ScheduleIcon />\n        </InputAdornment>\n      ),\n    };\n  }\n\n  if (forFilterContained) {\n    adornment = {\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <OpenListIcon className={classes.openListIcon} />\n        </InputAdornment>\n      ),\n    };\n  }\n\n  let classOverriden = \"\";\n\n  if (forSearchBlock) {\n    classOverriden = classes.dateSelectorOverride;\n  } else if (forFilterContained) {\n    classOverriden = classes.dateSelectorFilterOverride;\n  }\n\n  const inputItem = (\n    <LocalizationProvider dateAdapter={AdapterMoment}>\n      <DateTimePicker\n        value={value}\n        onChange={onChange}\n        InputProps={{\n          ...adornment,\n          className: classOverriden,\n        }}\n        label=\"\"\n        className={\n          forSearchBlock\n            ? classes.parentDateOverride\n            : classes.dateSelectorFormOverride\n        }\n        disabled={disabled}\n        renderInput={(props) => (\n          <TextField id={id} variant=\"standard\" {...props} disabled />\n        )}\n        ampm={false}\n      />\n    </LocalizationProvider>\n  );\n\n  if (forSearchBlock) {\n    return inputItem;\n  }\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        className={!forFilterContained ? classes.fieldContainer : \"\"}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>{inputItem}</div>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DateTimePickerWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","actionsTray","widgetContainerCommon","syncButton","schedulerIcon","opacity","selectorLabel","color","whiteSpace","marginLeft","timeStart","setTimeStart","timeEnd","setTimeEnd","triggerSync","Fragment","timeContainers","filterTitle","filterContainer","value","onChange","forFilterContained","id","noInputIcon","divisorLine","type","variant","onClick","endIcon","dateSelectorOverride","padding","borderBottom","borderColor","dateSelectorFilterOverride","dateSelectorFormOverride","maxWidth","parentDateOverride","flexGrow","textBoxContainer","openListIcon","marginTop","fieldBasic","tooltipHelper","forSearchBlock","label","tooltip","required","disabled","adornment","startAdornment","position","endAdornment","classOverriden","inputItem","dateAdapter","AdapterMoment","InputProps","renderInput","props","ampm","fieldContainer","htmlFor","inputLabel","tooltipContainer","placement","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","borderLeftWidth","zIndex","left","transform","transitionDuration","modalErrorShow","closeButton","right","cursor","errorTitle","errorLabel","messageIcon","detailsButton","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","connector","setModalSnackMessage","deleteDialogStyles","content","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent"],"sourceRoot":""}