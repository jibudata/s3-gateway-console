{"version":3,"file":"static/js/6436.068113ba.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Tenants/ListTenants/DeleteTenant.tsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport { ITenant } from \"./types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\n\ninterface IDeleteTenant {\n  deleteOpen: boolean;\n  selectedTenant: ITenant;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteTenant = ({\n  deleteOpen,\n  selectedTenant,\n  closeDeleteModalAndRefresh,\n  setErrorSnackMessage,\n}: IDeleteTenant) => {\n  const [retypeTenant, setRetypeTenant] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypeTenant !== selectedTenant.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedTenant.namespace}/tenants/${selectedTenant.name}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tenant`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeTenant !== selectedTenant.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          To continue please type <b>{selectedTenant.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-tenant\"\n              name=\"retype-tenant\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeTenant(event.target.value);\n              }}\n              label=\"\"\n              value={retypeTenant}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default connector(DeleteTenant);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\n\n\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\n\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: theme.palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n\n  const {\n    children,\n    disabled = false,\n    id: idProp,\n    loading = false,\n    loadingIndicator: loadingIndicatorProp,\n    loadingPosition = 'center',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: ownerState.loadingPosition === 'end' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [children, loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      })]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [loading && /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loadingIndicator\n      }), children]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default LoadingButton;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","inputLabel","fontWeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","className","onKeyPress","inputProps","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","api","then","res","catch","err","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","open","event","reason","root","sx","padding","titleText","closeContainer","closeButton","content","actions","cancelButton","variant","color","confirmButton","loading","loadingPosition","startIcon","connector","connect","setErrorSnackMessage","deleteOpen","selectedTenant","closeDeleteModalAndRefresh","retypeTenant","setRetypeTenant","useApi","deleteLoading","invokeDeleteApi","namespace","errorMessage","detailedError","item","xs","target","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","visibility","display","left","transform","palette","action","React","inProps","ref","useThemeProps","children","idProp","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","slots","endIcon","composedClasses","composeClasses","useUtilityClasses","_jsxs","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","alignItems","justifyContent","flex","getDialogContentTextUtilityClass","DialogContentTextRoot","Typography","component"],"sourceRoot":""}