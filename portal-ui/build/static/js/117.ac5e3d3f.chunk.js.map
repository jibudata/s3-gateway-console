{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Tenants/TenantDetails/DeletePod.tsx","screens/Console/Tenants/TenantDetails/PodsSummary.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","textBoxWithIcon","paddingRight","errorState","color","fontSize","top","right","overlayAction","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","unSelected","selected","CloudIcon","active","xmlns","width","height","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","spacing","margin","buttonDisabled","cursor","filter","opacity","valueToSend","idField","to","sendOnlyId","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","e","stopPropagation","preventDefault","Tooltip","isString","borderColor","rowText","fontWeight","borderWidth","transitionDuration","padding","paddingLeft","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","dialogContainer","paper","display","overflow","flexDirection","boxShadow","border","borderRadius","minHeight","overflowY","noBackground","backgroundColor","defaultPaperHeight","allTableSettings","minTableHeader","rowUnselected","rowSelected","paginatorContainer","justifyContent","checkBoxHeader","textAlign","paddingBottom","actionsContainer","paginatorComponent","borderBottom","checkBoxRow","loadingBox","paddingTop","overlayColumnSelection","popoverContent","shownColumnsLabel","checkAllWrapper","marginTop","outline","userSelect","fontStyle","alignItems","textTransform","left","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","item","xs","Paper","style","LinearProgress","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","checked","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","fieldContainer","marginBottom","flexBasis","connector","connect","setErrorSnackMessage","deleteOpen","selectedPod","closeDeleteModalAndRefresh","deleteLoading","setDeleteLoading","retypePod","setRetypePod","useEffect","api","invoke","namespace","tenant","then","catch","err","Dialog","DialogTitle","DialogContent","DialogContentText","InputBoxWrapper","DialogActions","Button","errorMessage","detailedError","autoFocus","loadingTenant","tenants","tenantDetails","tenantDetailsStyles","containerForHeader","match","pods","setPods","loadingPods","setLoadingPods","setDeleteOpen","setSelectedPod","tenantName","params","tenantNamespace","podTableActions","pod","result","i","currentTime","Date","now","time","niceDays","parseInt","timeCreated","reloadData","sectionTitle","TableWrapper","input"],"mappings":"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","file":"static/js/117.ac5e3d3f.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst rowText = {\n  fontWeight: 400,\n  fontSize: 14,\n  borderColor: borderColor,\n  borderWidth: \"0.5px\",\n  height: 40,\n  transitionDuration: \"0.3s\",\n  padding: \"initial\",\n  paddingRight: 6,\n  paddingLeft: 6,\n};\n\nconst styles = () =>\n  createStyles({\n    dialogContainer: {\n      padding: \"12px 26px 22px\",\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    allTableSettings: {\n      \"& .MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: \"initial\",\n      },\n      \"& .MuiTableCell-body.MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: 6,\n      },\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: 700,\n          fontSize: 14,\n          borderColor: \"#39393980\",\n          borderWidth: \"0.5px\",\n          padding: \"6px 0 10px\",\n        },\n      },\n    },\n    rowUnselected: {\n      ...rowText,\n      color: \"#393939\",\n    },\n    rowSelected: {\n      ...rowText,\n      color: \"#081C42\",\n      fontWeight: 600,\n    },\n    paginatorContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"5px 38px\",\n    },\n    checkBoxHeader: {\n      width: 50,\n      textAlign: \"left\",\n      paddingRight: 10,\n      \"&.MuiTableCell-paddingCheckbox\": {\n        paddingBottom: 4,\n        paddingLeft: 0,\n      },\n    },\n    actionsContainer: {\n      width: 150,\n      borderColor: borderColor,\n    },\n    paginatorComponent: {\n      borderBottom: 0,\n    },\n    checkBoxRow: {\n      borderColor: borderColor,\n      padding: \"0 10px 0 0\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  LinearProgress,\n} from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ninterface IDeletePod {\n  deleteOpen: boolean;\n  selectedPod: IPodListElement;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeletePod = ({\n  deleteOpen,\n  selectedPod,\n  closeDeleteModalAndRefresh,\n  setErrorSnackMessage,\n}: IDeletePod) => {\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [retypePod, setRetypePod] = useState(\"\");\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api\n        .invoke(\n          \"DELETE\",\n          `/api/v1/namespaces/${selectedPod.namespace}/tenants/${selectedPod.tenant}/pods/${selectedPod.name}`\n        )\n        .then(() => {\n          setDeleteLoading(false);\n          closeDeleteModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeleteLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deleteLoading]);\n\n  const removeRecord = () => {\n    if (retypePod !== selectedPod.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    setDeleteLoading(true);\n  };\n\n  return (\n    <Dialog\n      open={deleteOpen}\n      onClose={() => {\n        closeDeleteModalAndRefresh(false);\n      }}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Delete Pod</DialogTitle>\n      <DialogContent>\n        {deleteLoading && <LinearProgress />}\n        <DialogContentText id=\"alert-dialog-description\">\n          To continue please type <b>{selectedPod.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-pod\"\n              name=\"retype-pod\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePod(event.target.value);\n              }}\n              label=\"\"\n              value={retypePod}\n            />\n          </Grid>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            closeDeleteModalAndRefresh(false);\n          }}\n          color=\"primary\"\n          disabled={deleteLoading}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={removeRecord}\n          color=\"secondary\"\n          autoFocus\n          disabled={retypePod !== selectedPod.name}\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default connector(DeletePod);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport { AppState } from \"../../../../store\";\nimport { setTenantDetailsLoad } from \"../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport DeletePod from \"./DeletePod\";\n\ninterface IPodsSummary {\n  classes: any;\n  match: any;\n  history: any;\n  loadingTenant: boolean;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PodsSummary = ({\n  classes,\n  match,\n  history,\n  loadingTenant,\n}: IPodsSummary) => {\n  const [pods, setPods] = useState<IPodListElement[]>([]);\n  const [loadingPods, setLoadingPods] = useState<boolean>(true);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedPod, setSelectedPod] = useState<any>(null);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  const podViewAction = (pod: IPodListElement) => {\n    history.push(\n      `/namespaces/${tenantNamespace}/tenants/${tenantName}/pods/${pod.name}`\n    );\n    return;\n  };\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n  };\n\n  const confirmDeletePod = (pod: IPodListElement) => {\n    pod.tenant = tenantName;\n    pod.namespace = tenantNamespace;\n    setSelectedPod(pod);\n    setDeleteOpen(true);\n  };\n\n  const podTableActions = [\n    { type: \"view\", onClick: podViewAction },\n    { type: \"delete\", onClick: confirmDeletePod },\n  ];\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoadingPods(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loadingPods) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/pods`\n        )\n        .then((result: IPodListElement[]) => {\n          for (let i = 0; i < result.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n            result[i].time = niceDays(\n              (currentTime - parseInt(result[i].timeCreated)).toString()\n            );\n          }\n          setPods(result);\n          setLoadingPods(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage({\n            errorMessage: \"Error loading pods\",\n            detailedError: err.detailedError,\n          });\n        });\n    }\n  }, [loadingPods, tenantName, tenantNamespace]);\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePod\n          deleteOpen={deleteOpen}\n          selectedPod={selectedPod}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <h1 className={classes.sectionTitle}>Pods</h1>\n      <TableWrapper\n        columns={[\n          { label: \"Name\", elementKey: \"name\" },\n          { label: \"Status\", elementKey: \"status\" },\n          { label: \"Age\", elementKey: \"time\" },\n          { label: \"Pod IP\", elementKey: \"podIP\" },\n          {\n            label: \"Restarts\",\n            elementKey: \"restarts\",\n            renderFunction: (input) => {\n              return input !== null ? input : 0;\n            },\n          },\n          { label: \"Node\", elementKey: \"node\" },\n        ]}\n        isLoading={loadingPods}\n        records={pods}\n        itemActions={podTableActions}\n        entityName=\"Servers\"\n        idField=\"name\"\n      />\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PodsSummary));\n"],"sourceRoot":""}