{"version":3,"file":"static/js/1604.8a9dcedd.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetRetentionConfig.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Loader } from \"mds\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport {\n  ErrorResponseHandler,\n  IRetentionConfig,\n} from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface ISetRetentionConfigProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst SetRetentionConfig = ({\n  classes,\n  open,\n  bucketName,\n  closeModalAndRefresh,\n}: ISetRetentionConfigProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingForm, setLoadingForm] = useState<boolean>(true);\n  const [retentionMode, setRetentionMode] = useState<string>(\"compliance\");\n  const [retentionUnit, setRetentionUnit] = useState<string>(\"days\");\n  const [retentionValidity, setRetentionValidity] = useState<number>(1);\n  const [valid, setValid] = useState<boolean>(false);\n\n  const setRetention = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/retention`, {\n        mode: retentionMode,\n        unit: retentionUnit,\n        validity: retentionValidity,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (Number.isNaN(retentionValidity) || retentionValidity < 1) {\n      setValid(false);\n      return;\n    }\n    setValid(true);\n  }, [retentionValidity]);\n\n  useEffect(() => {\n    if (loadingForm) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/retention`)\n        .then((res: IRetentionConfig) => {\n          setLoadingForm(false);\n\n          // We set default values\n          setRetentionMode(res.mode);\n          setRetentionValidity(res.validity);\n          setRetentionUnit(res.unit);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingForm(false);\n        });\n    }\n  }, [loadingForm, bucketName]);\n\n  return (\n    <ModalWrapper\n      title=\"Set Retention Configuration\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n    >\n      {loadingForm ? (\n        <Loader style={{ width: 16, height: 16 }} />\n      ) : (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            setRetention(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.modalFormScrollable}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionMode}\n                  id=\"retention_mode\"\n                  name=\"retention_mode\"\n                  label=\"Retention Mode\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionMode(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"compliance\", label: \"Compliance\" },\n                    { value: \"governance\", label: \"Governance\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionUnit}\n                  id=\"retention_unit\"\n                  name=\"retention_unit\"\n                  label=\"Retention Unit\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionUnit(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"days\", label: \"Days\" },\n                    { value: \"years\", label: \"Years\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"retention_validity\"\n                  name=\"retention_validity\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setRetentionValidity(e.target.valueAsNumber);\n                  }}\n                  label=\"Retention Validity\"\n                  value={String(retentionValidity)}\n                  required\n                  min=\"1\"\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh();\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"set\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !valid}\n                label={\"Set\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetRetentionConfig);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface SelectorTypes {\n  label: any;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: any;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item fontSize={60}>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"flex\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","classes","open","bucketName","closeModalAndRefresh","dispatch","useAppDispatch","useState","addLoading","setAddLoading","loadingForm","setLoadingForm","retentionMode","setRetentionMode","retentionUnit","setRetentionUnit","retentionValidity","setRetentionValidity","valid","setValid","useEffect","Number","isNaN","api","then","res","mode","validity","unit","catch","err","title","modalOpen","onClose","style","width","height","noValidate","autoComplete","onSubmit","e","preventDefault","setModalErrorSnackMessage","container","item","xs","className","modalFormScrollable","formFieldRow","currentSelection","id","name","label","onChange","target","value","selectorOptions","type","valueAsNumber","String","required","min","modalButtonBar","variant","disabled","onClick","color","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","multiline","tooltip","index","error","placeholder","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","fullWidth","helperText","inputRebase","size","disableFocusRipple","disableRipple","disableTouchRipple","radioStyles","root","backgroundColor","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","optionLabel","marginRight","fontSize","checkedOption","fontWeight","disableOptions","displayInColumn","spacing","row","display","textAlign","map","selectorOption","control","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}