{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx","screens/Console/NotificationEndpoints/CustomForms/ResetConfigurationModal.tsx","screens/Console/NotificationEndpoints/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","item","xs","sm","md","textAlign","component","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","open","event","reason","sx","titleText","closeContainer","closeButton","content","actions","cancelButton","variant","confirmButton","loading","loadingPosition","startIcon","autoFocus","cssOutlinedInput","borderColor","rootContainer","minHeight","borderWidth","fieldContainer","rows","InputLabelProps","shrink","notchedOutline","inputWithBorder","overflowY","inputBoxSpacer","elements","commonPlaceholder","withBorder","useState","currentElements","setCurrentElements","bottomList","createRef","useEffect","elementsSplit","split","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeElement","e","persist","updatedElement","get","target","debounce","elementsString","filter","element","trim","join","inputs","map","InputBoxWrapper","toString","AddIcon","elementsUp","cpList","addEmptyLine","Grid","InputLabel","Tooltip","HelpIcon","ref","valueDef","key","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","modalBasic","fields","defaultVals","valueHolder","setValueHolder","fieldsElements","defValList","values","forEach","field","stateInsert","setValueElement","valuesDup","fieldDefinition","FormSwitchWrapper","CommentBoxWrapper","fieldBox","mapDispatchToProps","setErrorSnackMessage","connector","connect","wrapText","whiteSpace","wordWrap","configurationName","closeResetModalAndRefresh","resetOpen","resetLoading","setResetLoading","api","invoke","then","res","catch","err","ConfirmDialog","LinearProgress","DialogContentText","serverNeedsRestart","settingsCommon","selectedConfiguration","history","valuesObj","setValueObj","saving","setSaving","loadingConfig","setLoadingConfig","configValues","setConfigValues","resetConfigurationOpen","setResetConfigurationOpen","configId","keyVals","payload","key_values","removeEmptyFields","configuration_id","restart","onValueChange","useCallback","newValue","noValidate","onSubmit","preventDefault","settingsFormContainer","ConfTargetGeneric","fieldsConfigurations","settingsButtonContainer","Button","ConfigurationsList","match","activeConfRoute","configName","substring","lastIndexOf","validActiveConfig","configurationElements","containerClassName"],"mappings":"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","file":"static/js/94.e549aa5c.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    inputBoxSpacer: {\n      marginBottom: 7,\n    },\n  });\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChange(elementsString);\n  }, 500);\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <div className={classes.inputBoxSpacer}>\n        <InputBoxWrapper\n          id={`${name}-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentElements[index]}\n          onChange={onChangeElement}\n          index={index}\n          key={`csv-${name}-${index.toString()}`}\n          placeholder={commonPlaceholder}\n          overlayIcon={\n            index === currentElements.length - 1 ? <AddIcon /> : null\n          }\n          overlayAction={() => {\n            addEmptyLine(currentElements);\n          }}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"false\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value;\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = [];\n    fields.forEach((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      values.push(stateInsert);\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"false\";\n\n        return (\n          <FormSwitchWrapper\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"true\" : \"false\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"true\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) =>\n              setValueElement(field.name, value, item)\n            }\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  setErrorSnackMessage,\n  resetOpen,\n}: IResetConfiguration) => {\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"GET\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    closeResetModalAndRefresh,\n    configurationName,\n    resetLoading,\n    setErrorSnackMessage,\n  ]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {resetLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b className={classes.wrapText}>\n              Please note that this may cause your system to not be accessible\n            </b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ResetConfigurationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport { serverNeedsRestart, setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n  });\n\ninterface IAddNotificationEndpointProps {\n  serverNeedsRestart: typeof serverNeedsRestart;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  history: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  serverNeedsRestart,\n  selectedConfiguration,\n  setErrorSnackMessage,\n  classes,\n  history,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [loadingConfig, setLoadingConfig] = useState<boolean>(true);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  //Effects\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api\n          .invoke(\"GET\", `/api/v1/configs/${configId}`)\n          .then((res) => {\n            const keyVals = get(res, \"key_values\", []);\n            setConfigValues(keyVals);\n            setLoadingConfig(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingConfig(false);\n            setErrorSnackMessage(err);\n          });\n\n        return;\n      }\n      setLoadingConfig(false);\n    }\n  }, [loadingConfig, selectedConfiguration, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          serverNeedsRestart(res.restart);\n\n          history.push(\"/settings\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    saving,\n    history,\n    serverNeedsRestart,\n    selectedConfiguration,\n    valuesObj,\n    setErrorSnackMessage,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    serverNeedsRestart(restart);\n    if (restart) {\n      setLoadingConfig(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      {resetConfigurationOpen && (\n        <ResetConfigurationModal\n          configurationName={selectedConfiguration.configuration_id}\n          closeResetModalAndRefresh={continueReset}\n          resetOpen={resetConfigurationOpen}\n        />\n      )}\n\n      <form noValidate onSubmit={submitForm} className={className}>\n        <Grid item xs={12} className={classes.settingsFormContainer}>\n          {loadingConfig && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <ConfTargetGeneric\n            fields={\n              fieldsConfigurations[selectedConfiguration.configuration_id]\n            }\n            onChange={onValueChange}\n            defaultVals={configValues}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.settingsButtonContainer}>\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              setResetConfigurationOpen(true);\n            }}\n          >\n            Restore Defaults\n          </Button>\n          &nbsp; &nbsp;\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={saving}\n          >\n            Save\n          </Button>\n        </Grid>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  serverNeedsRestart,\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(EditConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../NotificationEndpoints/CustomForms/EditConfiguration\";\n\ninterface IConfigurationForm {\n  match: any;\n  history: any;\n}\n\nconst ConfigurationsList = ({ match, history }: IConfigurationForm) => {\n  const activeConfRoute = get(match, \"url\", \"\");\n\n  const configName = activeConfRoute.substring(\n    activeConfRoute.lastIndexOf(\"/\") + 1\n  );\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid item xs={12}>\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n          history={history}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n"],"sourceRoot":""}