{"version":3,"file":"static/js/4487.625e74d7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper.tsx","screens/Console/Buckets/BucketDetails/AddEvent.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInputProps,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (returnedValue: string) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst AutocompleteWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  const [internalValue, setInternalValue] = useState<selectorTypes>(options[0]);\n\n  const executeOnSelect = (_: any, selectedValue: any) => {\n    if (selectedValue) {\n      onChange(selectedValue.value);\n      setInternalValue(selectedValue);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Autocomplete\n            id={id}\n            options={options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option) => option.value === value}\n            disabled={disabled}\n            renderInput={(params) => <InputField {...params} name={name} />}\n            value={internalValue}\n            onChange={executeOnSelect}\n            autoHighlight\n          />\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AutocompleteWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Table from \"@mui/material/Table\";\nimport { ArnList } from \"../types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AutocompleteWrapper from \"../../Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper\";\nimport { EventSubscriptionIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    arnField: {\n      \"& div div .MuiOutlinedInput-root\": {\n        padding: 0,\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddEventProps {\n  classes: any;\n  open: boolean;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddEvent = ({\n  classes,\n  open,\n  selectedBucket,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IAddEventProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [suffix, setSuffix] = useState<string>(\"\");\n  const [arn, setArn] = useState<string>(\"\");\n  const [selectedEvents, setSelectedEvents] = useState<string[]>([]);\n  const [arnList, setArnList] = useState<string[]>([]);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/events`, {\n        configuration: {\n          arn: arn,\n          events: selectedEvents,\n          prefix: prefix,\n          suffix: suffix,\n        },\n        ignoreExisting: true,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const fetchArnList = useCallback(() => {\n    setAddLoading(true);\n    api\n      .invoke(\"GET\", `/api/v1/admin/arns`)\n      .then((res: ArnList) => {\n        let arns: string[] = [];\n        if (res.arns !== null) {\n          arns = res.arns;\n        }\n        setAddLoading(false);\n        setArnList(arns);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  useEffect(() => {\n    fetchArnList();\n  }, [fetchArnList]);\n\n  const events = [\n    { label: \"PUT - Object Uploaded\", value: \"put\" },\n    { label: \"GET - Object accessed\", value: \"get\" },\n    { label: \"DELETE - Object Deleted\", value: \"delete\" },\n  ];\n\n  const handleClick = (\n    event: React.MouseEvent<unknown> | ChangeEvent<unknown>,\n    name: string\n  ) => {\n    const selectedIndex = selectedEvents.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedEvents, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedEvents.slice(1));\n    } else if (selectedIndex === selectedEvents.length - 1) {\n      newSelected = newSelected.concat(selectedEvents.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedEvents.slice(0, selectedIndex),\n        selectedEvents.slice(selectedIndex + 1)\n      );\n    }\n    setSelectedEvents(newSelected);\n  };\n\n  const arnValues = arnList.map((arnConstant) => ({\n    label: arnConstant,\n    value: arnConstant,\n  }));\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Subscribe To Bucket Events\"\n      titleIcon={<EventSubscriptionIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.arnField} ${classes.formFieldRow}`}\n            >\n              <AutocompleteWrapper\n                onChange={(value: string) => {\n                  setArn(value);\n                }}\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                label={\"ARN\"}\n                value={arn}\n                options={arnValues}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"prefix-input\"\n                name=\"prefix-input\"\n                label=\"Prefix\"\n                value={prefix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"suffix-input\"\n                name=\"suffix-input\"\n                label=\"Suffix\"\n                value={suffix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSuffix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <Table size=\"medium\">\n                <TableHead className={classes.minTableHeader}>\n                  <TableRow>\n                    <TableCell>Select</TableCell>\n                    <TableCell>Event</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {events.map((row) => (\n                    <TableRow\n                      key={`group-${row.value}`}\n                      onClick={(event) => handleClick(event, row.value)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          value={row.value}\n                          color=\"primary\"\n                          inputProps={{\n                            \"aria-label\": \"secondary checkbox\",\n                          }}\n                          onChange={(event) => handleClick(event, row.value)}\n                          checked={selectedEvents.includes(row.value)}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.wrapCell}>\n                        {row.label}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddEvent));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","id","name","onChange","options","label","tooltip","value","disabled","useState","internalValue","setInternalValue","Grid","item","xs","className","fieldContainer","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","FormControl","fullWidth","Autocomplete","getOptionLabel","option","isOptionEqualToValue","renderInput","params","_","selectedValue","autoHighlight","connector","connect","setModalErrorSnackMessage","arnField","padding","formFieldStyles","modalStyleUtils","open","selectedBucket","closeModalAndRefresh","addLoading","setAddLoading","prefix","setPrefix","suffix","setSuffix","arn","setArn","selectedEvents","setSelectedEvents","arnList","setArnList","fetchArnList","useCallback","api","then","res","arns","catch","err","useEffect","handleClick","event","selectedIndex","indexOf","newSelected","concat","slice","length","arnValues","map","arnConstant","ModalWrapper","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","configuration","events","ignoreExisting","container","formScrollable","formFieldRow","InputBoxWrapper","target","Table","size","TableHead","minTableHeader","TableRow","TableCell","TableBody","row","onClick","Checkbox","color","inputProps","checked","includes","wrapCell","modalButtonBar","Button","type","variant","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","multiline","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","errorInField","inputBoxContainer","noMinWidthLabel","helperText","inputRebase","disableFocusRipple","disableRipple","disableTouchRipple","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","fontSize","cursor","errorTitle","display","alignItems","errorLabel","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","detailedError","errorMessage","message","get","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","Dialog","scroll","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent"],"sourceRoot":""}