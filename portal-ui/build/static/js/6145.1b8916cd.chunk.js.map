{"version":3,"file":"static/js/6145.1b8916cd.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditAccessRule.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Button, Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { connect } from \"react-redux\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { AddAccessRuleIcon } from \"../../../../icons\";\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n});\n\nconst connector = connect(mapState, { setErrorSnackMessage });\n\ninterface IEditAccessRule {\n  classes: any;\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toEdit: string;\n  initial: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst EditAccessRule = ({\n  modalOpen,\n  onClose,\n  classes,\n  bucket,\n  toEdit,\n  initial,\n}: IEditAccessRule) => {\n  const [selectedAccess, setSelectedAccess] = useState<any>(initial);\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setSelectedAccess(initial);\n  };\n\n  const createProcess = () => {\n    api\n      .invoke(\"PUT\", `/api/v1/bucket/${bucket}/access-rules`, {\n        prefix: toEdit,\n        access: selectedAccess,\n      })\n      .then((res: any) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n        onClose();\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title={`Edit Access Rule for ${`${bucket}/${toEdit || \"\"}`}`}\n        onClose={onClose}\n        titleIcon={<AddAccessRuleIcon />}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.spacerTop}>\n            <SelectWrapper\n              id=\"access\"\n              name=\"Access\"\n              onChange={(e) => {\n                setSelectedAccess(e.target.value);\n              }}\n              label=\"Access\"\n              value={selectedAccess}\n              options={accessOptions}\n              disabled={false}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={createProcess}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(connector(EditAccessRule));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["connector","connect","state","session","console","setErrorSnackMessage","withStyles","theme","createStyles","buttonContainer","textAlign","modalStyleUtils","spacingUtils","modalOpen","onClose","classes","bucket","toEdit","initial","useState","selectedAccess","setSelectedAccess","title","titleIcon","container","item","xs","className","spacerTop","id","name","onChange","e","target","value","label","options","disabled","modalButtonBar","type","color","variant","onClick","api","prefix","access","then","res","catch","err","SelectStyled","root","height","lineHeight","marginTop","spacing","input","position","fontSize","fontWeight","padding","border","borderRadius","display","alignItems","borderColor","backgroundColor","InputBase","fieldBasic","tooltipHelper","tooltip","fieldContainer","htmlFor","inputLabel","tooltipContainer","placement","fullWidth","map","option","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","modalSnackMessage","system","modalSnackBar","modalErrorContainer","width","borderLeftWidth","zIndex","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","cursor","errorTitle","errorLabel","marginLeft","marginRight","messageIcon","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","Fragment","style","onMouseOver","onMouseLeave","setInterval","Close","ErrorOutline","detailsContainerLink","ArrowRight","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","getDividerUtilityClass","slot","generateUtilityClass","dividerClasses","generateUtilityClasses","getMenuItemUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","dense","divider","disableGutters","gutters","_extends","typography","body1","justifyContent","textDecoration","minHeight","paddingTop","boxSizing","whiteSpace","paddingRight","borderBottom","palette","backgroundClip","action","hover","menuItemClasses","alpha","primary","main","selectedOpacity","focusOpacity","hoverOpacity","focus","disabledOpacity","marginBottom","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","selected","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","_jsx","clsx","focusVisible"],"sourceRoot":""}