{"version":3,"file":"static/js/4219.e5abf39a.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolResources.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolConfiguration.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolPodPlacement.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPool.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { niceBytes } from \"../../../../../../common/utils\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport api from \"../../../../../../common/api\";\nimport { ITenant } from \"../../../ListTenants/types\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IQuotaElement, IQuotas, Opts } from \"../../../ListTenants/utils\";\nimport { AppState } from \"../../../../../../store\";\nimport { connect } from \"react-redux\";\nimport {\n  isPoolPageValid,\n  setPoolField,\n  setPoolStorageClasses,\n} from \"../../../actions\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport InputUnitMenu from \"../../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IPoolResourcesProps {\n  tenant: ITenant | null;\n  classes: any;\n  storageClasses: Opts[];\n  numberOfNodes: string;\n  storageClass: string;\n  volumeSize: string;\n  volumesPerServer: string;\n  setPoolField: typeof setPoolField;\n  isPoolPageValid: typeof isPoolPageValid;\n  setPoolStorageClasses: typeof setPoolStorageClasses;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginLeft: 30,\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst PoolResources = ({\n  tenant,\n  classes,\n  storageClasses,\n  numberOfNodes,\n  storageClass,\n  volumeSize,\n  volumesPerServer,\n  setPoolField,\n  setPoolStorageClasses,\n  isPoolPageValid,\n}: IPoolResourcesProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const instanceCapacity: number =\n    parseInt(volumeSize) * 1073741824 * parseInt(volumesPerServer);\n  const totalCapacity: number = instanceCapacity * parseInt(numberOfNodes);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [\n      {\n        fieldKey: \"number_of_nodes\",\n        required: true,\n        value: numberOfNodes.toString(),\n        customValidation:\n          parseInt(numberOfNodes) < 1 || isNaN(parseInt(numberOfNodes)),\n        customValidationMessage: \"Number of servers must be at least 1\",\n      },\n      {\n        fieldKey: \"pool_size\",\n        required: true,\n        value: volumeSize.toString(),\n        customValidation:\n          parseInt(volumeSize) < 1 || isNaN(parseInt(volumeSize)),\n        customValidationMessage: \"Pool Size cannot be 0\",\n      },\n      {\n        fieldKey: \"volumes_per_server\",\n        required: true,\n        value: volumesPerServer.toString(),\n        customValidation:\n          parseInt(volumesPerServer) < 1 || isNaN(parseInt(volumesPerServer)),\n        customValidationMessage: \"1 volume or more are required\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPoolPageValid(\"setup\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    isPoolPageValid,\n    numberOfNodes,\n    volumeSize,\n    volumesPerServer,\n    storageClass,\n  ]);\n\n  useEffect(() => {\n    if (storageClasses.length === 0 && tenant) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`\n        )\n        .then((res: IQuotas) => {\n          const elements: IQuotaElement[] = get(res, \"elements\", []);\n\n          const newStorage = elements.map((storageClass: any) => {\n            const name = get(storageClass, \"name\", \"\").split(\n              \".storageclass.storage.k8s.io/requests.storage\"\n            )[0];\n\n            return { label: name, value: name };\n          });\n\n          setPoolField(\"setup\", \"storageClass\", newStorage[0].value);\n\n          setPoolStorageClasses(newStorage);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          console.error(err);\n        });\n    }\n  }, [tenant, storageClasses, setPoolStorageClasses, setPoolField]);\n\n  const setFieldInfo = (fieldName: string, value: any) => {\n    setPoolField(\"setup\", fieldName, value);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>New Pool Configuration</h3>\n        <span className={classes.descriptionText}>\n          Configure a new Pool to expand MinIO storage\n        </span>\n      </div>\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"number_of_nodes\"\n          name=\"number_of_nodes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", 0);\n            }\n          }}\n          label=\"Number of Servers\"\n          value={numberOfNodes}\n          error={validationErrors[\"number_of_nodes\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"pool_size\"\n          name=\"pool_size\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", 0);\n            }\n          }}\n          label=\"Volume Size\"\n          value={volumeSize}\n          error={validationErrors[\"pool_size\"] || \"\"}\n          pattern={\"[0-9]*\"}\n          overlayObject={\n            <InputUnitMenu\n              id={\"quota_unit\"}\n              onUnitChange={() => {}}\n              unitSelected={\"Gi\"}\n              unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n              disabled={true}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"volumes_per_sever\"\n          name=\"volumes_per_sever\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", 0);\n            }\n          }}\n          label=\"Volumes per Server\"\n          value={volumesPerServer}\n          error={validationErrors[\"volumes_per_server\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <SelectWrapper\n          id=\"storage_class\"\n          name=\"storage_class\"\n          onChange={(e: SelectChangeEvent<string>) => {\n            setFieldInfo(\"storageClasses\", e.target.value as string);\n          }}\n          label=\"Storage Class\"\n          value={storageClass}\n          options={storageClasses}\n          disabled={storageClasses.length < 1}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.bottomContainer}>\n        <div className={classes.factorElements}>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(instanceCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Instance Capacity</div>\n          </div>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(totalCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Total Capacity</div>\n          </div>\n        </div>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => {\n  const setupFields = state.tenants.addPool.fields.setup;\n  return {\n    tenant: state.tenants.tenantDetails.tenantInfo,\n    storageClasses: state.tenants.addPool.storageClasses,\n    numberOfNodes: setupFields.numberOfNodes.toString(),\n    storageClass: setupFields.storageClass,\n    volumeSize: setupFields.volumeSize.toString(),\n    volumesPerServer: setupFields.volumesPerServer.toString(),\n  };\n};\n\nconst connector = connect(mapState, {\n  setPoolField,\n  isPoolPageValid,\n  setPoolStorageClasses,\n});\n\nexport default withStyles(styles)(connector(PoolResources));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { isPoolPageValid, setPoolField } from \"../../../actions\";\nimport { AppState } from \"../../../../../../store\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { ISecurityContext } from \"../../../types\";\n\ninterface IConfigureProps {\n  setPoolField: typeof setPoolField;\n  isPoolPageValid: typeof isPoolPageValid;\n  classes: any;\n  securityContextEnabled: boolean;\n  securityContext: ISecurityContext;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst PoolConfiguration = ({\n  classes,\n  setPoolField,\n  securityContextEnabled,\n  isPoolPageValid,\n  securityContext,\n}: IConfigureProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      setPoolField(\"configuration\", field, value);\n    },\n    [setPoolField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (securityContextEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"pool_securityContext_runAsUser\",\n          required: true,\n          value: securityContext.runAsUser,\n          customValidation:\n            securityContext.runAsUser === \"\" ||\n            parseInt(securityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_runAsGroup\",\n          required: true,\n          value: securityContext.runAsGroup,\n          customValidation:\n            securityContext.runAsGroup === \"\" ||\n            parseInt(securityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_fsGroup\",\n          required: true,\n          value: securityContext.fsGroup,\n          customValidation:\n            securityContext.fsGroup === \"\" ||\n            parseInt(securityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPoolPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [isPoolPageValid, securityContextEnabled, securityContext]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Aditional Configurations for the new Pool\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"pool_configuration\"\n          name=\"pool_configuration\"\n          checked={securityContextEnabled}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"securityContextEnabled\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {securityContextEnabled && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Pool's Security Context\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsUser\"\n                    name=\"pool_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={securityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsGroup\"\n                    name=\"pool_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={securityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_fsGroup\"\n                    name=\"pool_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={securityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"securityContextRunAsNonRoot\"\n                  id=\"pool_securityContext_runAsNonRoot\"\n                  name=\"pool_securityContext_runAsNonRoot\"\n                  checked={securityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"securityContext\", {\n                      ...securityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => {\n  const configuration = state.tenants.addPool.fields.configuration;\n\n  return {\n    securityContextEnabled: configuration.securityContextEnabled,\n    securityContext: configuration.securityContext,\n  };\n};\n\nconst connector = connect(mapState, {\n  setPoolField,\n  isPoolPageValid,\n});\n\nexport default withStyles(styles)(connector(PoolConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState } from \"../../../../../../store\";\nimport {\n  isPoolPageValid,\n  setPoolField,\n  setPoolTolerationInfo,\n  addNewPoolToleration,\n  removePoolToleration,\n  setPoolKeyValuePairs,\n} from \"../../../actions\";\nimport { setModalErrorSnackMessage } from \"../../../../../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport {\n  ErrorResponseHandler,\n  ITolerationModel,\n} from \"../../../../../../common/types\";\nimport { LabelKeyPair } from \"../../../types\";\nimport RadioGroupSelector from \"../../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../../Common/TolerationSelector/TolerationSelector\";\n\ninterface IAffinityProps {\n  classes: any;\n  podAffinity: string;\n  nodeSelectorLabels: string;\n  withPodAntiAffinity: boolean;\n  keyValuePairs: LabelKeyPair[];\n  tolerations: ITolerationModel[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  setPoolField: typeof setPoolField;\n  isPoolPageValid: typeof isPoolPageValid;\n  setPoolKeyValuePairs: typeof setPoolKeyValuePairs;\n  setPoolTolerationInfo: typeof setPoolTolerationInfo;\n  removePoolToleration: typeof removePoolToleration;\n  addNewPoolToleration: typeof addNewPoolToleration;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({\n  classes,\n  podAffinity,\n  nodeSelectorLabels,\n  withPodAntiAffinity,\n  setModalErrorSnackMessage,\n  keyValuePairs,\n  setPoolKeyValuePairs,\n  setPoolField,\n  isPoolPageValid,\n  tolerations,\n  setPoolTolerationInfo,\n  removePoolToleration,\n  addNewPoolToleration,\n}: IAffinityProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      setPoolField(\"affinity\", field, value);\n    },\n    [setPoolField]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n          setKeyValueMap({});\n        });\n    }\n  }, [setModalErrorSnackMessage, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPoolPageValid(\"affinity\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [isPoolPageValid, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    setPoolTolerationInfo(index, alterToleration);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n\n                              arrCp[i].key = e.target.value as string;\n                              arrCp[i].value = keyValueMap[newKey][0];\n                              setPoolKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].key = e.target.value;\n                              setPoolKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value as string;\n                              setPoolKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value;\n                              setPoolKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = Object.assign([], keyValuePairs);\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              setPoolKeyValuePairs(arrCp);\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                setPoolKeyValuePairs(arrCp);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={addNewPoolToleration}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => removePoolToleration(i)}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => {\n  const addPool = state.tenants.addPool;\n\n  return {\n    podAffinity: addPool.fields.affinity.podAffinity,\n    nodeSelectorLabels: addPool.fields.affinity.nodeSelectorLabels,\n    withPodAntiAffinity: addPool.fields.affinity.withPodAntiAffinity,\n    keyValuePairs: addPool.fields.nodeSelectorPairs,\n    tolerations: addPool.fields.tolerations,\n  };\n};\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  setPoolField,\n  isPoolPageValid,\n  setPoolKeyValuePairs,\n  setPoolTolerationInfo,\n  addNewPoolToleration,\n  removePoolToleration,\n});\n\nexport default withStyles(styles)(connector(Affinity));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { generatePoolName, niceBytes } from \"../../../../../../common/utils\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IAddPoolRequest, ITenant } from \"../../../ListTenants/types\";\nimport PageHeader from \"../../../../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../../../../Common/Layout/PageLayout\";\nimport GenericWizard from \"../../../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../../../Common/GenericWizard/types\";\nimport history from \"../../../../../../history\";\nimport PoolResources from \"./PoolResources\";\nimport ScreenTitle from \"../../../../Common/ScreenTitle/ScreenTitle\";\nimport TenantsIcon from \"../../../../../../icons/TenantsIcon\";\nimport {\n  isPoolPageValid,\n  resetPoolForm,\n  setPoolField,\n  setTenantDetailsLoad,\n} from \"../../../actions\";\nimport { AppState } from \"../../../../../../store\";\nimport { connect } from \"react-redux\";\nimport PoolConfiguration from \"./PoolConfiguration\";\nimport PoolPodPlacement from \"./PoolPodPlacement\";\nimport {\n  ErrorResponseHandler,\n  ITolerationModel,\n} from \"../../../../../../common/types\";\nimport { getDefaultAffinity, getNodeSelector } from \"../../utils\";\nimport api from \"../../../../../../common/api\";\nimport { ISecurityContext } from \"../../../types\";\nimport BackLink from \"../../../../../../common/BackLink\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\n\ninterface IAddPoolProps {\n  tenant: ITenant | null;\n  classes: any;\n  open: boolean;\n  match: any;\n  selectedStorageClass: string;\n  validPages: string[];\n  numberOfNodes: number;\n  volumeSize: number;\n  volumesPerServer: number;\n  affinityType: string;\n  nodeSelectorLabels: string;\n  withPodAntiAffinity: boolean;\n  securityContextEnabled: boolean;\n  tolerations: ITolerationModel[];\n  securityContext: ISecurityContext;\n  resetPoolForm: typeof resetPoolForm;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n      borderTop: 0,\n    },\n    addPoolTitle: {\n      border: \"1px solid #EAEAEA\",\n      borderBottom: 0,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst requiredPages = [\"setup\", \"affinity\", \"configure\"];\n\nconst AddPool = ({\n  tenant,\n  classes,\n  resetPoolForm,\n  selectedStorageClass,\n  validPages,\n  numberOfNodes,\n  volumeSize,\n  affinityType,\n  nodeSelectorLabels,\n  withPodAntiAffinity,\n  tolerations,\n  securityContextEnabled,\n  securityContext,\n  volumesPerServer,\n  setTenantDetailsLoad,\n  setErrorSnackMessage,\n}: IAddPoolProps) => {\n  const [addSending, setAddSending] = useState<boolean>(false);\n\n  const poolsURL = `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n    tenant?.name || \"\"\n  }/pools`;\n\n  useEffect(() => {\n    if (addSending && tenant) {\n      const poolName = generatePoolName(tenant.pools);\n\n      let affinityObject = {};\n\n      switch (affinityType) {\n        case \"default\":\n          affinityObject = {\n            affinity: getDefaultAffinity(tenant.name, poolName),\n          };\n          break;\n        case \"nodeSelector\":\n          affinityObject = {\n            affinity: getNodeSelector(\n              nodeSelectorLabels,\n              withPodAntiAffinity,\n              tenant.name,\n              poolName\n            ),\n          };\n          break;\n      }\n\n      const tolerationValues = tolerations.filter(\n        (toleration) => toleration.key.trim() !== \"\"\n      );\n\n      const data: IAddPoolRequest = {\n        name: poolName,\n        servers: numberOfNodes,\n        volumes_per_server: volumesPerServer,\n        volume_configuration: {\n          size: volumeSize * 1073741824,\n          storage_class_name: selectedStorageClass,\n          labels: null,\n        },\n        tolerations: tolerationValues,\n        securityContext: securityContextEnabled ? securityContext : null,\n        ...affinityObject,\n      };\n\n      api\n        .invoke(\n          \"POST\",\n          `/api/v1/namespaces/${tenant.namespace}/tenants/${tenant.name}/pools`,\n          data\n        )\n        .then(() => {\n          setAddSending(false);\n          resetPoolForm();\n          setTenantDetailsLoad(true);\n          history.push(poolsURL);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    addSending,\n    poolsURL,\n    resetPoolForm,\n    setTenantDetailsLoad,\n    affinityType,\n    nodeSelectorLabels,\n    numberOfNodes,\n    securityContext,\n    securityContextEnabled,\n    selectedStorageClass,\n    tenant,\n    tolerations,\n    volumeSize,\n    volumesPerServer,\n    withPodAntiAffinity,\n    setErrorSnackMessage,\n  ]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      resetPoolForm();\n      history.push(poolsURL);\n    },\n  };\n\n  const createButton = {\n    label: \"Create\",\n    type: \"submit\",\n    enabled:\n      !addSending &&\n      selectedStorageClass !== \"\" &&\n      requiredPages.every((v) => validPages.includes(v)),\n    action: () => {\n      setAddSending(true);\n    },\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <PoolResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configuration\",\n      advancedOnly: true,\n      componentRender: <PoolConfiguration />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <PoolPodPlacement />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeader\n          label={\n            <Fragment>\n              <BackLink to={poolsURL} label={`Tenant Pools`} />\n            </Fragment>\n          }\n        />\n        <PageLayout>\n          <Grid item xs={12} className={classes.addPoolTitle}>\n            <ScreenTitle\n              icon={<TenantsIcon />}\n              title={`Add New Pool to ${tenant?.name || \"\"}`}\n              subTitle={\n                <Fragment>\n                  Namespace: {tenant?.namespace || \"\"} / Current Capacity:{\" \"}\n                  {niceBytes((tenant?.total_size || 0).toString(10))}\n                </Fragment>\n              }\n            />\n          </Grid>\n\n          {addSending && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <Grid item xs={12} className={classes.pageBox}>\n            <GenericWizard wizardSteps={wizardSteps} />\n          </Grid>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => {\n  const addPool = state.tenants.addPool;\n  return {\n    tenant: state.tenants.tenantDetails.tenantInfo,\n    selectedStorageClass: addPool.fields.setup.storageClass,\n    validPages: addPool.validPages,\n    storageClasses: addPool.storageClasses,\n    numberOfNodes: addPool.fields.setup.numberOfNodes,\n    volumeSize: addPool.fields.setup.volumeSize,\n    volumesPerServer: addPool.fields.setup.volumesPerServer,\n    affinityType: addPool.fields.affinity.podAffinity,\n    nodeSelectorLabels: addPool.fields.affinity.nodeSelectorLabels,\n    withPodAntiAffinity: addPool.fields.affinity.withPodAntiAffinity,\n    tolerations: addPool.fields.tolerations,\n    securityContextEnabled: addPool.fields.configuration.securityContextEnabled,\n    securityContext: addPool.fields.configuration.securityContext,\n  };\n};\n\nconst connector = connect(mapState, {\n  resetPoolForm,\n  setPoolField,\n  isPoolPageValid,\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n});\n\nexport default withStyles(styles)(connector(AddPool));\n"],"names":["connector","connect","state","setupFields","tenants","addPool","fields","setup","tenant","tenantDetails","tenantInfo","storageClasses","numberOfNodes","toString","storageClass","volumeSize","volumesPerServer","setPoolField","isPoolPageValid","setPoolStorageClasses","withStyles","theme","createStyles","bottomContainer","display","flexGrow","alignItems","margin","justifyContent","width","flexFlow","factorElements","marginLeft","sizeNumber","fontSize","fontWeight","textAlign","sizeDescription","color","formFieldStyles","wizardCommon","classes","useState","validationErrors","setValidationErrors","instanceCapacity","parseInt","totalCapacity","useEffect","customAccountValidation","fieldKey","required","value","customValidation","isNaN","customValidationMessage","commonVal","commonFormValidation","Object","keys","length","api","namespace","then","res","newStorage","get","map","name","split","label","catch","err","console","error","setFieldInfo","fieldName","Paper","className","paperWrapper","headerElement","h3Section","descriptionText","Grid","item","xs","formFieldRow","InputBoxWrapper","id","onChange","e","intValue","target","validity","valid","pattern","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","SelectWrapper","options","niceBytes","configuration","securityContextEnabled","securityContext","configSectionItem","marginRight","border","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","marginBottom","responsiveSectionItem","modalBasic","updateField","useCallback","field","runAsUser","runAsGroup","fsGroup","cleanValidation","clearValidationError","FormSwitchWrapper","checked","multiContainer","type","min","runAsNonRoot","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","setModalErrorSnackMessage","setPoolKeyValuePairs","setPoolTolerationInfo","addNewPoolToleration","removePoolToleration","overlayAction","maxWidth","maxHeight","background","affinityConfigField","affinityFieldLabel","flex","radioField","marginTop","affinityLabelKey","affinityLabelValue","rowActions","affinityRow","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","k","push","vl","filter","kvp","key","kvs","i","a","indexOf","join","splittedLabels","forEach","index","splitItem","updateToleration","alterToleration","affinityHelpText","RadioGroupSelector","currentSelection","selectorOptions","Fragment","container","newKey","arrCp","assign","placeholder","v","IconButton","size","onClick","AddIcon","RemoveIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","requiredPages","selectedStorageClass","validPages","affinityType","resetPoolForm","setErrorSnackMessage","setTenantDetailsLoad","pageBox","borderTop","addPoolTitle","borderBottom","modalStyleUtils","addSending","setAddSending","poolsURL","poolName","generatePoolName","pools","affinityObject","getDefaultAffinity","getNodeSelector","tolerationValues","toleration","trim","data","servers","volumes_per_server","volume_configuration","storage_class_name","labels","history","cancelButton","enabled","action","createButton","every","includes","wizardSteps","componentRender","buttons","advancedOnly","PoolPodPlacement","PageHeader","BackLink","to","PageLayout","ScreenTitle","icon","TenantsIcon","title","subTitle","total_size","LinearProgress","GenericWizard"],"sourceRoot":""}