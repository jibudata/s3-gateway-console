{"version":3,"file":"static/js/9467.0e6dd103.chunk.js","mappings":"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","sources":["screens/Console/Buckets/ListBuckets/BulkLifecycleModal.tsx","screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  RadioGroup,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { ITiersDropDown } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiLifecycleResult, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [results, setResults] = useState<MultiLifecycleResult | null>(null);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [loadingTiers, dispatch]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              paddingTop: 5,\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                paddingTop: 5,\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const createLifecycleRules = (to: any) => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        noncurrentversion_transition_storage_class: NCTransitionSC,\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      buckets,\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addMultiBucketLifecycle(lifecycleInsert)\n      .then((res) => {\n        setAddLoading(false);\n        setResults(res.data);\n        to(\"++\");\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Lifecycle to multiple buckets\"\n    >\n      <Wizard\n        loadingStep={addLoading || loadingTiers}\n        wizardSteps={[\n          {\n            label: \"Lifecycle Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout withBorders={false} containerPadding={false}>\n                  <Grid item xs={12}>\n                    <ReadBox\n                      label=\"Local Buckets to replicate\"\n                      sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                    >\n                      {buckets.join(\", \")}\n                    </ReadBox>\n                  </Grid>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <fieldset className={\"inputItem\"}>\n                    <legend>Lifecycle Configuration</legend>\n                    <RadioGroup\n                      currentValue={ilmType}\n                      id=\"quota_type\"\n                      name=\"quota_type\"\n                      label=\"ILM Rule\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as \"expiry\" | \"transition\");\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                    {ilmType === \"expiry\" ? (\n                      <Fragment>\n                        <InputBox\n                          type=\"number\"\n                          id=\"expiry_days\"\n                          name=\"expiry_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setExpiryDays(e.target.value);\n                          }}\n                          label=\"Expiry Days\"\n                          value={expiryDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          type=\"number\"\n                          id=\"noncurrentversion_expiration_days\"\n                          name=\"noncurrentversion_expiration_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCExpirationDays(e.target.value);\n                          }}\n                          label=\"Non-current Expiration Days\"\n                          value={NCExpirationDays}\n                          min=\"0\"\n                        />\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        <InputBox\n                          type=\"number\"\n                          id=\"transition_days\"\n                          name=\"transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setTransitionDays(e.target.value);\n                          }}\n                          label=\"Transition Days\"\n                          value={transitionDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          type=\"number\"\n                          id=\"noncurrentversion_transition_days\"\n                          name=\"noncurrentversion_transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCTransitionDays(e.target.value);\n                          }}\n                          label=\"Non-current Transition Days\"\n                          value={NCTransitionDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          id=\"noncurrentversion_t_SC\"\n                          name=\"noncurrentversion_t_SC\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCTransitionSC(e.target.value);\n                          }}\n                          placeholder=\"Set Non-current Version Transition Storage Class\"\n                          label=\"Non-current Version Transition Storage Class\"\n                          value={NCTransitionSC}\n                        />\n                        <Select\n                          label=\"Storage Class\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(value) => {\n                            setStorageClass(value);\n                          }}\n                          options={tiersList}\n                        />\n                      </Fragment>\n                    )}\n                  </fieldset>\n                  <fieldset className={\"inputItem\"}>\n                    <legend>File Configuration</legend>\n                    <InputBox\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                      label=\"Prefix\"\n                      value={prefix}\n                    />\n                    <QueryMultiSelector\n                      name=\"tags\"\n                      label=\"Tags\"\n                      elements={tags}\n                      onChange={(vl: string) => {\n                        setTags(vl);\n                      }}\n                      keyPlaceholder=\"Tag Key\"\n                      valuePlaceholder=\"Tag Value\"\n                      withBorder\n                    />\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                  </fieldset>\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Create Rules\",\n                enabled: !loadingTiers && !addLoading && isFormValid,\n                action: createLifecycleRules,\n              },\n            ],\n          },\n          {\n            label: \"Results\",\n            componentRender: (\n              <Fragment>\n                <h3>Multi Bucket lifecycle Assignments Results</h3>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <h4>Buckets Results</h4>\n                    {results?.results?.map((resultItem) => {\n                      return (\n                        <Box\n                          sx={{\n                            display: \"grid\",\n                            gridTemplateColumns: \"45px auto\",\n                            alignItems: \"center\",\n                            justifyContent: \"stretch\",\n                          }}\n                        >\n                          {LogoToShow({ errString: resultItem.error || \"\" })}\n                          <span>{resultItem.bucketName}</span>\n                        </Box>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Done\",\n                enabled: !addLoading,\n                action: () => closeModalAndRefresh(true),\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Checkbox,\n  Grid,\n  ReportedUsageIcon,\n  TotalObjectsIcon,\n} from \"mds\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { hasPermission } from \"../../../../common/SecureComponent\";\nimport { Bucket } from \"../../../../api/consoleApi\";\n\nconst BucketItemMain = styled.div(({ theme }) => ({\n  border: `${get(theme, \"borderColor\", \"#eaeaea\")} 1px solid`,\n  borderRadius: 3,\n  padding: 15,\n  cursor: \"pointer\",\n  \"&.disabled\": {\n    backgroundColor: get(theme, \"signalColors.danger\", \"red\"),\n  },\n  \"&:hover\": {\n    backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  },\n  \"& .bucketTitle\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: 10,\n    \"& h1\": {\n      padding: 0,\n      margin: 0,\n      marginBottom: 5,\n      fontSize: 22,\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      [`@media (max-width: ${breakPoints.md}px)`]: {\n        marginBottom: 0,\n      },\n    },\n  },\n  \"& .bucketDetails\": {\n    display: \"flex\",\n    gap: 40,\n    \"& span\": {\n      fontSize: 14,\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      flexFlow: \"column-reverse\",\n      gap: 5,\n    },\n  },\n  \"& .bucketMetrics\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: 20,\n    gap: 25,\n    borderTop: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n    paddingTop: 20,\n    \"& svg.bucketIcon\": {\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      fill: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n    },\n    \"& .metric\": {\n      \"& .min-icon\": {\n        color: get(theme, \"fontColor\", \"#000\"),\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    \"& .metricLabel\": {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: get(theme, \"fontColor\", \"#000\"),\n    },\n    \"& .metricText\": {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    \"& .unit\": {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      marginTop: 8,\n      paddingTop: 8,\n    },\n  },\n}));\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n}\n\nconst BucketListItem = ({\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n}: IBucketListItem) => {\n  const navigate = useNavigate();\n\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota, true, false);\n\n  const manageAllowed =\n    hasPermission(bucket.name, IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]) &&\n    false;\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <BucketItemMain\n      onClick={() => {\n        navigate(`/buckets/${bucket.name}/admin`);\n      }}\n      id={`manageBucket-${bucket.name}`}\n      className={`bucket-item ${manageAllowed ? \"disabled\" : \"\"}`}\n    >\n      <Box className={\"bucketTitle\"}>\n        {bulkSelect && (\n          <Box\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <Checkbox\n              checked={selected}\n              id={`select-${bucket.name}`}\n              label={\"\"}\n              name={`select-${bucket.name}`}\n              onChange={onCheckboxClick}\n              value={bucket.name}\n            />\n          </Box>\n        )}\n        <h1>\n          {bucket.name} {manageAllowed}\n        </h1>\n      </Box>\n      <Box className={\"bucketDetails\"}>\n        <span id={`created-${bucket.name}`}>\n          <strong>Created:</strong>{\" \"}\n          {bucket.creation_date\n            ? new Date(bucket.creation_date).toString()\n            : \"n/a\"}\n        </span>\n        <span id={`access-${bucket.name}`}>\n          <strong>Access:</strong> {accessToStr(bucket)}\n        </span>\n      </Box>\n      <Box className={\"bucketMetrics\"}>\n        <Link to={`/buckets/${bucket.name}/admin`}>\n          <BucketsIcon\n            className={\"bucketIcon\"}\n            style={{\n              height: 48,\n              width: 48,\n            }}\n          />\n        </Link>\n\n        <Grid item className={\"metric\"}>\n          <ReportedUsageIcon />\n          <span className={\"metricLabel\"}>Usage</span>\n          <div className={\"metricText\"}>\n            {usageScalar}\n            <span className={\"unit\"}>{usageUnit}</span>\n            {quota !== \"0\" && (\n              <Fragment>\n                {\" \"}\n                / {quotaForString.total}\n                <span className={\"unit\"}>{quotaForString.unit}</span>\n              </Fragment>\n            )}\n          </div>\n        </Grid>\n\n        <Grid item className={\"metric\"}>\n          <TotalObjectsIcon />\n          <span className={\"metricLabel\"}>Objects</span>\n          <div className={\"metricText\"}>\n            {bucket.objects ? prettyNumber(bucket.objects) : 0}\n          </div>\n        </Grid>\n      </Box>\n    </BucketItemMain>\n  );\n};\n\nexport default BucketListItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  InputBox,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiBucketResponseItem } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { SelectorTypes } from \"../../../../common/types\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<\n    MultiBucketResponseItem[] | undefined\n  >([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((response) => {\n        setAddLoading(false);\n\n        const states = response.data.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states?.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\",\n        );\n\n        if (filterErrors?.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void,\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api.listExternalBuckets\n      .listExternalBuckets(remoteConnectInfo)\n      .then((res) => {\n        const buckets = get(res.data, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err) => {\n        setExternalLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem && responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket,\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <Select\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(value) => {\n              updateItem(indexItem, value);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBox\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (\n    responseItem: MultiBucketResponseItem[] | undefined,\n  ) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem?.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket || \"\",\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <Wizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout containerPadding={false} withBorders={false}>\n                  <ReadBox\n                    label=\"Local Buckets to replicate\"\n                    sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                  >\n                    {bucketsToAlter.join(\", \")}\n                  </ReadBox>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <span style={{ fontSize: 14 }}>\n                    Please avoid the use of root credentials for this feature\n                    <br />\n                    <br />\n                  </span>\n                  <InputBox\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                  <InputBox\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                  <InputBox\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                  <Switch\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                  <InputBox\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                  <Select\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(value) => {\n                      setReplicationMode(value as \"sync\" | \"async\");\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                  {replicationMode === \"async\" && (\n                    <InputBox\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  )}\n                  <InputBox\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span style={{ fontSize: 14 }}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <Box\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"auto auto 45px\",\n                    alignItems: \"center\",\n                    justifyContent: \"stretch\",\n                    \"& .hide\": {\n                      opacity: 0,\n                      transitionDuration: \"0.3s\",\n                    },\n                  }}\n                >\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {responseItem && responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </Box>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  Button,\n  HelpBox,\n  LifecycleConfigIcon,\n  MultipleBucketsIcon,\n  PageLayout,\n  RefreshIcon,\n  SelectAllIcon,\n  SelectMultipleIcon,\n  Grid,\n  breakPoints,\n  ProgressBar,\n  ActionLink,\n} from \"mds\";\n\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { api } from \"../../../../api\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { errorToHandler } from \"../../../../api/errors\";\nimport HelpMenu from \"../../HelpMenu\";\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport BulkLifecycleModal from \"./BulkLifecycleModal\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\n\nconst ListBuckets = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [lifecycleModalOpen, setLifecycleModalOpen] = useState<boolean>(false);\n  const [canPutLifecycle, setCanPutLifecycle] = useState<boolean>(false);\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  const features = useSelector(selFeatures);\n  const obOnly = !!features?.includes(\"object-browser-only\");\n\n  useEffect(() => {\n    dispatch(setHelpName(\"ob_bucket_list\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api.buckets.listBuckets().then((res) => {\n          if (res.data) {\n            setLoading(false);\n            setRecords(res.data.buckets || []);\n          } else if (res.error) {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n          }\n        });\n      };\n      fetchRecords();\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const hasBuckets = records.length > 0;\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const closeBulkLifecycleModal = (unselectAll: boolean) => {\n    setLifecycleModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  useEffect(() => {\n    var failLifecycle = false;\n    selectedBuckets.forEach((bucket: string) => {\n      hasPermission(bucket, IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE], true)\n        ? setCanPutLifecycle(true)\n        : (failLifecycle = true);\n    });\n    failLifecycle ? setCanPutLifecycle(false) : setCanPutLifecycle(true);\n  }, [selectedBuckets]);\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n  const canListBuckets = hasPermission(\"*\", [\n    IAM_SCOPES.S3_LIST_BUCKET,\n    IAM_SCOPES.S3_ALL_LIST_BUCKET,\n  ]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {lifecycleModalOpen && (\n        <BulkLifecycleModal\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkLifecycleModal}\n          open={lifecycleModalOpen}\n        />\n      )}\n      {!obOnly && (\n        <PageHeaderWrapper label={\"Buckets\"} actions={<HelpMenu />} />\n      )}\n\n      <PageLayout>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          {obOnly && (\n            <Grid item xs>\n              <AutoColorIcon marginRight={15} marginTop={10} />\n            </Grid>\n          )}\n          {hasBuckets && (\n            <SearchBox\n              onChange={setFilterBuckets}\n              placeholder=\"Search Buckets\"\n              value={filterBuckets}\n              sx={{\n                minWidth: 380,\n                [`@media (max-width: ${breakPoints.md}px)`]: {\n                  minWidth: 220,\n                },\n              }}\n            />\n          )}\n\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              gap: 5,\n            }}\n          >\n            {!obOnly && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : bulkSelect\n                      ? \"Unselect Buckets\"\n                      : \"Select Multiple Buckets\"\n                  }\n                >\n                  <Button\n                    id={\"multiple-bucket-seection\"}\n                    onClick={() => {\n                      setBulkSelect(!bulkSelect);\n                      setSelectedBuckets([]);\n                    }}\n                    icon={<SelectMultipleIcon />}\n                    variant={bulkSelect ? \"callAction\" : \"regular\"}\n                    disabled={!hasBuckets}\n                  />\n                </TooltipWrapper>\n\n                {bulkSelect && (\n                  <TooltipWrapper\n                    tooltip={\n                      !hasBuckets\n                        ? \"\"\n                        : selectedBuckets.length === filteredRecords.length\n                        ? \"Unselect All Buckets\"\n                        : \"Select All Buckets\"\n                    }\n                  >\n                    <Button\n                      id={\"select-all-buckets\"}\n                      onClick={selectAllBuckets}\n                      icon={<SelectAllIcon />}\n                      variant={\"regular\"}\n                    />\n                  </TooltipWrapper>\n                )}\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : !canPutLifecycle\n                      ? permissionTooltipHelper(\n                          IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE],\n                          \"configure lifecycle for the selected buckets\",\n                        )\n                      : selectedBuckets.length === 0\n                      ? bulkSelect\n                        ? \"Please select at least one bucket on which to configure Lifecycle\"\n                        : \"Use the Select Multiple Buckets button to choose buckets on which to configure Lifecycle\"\n                      : \"Set Lifecycle\"\n                  }\n                >\n                  <Button\n                    id={\"set-lifecycle\"}\n                    onClick={() => {\n                      setLifecycleModalOpen(true);\n                    }}\n                    icon={<LifecycleConfigIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0 || !canPutLifecycle}\n                  />\n                </TooltipWrapper>\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : selectedBuckets.length === 0\n                      ? bulkSelect\n                        ? \"Please select at least one bucket on which to configure Replication\"\n                        : \"Use the Select Multiple Buckets button to choose buckets on which to configure Replication\"\n                      : \"Set Replication\"\n                  }\n                >\n                  <Button\n                    id={\"set-replication\"}\n                    onClick={() => {\n                      setReplicationModalOpen(true);\n                    }}\n                    icon={<MultipleBucketsIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0}\n                  />\n                </TooltipWrapper>\n              </Fragment>\n            )}\n\n            <TooltipWrapper tooltip={\"Refresh\"}>\n              <Button\n                id={\"refresh-buckets\"}\n                onClick={() => {\n                  setLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n\n            {!obOnly && (\n              <TooltipWrapper\n                tooltip={\n                  canCreateBucket\n                    ? \"\"\n                    : permissionTooltipHelper(\n                        [IAM_SCOPES.S3_CREATE_BUCKET],\n                        \"create a bucket\",\n                      )\n                }\n              >\n                <Button\n                  id={\"create-bucket\"}\n                  onClick={() => {\n                    navigate(IAM_PAGES.ADD_BUCKETS);\n                  }}\n                  icon={<AddIcon />}\n                  variant={\"callAction\"}\n                  disabled={!canCreateBucket}\n                  label={\"Create Bucket\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        </Grid>\n\n        {loading && <ProgressBar />}\n        {!loading && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginTop: 25,\n              height: \"calc(100vh - 211px)\",\n              \"&.isEmbedded\": {\n                height: \"calc(100vh - 128px)\",\n              },\n            }}\n            className={obOnly ? \"isEmbedded\" : \"\"}\n          >\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {!hasBuckets && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <br />\n                        {canListBuckets ? (\n                          \"\"\n                        ) : (\n                          <Fragment>\n                            <br />\n                            {permissionTooltipHelper(\n                              [\n                                IAM_SCOPES.S3_LIST_BUCKET,\n                                IAM_SCOPES.S3_ALL_LIST_BUCKET,\n                              ],\n                              \"view the buckets on this server\",\n                            )}\n                            <br />\n                          </Fragment>\n                        )}\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          To get started,&nbsp;\n                          <ActionLink\n                            onClick={() => {\n                              navigate(IAM_PAGES.ADD_BUCKETS);\n                            }}\n                          >\n                            Create a Bucket.\n                          </ActionLink>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ListBuckets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","_results$results","open","closeModalAndRefresh","buckets","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","addLoading","setAddLoading","_useState3","_useState4","loadingTiers","setLoadingTiers","_useState5","_useState6","tiersList","setTiersList","_useState7","_useState8","prefix","setPrefix","_useState9","_useState10","tags","setTags","_useState11","_useState12","storageClass","setStorageClass","_useState13","_useState14","NCTransitionSC","setNCTransitionSC","_useState15","_useState16","expiredObjectDM","setExpiredObjectDM","_useState17","_useState18","NCExpirationDays","setNCExpirationDays","_useState19","_useState20","NCTransitionDays","setNCTransitionDays","_useState21","_useState22","ilmType","setIlmType","_useState23","_useState24","expiryDays","setExpiryDays","_useState25","_useState26","transitionDays","setTransitionDays","_useState27","_useState28","isFormValid","setIsFormValid","_useState29","_useState30","results","setResults","useEffect","api","admin","then","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","catch","err","setModalErrorSnackMessage","errorToHandler","error","valid","LogoToShow","_ref2","errString","_jsx","Box","sx","paddingTop","color","children","CheckCircleIcon","Tooltip","tooltip","placement","WarnIcon","ModalWrapper","modalOpen","onClose","title","Wizard","loadingStep","wizardSteps","componentRender","Fragment","_jsxs","FormLayout","withBorders","containerPadding","Grid","item","xs","ReadBox","maxWidth","width","join","className","RadioGroup","currentValue","id","name","onChange","e","target","selectorOptions","InputBox","min","placeholder","Select","options","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","Switch","checked","event","buttons","enabled","action","to","rules","expiry","expiry_days","parseInt","_objectSpread","noncurrentversion_expiration_days","transition","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","storage_class","lifecycleInsert","expired_object_delete_marker","addMultiBucketLifecycle","container","resultItem","display","gridTemplateColumns","alignItems","justifyContent","bucketName","forModal","BucketItemMain","styled","div","theme","border","borderRadius","padding","cursor","backgroundColor","gap","_defineProperty","margin","marginBottom","fontSize","breakPoints","md","flexFlow","marginTop","borderTop","fill","marginRight","fontWeight","bucket","onSelect","selected","bulkSelect","navigate","useNavigate","usage","niceBytes","size","usageScalar","split","usageUnit","quota","quotaForString","calculateBytes","manageAllowed","hasPermission","IAM_PERMISSIONS","IAM_ROLES","BUCKET_ADMIN","onClick","stopPropagation","Checkbox","creation_date","Date","toString","_bucket$rw_access","_bucket$rw_access2","_bucket$rw_access3","_bucket$rw_access4","_bucket$rw_access5","_bucket$rw_access6","rw_access","read","write","accessToStr","Link","BucketsIcon","style","height","ReportedUsageIcon","total","unit","TotalObjectsIcon","objects","prettyNumber","bucketsToAlter","setBucketsToAlter","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","remoteBucketName","bucketsAlter","relationBucketsAlter","forEach","push","updateItem","indexItem","updatedList","_toConsumableArray","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","validity","pattern","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","wizardPageJump","remoteConnectInfo","listExternalBuckets","arrayReplaceBuckets","element","opacity","transitionDuration","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","replicate","destinationBucket","endURL","hc","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","bucketsReplication","setMultiBucketReplication","response","states","replicationState","filterErrors","filter","itm","setTimeout","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","lifecycleModalOpen","setLifecycleModalOpen","canPutLifecycle","setCanPutLifecycle","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setHelpName","listBuckets","setErrorSnackMessage","filteredRecords","b","hasBuckets","selectListBuckets","targetD","failLifecycle","BUCKET_LIFECYCLE","canCreateBucket","IAM_SCOPES","S3_CREATE_BUCKET","canListBuckets","S3_LIST_BUCKET","S3_ALL_LIST_BUCKET","BulkReplicationModal","unselectAll","BulkLifecycleModal","PageHeaderWrapper","actions","HelpMenu","PageLayout","actionsTray","AutoColorIcon","SearchBox","minWidth","TooltipWrapper","Button","icon","SelectMultipleIcon","variant","selectAllBuckets","SelectAllIcon","permissionTooltipHelper","LifecycleConfigIcon","MultipleBucketsIcon","RefreshIcon","IAM_PAGES","ADD_BUCKETS","AddIcon","ProgressBar","VirtualizedList","rowRenderFunction","BucketListItem","totalItems","HelpBox","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","ActionLink","UnitMenuButton","button","_ref2$disabled","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","DropdownSelector","selectedOption","hideTriggerAction","anchorOrigin","_ref$tooltip","_ref$keyPlaceholder","_ref$valuePlaceholder","_ref$withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","keys","values","splittedVals","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","alignSelf","InputLabel","marginLeft","HelpIcon","overflowY","position","ref"],"sourceRoot":""}