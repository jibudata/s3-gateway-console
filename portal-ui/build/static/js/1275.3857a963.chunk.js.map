{"version":3,"file":"static/js/1275.3857a963.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","icons/CertificateIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      viewBox=\"0 0 256 256\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"certificate_svg__a\">\n          <path\n            data-name=\"Rect\\xE1ngulo 2156\"\n            fill=\"#07193e\"\n            d=\"M0 0h256v222.048H0z\"\n          />\n        </clipPath>\n      </defs>\n      <g\n        data-name=\"Grupo 4763\"\n        transform=\"translate(0 17)\"\n        clipPath=\"url(#certificate_svg__a)\"\n        fill=\"#07193e\"\n      >\n        <path\n          data-name=\"Trazado 8152\"\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\n        />\n        <path\n          data-name=\"Trazado 8153\"\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\n        />\n      </g>\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\n    </svg>\n  );\n};\nexport default CertificateIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon } from \"../../../../../icons\";\nimport { Button } from \"mds\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n  formFieldStyles,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Environment Variables</h3>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADUsrAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n  addIDPADGroupAtIndex,\n  removeIDPADGroupAtIndex,\n  setIDPADGroupAtIndex,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  OIDCLogoElement,\n  LDAPLogoElement,\n  BuiltInLogoElement,\n} from \"../../LogoComponents\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addCaCertificate,\n  deleteCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteKeyPair,\n  addClientKeyPair,\n  deleteClientKeyPair,\n  addFileToClientKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileMinIOMTLSCert,\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 300px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={logSearchSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={\n                        logSearchPostgresSecurityContext.fsGroupChangePolicy\n                      }\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <hr className={classes.hrClass} />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={prometheusSecurityContext.fsGroupChangePolicy}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { StorageIcon } from \"../../../../icons\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: true,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: true,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeader\n        label={\n          <BackLink\n            to={\"/tenants\"}\n            label={\"Tenants\"}\n            executeOnClick={() => {\n              dispatch(resetAddTenantForm());\n            }}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport LDAPIcon from \"../../../icons/LDAPIcon\";\nimport { OIDCIcon } from \"../../../icons\";\nimport { UsersIcon } from \"../../../icons\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","props","xmlns","fill","viewBox","id","d","transform","clipPath","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","tooltipContainer","placement","overflow","language","onChange","evn","target","fontFamily","minHeight","borderTop","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","Tooltip","HelpIcon","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","RemoveIcon","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","textAlign","indicatorLabels","hrClass","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","AddIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","href","rel","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","_excluded","DividerRoot","styled","slot","overridesResolver","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","top","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","React","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}