{"version":3,"sources":["../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/dialogClasses.js","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx","screens/Console/NotificationEndpoints/CustomForms/ResetConfigurationModal.tsx","screens/Console/NotificationEndpoints/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx"],"names":["DialogContext","createContext","getDialogUtilityClass","slot","generateUtilityClass","dialogClasses","generateUtilityClasses","inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","item","xs","sm","md","textAlign","component","_excluded","DialogBackdrop","styled","Backdrop","overrides","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","DialogContainer","ownerState","capitalize","scroll","_extends","outline","overflowY","overflowX","content","verticalAlign","DialogPaper","Paper","paper","String","paperFullWidth","fullScreen","paperFullScreen","flexDirection","breakpoints","unit","Math","values","paperScrollBody","down","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","as","closeAfterTransition","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","getDialogTitleUtilityClass","DialogTitleRoot","Typography","flex","DialogTitle","idProp","variant","getDialogContentUtilityClass","DialogContentRoot","dividers","WebkitOverflowScrolling","borderTop","divider","borderBottom","paddingTop","DialogContent","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","DialogActions","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","cssOutlinedInput","borderColor","rootContainer","minHeight","borderWidth","fieldContainer","rows","InputLabelProps","shrink","notchedOutline","inputWithBorder","inputBoxSpacer","elements","commonPlaceholder","withBorder","useState","currentElements","setCurrentElements","bottomList","createRef","useEffect","elementsSplit","split","push","refScroll","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeElement","e","persist","updatedElement","get","debounce","elementsString","filter","element","trim","join","inputs","map","InputBoxWrapper","toString","AddIcon","elementsUp","cpList","addEmptyLine","Grid","InputLabel","Tooltip","HelpIcon","valueDef","key","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","modalBasic","fields","defaultVals","valueHolder","setValueHolder","fieldsElements","defValList","forEach","field","stateInsert","setValueElement","valuesDup","fieldDefinition","FormSwitchWrapper","CommentBoxWrapper","fieldBox","mapDispatchToProps","setErrorSnackMessage","connector","connect","wrapText","whiteSpace","wordWrap","deleteDialogStyles","configurationName","closeResetModalAndRefresh","resetOpen","resetLoading","setResetLoading","api","invoke","then","res","catch","err","sx","titleText","closeContainer","IconButton","closeButton","LinearProgress","Button","autoFocus","serverNeedsRestart","settingsCommon","selectedConfiguration","history","valuesObj","setValueObj","saving","setSaving","loadingConfig","setLoadingConfig","configValues","setConfigValues","resetConfigurationOpen","setResetConfigurationOpen","configId","keyVals","payload","key_values","removeEmptyFields","configuration_id","restart","onValueChange","useCallback","newValue","noValidate","onSubmit","preventDefault","settingsFormContainer","ConfTargetGeneric","fieldsConfigurations","settingsButtonContainer","ConfigurationsList","match","activeConfRoute","configName","substring","lastIndexOf","validActiveConfig","configurationElements","containerClassName"],"mappings":"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","file":"static/js/36.5cecbf70.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  '.MuiDialogTitle-root + &': {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    inputBoxSpacer: {\n      marginBottom: 7,\n    },\n  });\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChange(elementsString);\n  }, 500);\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <div className={classes.inputBoxSpacer}>\n        <InputBoxWrapper\n          id={`${name}-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentElements[index]}\n          onChange={onChangeElement}\n          index={index}\n          key={`csv-${name}-${index.toString()}`}\n          placeholder={commonPlaceholder}\n          overlayIcon={\n            index === currentElements.length - 1 ? <AddIcon /> : null\n          }\n          overlayAction={() => {\n            addEmptyLine(currentElements);\n          }}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"false\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value;\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = [];\n    fields.forEach((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      values.push(stateInsert);\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"false\";\n\n        return (\n          <FormSwitchWrapper\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"true\" : \"false\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"true\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) =>\n              setValueElement(field.name, value, item)\n            }\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  LinearProgress,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  setErrorSnackMessage,\n  resetOpen,\n}: IResetConfiguration) => {\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"GET\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    closeResetModalAndRefresh,\n    configurationName,\n    resetLoading,\n    setErrorSnackMessage,\n  ]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <Dialog\n      open={resetOpen}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle id=\"alert-dialog-title\" className={classes.title}>\n        <div className={classes.titleText}>Restore Defaults</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={() => {\n              closeResetModalAndRefresh(false);\n            }}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent>\n        {resetLoading && <LinearProgress />}\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to restore these configurations to default\n          values?\n          <br />\n          <b className={classes.wrapText}>\n            Please note that this may cause your system to not be accessible\n          </b>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          onClick={() => {\n            closeResetModalAndRefresh(false);\n          }}\n          color=\"primary\"\n          disabled={resetLoading}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={resetConfiguration}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n          disabled={resetLoading}\n        >\n          Yes, Reset Configuration\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ResetConfigurationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\nimport { serverNeedsRestart, setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n  });\n\ninterface IAddNotificationEndpointProps {\n  serverNeedsRestart: typeof serverNeedsRestart;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  history: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  serverNeedsRestart,\n  selectedConfiguration,\n  setErrorSnackMessage,\n  classes,\n  history,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [loadingConfig, setLoadingConfig] = useState<boolean>(true);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  //Effects\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api\n          .invoke(\"GET\", `/api/v1/configs/${configId}`)\n          .then((res) => {\n            const keyVals = get(res, \"key_values\", []);\n            setConfigValues(keyVals);\n            setLoadingConfig(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingConfig(false);\n            setErrorSnackMessage(err);\n          });\n\n        return;\n      }\n      setLoadingConfig(false);\n    }\n  }, [loadingConfig, selectedConfiguration, setErrorSnackMessage]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          serverNeedsRestart(res.restart);\n\n          history.push(\"/settings\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    saving,\n    history,\n    serverNeedsRestart,\n    selectedConfiguration,\n    valuesObj,\n    setErrorSnackMessage,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    serverNeedsRestart(restart);\n    if (restart) {\n      setLoadingConfig(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      {resetConfigurationOpen && (\n        <ResetConfigurationModal\n          configurationName={selectedConfiguration.configuration_id}\n          closeResetModalAndRefresh={continueReset}\n          resetOpen={resetConfigurationOpen}\n        />\n      )}\n\n      <form noValidate onSubmit={submitForm} className={className}>\n        <Grid item xs={12} className={classes.settingsFormContainer}>\n          {loadingConfig && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <ConfTargetGeneric\n            fields={\n              fieldsConfigurations[selectedConfiguration.configuration_id]\n            }\n            onChange={onValueChange}\n            defaultVals={configValues}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.settingsButtonContainer}>\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              setResetConfigurationOpen(true);\n            }}\n          >\n            Restore Defaults\n          </Button>\n          &nbsp; &nbsp;\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={saving}\n          >\n            Save\n          </Button>\n        </Grid>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  serverNeedsRestart,\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(EditConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../NotificationEndpoints/CustomForms/EditConfiguration\";\n\ninterface IConfigurationForm {\n  match: any;\n  history: any;\n}\n\nconst ConfigurationsList = ({ match, history }: IConfigurationForm) => {\n  const activeConfRoute = get(match, \"url\", \"\");\n\n  const configName = activeConfRoute.substring(\n    activeConfRoute.lastIndexOf(\"/\") + 1\n  );\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid item xs={12}>\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n          history={history}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n"],"sourceRoot":""}