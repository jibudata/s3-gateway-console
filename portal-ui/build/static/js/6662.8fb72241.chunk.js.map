{"version":3,"file":"static/js/6662.8fb72241.chunk.js","mappings":"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","sources":["screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, CopyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Button,\n  DownloadIcon,\n  ServiceAccountCredentialsIcon,\n  WarnIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"names":["withStyles","theme","createStyles","container","display","flexFlow","padding","inputWithCopy","width","background","height","marginRight","inputLabel","fieldBasic","fontSize","label","value","classes","className","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","id","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","alignItems","credentialTitle","fontWeight","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","Grid","item","xs","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","marginBottom","tooltipContainer","placement","overflow","border","language","onChange","evn","target","backgroundColor","fontFamily","minHeight","borderTop","paddingRight","marginLeft","type","StyledSwitch","root","switchBase","transform","palette","common","white","boxShadow","opacity","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","Switch","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","name","disabled","switchOnly","description","indicatorLabels","extraInputProps","switchComponent","clsx","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","htmlFor","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","overlayAction","right","top","maxWidth","autoComplete","multiline","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","useState","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","size","children","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","styles","ownerState","edge","capitalize","_extends","boxSizing","flexShrink","zIndex","verticalAlign","colorAdjust","switchClasses","SwitchSwitchBase","SwitchBase","input","left","vars","defaultColor","grey","duration","shortest","defaultDisabledColor","switchTrackDisabled","action","activeChannel","hoverOpacity","alpha","active","main","mainChannel","lighten","darken","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","shadows","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","checkedIcon"],"sourceRoot":""}