{"version":3,"file":"static/js/1829.3cdb24a1.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Heal/Heal.tsx","utils/wsUtils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { HelpBox } from \"mds\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup.</div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport {\n  FormControl,\n  Grid,\n  InputBase,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, HealIcon, PageHeader } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport { Bucket, BucketList } from \"../Watch/types\";\nimport { colorH, HealStatus } from \"./types\";\nimport { niceBytes } from \"../../../common/utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  inlineCheckboxes,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport CheckboxWrapper from \"../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport api from \"../../../common/api\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { SecureComponent } from \"../../../common/SecureComponent\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport { selDistSet } from \"../../../systemSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    graphContainer: {\n      backgroundColor: \"#fff\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      padding: \"19px 38px\",\n      marginTop: 15,\n    },\n    scanInfo: {\n      marginTop: 20,\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    scanData: {\n      fontSize: 13,\n    },\n    formBox: {\n      padding: 15,\n      border: \"1px solid #EAEAEA\",\n    },\n    buttonBar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n    },\n    bucketField: {\n      flex: 1,\n    },\n    prefixField: {\n      ...searchField.searchField,\n      marginLeft: 10,\n      flex: 1,\n    },\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      marginBottom: 0,\n    },\n    ...inlineCheckboxes,\n    ...searchField,\n    ...containerForHeader,\n  })\n);\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      lineHeight: \"50px\",\n      marginRight: 15,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n      \"& .MuiSelect-select:focus\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n  })\n)(InputBase);\n\nconst Heal = () => {\n  const classes = useStyles();\n  const distributedSetup = useSelector(selDistSet);\n\n  const [start, setStart] = useState(false);\n  const [bucketName, setBucketName] = useState(\"\");\n  const [bucketList, setBucketList] = useState<Bucket[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [recursive, setRecursive] = useState(false);\n  const [forceStart, setForceStart] = useState(false);\n  const [forceStop, setForceStop] = useState(false);\n  // healStatus states\n  const [hStatus, setHStatus] = useState({\n    beforeHeal: [0, 0, 0, 0],\n    afterHeal: [0, 0, 0, 0],\n    objectsHealed: 0,\n    objectsScanned: 0,\n    healDuration: 0,\n    sizeScanned: \"\",\n  });\n\n  const fetchBucketList = () => {\n    api\n      .invoke(\"GET\", `/api/v1/buckets`)\n      .then((res: BucketList) => {\n        let buckets: Bucket[] = [];\n        if (res.buckets !== null) {\n          buckets = res.buckets;\n        }\n        setBucketList(buckets);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    fetchBucketList();\n  }, []);\n\n  // forceStart and forceStop need to be mutually exclusive\n  useEffect(() => {\n    if (forceStart === true) {\n      setForceStop(false);\n    }\n  }, [forceStart]);\n\n  useEffect(() => {\n    if (forceStop === true) {\n      setForceStart(false);\n    }\n  }, [forceStop]);\n\n  const colorHealthArr = (color: colorH) => {\n    return [color.Green, color.Yellow, color.Red, color.Grey];\n  };\n\n  useEffect(() => {\n    // begin watch if bucketName in bucketList and start pressed\n    if (start) {\n      // values stored here to update chart\n      const cB: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\n      const cA: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\n\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      // check if we are using base path, if not this always is `/`\n      const baseLocation = new URL(document.baseURI);\n      const baseUrl = baseLocation.pathname;\n\n      const wsProt = wsProtocol(url.protocol);\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/heal/${bucketName}?prefix=${prefix}&recursive=${recursive}&force-start=${forceStart}&force-stop=${forceStop}`\n      );\n\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: HealStatus = JSON.parse(message.data.toString());\n          // Store percentage per health color\n          for (const [key, value] of Object.entries(m.healthAfterCols)) {\n            cA[key] = (value * 100) / m.itemsScanned;\n          }\n          for (const [key, value] of Object.entries(m.healthBeforeCols)) {\n            cB[key] = (value * 100) / m.itemsScanned;\n          }\n          setHStatus({\n            beforeHeal: colorHealthArr(cB),\n            afterHeal: colorHealthArr(cA),\n            objectsHealed: m.objectsHealed,\n            objectsScanned: m.objectsScanned,\n            healDuration: m.healDuration,\n            sizeScanned: niceBytes(m.bytesScanned.toString()),\n          });\n        };\n        c.onclose = () => {\n          setStart(false);\n          console.log(\"connection closed by server\");\n        };\n        return () => {\n          // close websocket on useEffect cleanup\n          c.close(1000);\n          console.log(\"closing websockets\");\n        };\n      }\n    }\n  }, [start, bucketName, forceStart, forceStop, prefix, recursive]);\n\n  let data = {\n    labels: [\"Green\", \"Yellow\", \"Red\", \"Grey\"],\n    datasets: [\n      {\n        label: \"After Healing\",\n        data: hStatus.afterHeal,\n        backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1,\n      },\n      {\n        label: \"Before Healing\",\n        data: hStatus.beforeHeal,\n        backgroundColor: \"rgba(153, 102, 255, 0.2)\",\n        borderColor: \"rgba(153, 102, 255, 1)\",\n        borderWidth: 1,\n      },\n    ],\n  };\n  const bucketNames = bucketList.map((bucketName) => ({\n    label: bucketName.name,\n    value: bucketName.name,\n  }));\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Drives\" />\n      <PageLayout>\n        {!distributedSetup ? (\n          <DistributedOnly entity={\"Heal\"} iconComponent={<HealIcon />} />\n        ) : (\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_HEAL]}\n            resource={CONSOLE_UI_RESOURCE}\n          >\n            <Grid xs={12} item className={classes.formBox}>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <FormControl variant=\"outlined\" className={classes.bucketField}>\n                  <Select\n                    label=\"Bucket\"\n                    id=\"bucket-name\"\n                    name=\"bucket-name\"\n                    value={bucketName}\n                    onChange={(e) => {\n                      setBucketName(e.target.value as string);\n                    }}\n                    className={classes.searchField}\n                    input={<SelectStyled />}\n                    displayEmpty\n                  >\n                    <MenuItem value=\"\" key={`select-bucket-name-default`}>\n                      Select Bucket\n                    </MenuItem>\n                    {bucketNames.map((option) => (\n                      <MenuItem\n                        value={option.value}\n                        key={`select-bucket-name-${option.label}`}\n                      >\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  label=\"Prefix\"\n                  className={classes.prefixField}\n                  id=\"prefix-resource\"\n                  disabled={false}\n                  InputProps={{\n                    disableUnderline: true,\n                  }}\n                  onChange={(e) => {\n                    setPrefix(e.target.value);\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.inlineCheckboxes}>\n                <CheckboxWrapper\n                  name=\"recursive\"\n                  id=\"recursive\"\n                  value=\"recursive\"\n                  checked={recursive}\n                  onChange={(e) => {\n                    setRecursive(e.target.checked);\n                  }}\n                  disabled={false}\n                  label=\"Recursive\"\n                />\n                <CheckboxWrapper\n                  name=\"forceStart\"\n                  id=\"forceStart\"\n                  value=\"forceStart\"\n                  checked={forceStart}\n                  onChange={(e) => {\n                    setForceStart(e.target.checked);\n                  }}\n                  disabled={false}\n                  label=\"Force Start\"\n                />\n                <CheckboxWrapper\n                  name=\"forceStop\"\n                  id=\"forceStop\"\n                  value=\"forceStop\"\n                  checked={forceStop}\n                  onChange={(e) => {\n                    setForceStop(e.target.checked);\n                  }}\n                  disabled={false}\n                  label=\"Force Stop\"\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.buttonBar}>\n                <Button\n                  id={\"start-heal\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={start}\n                  onClick={() => setStart(true)}\n                  label={\"Start\"}\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.graphContainer}>\n              <HorizontalBar\n                data={data}\n                width={80}\n                height={30}\n                options={{\n                  title: {\n                    display: true,\n                    text: \"Item's Health Status [%]\",\n                    fontSize: 20,\n                  },\n                  legend: {\n                    display: true,\n                    position: \"right\",\n                  },\n                }}\n              />\n              <Grid item xs={12} className={classes.scanInfo}>\n                <div className={classes.scanData}>\n                  <strong>Size scanned:</strong> {hStatus.sizeScanned}\n                </div>\n                <div className={classes.scanData}>\n                  <strong>Objects healed:</strong> {hStatus.objectsHealed} /{\" \"}\n                  {hStatus.objectsScanned}\n                </div>\n                <div className={classes.scanData}>\n                  <strong>Healing time:</strong> {hStatus.healDuration}s\n                </div>\n              </Grid>\n            </Grid>\n          </SecureComponent>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Heal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","useStyles","makeStyles","createStyles","graphContainer","backgroundColor","borderRadius","padding","marginTop","scanInfo","flexDirection","justifyContent","scanData","formBox","buttonBar","bucketField","flex","prefixField","searchField","marginLeft","actionsTray","marginBottom","inlineCheckboxes","containerForHeader","SelectStyled","withStyles","root","lineHeight","marginRight","spacing","InputBase","classes","distributedSetup","useSelector","selDistSet","useState","start","setStart","bucketName","setBucketName","bucketList","setBucketList","prefix","setPrefix","recursive","setRecursive","forceStart","setForceStart","forceStop","setForceStop","beforeHeal","afterHeal","objectsHealed","objectsScanned","healDuration","sizeScanned","hStatus","setHStatus","useEffect","api","then","res","buckets","catch","err","console","error","colorHealthArr","Green","Yellow","Red","Grey","cB","cA","url","URL","window","location","toString","port","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","c","W3CWebSocket","hostname","onopen","log","send","onmessage","message","m","JSON","parse","data","Object","entries","healthAfterCols","key","value","itemsScanned","healthBeforeCols","niceBytes","bytesScanned","onclose","close","labels","datasets","label","borderColor","borderWidth","bucketNames","map","name","Fragment","scopes","IAM_SCOPES","resource","CONSOLE_UI_RESOURCE","className","variant","id","onChange","e","input","displayEmpty","option","disabled","InputProps","disableUnderline","checked","type","onClick","width","height","options","text","legend","position","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr"],"sourceRoot":""}