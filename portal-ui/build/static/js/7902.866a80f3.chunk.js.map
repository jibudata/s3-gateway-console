{"version":3,"file":"static/js/7902.866a80f3.chunk.js","mappings":"4VAkKA,WAAeA,EAAAA,EAAAA,IAvHA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,wBACXC,aAAc,CACZC,OAAQ,wBAEPC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACF,GA+GL,EA7GwB,SAAH,GAA4C,IAAtCC,EAAO,EAAPA,QACnBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMC,SAASH,aAAa,IAGnD,GAA8BI,EAAAA,EAAAA,UAA6B,IAAG,eAAvDC,EAAO,KAAEC,EAAU,KAC1B,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAK,eAA9CK,EAAO,KAAEC,EAAU,MAE1BC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,EAAAA,OACU,MAAM,mCAAD,OAAqCZ,IACjDa,MAAK,SAACC,GACL,IAAIC,EAAUC,IAAIF,EAAK,UAAW,IAE7BC,IACHA,EAAU,IAGZA,EAAQE,MAAK,SAACC,EAAIC,GAChB,OAAID,EAAGE,OAASD,EAAGC,OACV,EAGLF,EAAGE,OAASD,EAAGC,QACT,EAGH,CACT,IAEAd,EAAWS,GACXL,GAAW,EACb,IACCW,OAAM,SAACC,GACNZ,GAAW,GACXZ,GAASyB,EAAAA,EAAAA,IAAqBD,GAChC,GAEN,GAAG,CAACb,EAAST,EAAeF,IAE5B,IAAM0B,EAAsCnB,EAAQE,QAAO,SAACkB,GAAW,OACrEA,EAAYC,MAAMC,SAASpB,EAAO,IAGpC,OACE,UAAC,EAAAqB,SAAQ,YACP,SAAC,IAAiB,CAACC,MAAM,aACzB,UAAC,IAAU,YACT,SAAC,KAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,UAAWnC,EAAQH,YAAY,UAChD,SAAC,IAAS,CACRuC,YAAY,iBACZD,UAAWnC,EAAQF,YACnBuC,GAAG,kBACHL,MAAM,GACNM,WAAY,CACVC,kBAAkB,EAClBC,gBACE,SAAC,IAAc,CAACC,SAAS,QAAO,UAC9B,SAAC,MAAU,OAIjBC,SAAU,SAACC,GACThC,EAAUgC,EAAEC,OAAOC,MACrB,EACAC,QAAQ,gBAGZ,SAAC,KAAI,CAACb,MAAI,EAACC,GAAI,GAAG,UAChB,qBAEF,SAAC,KAAI,CAACD,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC,IAAY,CACXa,YAAa,GACbC,QAAS,CACP,CACEhB,MAAO,SACPiB,WAAY,UAEd,CACEjB,MAAO,WACPiB,WAAY,WACZC,eAAgBC,EAAAA,IAElB,CACEnB,MAAO,OACPiB,WAAY,QAEd,CACEjB,MAAO,QACPiB,WAAY,UAGhBG,UAAWxC,EACXJ,QAASmB,EACT0B,WAAW,UACXC,QAAQ,SACRC,kBAAmBvD,EAAQL,sBAMvC,G","sources":["screens/Console/DirectPV/DirectPVVolumes.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { IDirectPVVolumes, IVolumesResponse } from \"./types\";\nimport { niceBytes } from \"../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport { SearchIcon } from \"mds\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\ninterface IDirectPVVolumesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"calc(100vh - 267px)\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader,\n  });\n\nconst DirectPVVolumes = ({ classes }: IDirectPVVolumesProps) => {\n  const dispatch = useAppDispatch();\n\n  const selectedDrive = useSelector(\n    (state: AppState) => state.directPV.selectedDrive\n  );\n\n  const [records, setRecords] = useState<IDirectPVVolumes[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/directpv/volumes?drives=${selectedDrive}`)\n        .then((res: IVolumesResponse) => {\n          let volumes = get(res, \"volumes\", []);\n\n          if (!volumes) {\n            volumes = [];\n          }\n\n          volumes.sort((d1, d2) => {\n            if (d1.volume > d2.volume) {\n              return 1;\n            }\n\n            if (d1.volume < d2.volume) {\n              return -1;\n            }\n\n            return 0;\n          });\n\n          setRecords(volumes);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, selectedDrive, dispatch]);\n\n  const filteredRecords: IDirectPVVolumes[] = records.filter((elementItem) =>\n    elementItem.drive.includes(filter)\n  );\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label=\"Volumes\" />\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <TextField\n            placeholder=\"Search Volumes\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n        <Grid item xs={12}>\n          <TableWrapper\n            itemActions={[]}\n            columns={[\n              {\n                label: \"Volume\",\n                elementKey: \"volume\",\n              },\n              {\n                label: \"Capacity\",\n                elementKey: \"capacity\",\n                renderFunction: niceBytes,\n              },\n              {\n                label: \"Node\",\n                elementKey: \"node\",\n              },\n              {\n                label: \"Drive\",\n                elementKey: \"drive\",\n              },\n            ]}\n            isLoading={loading}\n            records={filteredRecords}\n            entityName=\"Volumes\"\n            idField=\"volume\"\n            customPaperHeight={classes.tableWrapper}\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DirectPVVolumes);\n"],"names":["withStyles","theme","createStyles","tableWrapper","height","actionsTray","searchField","containerForHeader","classes","dispatch","useAppDispatch","selectedDrive","useSelector","state","directPV","useState","records","setRecords","filter","setFilter","loading","setLoading","useEffect","api","then","res","volumes","get","sort","d1","d2","volume","catch","err","setErrorSnackMessage","filteredRecords","elementItem","drive","includes","Fragment","label","item","xs","className","placeholder","id","InputProps","disableUnderline","startAdornment","position","onChange","e","target","value","variant","itemActions","columns","elementKey","renderFunction","niceBytes","isLoading","entityName","idField","customPaperHeight"],"sourceRoot":""}