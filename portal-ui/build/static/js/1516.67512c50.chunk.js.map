{"version":3,"file":"static/js/1516.67512c50.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Support/utils.tsx","screens/Console/Support/GetApiKeyModal.tsx","screens/Console/Support/RegisterHelpBox.tsx","screens/Console/Support/ApiKeyRegister.tsx","screens/Console/Support/registerThunks.ts","screens/Console/Support/OfflineRegistration.tsx","screens/Console/Support/SubnetMFAToken.tsx","screens/Console/Support/ClusterRegistrationForm.tsx","screens/Console/Support/OnlineRegistration.tsx","screens/Console/Support/Register.tsx","screens/Console/Support/RegistrationStatusBanner.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  }),\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","import { Box, Grid, Link } from \"@mui/material\";\nimport { Fragment, useState } from \"react\";\nimport { CopyIcon, SettingsIcon } from \"mds\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RegistrationStatusBanner from \"./RegistrationStatusBanner\";\n\nexport const FormTitle = ({\n  icon = null,\n  title,\n}: {\n  icon?: any;\n  title: any;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      {icon}\n      <div className=\"title-text\">{title}</div>\n    </Box>\n  );\n};\n\nexport const ClusterRegistered = ({ email }: { email: string }) => {\n  return (\n    <Fragment>\n      <RegistrationStatusBanner email={email} />\n      <Grid item xs={12} marginTop={\"25px\"}>\n        <Box\n          sx={{\n            padding: \"20px\",\n            \"& a\": {\n              color: \"#2781B0\",\n              cursor: \"pointer\",\n            },\n          }}\n        >\n          Login to{\" \"}\n          <Link\n            href=\"https://subnet.min.io\"\n            target=\"_blank\"\n            style={{\n              color: \"#2781B0\",\n              cursor: \"pointer\",\n            }}\n          >\n            SUBNET\n          </Link>{\" \"}\n          to avail support for this MinIO cluster\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport const ProxyConfiguration = () => {\n  const proxyConfigurationCommand =\n    \"mc admin config set {alias} subnet proxy={proxy}\";\n  const [displaySubnetProxy, setDisplaySubnetProxy] = useState(false);\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          padding: \"23px\",\n          marginTop: \"40px\",\n          alignItems: \"start\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              \"& .min-icon\": {\n                height: \"22px\",\n                width: \"22px\",\n              },\n            }}\n          >\n            <SettingsIcon />\n            <div style={{ marginLeft: \"10px\", fontWeight: 600 }}>\n              Proxy Configuration\n            </div>\n          </Box>\n          <Box\n            sx={{\n              marginTop: \"10px\",\n              marginBottom: \"10px\",\n              fontSize: \"14px\",\n            }}\n          >\n            For airgap/firewalled environments it is possible to{\" \"}\n            <Link\n              style={{\n                color: \"#2781B0\",\n                cursor: \"pointer\",\n              }}\n              href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con\"\n              target=\"_blank\"\n            >\n              configure a proxy\n            </Link>{\" \"}\n            to connect to SUBNET .\n          </Box>\n          <Box>\n            {displaySubnetProxy && (\n              <InputBoxWrapper\n                disabled\n                id=\"subnetProxy\"\n                name=\"subnetProxy\"\n                placeholder=\"\"\n                onChange={() => {}}\n                label=\"\"\n                value={proxyConfigurationCommand}\n                overlayIcon={<CopyIcon />}\n                extraInputProps={{\n                  readOnly: true,\n                }}\n                overlayAction={() =>\n                  navigator.clipboard.writeText(proxyConfigurationCommand)\n                }\n              />\n            )}\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n          }}\n        >\n          <FormSwitchWrapper\n            value=\"enableProxy\"\n            id=\"enableProxy\"\n            name=\"enableProxy\"\n            checked={displaySubnetProxy}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setDisplaySubnetProxy(event.target.checked);\n            }}\n          />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport {\n  containerForHeader,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport React, { useState } from \"react\";\nimport { InfoIcon, UsersIcon } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...containerForHeader,\n    ...spacingUtils,\n  });\n\ninterface IGetApiKeyModalProps {\n  open: boolean;\n  closeModal: () => void;\n  onSet: (apiKey: string) => void;\n  classes: any;\n}\n\nconst GetApiKeyModal = ({\n  open,\n  closeModal,\n  classes,\n  onSet,\n}: IGetApiKeyModalProps) => {\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [mfaToken, setMfaToken] = useState(\"\");\n  const [subnetOTP, setSubnetOTP] = useState(\"\");\n\n  const onError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeModal();\n    setEmail(\"\");\n    setPassword(\"\");\n    setShowPassword(false);\n    setMfaToken(\"\");\n    setSubnetOTP(\"\");\n  };\n\n  const onSuccess = (res: any) => {\n    if (res.mfa_token) {\n      setMfaToken(res.mfa_token);\n    } else if (res.access_token) {\n      invokeApi(\"GET\", `/api/v1/subnet/apikey?token=${res.access_token}`);\n    } else {\n      onSet(res.apiKey);\n      closeModal();\n    }\n  };\n\n  const [isLoading, invokeApi] = useApi(onSuccess, onError);\n\n  const onConfirm = () => {\n    if (mfaToken !== \"\") {\n      invokeApi(\"POST\", \"/api/v1/subnet/login/mfa\", {\n        username: email,\n        otp: subnetOTP,\n        mfa_token: mfaToken,\n      });\n    } else {\n      invokeApi(\"POST\", \"/api/v1/subnet/login\", { username: email, password });\n    }\n  };\n\n  const getDialogContent = () => {\n    if (mfaToken === \"\") {\n      return getCredentialsDialog();\n    }\n    return getMFADialog();\n  };\n\n  const getCredentialsDialog = () => {\n    return (\n      <Box sx={{ width: 500 }}>\n        <InputBoxWrapper\n          className={classes.spacerBottom}\n          classes={{\n            inputLabel: classes.sizedLabel,\n          }}\n          id=\"subnet-email\"\n          name=\"subnet-email\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setEmail(event.target.value)\n          }\n          label=\"Email\"\n          value={email}\n          overlayIcon={<UsersIcon />}\n        />\n        <InputBoxWrapper\n          className={classes.spacerBottom}\n          classes={{\n            inputLabel: classes.sizedLabel,\n          }}\n          id=\"subnet-password\"\n          name=\"subnet-password\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setPassword(event.target.value)\n          }\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          value={password}\n          overlayIcon={\n            showPassword ? <VisibilityOffIcon /> : <RemoveRedEyeIcon />\n          }\n          overlayAction={() => setShowPassword(!showPassword)}\n        />\n      </Box>\n    );\n  };\n\n  const getMFADialog = () => {\n    return (\n      <Box sx={{ display: \"flex\" }}>\n        <Box sx={{ display: \"flex\", flexFlow: \"column\", flex: \"2\" }}>\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Two-Factor Authentication\n          </Box>\n\n          <Box>\n            Please enter the 6-digit verification code that was sent to your\n            email address. This code will be valid for 5 minutes.\n          </Box>\n\n          <Box\n            sx={{\n              flex: \"1\",\n              marginTop: \"30px\",\n            }}\n          >\n            <InputBoxWrapper\n              overlayIcon={<LockOutlinedIcon />}\n              id=\"subnet-otp\"\n              name=\"subnet-otp\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setSubnetOTP(event.target.value)\n              }\n              placeholder=\"\"\n              label=\"\"\n              value={subnetOTP}\n            />\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n          ></Box>\n        </Box>\n      </Box>\n    );\n  };\n\n  return open ? (\n    <ConfirmDialog\n      title={\"Get API Key from SUBNET\"}\n      confirmText={\"Get API Key\"}\n      isOpen={open}\n      titleIcon={<InfoIcon />}\n      isLoading={isLoading}\n      cancelText={\"Cancel\"}\n      onConfirm={onConfirm}\n      onClose={closeModal}\n      confirmButtonProps={{\n        variant: \"callAction\",\n        disabled: !email || !password || isLoading,\n        hidden: true,\n      }}\n      cancelButtonProps={{\n        disabled: isLoading,\n      }}\n      confirmationContent={getDialogContent()}\n    />\n  ) : null;\n};\n\nexport default withStyles(styles)(GetApiKeyModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Link } from \"@mui/material\";\nimport {\n  CallHomeFeatureIcon,\n  DiagnosticsFeatureIcon,\n  ExtraFeaturesIcon,\n  HelpIconFilled,\n  PerformanceFeatureIcon,\n} from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string | React.ReactNode;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst RegisterHelpBox = ({ hasMargin = true }: { hasMargin?: boolean }) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginLeft: {\n          xs: \"0px\",\n          sm: \"0px\",\n          md: hasMargin ? \"30px\" : \"\",\n        },\n        marginTop: {\n          xs: \"0px\",\n          sm: hasMargin ? \"30px\" : \"\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Why should I register?</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        Registering this cluster with the MinIO Subscription Network (SUBNET)\n        provides the following benefits in addition to the commercial license\n        and SLA backed support.\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CallHomeFeatureIcon />}\n          description={`Call Home Monitoring`}\n        />\n        <FeatureItem\n          icon={<DiagnosticsFeatureIcon />}\n          description={`Health Diagnostics`}\n        />\n        <FeatureItem\n          icon={<PerformanceFeatureIcon />}\n          description={`Performance Analysis`}\n        />\n        <FeatureItem\n          icon={<ExtraFeaturesIcon />}\n          description={\n            <Link\n              href=\"https://min.io/signup?ref=con\"\n              target=\"_blank\"\n              sx={{\n                color: \"#2781B0\",\n                cursor: \"pointer\",\n              }}\n            >\n              More Features\n            </Link>\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default RegisterHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button, OnlineRegistrationIcon } from \"mds\";\nimport { FormTitle } from \"./utils\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport GetApiKeyModal from \"./GetApiKeyModal\";\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport { SubnetLoginRequest, SubnetLoginResponse } from \"../License/types\";\nimport api from \"../../../common/api\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { spacingUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface IApiKeyRegister {\n  classes: any;\n  registerEndpoint: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...spacingUtils,\n  });\n\nconst ApiKeyRegister = ({ classes, registerEndpoint }: IApiKeyRegister) => {\n  const navigate = useNavigate();\n\n  const [showApiKeyModal, setShowApiKeyModal] = useState(false);\n  const [apiKey, setApiKey] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [fromModal, setFromModal] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const onRegister = useCallback(() => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    let request: SubnetLoginRequest = { apiKey };\n    api\n      .invoke(\"POST\", registerEndpoint, request)\n      .then((resp: SubnetLoginResponse) => {\n        setLoading(false);\n        if (resp && resp.registered) {\n          dispatch(setServerNeedsRestart(true));\n          navigate(IAM_PAGES.LICENSE);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n        reset();\n      });\n  }, [apiKey, dispatch, loading, registerEndpoint, navigate]);\n\n  useEffect(() => {\n    if (fromModal) {\n      onRegister();\n    }\n  }, [fromModal, onRegister]);\n\n  const reset = () => {\n    setApiKey(\"\");\n    setFromModal(false);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          \"& .title-text\": {\n            marginLeft: \"27px\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <FormTitle\n          icon={<OnlineRegistrationIcon />}\n          title={`Register cluster with API key`}\n        />\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: {\n            xs: \"column\",\n            md: \"row\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Use your MinIO Subscription Network API Key to register this\n            cluster.\n          </Box>\n          <Box\n            sx={{\n              flex: \"1\",\n            }}\n          >\n            <InputBoxWrapper\n              className={classes.spacerBottom}\n              classes={{\n                inputLabel: classes.sizedLabel,\n              }}\n              id=\"api-key\"\n              name=\"api-key\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setApiKey(event.target.value)\n              }\n              label=\"API Key\"\n              value={apiKey}\n            />\n\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                \"& button\": {\n                  marginLeft: \"8px\",\n                },\n              }}\n            >\n              <Button\n                id={\"get-from-subnet\"}\n                variant=\"regular\"\n                className={classes.spacerRight}\n                disabled={loading}\n                onClick={() => setShowApiKeyModal(true)}\n                label={\"Get from SUBNET\"}\n              />\n              <Button\n                id={\"register\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={loading || apiKey.trim().length === 0}\n                onClick={() => onRegister()}\n                label={\"Register\"}\n              />\n              <GetApiKeyModal\n                open={showApiKeyModal}\n                closeModal={() => setShowApiKeyModal(false)}\n                onSet={(value) => {\n                  setApiKey(value);\n                  setFromModal(true);\n                }}\n              />\n            </Box>\n          </Box>\n        </Box>\n        <RegisterHelpBox />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ApiKeyRegister);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  resetRegisterForm,\n  setClusterRegistered,\n  setLicenseInfo,\n  setLoading,\n  setLoadingLicenseInfo,\n  setSelectedSubnetOrganization,\n  setSubnetAccessToken,\n  setSubnetMFAToken,\n  setSubnetOrganizations,\n  setSubnetOTP,\n} from \"./registerSlice\";\nimport api from \"../../../common/api\";\nimport {\n  SubnetInfo,\n  SubnetLoginRequest,\n  SubnetLoginResponse,\n  SubnetLoginWithMFARequest,\n  SubnetRegisterRequest,\n} from \"../License/types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { AppState } from \"../../../store\";\nimport { hasPermission } from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PAGES_PERMISSIONS,\n} from \"../../../common/SecureComponent/permissions\";\n\nexport const fetchLicenseInfo = createAsyncThunk(\n  \"register/fetchLicenseInfo\",\n  async (_, { getState, dispatch }) => {\n    const state = getState() as AppState;\n\n    const getSubnetInfo = hasPermission(\n      CONSOLE_UI_RESOURCE,\n      IAM_PAGES_PERMISSIONS[IAM_PAGES.LICENSE],\n      true,\n    );\n\n    const loadingLicenseInfo = state.register.loadingLicenseInfo;\n\n    if (loadingLicenseInfo) {\n      return;\n    }\n    if (getSubnetInfo) {\n      dispatch(setLoadingLicenseInfo(true));\n      api\n        .invoke(\"GET\", `/api/v1/subnet/info`)\n        .then((res: SubnetInfo) => {\n          dispatch(setLicenseInfo(res));\n          dispatch(setClusterRegistered(true));\n          dispatch(setLoadingLicenseInfo(false));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          if (\n            err.detailedError.toLowerCase() !==\n              \"License is not present\".toLowerCase() &&\n            err.detailedError.toLowerCase() !==\n              \"license not found\".toLowerCase()\n          ) {\n            dispatch(setErrorSnackMessage(err));\n          }\n          dispatch(setClusterRegistered(false));\n          dispatch(setLoadingLicenseInfo(false));\n        });\n    } else {\n      dispatch(setLoadingLicenseInfo(false));\n    }\n  },\n);\n\nexport interface ClassRegisterArgs {\n  token: string;\n  account_id: string;\n}\n\nexport const callRegister = createAsyncThunk(\n  \"register/callRegister\",\n  async (args: ClassRegisterArgs, { dispatch }) => {\n    const request: SubnetRegisterRequest = {\n      token: args.token,\n      account_id: args.account_id,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/register\", request)\n      .then(() => {\n        dispatch(setLoading(false));\n        dispatch(setServerNeedsRestart(true));\n        dispatch(resetRegisterForm());\n        dispatch(fetchLicenseInfo());\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        dispatch(setLoading(false));\n      });\n  },\n);\n\nexport const subnetLoginWithMFA = createAsyncThunk(\n  \"register/subnetLoginWithMFA\",\n  async (_, { getState, rejectWithValue, dispatch }) => {\n    const state = getState() as AppState;\n\n    const subnetEmail = state.register.subnetEmail;\n    const subnetMFAToken = state.register.subnetMFAToken;\n    const subnetOTP = state.register.subnetOTP;\n    const loading = state.register.loading;\n\n    if (loading) {\n      return;\n    }\n    dispatch(setLoading(true));\n    const request: SubnetLoginWithMFARequest = {\n      username: subnetEmail,\n      otp: subnetOTP,\n      mfa_token: subnetMFAToken,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login/mfa\", request)\n      .then((resp: SubnetLoginResponse) => {\n        dispatch(setLoading(false));\n        if (resp && resp.access_token && resp.organizations.length > 0) {\n          if (resp.organizations.length === 1) {\n            dispatch(\n              callRegister({\n                token: resp.access_token,\n                account_id: resp.organizations[0].accountId.toString(),\n              }),\n            );\n          } else {\n            dispatch(setSubnetAccessToken(resp.access_token));\n            dispatch(setSubnetOrganizations(resp.organizations));\n            dispatch(\n              setSelectedSubnetOrganization(\n                resp.organizations[0].accountId.toString(),\n              ),\n            );\n          }\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        dispatch(setLoading(false));\n        dispatch(setSubnetOTP(\"\"));\n      });\n  },\n);\n\nexport const subnetLogin = createAsyncThunk(\n  \"register/subnetLogin\",\n  async (_, { getState, rejectWithValue, dispatch }) => {\n    const state = getState() as AppState;\n\n    const license = state.register.license;\n    const subnetPassword = state.register.subnetPassword;\n    const subnetEmail = state.register.subnetEmail;\n    const loading = state.register.loading;\n\n    if (loading) {\n      return;\n    }\n    dispatch(setLoading(true));\n    let request: SubnetLoginRequest = {\n      username: subnetEmail,\n      password: subnetPassword,\n      apiKey: license,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login\", request)\n      .then((resp: SubnetLoginResponse) => {\n        dispatch(setLoading(false));\n        if (resp && resp.registered) {\n          dispatch(resetRegisterForm());\n          dispatch(fetchLicenseInfo());\n        } else if (resp && resp.mfa_token) {\n          dispatch(setSubnetMFAToken(resp.mfa_token));\n        } else if (resp && resp.access_token && resp.organizations.length > 0) {\n          dispatch(setSubnetAccessToken(resp.access_token));\n          dispatch(setSubnetOrganizations(resp.organizations));\n          dispatch(\n            setSelectedSubnetOrganization(\n              resp.organizations[0].accountId.toString(),\n            ),\n          );\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        dispatch(setLoading(false));\n        dispatch(resetRegisterForm());\n      });\n  },\n);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box, Link } from \"@mui/material\";\nimport { ClusterRegistered, FormTitle } from \"./utils\";\nimport { Button, CopyIcon, OfflineRegistrationIcon } from \"mds\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { fetchLicenseInfo } from \"./registerThunks\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\n\nconst OfflineRegistration = () => {\n  const dispatch = useAppDispatch();\n  const subnetRegToken = useSelector(\n    (state: AppState) => state.register.subnetRegToken,\n  );\n  const clusterRegistered = useSelector(\n    (state: AppState) => state.register.clusterRegistered,\n  );\n  const licenseInfo = useSelector(\n    (state: AppState) => state.register.licenseInfo,\n  );\n\n  const offlineRegUrl = `https://subnet.min.io/cluster/register?token=${subnetRegToken}`;\n\n  const [licenseKey, setLicenseKey] = useState(\"\");\n\n  const [isSaving, invokeApplyLicenseApi] = useApi(\n    () => {\n      dispatch(fetchLicenseInfo());\n      dispatch(setServerNeedsRestart(true));\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  const applyAirGapLicense = () => {\n    invokeApplyLicenseApi(\"PUT\", `/api/v1/configs/subnet`, {\n      key_values: [{ key: \"license\", value: licenseKey }],\n    });\n  };\n\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && licenseInfo ? (\n          <ClusterRegistered email={licenseInfo.email} />\n        ) : (\n          <Fragment>\n            <Box\n              sx={{\n                \"& .title-text\": {\n                  marginLeft: \"27px\",\n                  fontWeight: 600,\n                },\n              }}\n            >\n              <FormTitle\n                icon={<OfflineRegistrationIcon />}\n                title={`Register cluster in an Air-gap environment`}\n              />\n            </Box>\n\n            <Box\n              sx={{\n                display: \"flex\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  flex: \"2\",\n                  marginTop: \"15px\",\n                  \"& .step-number\": {\n                    color: \"#ffffff\",\n                    height: \"25px\",\n                    width: \"25px\",\n                    background: \"#081C42\",\n                    marginRight: \"10px\",\n                    textAlign: \"center\",\n                    fontWeight: 600,\n                    borderRadius: \"50%\",\n                  },\n\n                  \"& .step-row\": {\n                    fontSize: \"16px\",\n                    display: \"flex\",\n                    marginTop: \"15px\",\n                    marginBottom: \"15px\",\n                  },\n                }}\n              >\n                <Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      Click on the link to register this cluster in SUBNET and\n                      get a License Key for this Air-Gap deployment\n                    </div>\n                  </Box>\n\n                  <Box\n                    sx={{\n                      flex: \"1\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: 3,\n                    }}\n                  >\n                    <Link\n                      style={{\n                        color: \"#2781B0\",\n                        cursor: \"pointer\",\n                      }}\n                      color=\"inherit\"\n                      href={offlineRegUrl}\n                      target=\"_blank\"\n                    >\n                      https://subnet.min.io/cluster/register\n                    </Link>\n\n                    <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n                      <CopyToClipboard text={offlineRegUrl}>\n                        <Button\n                          type={\"button\"}\n                          id={\"copy-ult-to-clip-board\"}\n                          icon={<CopyIcon />}\n                          color={\"primary\"}\n                          variant={\"regular\"}\n                        />\n                      </CopyToClipboard>\n                    </TooltipWrapper>\n                  </Box>\n\n                  <div\n                    style={{\n                      marginTop: \"25px\",\n                      fontSize: \"14px\",\n                      fontStyle: \"italic\",\n                      color: \"#5E5E5E\",\n                    }}\n                  >\n                    Note: If this machine does not have internet connection,\n                    Copy paste the following URL in a browser where you access\n                    SUBNET and follow the instructions to complete the\n                    registration\n                  </div>\n\n                  <Box\n                    sx={{\n                      marginTop: \"25px\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <label style={{ fontWeight: \"bold\", marginBottom: \"10px\" }}>\n                      Paste the License Key{\" \"}\n                    </label>\n                    <CommentBoxWrapper\n                      value={licenseKey}\n                      disabled={isSaving}\n                      label={\"\"}\n                      id={\"licenseKey\"}\n                      name={\"licenseKey\"}\n                      placeholder={\"License Key\"}\n                      onChange={(e) => {\n                        setLicenseKey(e.target.value);\n                      }}\n                    />\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: \"25px\",\n                    }}\n                  >\n                    <Button\n                      id={\"apply-license-key\"}\n                      onClick={applyAirGapLicense}\n                      variant={\"callAction\"}\n                      disabled={!licenseKey || isSaving}\n                      label={\"Apply Cluster License\"}\n                    />\n                  </Box>\n                </Box>\n              </Box>\n              <RegisterHelpBox />\n            </Box>\n          </Fragment>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default OfflineRegistration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { setSubnetOTP } from \"./registerSlice\";\nimport { Button } from \"mds\";\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { subnetLoginWithMFA } from \"./registerThunks\";\n\nconst SubnetMFAToken = () => {\n  const dispatch = useAppDispatch();\n\n  const subnetMFAToken = useSelector(\n    (state: AppState) => state.register.subnetMFAToken,\n  );\n  const subnetOTP = useSelector((state: AppState) => state.register.subnetOTP);\n  const loading = useSelector((state: AppState) => state.register.loading);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n          flex: \"2\",\n        }}\n      >\n        <Box\n          sx={{\n            fontSize: \"16px\",\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          Two-Factor Authentication\n        </Box>\n\n        <Box>\n          Please enter the 6-digit verification code that was sent to your email\n          address. This code will be valid for 5 minutes.\n        </Box>\n\n        <Box\n          sx={{\n            flex: \"1\",\n            marginTop: \"30px\",\n          }}\n        >\n          <InputBoxWrapper\n            overlayIcon={<LockOutlinedIcon />}\n            id=\"subnet-otp\"\n            name=\"subnet-otp\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              dispatch(setSubnetOTP(event.target.value))\n            }\n            placeholder=\"\"\n            label=\"\"\n            value={subnetOTP}\n          />\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button\n            id={\"verify\"}\n            onClick={() => dispatch(subnetLoginWithMFA())}\n            disabled={\n              loading ||\n              subnetOTP.trim().length === 0 ||\n              subnetMFAToken.trim().length === 0\n            }\n            variant=\"callAction\"\n            label={\"Verify\"}\n          />\n        </Box>\n      </Box>\n\n      <RegisterHelpBox />\n    </Box>\n  );\n};\nexport default SubnetMFAToken;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { FormTitle } from \"./utils\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { setLoading, setSelectedSubnetOrganization } from \"./registerSlice\";\nimport { Button } from \"mds\";\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { callRegister } from \"./registerThunks\";\n\nconst ClusterRegistrationForm = () => {\n  const dispatch = useAppDispatch();\n\n  const subnetAccessToken = useSelector(\n    (state: AppState) => state.register.subnetAccessToken,\n  );\n  const selectedSubnetOrganization = useSelector(\n    (state: AppState) => state.register.selectedSubnetOrganization,\n  );\n  const subnetOrganizations = useSelector(\n    (state: AppState) => state.register.subnetOrganizations,\n  );\n  const loading = useSelector((state: AppState) => state.register.loading);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n          flex: \"2\",\n        }}\n      >\n        <Box\n          sx={{\n            marginTop: \"15px\",\n            marginBottom: \"15px\",\n            \"& .title-text\": {\n              marginLeft: \"0px\",\n            },\n          }}\n        >\n          <FormTitle title={`Register MinIO cluster`} />\n        </Box>\n        <Box>\n          <SelectWrapper\n            id=\"subnet-organization\"\n            name=\"subnet-organization\"\n            onChange={(e) =>\n              dispatch(setSelectedSubnetOrganization(e.target.value as string))\n            }\n            label=\"Select an organization\"\n            value={selectedSubnetOrganization}\n            options={subnetOrganizations.map((organization) => ({\n              label: organization.company,\n              value: organization.accountId.toString(),\n            }))}\n          />\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              marginTop: \"15px\",\n            }}\n          >\n            <Button\n              id={\"register-cluster\"}\n              onClick={() => () => {\n                if (loading) {\n                  return;\n                }\n                dispatch(setLoading(true));\n                if (subnetAccessToken && selectedSubnetOrganization) {\n                  dispatch(\n                    callRegister({\n                      token: subnetAccessToken,\n                      account_id: selectedSubnetOrganization,\n                    }),\n                  );\n                }\n              }}\n              disabled={loading || subnetAccessToken.trim().length === 0}\n              variant=\"callAction\"\n              label={\"Register\"}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <RegisterHelpBox />\n    </Box>\n  );\n};\n\nexport default ClusterRegistrationForm;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { FormTitle } from \"./utils\";\nimport { Button, OnlineRegistrationIcon, UsersIcon } from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { spacingUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport {\n  setShowPassword,\n  setSubnetEmail,\n  setSubnetPassword,\n} from \"./registerSlice\";\nimport { subnetLogin } from \"./registerThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...spacingUtils,\n  }),\n);\n\nconst OnlineRegistration = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const subnetPassword = useSelector(\n    (state: AppState) => state.register.subnetPassword,\n  );\n  const subnetEmail = useSelector(\n    (state: AppState) => state.register.subnetEmail,\n  );\n  const showPassword = useSelector(\n    (state: AppState) => state.register.showPassword,\n  );\n  const loading = useSelector((state: AppState) => state.register.loading);\n\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          \"& .title-text\": {\n            marginLeft: \"27px\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <FormTitle\n          icon={<OnlineRegistrationIcon />}\n          title={`Online activation of MinIO Subscription Network License`}\n        />\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: {\n            xs: \"column\",\n            md: \"row\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Use your MinIO Subscription Network login credentials to register\n            this cluster.\n          </Box>\n          <Box\n            sx={{\n              flex: \"1\",\n            }}\n          >\n            <InputBoxWrapper\n              className={classes.spacerBottom}\n              classes={{\n                inputLabel: classes.sizedLabel,\n              }}\n              id=\"subnet-email\"\n              name=\"subnet-email\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                dispatch(setSubnetEmail(event.target.value))\n              }\n              label=\"Email\"\n              value={subnetEmail}\n              overlayIcon={<UsersIcon />}\n            />\n            <InputBoxWrapper\n              className={classes.spacerBottom}\n              classes={{\n                inputLabel: classes.sizedLabel,\n              }}\n              id=\"subnet-password\"\n              name=\"subnet-password\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                dispatch(setSubnetPassword(event.target.value))\n              }\n              label=\"Password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={subnetPassword}\n              overlayIcon={\n                showPassword ? <VisibilityOffIcon /> : <RemoveRedEyeIcon />\n              }\n              overlayAction={() => dispatch(setShowPassword(!showPassword))}\n            />\n\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                \"& button\": {\n                  marginLeft: \"8px\",\n                },\n              }}\n            >\n              <Button\n                id={\"sign-up\"}\n                type=\"submit\"\n                className={classes.spacerRight}\n                variant=\"regular\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(`https://min.io/signup?ref=con`, \"_blank\");\n                }}\n                label={\"Sign up\"}\n              />\n              <Button\n                id={\"register-credentials\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={\n                  loading ||\n                  subnetEmail.trim().length === 0 ||\n                  subnetPassword.trim().length === 0\n                }\n                onClick={() => dispatch(subnetLogin())}\n                label={\"Register\"}\n              />\n            </Box>\n          </Box>\n        </Box>\n        <RegisterHelpBox />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default OnlineRegistration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { spacingUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport api from \"../../../common/api\";\n\nimport { SubnetRegTokenResponse } from \"../License/types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useSelector } from \"react-redux\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { TabPanel } from \"../../shared/tabs\";\nimport { ClusterRegistered, ProxyConfiguration } from \"./utils\";\nimport ApiKeyRegister from \"./ApiKeyRegister\";\nimport { fetchLicenseInfo } from \"./registerThunks\";\nimport {\n  resetRegisterForm,\n  setCurTab,\n  setLoading,\n  setSubnetRegToken,\n} from \"./registerSlice\";\nimport OfflineRegistration from \"./OfflineRegistration\";\nimport SubnetMFAToken from \"./SubnetMFAToken\";\nimport ClusterRegistrationForm from \"./ClusterRegistrationForm\";\nimport OnlineRegistration from \"./OnlineRegistration\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { PageLayout } from \"mds\";\nimport HelpMenu from \"../HelpMenu\";\n\ninterface IRegister {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...spacingUtils,\n  });\n\nconst Register = ({ classes }: IRegister) => {\n  const dispatch = useAppDispatch();\n\n  const subnetMFAToken = useSelector(\n    (state: AppState) => state.register.subnetMFAToken,\n  );\n  const subnetAccessToken = useSelector(\n    (state: AppState) => state.register.subnetAccessToken,\n  );\n\n  const subnetRegToken = useSelector(\n    (state: AppState) => state.register.subnetRegToken,\n  );\n  const subnetOrganizations = useSelector(\n    (state: AppState) => state.register.subnetOrganizations,\n  );\n\n  const loading = useSelector((state: AppState) => state.register.loading);\n  const loadingLicenseInfo = useSelector(\n    (state: AppState) => state.register.loadingLicenseInfo,\n  );\n  const clusterRegistered = useSelector(\n    (state: AppState) => state.register.clusterRegistered,\n  );\n  const licenseInfo = useSelector(\n    (state: AppState) => state.register.licenseInfo,\n  );\n  const curTab = useSelector((state: AppState) => state.register.curTab);\n\n  const [initialLicenseLoading, setInitialLicenseLoading] =\n    useState<boolean>(true);\n\n  useEffect(() => {\n    // when unmounted, reset\n    return () => {\n      dispatch(resetRegisterForm());\n    };\n  }, [dispatch]);\n\n  const fetchSubnetRegToken = () => {\n    if (loading || subnetRegToken) {\n      return;\n    }\n    dispatch(setLoading(true));\n    api\n      .invoke(\"GET\", \"/api/v1/subnet/registration-token\")\n      .then((resp: SubnetRegTokenResponse) => {\n        dispatch(setLoading(false));\n        if (resp && resp.regToken) {\n          dispatch(setSubnetRegToken(resp.regToken));\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n        dispatch(setErrorSnackMessage(err));\n        dispatch(setLoading(false));\n      });\n  };\n\n  useEffect(() => {\n    if (initialLicenseLoading) {\n      dispatch(fetchLicenseInfo());\n      setInitialLicenseLoading(false);\n    }\n  }, [initialLicenseLoading, setInitialLicenseLoading, dispatch]);\n\n  let clusterRegistrationForm: JSX.Element = <Fragment />;\n\n  if (subnetAccessToken && subnetOrganizations.length > 0) {\n    clusterRegistrationForm = <ClusterRegistrationForm />;\n  } else if (subnetMFAToken) {\n    clusterRegistrationForm = <SubnetMFAToken />;\n  } else {\n    clusterRegistrationForm = <OnlineRegistration />;\n  }\n\n  const apiKeyRegistration = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && licenseInfo ? (\n          <ClusterRegistered email={licenseInfo.email} />\n        ) : (\n          <ApiKeyRegister registerEndpoint={\"/api/v1/subnet/login\"} />\n        )}\n      </Box>\n      <ProxyConfiguration />\n    </Fragment>\n  );\n\n  const offlineRegistration = <OfflineRegistration />;\n\n  const regUi = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && licenseInfo ? (\n          <ClusterRegistered email={licenseInfo.email} />\n        ) : (\n          clusterRegistrationForm\n        )}\n      </Box>\n\n      {!clusterRegistered && <ProxyConfiguration />}\n    </Fragment>\n  );\n\n  const loadingUi = <div>Loading..</div>;\n  const uiToShow = loadingLicenseInfo ? loadingUi : regUi;\n\n  useEffect(() => {\n    dispatch(setHelpName(\"register\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label=\"Register to MinIO Subscription Network\"\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <Tabs\n          value={curTab}\n          onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n            dispatch(setCurTab(newValue));\n          }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"cluster-tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab\n            label=\"Credentials\"\n            id=\"simple-tab-0\"\n            aria-controls=\"simple-tab-panel-0\"\n          />\n          <Tab\n            label=\"API Key\"\n            id=\"simple-tab-1\"\n            aria-controls=\"simple-tab-panel-1\"\n          />\n          <Tab\n            label=\"Air-Gap\"\n            id=\"simple-tab-2\"\n            aria-controls=\"simple-tab-panel-2\"\n            onClick={() => fetchSubnetRegToken()}\n          />\n        </Tabs>\n\n        <TabPanel index={0} value={curTab}>\n          {uiToShow}\n        </TabPanel>\n        <TabPanel index={1} value={curTab}>\n          {apiKeyRegistration}\n        </TabPanel>\n        <TabPanel index={2} value={curTab}>\n          {offlineRegistration}\n        </TabPanel>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Register);\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { VerifiedIcon } from \"mds\";\n\nconst RegistrationStatusBanner = ({ email = \"\" }: { email?: string }) => {\n  return (\n    <Box\n      sx={{\n        height: \"67px\",\n        color: \"#ffffff\",\n        display: \"flex\",\n        position: \"relative\",\n        top: \"-30px\",\n        left: \"-32px\",\n        width: \"calc(100% + 64px)\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#2781B0\",\n        padding: \"0 25px 0 25px\",\n        \"& .registered-box, .reg-badge-box\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        },\n\n        \"& .reg-badge-box\": {\n          marginLeft: \"20px\",\n\n          \"& .min-icon\": {\n            fill: \"#2781B0\",\n          },\n        },\n      }}\n    >\n      <Box className=\"registered-box\">\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Register status:</Box>\n        <Box className=\"reg-badge-box\">\n          <VerifiedIcon />\n          <Box\n            sx={{\n              fontWeight: 600,\n            }}\n          >\n            Registered\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        className=\"registered-acc-box\"\n        sx={{\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          display: {\n            sm: \"flex\",\n            xs: \"none\",\n          },\n        }}\n      >\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Registered to:</Box>\n        <Box sx={{ marginLeft: \"8px\", fontWeight: 600 }}>{email}</Box>\n      </Box>\n    </Box>\n  );\n};\nexport default RegistrationStatusBanner;\n"],"names":["withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","_ref","label","onChange","value","id","name","_ref$disabled","disabled","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","classes","inputProps","_jsx","React","children","_jsxs","Grid","item","xs","className","concat","fieldContainer","errorInField","InputLabel","htmlFor","tooltipContainer","Tooltip","title","placement","HelpIcon","TextField","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","StyledSwitch","width","height","switchBase","transform","palette","common","white","backgroundColor","boxShadow","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","indicatorLabelOn","indicatorLabel","fieldDescription","marginTop","actionsTray","_ref$label","_ref$checked","_ref$switchOnly","switchOnly","_ref$description","description","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","clsx","_defineProperty","length","disableRipple","disableFocusRipple","disableTouchRipple","container","sm","md","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","overlayAction","right","top","maxWidth","maxHeight","_ref$type","type","_ref$autoComplete","autoComplete","_ref$multiline","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","inputBoxContainer","noMinWidthLabel","inputRebase","IconButton","onClick","size","SelectStyled","lineHeight","spacing","input","InputBase","flexFlow","options","FormControl","Select","map","option","MenuItem","FormTitle","_ref$icon","icon","Box","sx","ClusterRegistered","_ref2","email","Fragment","RegistrationStatusBanner","cursor","Link","href","target","style","ProxyConfiguration","proxyConfigurationCommand","displaySubnetProxy","setDisplaySubnetProxy","SettingsIcon","marginBottom","InputBoxWrapper","CopyIcon","readOnly","navigator","clipboard","writeText","FormSwitchWrapper","event","sizedLabel","minWidth","containerForHeader","spacingUtils","open","closeModal","onSet","dispatch","useAppDispatch","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","mfaToken","setMfaToken","_useState9","_useState10","subnetOTP","setSubnetOTP","_useApi","useApi","res","mfa_token","access_token","invokeApi","apiKey","err","setErrorSnackMessage","_useApi2","isLoading","getCredentialsDialog","spacerBottom","UsersIcon","getMFADialog","flex","LockOutlinedIcon","ConfirmDialog","confirmText","isOpen","titleIcon","InfoIcon","cancelText","onConfirm","username","otp","onClose","confirmButtonProps","hidden","cancelButtonProps","confirmationContent","FeatureItem","marginRight","fontStyle","_ref2$hasMargin","hasMargin","HelpIconFilled","CallHomeFeatureIcon","DiagnosticsFeatureIcon","PerformanceFeatureIcon","ExtraFeaturesIcon","registerEndpoint","navigate","useNavigate","showApiKeyModal","setShowApiKeyModal","setApiKey","loading","setLoading","fromModal","setFromModal","onRegister","useCallback","request","api","invoke","then","resp","registered","setServerNeedsRestart","IAM_PAGES","LICENSE","catch","reset","useEffect","OnlineRegistrationIcon","Button","spacerRight","trim","GetApiKeyModal","RegisterHelpBox","fetchLicenseInfo","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","getState","state","getSubnetInfo","wrap","_context","prev","next","hasPermission","CONSOLE_UI_RESOURCE","IAM_PAGES_PERMISSIONS","register","loadingLicenseInfo","abrupt","setLoadingLicenseInfo","setLicenseInfo","setClusterRegistered","detailedError","toLowerCase","stop","_x","_x2","apply","arguments","callRegister","_ref4","_callee2","args","_ref3","_context2","token","account_id","resetRegisterForm","_x3","_x4","subnetLoginWithMFA","_ref6","_callee3","_ref5","subnetEmail","subnetMFAToken","_context3","rejectWithValue","organizations","accountId","toString","setSubnetAccessToken","setSubnetOrganizations","setSelectedSubnetOrganization","_x5","_x6","subnetLogin","_ref8","_callee4","_ref7","license","subnetPassword","_context4","setSubnetMFAToken","_x7","_x8","subnetRegToken","useSelector","clusterRegistered","licenseInfo","offlineRegUrl","licenseKey","setLicenseKey","isSaving","invokeApplyLicenseApi","OfflineRegistrationIcon","background","gap","TooltipWrapper","CopyToClipboard","text","flexDirection","CommentBoxWrapper","e","key_values","key","subnetAccessToken","selectedSubnetOrganization","subnetOrganizations","SelectWrapper","organization","company","useStyles","setSubnetEmail","setSubnetPassword","preventDefault","window","curTab","initialLicenseLoading","setInitialLicenseLoading","clusterRegistrationForm","ClusterRegistrationForm","SubnetMFAToken","OnlineRegistration","apiKeyRegistration","ApiKeyRegister","offlineRegistration","OfflineRegistration","regUi","uiToShow","setHelpName","PageHeaderWrapper","actions","HelpMenu","PageLayout","Tabs","newValue","setCurTab","indicatorColor","textColor","scrollButtons","Tab","regToken","setSubnetRegToken","console","TabPanel","_ref$email","left","fill","VerifiedIcon"],"sourceRoot":""}