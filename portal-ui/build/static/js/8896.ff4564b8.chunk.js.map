{"version":3,"file":"static/js/8896.ff4564b8.chunk.js","mappings":"gPAoFA,UAlDoB,SAAHA,GAII,IAHnBC,EAAcD,EAAdC,eACAC,EAAUF,EAAVE,WACAC,EAA0BH,EAA1BG,2BAEMC,GAAWC,EAAAA,EAAAA,MAQjBC,GAAyCC,EAAAA,EAAAA,IAPpB,WAAH,OAASJ,GAA2B,EAAM,IACzC,SAACK,GAClBJ,GAASK,EAAAA,EAAAA,IAAqBD,IAC9BL,GAA2B,EAC7B,IAGyEO,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlEM,EAAaF,EAAA,GAAEG,EAAeH,EAAA,GAErC,IAAKT,EACH,OAAO,KAET,IAMMa,EAAeb,EAAec,KAAI,SAACC,GAAK,OAC5CC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,KADIA,EAEJ,IAGR,OACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZC,MAAK,eAAAC,OAAiBpB,EAAeqB,OAAS,EAAI,IAAM,IACxDC,YAAa,SACbC,OAAQtB,EACRuB,WAAWR,EAAAA,EAAAA,KAACS,EAAAA,IAAiB,IAC7BC,UAAWf,EACXgB,UAnBmB,WAAO,IACIC,EADLC,GAAAC,EAAAA,EAAAA,GACT9B,GAAc,IAAhC,IAAA6B,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkC,CAAC,IAA1BlB,EAAKa,EAAAM,MACZtB,EAAgB,SAAS,iBAADQ,QAAmBe,EAAAA,EAAAA,IAAgBpB,IAC7D,CAAC,OAAAR,GAAAsB,EAAAO,EAAA7B,EAAA,SAAAsB,EAAAQ,GAAA,CACH,EAgBIC,QA3BY,WAAH,OAASpC,GAA2B,EAAO,EA4BpDqC,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAiB,CAAAxB,SAAA,CAAC,iDAC8BjB,EAAeqB,OAAQ,IAAI,QACpErB,EAAeqB,OAAS,EAAI,KAAO,IACxCR,MAKX,C","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n"],"names":["_ref","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","_useApi","useApi","err","setErrorSnackMessage","_useApi2","_slicedToArray","deleteLoading","invokeDeleteApi","renderGroups","map","group","_jsx","children","ConfirmDialog","title","concat","length","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","encodeURLString","e","f","onClose","confirmationContent","_jsxs","DialogContentText"],"sourceRoot":""}