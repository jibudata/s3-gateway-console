{"version":3,"file":"static/js/9059.521ca60c.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/EventDestinations/CustomForms/ConfMySql.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport { Switch, InputBox, Grid, Box, ReadBox, RadioGroup } from \"mds\";\n\ninterface IConfMySqlProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst ConfMySql = ({ onChange, classes }: IConfMySqlProps) => {\n  //Local States\n  const [useDsnString, setUseDsnString] = useState<boolean>(false);\n  const [dsnString, setDsnString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // dsn_string*  (string)             MySQL data-source-name connection string e.g. \"<user>:<password>@tcp(<host>:<port>)/<database>\"\n  // table*       (string)             DB table name to store/update events, table is auto-created\n  // format*      (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir    (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit  (number)             maximum limit for undelivered messages, defaults to '100000'\n  // comment      (sentence)           optionally add a comment to this setting\n\n  const parseDsnString = (\n    input: string,\n    keys: string[],\n  ): Map<string, string> => {\n    let kvFields: Map<string, string> = new Map();\n    const regex = /(.*?):(.*?)@tcp\\((.*?):(.*?)\\)\\/(.*?)$/gm;\n    let m;\n\n    while ((m = regex.exec(input)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      kvFields.set(\"user\", m[1]);\n      kvFields.set(\"password\", m[2]);\n      kvFields.set(\"host\", m[3]);\n      kvFields.set(\"port\", m[4]);\n      kvFields.set(\"dbname\", m[5]);\n    }\n\n    return kvFields;\n  };\n\n  const configToDsnString = useCallback((): string => {\n    return `${user}:${password}@tcp(${host}:${port})/${dbName}`;\n  }, [user, password, host, port, dbName]);\n\n  useEffect(() => {\n    if (dsnString !== \"\") {\n      const formValues = [\n        { key: \"dsn_string\", value: dsnString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [dsnString, table, format, queueDir, queueLimit, comment, onChange]);\n\n  useEffect(() => {\n    const cs = configToDsnString();\n    setDsnString(cs);\n  }, [user, dbName, password, port, host, setDsnString, configToDsnString]);\n\n  const switcherChangeEvt = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      // build dsn_string\n      const cs = configToDsnString();\n      setDsnString(cs);\n    } else {\n      // parse dsn_string\n      const kv = parseDsnString(dsnString, [\n        \"host\",\n        \"port\",\n        \"dbname\",\n        \"user\",\n        \"password\",\n      ]);\n      setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n      setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n      setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n      setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n      setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    }\n\n    setUseDsnString(event.target.checked);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <Switch\n          label={\"Enter DNS String\"}\n          checked={useDsnString}\n          id=\"checkedB\"\n          name=\"checkedB\"\n          onChange={switcherChangeEvt}\n          value={\"dnsString\"}\n        />\n      </Grid>\n      {useDsnString ? (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBox\n              id=\"dsn-string\"\n              name=\"dsn_string\"\n              label=\"DSN String\"\n              value={dsnString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDsnString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Box\n              withBorders\n              useBackground\n              sx={{\n                overflowY: \"auto\",\n                height: 170,\n                marginBottom: 12,\n              }}\n            >\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBox\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  placeholder=\"Enter Password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sx={{ margin: \"12px 0\" }}>\n            <ReadBox label={\"Connection String\"} multiLine>\n              {dsnString}\n            </ReadBox>\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder=\"Enter Table Name\"\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <RadioGroup\n          currentValue={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Dir\"\n          value={queueDir}\n          tooltip=\"Staging directory for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBox\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"Maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter custom notes if any\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfMySql);\n"],"names":["withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","_ref","label","onChange","value","id","name","_ref$disabled","disabled","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","classes","inputProps","_jsx","React","children","_jsxs","Grid","item","xs","className","concat","fieldContainer","errorInField","InputLabel","htmlFor","tooltipContainer","Tooltip","title","placement","HelpIcon","TextField","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","modalBasic","formFieldStyles","_useState","useState","_useState2","_slicedToArray","useDsnString","setUseDsnString","_useState3","_useState4","dsnString","setDsnString","_useState5","_useState6","host","setHostname","_useState7","_useState8","dbName","setDbName","_useState9","_useState10","port","setPort","_useState11","_useState12","user","setUser","_useState13","_useState14","password","setPassword","_useState15","_useState16","table","setTable","_useState17","_useState18","format","setFormat","_useState19","_useState20","queueDir","setQueueDir","_useState21","_useState22","queueLimit","setQueueLimit","_useState23","_useState24","comment","setComment","configToDsnString","useCallback","useEffect","key","cs","container","formFieldRow","Switch","checked","event","target","kv","input","keys","m","kvFields","Map","regex","exec","lastIndex","set","parseDsnString","get","InputBox","e","Box","withBorders","useBackground","sx","overflowY","height","marginBottom","type","ReadBox","multiLine","RadioGroup","currentValue","selectorOptions","CommentBoxWrapper"],"sourceRoot":""}