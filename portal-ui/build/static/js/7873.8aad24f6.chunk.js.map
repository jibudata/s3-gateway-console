{"version":3,"file":"static/js/7873.8aad24f6.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/IDP/AddIDPConfigurationHelpbox.tsx","screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurationDetails.tsx","screens/Console/IDP/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","import React, { Fragment } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IContent {\n  icon: React.ReactNode;\n  text: string;\n  iconDescription: string;\n}\n\ninterface IAddIDPConfigurationHelpBoxProps {\n  helpText: string;\n  docLink: string;\n  docText: string;\n  contents: IContent[];\n}\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\n\nconst AddIDPConfigurationHelpBox = ({\n  helpText,\n  docLink,\n  docText,\n  contents,\n}: IAddIDPConfigurationHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content) => (\n          <Fragment>\n            {content.icon && (\n              <Box sx={{ paddingBottom: \"20px\" }}>\n                <FeatureItem\n                  icon={content.icon}\n                  description={content.iconDescription}\n                />\n              </Box>\n            )}\n            <Box sx={{ paddingBottom: \"20px\" }}>{content.text}</Box>\n          </Fragment>\n        ))}\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <a href={docLink} target=\"_blank\" rel=\"noopener\">\n            {docText}\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddIDPConfigurationHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Grid } from \"@mui/material\";\nimport {\n  containerForHeader,\n  formFieldStyles,\n  modalBasic,\n  pageContentStyles,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { BackLink, Button, EditIcon, RefreshIcon, TrashIcon } from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport api from \"../../../common/api\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport LabelValuePair from \"../Common/UsageBarWrapper/LabelValuePair\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\ntype IDPConfigurationDetailsProps = {\n  classes?: any;\n  formFields: object;\n  endpoint: string;\n  backLink: string;\n  header: string;\n  idpType: string;\n  helpBox: React.ReactNode;\n  icon: React.ReactNode;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n    pageContainer: {\n      height: \"100%\",\n    },\n    ...pageContentStyles,\n    ...searchField,\n\n    ...containerForHeader,\n  });\n\nconst IDPConfigurationDetails = ({\n  classes,\n  formFields,\n  endpoint,\n  backLink,\n  header,\n  idpType,\n  icon,\n  helpBox,\n}: IDPConfigurationDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const configurationName = params.idpName;\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isEnabled, setIsEnabled] = useState<boolean>(false);\n  const [fields, setFields] = useState<any>({});\n  const [originalFields, setOriginalFields] = useState<any>({});\n  const [record, setRecord] = useState<any>({});\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const onSuccess = (res: any) => {\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loadingSave, invokeApi] = useApi(onSuccess, onError);\n\n  const onEnabledSuccess = (res: any) => {\n    setIsEnabled(!isEnabled);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onEnabledError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n  };\n\n  const [loadingEnabledSave, invokeEnabledApi] = useApi(\n    onEnabledSuccess,\n    onEnabledError\n  );\n\n  const toggleEditMode = () => {\n    if (editMode) {\n      parseFields(record);\n    }\n    setEditMode(!editMode);\n  };\n\n  const parseFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        if (item.key === \"enable\") {\n          setIsEnabled(item.value === \"on\");\n        }\n        fields[item.key] = item.value;\n      });\n    }\n    setFields(fields);\n  };\n\n  const parseOriginalFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        fields[item.key] = item.value;\n      });\n    }\n    setOriginalFields(fields);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n\n  useEffect(() => {\n    const loadRecord = () => {\n      api\n        .invoke(\"GET\", `${endpoint}${configurationName}`)\n        .then((result: any) => {\n          if (result) {\n            setRecord(result);\n            parseFields(result);\n            parseOriginalFields(result);\n          }\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    };\n    if (loading) {\n      loadRecord();\n    }\n  }, [dispatch, loading, configurationName, endpoint]);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(formFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const resetForm = () => {\n    setFields({});\n  };\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let input = \"\";\n    for (const key of Object.keys(formFields)) {\n      if (fields[key] || fields[key] !== originalFields[key]) {\n        input += `${key}=${fields[key]} `;\n      }\n    }\n    invokeApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n    setEditMode(false);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      navigate(backLink);\n    }\n  };\n\n  const toggleConfiguration = (value: boolean) => {\n    const input = `enable=${value ? \"on\" : \"off\"}`;\n    invokeEnabledApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n  };\n\n  const renderFormField = (key: string, value: any) => {\n    switch (value.type) {\n      case \"toggle\":\n        return (\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={fields[key] === \"on\" ? true : false}\n            value={\"is-field-enabled\"}\n            id={\"is-field-enabled\"}\n            name={\"is-field-enabled\"}\n            label={value.label}\n            tooltip={value.tooltip}\n            onChange={(e) =>\n              setFields({ ...fields, [key]: e.target.checked ? \"on\" : \"off\" })\n            }\n            description=\"\"\n            disabled={!editMode}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={key}\n            required={value.required}\n            name={key}\n            label={value.label}\n            tooltip={value.tooltip}\n            error={value.hasError(fields[key], editMode)}\n            value={fields[key] ? fields[key] : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setFields({ ...fields, [key]: e.target.value })\n            }\n            placeholder={value.placeholder}\n            disabled={!editMode}\n            type={value.type}\n          />\n        );\n    }\n  };\n\n  const renderEditForm = () => {\n    return (\n      <Box\n        sx={{\n          display: \"grid\",\n          padding: \"25px\",\n          gap: \"25px\",\n          gridTemplateColumns: {\n            md: \"2fr 1.2fr\",\n            xs: \"1fr\",\n          },\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n            <Grid xs={12} item className={classes.fieldBox}>\n              {Object.entries(formFields).map(([key, value]) => (\n                <Grid item xs={12} className={classes.formFieldRow} key={key}>\n                  {renderFormField(key, value)}\n                </Grid>\n              ))}\n              <Grid item xs={12} textAlign={\"right\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {editMode && (\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n                  )}\n                  {editMode && (\n                    <Button\n                      id={\"cancel\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={toggleEditMode}\n                      label={\"Cancel\"}\n                    />\n                  )}\n                  {editMode && (\n                    <Button\n                      id={\"save-key\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      disabled={loading || loadingSave || !validSave()}\n                      label={\"Save\"}\n                    />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n        {helpBox}\n      </Box>\n    );\n  };\n  const renderViewForm = () => {\n    return (\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n          gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n          gap: 3,\n          padding: \"15px\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        {Object.entries(formFields).map(([key, value]) => (\n          <LabelValuePair\n            key={key}\n            label={value.label}\n            value={fields[key] ? fields[key] : \"\"}\n          />\n        ))}\n      </Box>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      {deleteOpen && configurationName && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={configurationName}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label={<BackLink onClick={() => navigate(backLink)} label={header} />}\n      />\n      <PageLayout className={classes.pageContainer}>\n        <Box>\n          <ScreenTitle\n            icon={icon}\n            title={configurationName === \"_\" ? \"Default\" : configurationName}\n            actions={\n              <Fragment>\n                {configurationName !== \"_\" && (\n                  <Button\n                    id={\"delete-idp-config\"}\n                    onClick={() => {\n                      setDeleteOpen(true);\n                    }}\n                    label={\"Delete Configuration\"}\n                    icon={<TrashIcon />}\n                    variant={\"secondary\"}\n                  />\n                )}\n                {!editMode && (\n                  <Button\n                    id={\"edit\"}\n                    type=\"button\"\n                    variant={\"callAction\"}\n                    icon={<EditIcon />}\n                    onClick={toggleEditMode}\n                    label={\"Edit\"}\n                  />\n                )}\n                <Button\n                  id={\"is-configuration-enabled\"}\n                  onClick={() => toggleConfiguration(!isEnabled)}\n                  label={isEnabled ? \"Disable\" : \"Enable\"}\n                  disabled={loadingEnabledSave}\n                />\n                <Button\n                  id={\"refresh-idp-config\"}\n                  onClick={() => setLoading(true)}\n                  label={\"Refresh\"}\n                  icon={<RefreshIcon />}\n                />\n              </Fragment>\n            }\n          />\n\n          {editMode ? renderEditForm() : renderViewForm()}\n        </Box>\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(IDPConfigurationDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { LockIcon } from \"mds\";\n\nexport const ldapHelpBoxContents = [\n  {\n    text: \"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: <LoginIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries\",\n    icon: null,\n    iconDescription: \"\",\n  },\n  {\n    text: \"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDHelpBoxContents = [\n  {\n    text: \"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.\",\n    icon: <LockIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_userinfo: {\n    required: false,\n    label: \"Claim User Info\",\n    tooltip: \"\",\n    placeholder: \"Claim User Info\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri_dynamic: {\n    required: false,\n    label: \"Redirect URI Dynamic\",\n    tooltip: \"\",\n    placeholder: \"Redirect URI Dynamic\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n};\n\nexport const ldapFormFields = {\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n  },\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","useState","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","useStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","style","orientation","stkProps","lblProps","valProps","direction","FeatureItem","sx","marginBottom","fontStyle","helpText","docLink","docText","contents","flex","paddingBottom","map","content","Fragment","iconDescription","text","href","target","rel","closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","displayName","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmButtonProps","confirmationContent","formFieldStyles","formFieldRow","modalBasic","pageContainer","pageContentStyles","searchField","containerForHeader","formFields","endpoint","backLink","header","helpBox","navigate","useNavigate","configurationName","useParams","idpName","loading","setLoading","isEnabled","setIsEnabled","fields","setFields","originalFields","setOriginalFields","record","setRecord","editMode","setEditMode","setDeleteOpen","loadingSave","invokeApi","loadingEnabledSave","invokeEnabledApi","toggleEditMode","parseFields","info","forEach","key","useEffect","api","then","result","parseOriginalFields","catch","validSave","Object","entries","undefined","resetForm","refresh","renderFormField","e","hasError","variant","input","toggleConfiguration","gap","gridTemplateColumns","noValidate","onSubmit","event","preventDefault","keys","saveRecord","spacing","fieldBox","gridAutoFlow","ldapHelpBoxContents","openIDHelpBoxContents","openIDFormFields","config_url","s","client_id","client_secret","claim_name","display_name","claim_prefix","scopes","redirect_uri","role_policy","claim_userinfo","redirect_uri_dynamic","ldapFormFields","server_addr","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter"],"sourceRoot":""}