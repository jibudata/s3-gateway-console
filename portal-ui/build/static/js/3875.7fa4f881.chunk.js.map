{"version":3,"file":"static/js/3875.7fa4f881.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Box, Button, Grid, InputBox, RemoveIcon } from \"mds\";\nimport { SiteInputRow } from \"./Types\";\n\ninterface ISRSiteInputRowProps {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: ISRSiteInputRowProps) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          readOnly={disabledFields.includes(\"name\")}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          readOnly={disabledFields.includes(\"endpoint\")}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} sx={{ alignItems: \"center\", display: \"flex\" }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Button,\n  ClustersIcon,\n  HelpBox,\n  PageLayout,\n  Box,\n  Grid,\n  ProgressBar,\n  InputLabel,\n  SectionTitle,\n} from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box>\n        <InputLabel>Site Name</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Endpoint {\"*\"}</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Access Key {\"*\"}</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Secret Key {\"*\"}</InputLabel>\n      </Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    },\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add-replication-sites\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    [],\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          }),\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          withBorders\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item,\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          withBorders\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index\n                        ? { ...item, [fieldName]: filedValue }\n                        : item,\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index),\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Replication Site\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle separator icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <ProgressBar /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n"],"names":["_ref","rowData","index","rowId","onFieldChange","onAddClick","onRemoveClick","_ref$canAdd","canAdd","_ref$canRemove","canRemove","_ref$showRowActions","showRowActions","_ref$disabledFields","disabledFields","_ref$fieldErrors","fieldErrors","_rowData$endpoint","endpoint","_rowData$accessKey","accessKey","_rowData$secretKey","secretKey","_rowData$name","name","_jsxs","Fragment","children","_jsx","Box","InputBox","id","concat","placeholder","label","readOnly","includes","value","onChange","e","error","required","disabled","type","Grid","item","xs","sx","alignItems","display","justifyContent","alignSelf","marginTop","borderColor","color","borderRadius","React","TooltipWrapper","tooltip","Button","variant","icon","AddIcon","onClick","preventDefault","style","width","height","padding","RemoveIcon","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","InputLabel","SiteTypeHeader","title","marginBottom","fontSize","fontWeight","dispatch","useAppDispatch","navigate","useNavigate","_useSelector$serverEn","useSelector","selSession","serverEndPoint","_useState","useState","_useState2","_slicedToArray","currentSite","setCurrentSite","_useState3","_useState4","existingSites","setExistingSites","setDefaultNewRows","_useApi","useApi","res","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","_objectSpread","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","_useApi2","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","setHelpName","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","_currentSite$","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","_useApi3","success","setSnackBarMessage","status","resetForm","IAM_PAGES","SITE_REPLICATION","setErrorSnackMessage","errorMessage","detailedError","_useApi4","isAdding","invokeSiteAddApi","prevItems","ix","PageHeaderWrapper","BackLink","actions","HelpMenu","PageLayout","gap","gridTemplateColumns","border","SectionTitle","separator","ClustersIcon","ProgressBar","fontStyle","noValidate","autoComplete","onSubmit","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","addSiteReplication","withBorders","maxHeight","overflowY","cs","accessKeyError","secretKeyError","SRSiteInputRow","fieldName","filedValue","target","_defineProperty","ps","endPointError","newRows","_toConsumableArray","_","HelpBox","iconComponent","help","backgroundColor","marginRight","paddingLeft","fill","flexFlow","flex","paddingTop"],"sourceRoot":""}