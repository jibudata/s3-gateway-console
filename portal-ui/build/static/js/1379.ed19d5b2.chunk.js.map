{"version":3,"file":"static/js/1379.ed19d5b2.chunk.js","mappings":"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","sources":["screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolsListing.tsx","screens/Console/Common/UsageBarWrapper/StackRow.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolDetails.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx"],"sourcesContent":["import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IPool } from \"../../../ListTenants/types\";\nimport Grid from \"@mui/material/Grid\";\nimport { TextField } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../../../../icons/SearchIcon\";\nimport RBIconButton from \"../../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { AddIcon } from \"../../../../../../icons\";\nimport TableWrapper from \"../../../../Common/TableWrapper/TableWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setSelectedPool } from \"../../../tenantsSlice\";\n\ninterface IPoolsSummary {\n  classes: any;\n  history: any;\n  setPoolDetailsView: () => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsListing = ({\n  classes,\n  history,\n  setPoolDetailsView,\n}: IPoolsSummary) => {\n  const dispatch = useDispatch();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [pools, setPools] = useState<IPool[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const listActions = [\n    {\n      type: \"view\",\n      onClick: (selectedValue: IPool) => {\n        dispatch(setSelectedPool(selectedValue.name));\n        setPoolDetailsView();\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Filter\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          onChange={(event) => {\n            setFilter(event.target.value);\n          }}\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"standard\"\n        />\n\n        <RBIconButton\n          tooltip={\"Expand Tenant\"}\n          text={\"Expand Tenant\"}\n          onClick={() => {\n            history.push(\n              `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                tenant?.name || \"\"\n              }/add-pool`\n            );\n          }}\n          icon={<AddIcon />}\n          color=\"primary\"\n          variant={\"contained\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={listActions}\n          columns={[\n            { label: \"Name\", elementKey: \"name\" },\n            { label: \"Capacity\", elementKey: \"capacity\" },\n            { label: \"# of Instances\", elementKey: \"servers\" },\n            { label: \"# of Drives\", elementKey: \"volumes\" },\n          ]}\n          isLoading={loadingTenant}\n          records={filteredPools}\n          entityName=\"Servers\"\n          idField=\"name\"\n          customEmptyMessage=\"No Pools found\"\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PoolsListing);\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\nconst StackRow = ({\n  children = null,\n  ...restProps\n}: {\n  children?: any;\n  [x: string]: any;\n}) => {\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"row\" }}\n      justifyContent=\"space-between\"\n      margin={\"5px 0 5px 0\"}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...restProps}\n    >\n      {children}\n    </Stack>\n  );\n};\nexport default StackRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  spacingUtils,\n  tableStyles,\n  tenantDetailsStyles,\n  textStyleUtils,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState } from \"../../../../../../store\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport LabelValuePair from \"../../../../Common/UsageBarWrapper/LabelValuePair\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\nimport StackRow from \"../../../../Common/UsageBarWrapper/StackRow\";\nimport RBIconButton from \"../../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { EditTenantIcon } from \"../../../../../../icons\";\n\ninterface IPoolDetails {\n  classes: any;\n  history: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...textStyleUtils,\n    ...tenantDetailsStyles,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst stylingLayout = {\n  border: \"#EAEAEA 1px solid\",\n  borderRadius: \"3px\",\n  padding: \"0px 20px\",\n  position: \"relative\",\n};\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n  gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n  gap: 2,\n  padding: \"15px\",\n};\n\nconst PoolDetails = ({ history }: IPoolDetails) => {\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool\n  );\n\n  const poolInformation =\n    tenant?.pools.find((pool) => pool.name === selectedPool) || null;\n\n  if (poolInformation === null) {\n    return null;\n  }\n\n  let affinityType = \"None\";\n\n  if (poolInformation.affinity) {\n    if (poolInformation.affinity.nodeAffinity) {\n      affinityType = \"Node Selector\";\n    } else {\n      affinityType = \"Default (Pod Anti-Affinity)\";\n    }\n  }\n\n  const HeaderSection = ({ title }: { title: string }) => {\n    return (\n      <StackRow\n        sx={{\n          borderBottom: \"1px solid #eaeaea\",\n          margin: 0,\n          marginBottom: \"20px\",\n        }}\n      >\n        <h3>{title}</h3>\n      </StackRow>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} sx={{ ...stylingLayout }}>\n        <div style={{ position: \"absolute\", right: 20, top: 18 }}>\n          <RBIconButton\n            icon={<EditTenantIcon />}\n            onClick={() => {\n              history.push(\n                `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                  tenant?.name || \"\"\n                }/edit-pool`\n              );\n            }}\n            text={\"Edit Pool\"}\n            id={\"editPool\"}\n          />\n        </div>\n        <HeaderSection title={\"Pool Configuration\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          <LabelValuePair label={\"Pool Name\"} value={poolInformation.name} />\n          <LabelValuePair\n            label={\"Total Volumes\"}\n            value={poolInformation.volumes}\n          />\n          <LabelValuePair\n            label={\"Volumes per server\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <LabelValuePair label={\"Capacity\"} value={poolInformation.capacity} />\n        </Box>\n        <HeaderSection title={\"Resources\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          {poolInformation.resources && (\n            <Fragment>\n              <LabelValuePair\n                label={\"CPU\"}\n                value={poolInformation.resources.requests.cpu}\n              />\n              <LabelValuePair\n                label={\"Memory\"}\n                value={niceBytesInt(poolInformation.resources.requests.memory)}\n              />\n            </Fragment>\n          )}\n          <LabelValuePair\n            label={\"Volume Size\"}\n            value={niceBytesInt(poolInformation.volume_configuration.size)}\n          />\n          <LabelValuePair\n            label={\"Storage Class Name\"}\n            value={poolInformation.volume_configuration.storage_class_name}\n          />\n        </Box>\n        {poolInformation.securityContext &&\n          (poolInformation.securityContext.runAsNonRoot ||\n            poolInformation.securityContext.runAsUser ||\n            poolInformation.securityContext.runAsGroup ||\n            poolInformation.securityContext.fsGroup) && (\n            <Fragment>\n              <HeaderSection title={\"Security Context\"} />\n              <Box>\n                {poolInformation.securityContext.runAsNonRoot !== null && (\n                  <Box sx={{ ...twoColCssGridLayoutConfig }}>\n                    <LabelValuePair\n                      label={\"Run as Non Root\"}\n                      value={\n                        poolInformation.securityContext.runAsNonRoot\n                          ? \"Yes\"\n                          : \"No\"\n                      }\n                    />\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    ...twoColCssGridLayoutConfig,\n                    gridTemplateColumns: {\n                      xs: \"1fr\",\n                      sm: \"2fr 1fr\",\n                      md: \"1fr 1fr 1fr\",\n                    },\n                  }}\n                >\n                  {poolInformation.securityContext.runAsUser && (\n                    <LabelValuePair\n                      label={\"Run as User\"}\n                      value={poolInformation.securityContext.runAsUser}\n                    />\n                  )}\n                  {poolInformation.securityContext.runAsGroup && (\n                    <LabelValuePair\n                      label={\"Run as Group\"}\n                      value={poolInformation.securityContext.runAsGroup}\n                    />\n                  )}\n                  {poolInformation.securityContext.fsGroup && (\n                    <LabelValuePair\n                      label={\"FsGroup\"}\n                      value={poolInformation.securityContext.fsGroup}\n                    />\n                  )}\n                </Box>\n              </Box>\n            </Fragment>\n          )}\n        <HeaderSection title={\"Affinity\"} />\n        <Box>\n          <Box sx={{ ...twoColCssGridLayoutConfig }}>\n            <LabelValuePair label={\"Type\"} value={affinityType} />\n            {poolInformation.affinity?.nodeAffinity &&\n            poolInformation.affinity?.podAntiAffinity ? (\n              <LabelValuePair label={\"With Pod Anti affinity\"} value={\"Yes\"} />\n            ) : (\n              <span />\n            )}\n          </Box>\n          {poolInformation.affinity?.nodeAffinity && (\n            <Fragment>\n              <HeaderSection title={\"Labels\"} />\n              <ul>\n                {poolInformation.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.map(\n                  (term) => {\n                    return term.matchExpressions.map((trm) => {\n                      return (\n                        <li>\n                          {trm.key} - {trm.values.join(\", \")}\n                        </li>\n                      );\n                    });\n                  }\n                )}\n              </ul>\n            </Fragment>\n          )}\n        </Box>\n        {poolInformation.tolerations && poolInformation.tolerations.length > 0 && (\n          <Fragment>\n            <HeaderSection title={\"Tolerations\"} />\n            <Box>\n              <ul>\n                {poolInformation.tolerations.map((tolItem) => {\n                  return (\n                    <li>\n                      {tolItem.operator === \"Equal\" ? (\n                        <Fragment>\n                          If <strong>{tolItem.key}</strong> is equal to{\" \"}\n                          <strong>{tolItem.value}</strong> then{\" \"}\n                          <strong>{tolItem.effect}</strong> after{\" \"}\n                          <strong>\n                            {tolItem.tolerationSeconds?.seconds || 0}\n                          </strong>{\" \"}\n                          seconds\n                        </Fragment>\n                      ) : (\n                        <Fragment>\n                          If <strong>{tolItem.key}</strong> exists then{\" \"}\n                          <strong>{tolItem.effect}</strong> after{\" \"}\n                          <strong>\n                            {tolItem.tolerationSeconds?.seconds || 0}\n                          </strong>{\" \"}\n                          seconds\n                        </Fragment>\n                      )}\n                    </li>\n                  );\n                })}\n              </ul>\n            </Box>\n          </Fragment>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PoolDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { AppState } from \"../../../../store\";\n\nimport PoolsListing from \"./Pools/Details/PoolsListing\";\nimport PoolDetails from \"./Pools/Details/PoolDetails\";\nimport BackLink from \"../../../../common/BackLink\";\nimport { setOpenPoolDetails } from \"../tenantsSlice\";\n\ninterface IPoolsSummary {\n  classes: any;\n  history: any;\n  match: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsSummary = ({ classes, history, match }: IPoolsSummary) => {\n  const dispatch = useDispatch();\n\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool\n  );\n  const poolDetailsOpen = useSelector(\n    (state: AppState) => state.tenants.poolDetailsOpen\n  );\n\n  return (\n    <Fragment>\n      {poolDetailsOpen && (\n        <Grid item xs={12}>\n          <BackLink\n            executeOnClick={() => {\n              dispatch(setOpenPoolDetails(false));\n            }}\n            label={\"Pools list\"}\n            to={match.url}\n          />\n        </Grid>\n      )}\n      <h1 className={classes.sectionTitle}>\n        {poolDetailsOpen ? `Pool Details - ${selectedPool || \"\"}` : \"Pools\"}\n      </h1>\n      <Grid container>\n        {poolDetailsOpen ? (\n          <PoolDetails history={history} />\n        ) : (\n          <PoolsListing\n            setPoolDetailsView={() => {\n              dispatch(setOpenPoolDetails(true));\n            }}\n            history={history}\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PoolsSummary);\n"],"names":["label","value","orientation","stkProps","lblProps","valProps","direction","xs","sm","style","marginRight","fontWeight","withStyles","theme","createStyles","tenantDetailsStyles","actionsTray","tableStyles","containerForHeader","spacing","classes","history","setPoolDetailsView","dispatch","useDispatch","loadingTenant","useSelector","state","tenants","tenant","tenantInfo","useState","pools","setPools","filter","setFilter","useEffect","resPools","filteredPools","pool","name","toLowerCase","includes","listActions","type","onClick","selectedValue","setSelectedPool","Fragment","Grid","item","className","TextField","placeholder","searchField","id","onChange","event","target","InputProps","disableUnderline","startAdornment","InputAdornment","position","SearchIcon","variant","RBIconButton","tooltip","text","push","namespace","icon","color","tableBlock","TableWrapper","itemActions","columns","elementKey","isLoading","records","entityName","idField","customEmptyMessage","children","restProps","Stack","justifyContent","margin","md","stylingLayout","border","borderRadius","padding","twoColCssGridLayoutConfig","display","gridTemplateColumns","gridAutoFlow","gap","spacingUtils","textStyleUtils","selectedPool","poolInformation","find","affinityType","affinity","nodeAffinity","HeaderSection","title","sx","borderBottom","marginBottom","right","top","Box","LabelValuePair","volumes","volumes_per_server","capacity","resources","requests","cpu","niceBytesInt","memory","volume_configuration","size","storage_class_name","securityContext","runAsNonRoot","runAsUser","runAsGroup","fsGroup","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","map","term","matchExpressions","trm","key","values","join","tolerations","length","tolItem","operator","effect","tolerationSeconds","seconds","match","poolDetailsOpen","BackLink","executeOnClick","setOpenPoolDetails","to","url","sectionTitle","container"],"sourceRoot":""}