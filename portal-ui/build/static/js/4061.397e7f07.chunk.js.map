{"version":3,"file":"static/js/4061.397e7f07.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx","utils/sortFunctions.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useLocation } from \"react-router-dom\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const theme = useTheme();\n  const { pathname = \"\" } = useLocation();\n\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [value, setValue] = useState(selectedTab);\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  useEffect(() => {\n    if (isRouteTabs) {\n      const tabConfigElement = children.find(\n        (item) => item.tabConfig.to === pathname\n      );\n\n      if (tabConfigElement) {\n        setValue(tabConfigElement.tabConfig.value);\n      }\n    }\n  }, [isRouteTabs, children, pathname]);\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n","import React, { useState } from \"react\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport Grid from \"@mui/material/Grid\";\nimport { AddMembersToGroupIcon, Button } from \"mds\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ntype UserPickerModalProps = {\n  classes?: any;\n  title?: string;\n  preSelectedUsers?: string[];\n  selectedGroup?: string;\n  open: boolean;\n  onClose: () => void;\n  onSaveClick: () => void;\n  groupStatus?: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddGroupMember = ({\n  classes,\n  title = \"\",\n  groupStatus = \"enabled\",\n  preSelectedUsers = [],\n  selectedGroup = \"\",\n  open,\n  onClose,\n}: UserPickerModalProps) => {\n  const dispatch = useAppDispatch();\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\n\n  function addMembersToGroup() {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(selectedGroup)}`, {\n        group: selectedGroup,\n        members: selectedUsers,\n        status: groupStatus,\n      })\n      .then((res) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        onClose();\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={onClose}\n      title={title}\n      titleIcon={<AddMembersToGroupIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.formFieldRow}>\n            <PredefinedList label={`Selected Group`} content={selectedGroup} />\n          </div>\n          <div className={classes.userSelector}>\n            <UsersSelectors\n              selectedUsers={selectedUsers}\n              setSelectedUsers={setSelectedUsers}\n              editMode={!selectedGroup}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          id={\"reset-add-group-member\"}\n          type=\"button\"\n          variant=\"regular\"\n          onClick={() => {\n            setSelectedUsers(preSelectedUsers);\n          }}\n          label={\"Reset\"}\n        />\n\n        <Button\n          id={\"save-add-group-member\"}\n          type=\"button\"\n          variant=\"callAction\"\n          onClick={() => {\n            addMembersToGroup();\n          }}\n          label={\"Save\"}\n        />\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddGroupMember);\n","import React, { Fragment } from \"react\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { BackLink } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst GroupDetailsHeader = () => {\n  const navigate = useNavigate();\n  return (\n    <PageHeaderWrapper\n      label={\n        <Fragment>\n          <BackLink\n            label={\"Groups\"}\n            onClick={() => navigate(IAM_PAGES.GROUPS)}\n          />\n        </Fragment>\n      }\n      actions={<React.Fragment />}\n    />\n  );\n};\n\nexport default GroupDetailsHeader;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  AddIcon,\n  Button,\n  GroupsIcon,\n  IAMPoliciesIcon,\n  PageLayout,\n  TrashIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../common/api\";\nimport SetPolicy from \"../Policies/SetPolicy\";\nimport AddGroupMember from \"./AddGroupMember\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  addUserToGroupPermissions,\n  CONSOLE_UI_RESOURCE,\n  createGroupPermissions,\n  editGroupMembersPermissions,\n  enableDisableGroupPermissions,\n  getGroupPermissions,\n  IAM_PAGES,\n  listUsersPermissions,\n  permissionTooltipHelper,\n  setGroupPoliciesPermissions,\n  viewPolicyPermissions,\n  viewUserPermissions,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\n\nimport { decodeURLString, encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n      width: \"100%\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".7rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".7rem\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 280,\n    },\n    ...tableStyles,\n    ...spacingUtils,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n\n      alignItems: \"center\",\n      \"& h1\": {\n        flex: 1,\n      },\n      \"& button\": {\n        marginLeft: \".8rem\",\n      },\n      \"@media (max-width: 900px)\": {\n        justifyContent: \"flex-end\",\n        \"& h1\": {\n          display: \"none\",\n        },\n        \"& button\": {\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n        },\n      },\n    },\n    ...containerForHeader,\n  });\n\ninterface IGroupDetailsProps {\n  classes: any;\n}\n\ntype GroupInfo = {\n  members?: any[];\n  name?: string;\n  policy?: string;\n  status?: string;\n};\n\nexport const formatPolicy = (policy: string = \"\"): string[] => {\n  if (policy.length <= 0) return [];\n  return policy.split(\",\");\n};\n\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\n\n  /*Modals*/\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\n\n  const groupName = decodeURLString(params.groupName || \"\");\n\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\n\n  const filteredMembers = members.filter((elementItem) =>\n    elementItem.includes(memberFilter)\n  );\n\n  const viewUser = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    viewUserPermissions,\n    true\n  );\n\n  useEffect(() => {\n    if (groupName) {\n      fetchGroupInfo();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupName]);\n\n  const groupPolicies = formatPolicy(policy);\n  const isGroupEnabled = groupEnabled === \"enabled\";\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\n\n  const getGroupDetails = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    getGroupPermissions\n  );\n\n  const canEditGroupMembers = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    editGroupMembersPermissions,\n    true\n  );\n\n  const canSetPolicies = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    setGroupPoliciesPermissions,\n    true\n  );\n\n  const canViewPolicy = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    viewPolicyPermissions,\n    true\n  );\n\n  function fetchGroupInfo() {\n    if (getGroupDetails) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(groupName)}`)\n        .then((res: any) => {\n          setGroupDetails(res);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setGroupDetails({});\n        });\n    }\n  }\n\n  function toggleGroupStatus(nextStatus: boolean) {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(groupName)}`, {\n        group: groupName,\n        members: members,\n        status: nextStatus ? \"enabled\" : \"disabled\",\n      })\n      .then((res) => {\n        fetchGroupInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  const groupsTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Members</PanelTitle>\n        <SearchBox\n          placeholder={\"Search members\"}\n          onChange={(searchText) => {\n            setMemberFilter(searchText);\n          }}\n          overrideClass={classes.searchField}\n          value={memberFilter}\n        />\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={addUserToGroupPermissions}\n          errorProps={{ disabled: true }}\n        >\n          <TooltipWrapper\n            tooltip={\n              canEditGroupMembers\n                ? memberActionText\n                : permissionTooltipHelper(\n                    createGroupPermissions,\n                    \"edit Group membership\"\n                  )\n            }\n          >\n            <Button\n              id={\"add-user-group\"}\n              label={memberActionText}\n              variant=\"callAction\"\n              icon={<AddIcon />}\n              onClick={() => {\n                setUsersOpen(true);\n              }}\n              disabled={!canEditGroupMembers}\n            />\n          </TooltipWrapper>\n        </SecureComponent>\n      </div>\n\n      <Grid item xs={12}>\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={listUsersPermissions}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            itemActions={[\n              {\n                type: \"view\",\n                onClick: (userName) => {\n                  navigate(`${IAM_PAGES.USERS}/${encodeURLString(userName)}`);\n                },\n                disableButtonFunction: () => !viewUser,\n              },\n            ]}\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\n            selectedItems={[]}\n            isLoading={false}\n            records={filteredMembers}\n            entityName=\"Users\"\n            idField=\"\"\n            tooltip={\n              viewUser\n                ? \"\"\n                : permissionTooltipHelper(\n                    viewUserPermissions,\n                    \"view User details\"\n                  )\n            }\n          />\n        </SecureComponent>\n      </Grid>\n    </React.Fragment>\n  );\n\n  const policiesTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Policies</PanelTitle>\n        <TooltipWrapper\n          tooltip={\n            canSetPolicies\n              ? \"Set Policies\"\n              : permissionTooltipHelper(\n                  setGroupPoliciesPermissions,\n                  \"assign Policies\"\n                )\n          }\n        >\n          <Button\n            id={\"set-policies\"}\n            label={`Set Policies`}\n            variant=\"callAction\"\n            icon={<IAMPoliciesIcon />}\n            onClick={() => {\n              setPolicyOpen(true);\n            }}\n            disabled={!canSetPolicies}\n          />\n        </TooltipWrapper>\n      </div>\n      <Grid item xs={12}>\n        <TableWrapper\n          itemActions={[\n            {\n              type: \"view\",\n              onClick: (policy) => {\n                navigate(`${IAM_PAGES.POLICIES}/${encodeURLString(policy)}`);\n              },\n              disableButtonFunction: () => !canViewPolicy,\n            },\n          ]}\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\n          isLoading={false}\n          records={groupPolicies}\n          entityName=\"Policies\"\n          idField=\"\"\n          tooltip={\n            canViewPolicy\n              ? \"\"\n              : permissionTooltipHelper(\n                  viewPolicyPermissions,\n                  \"view Policy details\"\n                )\n          }\n        />\n      </Grid>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <GroupDetailsHeader />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <GroupsIcon width={40} />\n              </Fragment>\n            }\n            title={groupName}\n            subTitle={null}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>Group Status:</span>\n                <span id=\"group-status\" className={classes.statusValue}>\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <TooltipWrapper\n                  tooltip={\n                    hasPermission(\n                      CONSOLE_UI_RESOURCE,\n                      enableDisableGroupPermissions,\n                      true\n                    )\n                      ? \"\"\n                      : permissionTooltipHelper(\n                          enableDisableGroupPermissions,\n                          \"enable or disable Groups\"\n                        )\n                  }\n                >\n                  <SecureComponent\n                    resource={CONSOLE_UI_RESOURCE}\n                    scopes={enableDisableGroupPermissions}\n                    errorProps={{ disabled: true }}\n                    matchAll\n                  >\n                    <FormSwitchWrapper\n                      indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                      checked={isGroupEnabled}\n                      value={\"group_enabled\"}\n                      id=\"group-status\"\n                      name=\"group-status\"\n                      onChange={() => {\n                        toggleGroupStatus(!isGroupEnabled);\n                      }}\n                      switchOnly\n                    />\n                  </SecureComponent>\n                </TooltipWrapper>\n\n                <div className={classes.spacerLeft}>\n                  <TooltipWrapper tooltip={\"Delete Group\"}>\n                    <Button\n                      id={\"delete-user-group\"}\n                      variant=\"secondary\"\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setDeleteOpen(true);\n                      }}\n                    />\n                  </TooltipWrapper>\n                </div>\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: { label: \"Members\" },\n              content: groupsTabContent,\n            }}\n            {{\n              tabConfig: { label: \"Policies\" },\n              content: policiesTabContent,\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n      {/*Modals*/}\n      {policyOpen ? (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={[groupName]}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            fetchGroupInfo();\n            dispatch(setSelectedPolicies([]));\n          }}\n        />\n      ) : null}\n\n      {usersOpen ? (\n        <AddGroupMember\n          selectedGroup={groupName}\n          onSaveClick={() => {}}\n          title={memberActionText}\n          groupStatus={groupEnabled}\n          preSelectedUsers={members}\n          open={usersOpen}\n          onClose={() => {\n            setUsersOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={[groupName]}\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\n            setDeleteOpen(false);\n            if (isDelSuccess) {\n              navigate(IAM_PAGES.GROUPS);\n            }\n          }}\n        />\n      )}\n      {/*Modals*/}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(GroupsDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n}: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n        isLoading(false);\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(UsersSelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"../../../api\";\nimport {\n  HttpResponse,\n  ListPoliciesResponse,\n  Error,\n} from \"../../../api/consoleApi\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  noTitle?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({ classes, noTitle = false }: ISelectPolicyProps) => {\n  const dispatch = useAppDispatch();\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api.policies\n      .listPolicies()\n      .then((res: HttpResponse<ListPoliciesResponse, Error>) => {\n        const policies = res.data.policies ?? [];\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    dispatch(setSelectedPolicies(elements));\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              {!noTitle && (\n                <span className={classes.fieldLabel}>Assign Policies</span>\n              )}\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for a Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={classes.tableBlock}\n              style={{ paddingBottom: 16 }}\n            >\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={currentPolicies}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(PolicySelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\n\nimport { useSelector } from \"react-redux\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroups: string[] | null;\n  open: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \".9rem\",\n      \"& button\": {\n        marginLeft: 8,\n      },\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroups,\n  open,\n}: ISetPolicyProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n  const setPolicyAction = () => {\n    let users = null;\n    let groups = null;\n    if (selectedGroups !== null) {\n      groups = selectedGroups;\n    } else {\n      if (selectedUser !== null) {\n        users = [selectedUser.accessKey] || [\" \"];\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy-multi`, {\n        name: currentPolicies,\n        groups: groups,\n        users: users,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroups?.length === 1) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(selectedGroups[0])}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n          dispatch(setSelectedPolicies(groupPolicy.split(\",\")));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n    dispatch(setSelectedPolicies(actualPolicy));\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroups?.length === 1) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n      dispatch(setSelectedPolicies(userPolicy));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroups?.length, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid container>\n        {(selectedGroups?.length === 1 || selectedUser != null) && (\n          <Fragment>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={`Selected ${selectedGroups !== null ? \"Group\" : \"User\"}`}\n                content={selectedGroups !== null ? selectedGroups[0] : userName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={\"Current Policy\"}\n                content={actualPolicy.join(\", \")}\n              />\n            </Grid>\n          </Fragment>\n        )}\n        {selectedGroups && selectedGroups?.length > 1 && (\n          <PredefinedList\n            label={\"Selected Groups\"}\n            content={selectedGroups.join(\", \")}\n          />\n        )}\n        <Grid item xs={12}>\n          <div className={classes.tableBlock}>\n            <PolicySelectors selectedPolicy={selectedPolicy} />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          id={\"reset\"}\n          type=\"button\"\n          variant=\"regular\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n          label={\"Reset\"}\n        />\n        <Button\n          id={\"save\"}\n          type=\"button\"\n          variant=\"callAction\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n          label={\"Save\"}\n        />\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetPolicy);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Policy } from \"api/consoleApi\";\n\ninterface userInterface {\n  accessKey: string;\n}\n\ninterface policyDetailsInterface {\n  policy: string;\n}\n\nexport const usersSort = (a: userInterface, b: userInterface) => {\n  if (a.accessKey > b.accessKey) {\n    return 1;\n  }\n  if (a.accessKey < b.accessKey) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: Policy, b: Policy) => {\n  if (a.name! > b.name!) {\n    return 1;\n  }\n  if (a.name! < b.name!) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policyDetailsSort = (\n  a: policyDetailsInterface,\n  b: policyDetailsInterface\n) => {\n  if (a.policy > b.policy) {\n    return 1;\n  }\n  if (a.policy < b.policy) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref","_ref$label","label","onChange","value","id","name","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","_jsxs","React","children","_jsx","className","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","textAlign","Typography","component","predefinedList","content","_ref$multiLine","multiLine","actionButton","Fragment","prefinedContainer","predefinedTitle","concat","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","useStyles","makeStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","maxWidth","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","style","tabStripStyle","minHeight","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","tabContentContainer","tabPanel","flexDirection","_ref$selectedTab","selectedTab","routes","isRouteTabs","useTheme","_useLocation$pathname","useLocation","pathname","isSmallScreen","useMediaQuery","breakpoints","down","_useState","useState","_useState2","_slicedToArray","setValue","headerList","contentList","useEffect","tabConfigElement","find","tabConfig","to","forEach","child","push","TabContext","Box","TabList","event","newValue","orientation","variant","scrollButtons","tabList","map","index","Tab","tabHeader","focusRipple","TabPanel","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","_useApi","useApi","err","setErrorSnackMessage","_useApi2","deleteLoading","invokeDeleteApi","renderGroups","group","ConfirmDialog","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","_step","_iterator","_createForOfIteratorHelper","s","n","done","encodeURLString","e","f","onClose","confirmationContent","DialogContentText","userSelector","modalStyleUtils","formFieldStyles","modalBasic","_ref$title","_ref$groupStatus","groupStatus","_ref$preSelectedUsers","preSelectedUsers","_ref$selectedGroup","selectedGroup","open","selectedUsers","setSelectedUsers","ModalWrapper","modalOpen","AddMembersToGroupIcon","formFieldRow","PredefinedList","UsersSelectors","editMode","modalButtonBar","Button","type","onClick","api","invoke","members","status","then","res","catch","setModalErrorSnackMessage","navigate","useNavigate","PageHeaderWrapper","BackLink","IAM_PAGES","GROUPS","formatPolicy","policy","arguments","undefined","split","pageContainer","statusLabel","statusValue","searchField","tableStyles","spacingUtils","flex","whiteSpace","textOverflow","containerForHeader","params","useParams","groupDetails","setGroupDetails","_useState3","_useState4","policyOpen","setPolicyOpen","_useState5","_useState6","usersOpen","setUsersOpen","_useState7","_useState8","setDeleteOpen","_useState9","_useState10","memberFilter","setMemberFilter","groupName","decodeURLString","_groupDetails$members","_groupDetails$policy","groupEnabled","filteredMembers","filter","elementItem","includes","viewUser","hasPermission","CONSOLE_UI_RESOURCE","viewUserPermissions","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","getGroupPermissions","canEditGroupMembers","editGroupMembersPermissions","canSetPolicies","setGroupPoliciesPermissions","canViewPolicy","viewPolicyPermissions","groupsTabContent","PanelTitle","SearchBox","placeholder","searchText","overrideClass","SecureComponent","resource","scopes","addUserToGroupPermissions","errorProps","TooltipWrapper","permissionTooltipHelper","createGroupPermissions","AddIcon","listUsersPermissions","TableWrapper","itemActions","userName","USERS","disableButtonFunction","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","IAMPoliciesIcon","POLICIES","GroupDetailsHeader","PageLayout","ScreenTitle","GroupsIcon","enableDisableGroupPermissions","matchAll","FormSwitchWrapper","nextStatus","spacerLeft","TrashIcon","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","setSelectedPolicies","AddGroupMember","onSaveClick","DeleteGroup","isDelSuccess","paper","overflow","tableBlock","searchBox","actionsTitle","alignSelf","minWidth","noFound","spacing","selectorsCommon","_ref$editMode","setRecords","loading","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","accessKey","Paper","LinearProgress","onSelect","targetD","target","elements","_toConsumableArray","element","customPaperHeight","multiSelectTable","fieldLabel","filterBox","_ref$noTitle","noTitle","currentPolicies","useSelector","state","createUser","selectedPolicies","fetchPolicies","policies","listPolicies","_res$data$policies","data","policySort","paddingBottom","buttonContainer","setLoading","actualPolicy","setActualPolicy","selectedPolicy","setSelectedPolicy","groupPolicy","userPolicy","join","PolicySelectors","spacerRight","groups","a","b","stringSort","policyDetailsSort"],"sourceRoot":""}