{"version":3,"file":"static/js/191.35112ad5.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Groups/Groups.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  Button,\n  DeleteIcon,\n  GroupsIcon,\n  HelpBox,\n  IAMPoliciesIcon,\n  UsersIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\n\nimport { GroupsList } from \"./types\";\nimport { stringSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport AButton from \"../Common/AButton/AButton\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  applyPolicyPermissions,\n  CONSOLE_UI_RESOURCE,\n  createGroupPermissions,\n  deleteGroupPermissions,\n  displayGroupsPermissions,\n  getGroupPermissions,\n  IAM_PAGES,\n  permissionTooltipHelper,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nimport { encodeURLString } from \"../../../common/utils\";\n\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst DeleteGroup = withSuspense(React.lazy(() => import(\"./DeleteGroup\")));\nconst SetPolicy = withSuspense(\n  React.lazy(() => import(\"../Policies/SetPolicy\"))\n);\n\ninterface IGroupsProps {\n  classes: any;\n  openGroupModal: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    ...actionsTray,\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n    ...containerForHeader,\n  });\n\nconst Groups = ({ classes }: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [checkedGroups, setCheckedGroups] = useState<string[]>([]);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  const displayGroups = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    displayGroupsPermissions\n  );\n\n  const deleteGroup = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    deleteGroupPermissions\n  );\n\n  const getGroup = hasPermission(CONSOLE_UI_RESOURCE, getGroupPermissions);\n\n  const applyPolicy = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    applyPolicyPermissions,\n    true\n  );\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { value = \"\", checked = false } = {} } = e;\n\n    let elements: string[] = [...checkedGroups]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedGroups(elements);\n\n    return elements;\n  };\n\n  useEffect(() => {\n    if (loading) {\n      if (displayGroups) {\n        const fetchRecords = () => {\n          api\n            .invoke(\"GET\", `/api/v1/groups`)\n            .then((res: GroupsList) => {\n              let resGroups: string[] = [];\n              if (res.groups !== null) {\n                resGroups = res.groups.sort(stringSort);\n              }\n              setRecords(resGroups);\n              isLoading(false);\n            })\n            .catch((err: ErrorResponseHandler) => {\n              dispatch(setErrorSnackMessage(err));\n              isLoading(false);\n            });\n        };\n        fetchRecords();\n      } else {\n        isLoading(false);\n      }\n    }\n  }, [loading, dispatch, displayGroups]);\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    setCheckedGroups([]);\n    if (refresh) {\n      isLoading(true);\n    }\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.includes(filter)\n  );\n\n  const viewAction = (group: any) => {\n    navigate(`${IAM_PAGES.GROUPS}/${encodeURLString(group)}`);\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n    {\n      type: \"edit\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={checkedGroups}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      {policyOpen && (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={checkedGroups}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n          }}\n        />\n      )}\n      <PageHeaderWrapper label={\"Groups\"} />\n\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SecureComponent\n            resource={CONSOLE_UI_RESOURCE}\n            scopes={displayGroupsPermissions}\n            errorProps={{ disabled: true }}\n          >\n            <SearchBox\n              placeholder={\"Search Groups\"}\n              onChange={setFilter}\n              overrideClass={classes.searchField}\n              value={filter}\n            />\n          </SecureComponent>\n          <Box\n            sx={{\n              display: \"flex\",\n            }}\n          >\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={applyPolicyPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper\n                tooltip={\n                  checkedGroups.length < 1\n                    ? \"Please select Groups on which you want to apply Policies\"\n                    : applyPolicy\n                    ? \"Select Policy\"\n                    : permissionTooltipHelper(\n                        applyPolicyPermissions,\n                        \"apply policies to Groups\"\n                      )\n                }\n              >\n                <Button\n                  id={\"assign-policy\"}\n                  onClick={() => {\n                    setPolicyOpen(true);\n                  }}\n                  label={\"Assign Policy\"}\n                  icon={<IAMPoliciesIcon />}\n                  disabled={checkedGroups.length < 1 || !applyPolicy}\n                  variant={\"regular\"}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={deleteGroupPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper\n                tooltip={\n                  checkedGroups.length === 0\n                    ? \"Select Groups to delete\"\n                    : getGroup\n                    ? \"Delete Selected\"\n                    : permissionTooltipHelper(\n                        getGroupPermissions,\n                        \"delete Groups\"\n                      )\n                }\n              >\n                <Button\n                  id=\"delete-selected-groups\"\n                  onClick={() => {\n                    setDeleteOpen(true);\n                  }}\n                  label={\"Delete Selected\"}\n                  icon={<DeleteIcon />}\n                  variant=\"secondary\"\n                  disabled={checkedGroups.length === 0 || !getGroup}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={createGroupPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Create Group\"}>\n                <Button\n                  id={\"create-group\"}\n                  label={\"Create Group\"}\n                  variant=\"callAction\"\n                  icon={<AddIcon />}\n                  onClick={() => {\n                    navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                  }}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Box>\n        </Grid>\n        {loading && <LinearProgress />}\n        {!loading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    getGroup\n                      ? \"\"\n                      : permissionTooltipHelper(\n                          getGroupPermissions,\n                          \"view Group details\"\n                        )\n                  }\n                >\n                  <Grid item xs={12} className={classes.tableBlock}>\n                    <SecureComponent\n                      resource={CONSOLE_UI_RESOURCE}\n                      scopes={displayGroupsPermissions}\n                      errorProps={{ disabled: true }}\n                    >\n                      <TableWrapper\n                        itemActions={tableActions}\n                        columns={[{ label: \"Name\", elementKey: \"\" }]}\n                        isLoading={loading}\n                        selectedItems={checkedGroups}\n                        onSelect={\n                          deleteGroup || getGroup ? selectionChanged : undefined\n                        }\n                        records={filteredRecords}\n                        entityName=\"Groups\"\n                        idField=\"\"\n                      />\n                    </SecureComponent>\n                  </Grid>\n                </TooltipWrapper>\n                <Grid item xs={12} marginTop={\"25px\"}>\n                  <HelpBox\n                    title={\"Groups\"}\n                    iconComponent={<GroupsIcon />}\n                    help={\n                      <Fragment>\n                        A group can have one attached IAM policy, where all\n                        users with membership in that group inherit that policy.\n                        Groups support more simplified management of user\n                        permissions on the MinIO Tenant.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/linux/administration/identity-access-management/minio-group-management.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Groups\"}\n                    iconComponent={<UsersIcon />}\n                    help={\n                      <Fragment>\n                        A group can have one attached IAM policy, where all\n                        users with membership in that group inherit that policy.\n                        Groups support more simplified management of user\n                        permissions on the MinIO Tenant.\n                        <SecureComponent\n                          resource={CONSOLE_UI_RESOURCE}\n                          scopes={createGroupPermissions}\n                          matchAll\n                        >\n                          <br />\n                          <br />\n                          To get started,{\" \"}\n                          <AButton\n                            onClick={() => {\n                              navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                            }}\n                          >\n                            Create a Group\n                          </AButton>\n                          .\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Groups);\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","DeleteGroup","withSuspense","React","SetPolicy","withStyles","theme","createStyles","tableBlock","tableStyles","marginTop","actionsTray","searchField","maxWidth","containerForHeader","classes","dispatch","useAppDispatch","navigate","useNavigate","useState","deleteOpen","setDeleteOpen","loading","isLoading","records","setRecords","filter","setFilter","policyOpen","setPolicyOpen","checkedGroups","setCheckedGroups","useEffect","displayGroups","hasPermission","CONSOLE_UI_RESOURCE","displayGroupsPermissions","deleteGroup","deleteGroupPermissions","getGroup","getGroupPermissions","applyPolicy","applyPolicyPermissions","api","then","res","resGroups","groups","sort","stringSort","catch","err","setErrorSnackMessage","filteredRecords","elementItem","includes","viewAction","group","IAM_PAGES","encodeURLString","tableActions","type","onClick","disableButtonFunction","Fragment","selectedGroups","closeDeleteModalAndRefresh","refresh","open","selectedUser","closeModalAndRefresh","label","item","xs","className","resource","scopes","errorProps","disabled","placeholder","onChange","overrideClass","value","sx","display","matchAll","tooltip","length","permissionTooltipHelper","id","icon","variant","createGroupPermissions","itemActions","columns","elementKey","selectedItems","onSelect","e","target","checked","elements","push","element","undefined","entityName","idField","title","iconComponent","help","href","rel","container","justifyContent","alignContent","alignItems"],"sourceRoot":""}