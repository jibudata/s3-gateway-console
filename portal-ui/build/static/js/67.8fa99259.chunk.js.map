{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/AButton/AButton.tsx","screens/shared/ErrorBlock.tsx","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/UpdateTenantModal.tsx","screens/Console/Common/UsageBarWrapper/SummaryUsageBar.tsx","screens/Console/Common/UsageBarWrapper/StackRow.tsx","screens/Console/Tenants/TenantDetails/TenantSummary.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","StyledSwitch","margin","switchBase","palette","common","white","boxShadow","thumb","track","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","item","xs","sm","md","textAlign","component","textDecoration","info","main","fontFamily","rest","errorBlock","withBreak","variant","ecListTransform","ecList","map","getLimitSizes","resourceQuotas","quotas","returnQuotas","forEach","rsQuota","stCName","split","hard","used","tenantIsOnline","tenant","currentState","status","health_status","LabelValuePair","orientation","stkProps","lblProps","valProps","direction","buttonContainer","infoText","formFieldStyles","modalStyleUtils","closeModalAndRefresh","namespace","idTenant","isSending","setIsSending","minioImage","setMinioImage","imageRegistry","setImageRegistry","imageRegistryEndpoint","setImageRegistryEndpoint","imageRegistryUsername","setImageRegistryUsername","imageRegistryPassword","setImageRegistryPassword","validMinioImage","setValidMinioImage","validateImage","fieldToCheck","RegExp","test","ModalWrapper","Grid","modalFormScrollable","formFieldRow","InputBoxWrapper","e","target","FormSwitchWrapper","modalButtonBar","Button","trim","payload","image","enable_prometheus","registry","image_registry","username","password","api","invoke","then","catch","BorderLinearProgress","colorPrimary","bar","padChart","LinearProgress","allValue","currentUsage","centerItem","maxValue","currValue","healthStatus","renderFunction","loading","porcentualValue","CircularProgress","ErrorBlock","Stack","spacing","toString","StackRow","restProps","StackItem","styled","Paper","healthStatusToClass","redState","yellowState","greenState","greyState","StorageSummary","usage","raw_usage","raw","niceBytes","getToggle","toggleValue","idPrefix","featureRowStyle","flexFlow","featureItemStyleProps","sx","flex","minWidth","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","logEnabled","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","warning","success","centerAlign","detailSection","float","wordWrap","overflowWrap","clear","linkedSection","containerForHeader","match","poolCount","setPoolCount","instances","setInstances","volumes","setVolumes","updateMinioVersion","setUpdateMinioVersion","tenantName","params","tenantNamespace","pools","total_volumes","total_instances","history","push","AButton","textOverflow","whiteSpace","wordBreak","href","endpoints","minio","rel","console","write_quorum","drives_online","drives_offline","borderBottom","Box"],"mappings":"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","file":"static/js/67.8fa99259.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Grid } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../common/api\";\n\ninterface IUpdateTenantModal {\n  open: boolean;\n  closeModalAndRefresh: (update: boolean) => any;\n  namespace: string;\n  idTenant: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    infoText: {\n      fontSize: 14,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst UpdateTenantModal = ({\n  open,\n  closeModalAndRefresh,\n  namespace,\n  idTenant,\n  setModalErrorSnackMessage,\n  classes,\n}: IUpdateTenantModal) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [minioImage, setMinioImage] = useState<string>(\"\");\n  const [imageRegistry, setImageRegistry] = useState<boolean>(false);\n  const [imageRegistryEndpoint, setImageRegistryEndpoint] =\n    useState<string>(\"\");\n  const [imageRegistryUsername, setImageRegistryUsername] =\n    useState<string>(\"\");\n  const [imageRegistryPassword, setImageRegistryPassword] =\n    useState<string>(\"\");\n  const [validMinioImage, setValidMinioImage] = useState<boolean>(true);\n\n  const validateImage = useCallback(\n    (fieldToCheck: string) => {\n      const pattern = new RegExp(\"^$|^((.*?)/(.*?):(.+))$\");\n\n      switch (fieldToCheck) {\n        case \"minioImage\":\n          setValidMinioImage(pattern.test(minioImage));\n          break;\n      }\n    },\n    [minioImage]\n  );\n\n  useEffect(() => {\n    validateImage(\"minioImage\");\n  }, [minioImage, validateImage]);\n\n  const closeAction = () => {\n    closeModalAndRefresh(false);\n  };\n\n  const resetForm = () => {\n    setMinioImage(\"\");\n    setImageRegistry(false);\n    setImageRegistryEndpoint(\"\");\n    setImageRegistryUsername(\"\");\n    setImageRegistryPassword(\"\");\n  };\n\n  const updateMinIOImage = () => {\n    setIsSending(true);\n\n    let payload = {\n      image: minioImage,\n      enable_prometheus: true,\n    };\n\n    if (imageRegistry) {\n      const registry: any = {\n        image_registry: {\n          registry: imageRegistryEndpoint,\n          username: imageRegistryUsername,\n          password: imageRegistryPassword,\n        },\n      };\n      payload = {\n        ...payload,\n        ...registry,\n      };\n    }\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${namespace}/tenants/${idTenant}`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(error);\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title={\"Update MinIO Version\"}\n      modalOpen={open}\n      onClose={closeAction}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.modalFormScrollable}>\n          <div className={classes.infoText}>\n            Please enter the MinIO image from dockerhub to use. If blank, then\n            latest build will be used.\n          </div>\n          <br />\n          <br />\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              value={minioImage}\n              label={\"MinIO's Image\"}\n              id={\"minioImage\"}\n              name={\"minioImage\"}\n              placeholder={\"E.g. minio/minio:RELEASE.2021-08-20T18-32-01Z\"}\n              onChange={(e) => {\n                setMinioImage(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"imageRegistry\"\n              id=\"setImageRegistry\"\n              name=\"setImageRegistry\"\n              checked={imageRegistry}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setImageRegistry(!imageRegistry);\n              }}\n              label={\"Set Custom Image Registry\"}\n              indicatorLabels={[\"Yes\", \"No\"]}\n            />\n          </Grid>\n          {imageRegistry && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryEndpoint}\n                  label={\"Endpoint\"}\n                  id={\"imageRegistry\"}\n                  name={\"imageRegistry\"}\n                  placeholder={\"E.g. https://index.docker.io/v1/\"}\n                  onChange={(e) => {\n                    setImageRegistryEndpoint(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryUsername}\n                  label={\"Username\"}\n                  id={\"imageRegistryUsername\"}\n                  name={\"imageRegistryUsername\"}\n                  placeholder={\"Enter image registry username\"}\n                  onChange={(e) => {\n                    setImageRegistryUsername(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryPassword}\n                  label={\"Password\"}\n                  id={\"imageRegistryPassword\"}\n                  name={\"imageRegistryPassword\"}\n                  placeholder={\"Enter image registry password\"}\n                  onChange={(e) => {\n                    setImageRegistryPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={resetForm}\n          >\n            Clear\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !validMinioImage ||\n              (imageRegistry &&\n                (imageRegistryEndpoint.trim() === \"\" ||\n                  imageRegistryUsername.trim() === \"\" ||\n                  imageRegistryPassword.trim() === \"\")) ||\n              isSending\n            }\n            onClick={updateMinIOImage}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UpdateTenantModal));\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress, Stack } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ErrorBlock from \"../../../shared/ErrorBlock\";\nimport { CircleIcon } from \"../../../../icons\";\nimport LabelValuePair from \"./LabelValuePair\";\n\ninterface IProgressBar {\n  maxValue: number;\n  currValue: number;\n  label: string;\n  renderFunction?: (element: string) => any;\n  error: string;\n  loading: boolean;\n  classes: any;\n  labels?: boolean;\n  healthStatus?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    allValue: {\n      fontSize: 16,\n      fontWeight: 700,\n      marginBottom: 8,\n    },\n    currentUsage: {\n      fontSize: 12,\n      marginTop: 8,\n    },\n    centerItem: {\n      textAlign: \"center\",\n    },\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#F4F4F4\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#081C42\",\n  },\n  padChart: {\n    padding: \"5px\",\n  },\n}))(LinearProgress);\n\nconst SummaryUsageBar = ({\n  classes,\n  maxValue,\n  currValue,\n  healthStatus,\n  renderFunction,\n  loading,\n  error,\n}: IProgressBar) => {\n  const porcentualValue = (currValue * 100) / maxValue;\n\n  const renderComponent = () => {\n    if (!loading) {\n      return error !== \"\" ? (\n        <ErrorBlock errorMessage={error} withBreak={false} />\n      ) : (\n        <Grid item xs={12}>\n          <BorderLinearProgress variant=\"determinate\" value={porcentualValue} />\n          <Stack\n            direction={{ xs: \"column\", sm: \"row\" }}\n            spacing={{ xs: 1, sm: 2, md: 4 }}\n            alignItems={\"stretch\"}\n            margin={\"15px 0 15px 0\"}\n          >\n            <LabelValuePair\n              label={\"Storage Capacity:\"}\n              orientation={\"row\"}\n              value={\n                renderFunction ? renderFunction(maxValue.toString()) : maxValue\n              }\n            />\n            <LabelValuePair\n              label={\"Used:\"}\n              orientation={\"row\"}\n              value={\n                renderFunction\n                  ? renderFunction(currValue.toString())\n                  : currValue\n              }\n            />\n            {healthStatus && (\n              <LabelValuePair\n                orientation={\"row\"}\n                label={\"Health:\"}\n                value={\n                  <span className={healthStatus}>\n                    <CircleIcon />\n                  </span>\n                }\n              />\n            )}\n          </Stack>\n        </Grid>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.padChart}>\n          <Grid item xs={12} className={classes.centerItem}>\n            <CircularProgress\n              color=\"primary\"\n              size={40}\n              variant=\"indeterminate\"\n            />\n          </Grid>\n        </div>\n      )}\n      {renderComponent()}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SummaryUsageBar);\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\nconst StackRow = ({\n  children = null,\n  ...restProps\n}: {\n  children?: any;\n  [x: string]: any;\n}) => {\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"row\" }}\n      justifyContent=\"space-between\"\n      margin={\"5px 0 5px 0\"}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...restProps}\n    >\n      {children}\n    </Stack>\n  );\n};\nexport default StackRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Box, Button, Grid, Stack } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { ITenant } from \"../ListTenants/types\";\nimport UpdateTenantModal from \"./UpdateTenantModal\";\nimport { AppState } from \"../../../../store\";\nimport history from \"./../../../../history\";\nimport { tenantIsOnline } from \"../ListTenants/utils\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport { styled } from \"@mui/styles\";\nimport SummaryUsageBar from \"../../Common/UsageBarWrapper/SummaryUsageBar\";\nimport LabelValuePair from \"../../Common/UsageBarWrapper/LabelValuePair\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport StackRow from \"../../Common/UsageBarWrapper/StackRow\";\n\ninterface ITenantsSummary {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  logEnabled: boolean;\n  monitoringEnabled: boolean;\n  encryptionEnabled: boolean;\n  minioTLS: boolean;\n  consoleTLS: boolean;\n  consoleEnabled: boolean;\n  adEnabled: boolean;\n  oidcEnabled: boolean;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    detailSection: {\n      \"& div\": {\n        \"& b,i\": {\n          minWidth: 80,\n          display: \"block\",\n          float: \"left\",\n        },\n        \"& i\": {\n          fontStyle: \"normal\",\n          wordWrap: \"break-word\",\n          overflowWrap: \"break-word\",\n        },\n        \"& div\": {\n          clear: \"both\",\n        },\n        clear: \"both\",\n        marginBottom: 2,\n      },\n    },\n    linkedSection: {\n      color: theme.palette.info.main,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst StackItem = styled(Paper)(({ theme }) => ({\n  border: 0,\n}));\n\nconst healthStatusToClass = (health_status: string = \"red\", classes: any) => {\n  return health_status === \"red\"\n    ? classes.redState\n    : health_status === \"yellow\"\n    ? classes.yellowState\n    : health_status === \"green\"\n    ? classes.greenState\n    : classes.greyState;\n};\n\nconst StorageSummary = ({ tenant, classes }: Partial<ITenantsSummary>) => {\n  return (\n    <SummaryUsageBar\n      currValue={tenant?.status?.usage?.raw_usage ?? 0}\n      maxValue={tenant?.status?.usage?.raw ?? 1}\n      label={\"Storage\"}\n      renderFunction={niceBytes}\n      error={\"\"}\n      loading={false}\n      healthStatus={healthStatusToClass(tenant?.status?.health_status, classes)}\n    />\n  );\n};\n\nconst getToggle = (toggleValue: boolean, idPrefix = \"\") => {\n  return (\n    <FormSwitchWrapper\n      indicatorLabels={[\"Enabled\", \"Disabled\"]}\n      checked={toggleValue}\n      value={toggleValue}\n      id={`${idPrefix}-status`}\n      name={`${idPrefix}-status`}\n      onChange={() => {}}\n      switchOnly\n    />\n  );\n};\n\nconst featureRowStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginTop: \"10px\",\n  \"@media (max-width: 600px)\": {\n    flexFlow: \"column\",\n  },\n};\n\nconst featureItemStyleProps = {\n  stkProps: {\n    sx: {\n      flex: 1,\n      marginRight: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      \"@media (max-width: 900px)\": {\n        marginRight: \"25px\",\n      },\n    },\n  },\n  lblProps: {\n    style: {\n      minWidth: 100,\n    },\n  },\n};\nconst TenantSummary = ({\n  classes,\n  match,\n  tenant,\n  logEnabled,\n  monitoringEnabled,\n  encryptionEnabled,\n  minioTLS,\n  consoleTLS,\n  consoleEnabled,\n  adEnabled,\n  oidcEnabled,\n  loadingTenant,\n}: ITenantsSummary) => {\n  const [poolCount, setPoolCount] = useState<number>(0);\n  const [instances, setInstances] = useState<number>(0);\n  const [volumes, setVolumes] = useState<number>(0);\n  const [updateMinioVersion, setUpdateMinioVersion] = useState<boolean>(false);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  useEffect(() => {\n    if (tenant) {\n      setPoolCount(tenant.pools.length);\n      setVolumes(tenant.total_volumes || 0);\n      setInstances(tenant.total_instances || 0);\n    }\n  }, [tenant]);\n\n  return (\n    <Fragment>\n      {updateMinioVersion && (\n        <UpdateTenantModal\n          open={updateMinioVersion}\n          closeModalAndRefresh={() => {\n            setUpdateMinioVersion(false);\n          }}\n          idTenant={tenantName}\n          namespace={tenantNamespace}\n        />\n      )}\n\n      <Stack\n        direction={{ xs: \"column-reverse\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <StackItem>\n          <h3>Details</h3>\n        </StackItem>\n        <StackItem>\n          <Button\n            size={\"small\"}\n            color={\"primary\"}\n            variant=\"contained\"\n            style={{ textDecoration: \"none !important\" }}\n            onClick={() => {\n              history.push(\n                `/namespaces/${tenantNamespace}/tenants/${tenantName}/hop`\n              );\n            }}\n            disabled={!tenant || !tenantIsOnline(tenant)}\n          >\n            Manage Tenant\n          </Button>\n        </StackItem>\n      </Stack>\n\n      <StorageSummary tenant={tenant} classes={classes} />\n\n      <Grid container>\n        <Grid xs={12} sm={12} md={8} container>\n          <Grid xs={12}>\n            <LabelValuePair label={\"State:\"} value={tenant?.currentState} />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label=\"MinIO:\"\n              value={\n                <AButton\n                  style={{\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"normal\",\n                    wordBreak: \"break-all\",\n                  }}\n                  onClick={() => {\n                    setUpdateMinioVersion(true);\n                  }}\n                >\n                  {tenant ? tenant.image : \"\"}\n                </AButton>\n              }\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Endpoint:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.minio}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.minio || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Console:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.console}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.console || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n        </Grid>\n        <Grid xs={12} sm={12} md={4} container>\n          <Grid xs={12}>\n            <LabelValuePair label={\"Instances:\"} value={instances} />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Clusters:\"}\n              value={poolCount}\n              stkProps={{\n                style: {\n                  marginRight: 47,\n                },\n              }}\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label=\"Total Drives:\"\n              value={volumes}\n              stkProps={{\n                style: {\n                  marginRight: 43,\n                },\n              }}\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Write Quorum:\"}\n              value={\n                tenant?.status?.write_quorum ? tenant?.status?.write_quorum : 0\n              }\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Drives Online:\"}\n              value={\n                tenant?.status?.drives_online\n                  ? tenant?.status?.drives_online\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 8,\n                },\n              }}\n            />\n          </Grid>\n          <Grid xs={12}>\n            <LabelValuePair\n              label={\"Drives Offline:\"}\n              value={\n                tenant?.status?.drives_offline\n                  ? tenant?.status?.drives_offline\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 7,\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Stack>\n        <StackRow\n          sx={{\n            borderBottom: \"1px solid #eaeaea\",\n            margin: 0,\n          }}\n        >\n          <h3\n            style={{\n              marginBottom: 10,\n            }}\n          >\n            Features\n          </h3>\n        </StackRow>\n        <Box sx={{ ...featureRowStyle }}>\n          <LabelValuePair\n            orientation=\"row\"\n            label=\"Logs:\"\n            value={getToggle(logEnabled, \"tenant-log\")}\n            {...featureItemStyleProps}\n          />\n\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"AD/LDAP:\"}\n            value={getToggle(adEnabled, \"tenant-sts\")}\n            {...featureItemStyleProps}\n          />\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"Encryption:\"}\n            value={getToggle(encryptionEnabled, \"tenant-enc\")}\n            {...featureItemStyleProps}\n          />\n        </Box>\n        <Box sx={{ ...featureRowStyle }}>\n          <LabelValuePair\n            orientation=\"row\"\n            label=\"MinIO TLS:\"\n            value={getToggle(minioTLS, \"tenant-tls\")}\n            {...featureItemStyleProps}\n          />\n\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"Monitoring:\"}\n            value={getToggle(monitoringEnabled, \"tenant-monitor\")}\n            {...featureItemStyleProps}\n          />\n          <LabelValuePair\n            orientation=\"row\"\n            label={\"OpenID:\"}\n            value={getToggle(oidcEnabled, \"tenant-oidc\")}\n            {...featureItemStyleProps}\n          />\n        </Box>\n      </Stack>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSummary));\n"],"sourceRoot":""}