{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/AButton/AButton.tsx","screens/shared/ErrorBlock.tsx","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Common/UsageBarWrapper/UsageBarWrapper.tsx","screens/Console/Tenants/TenantDetails/UpdateTenantModal.tsx","screens/Console/Tenants/TenantDetails/TenantSummary.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","id","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","StyledSwitch","margin","switchBase","palette","common","white","boxShadow","thumb","track","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","item","xs","sm","md","textAlign","component","textDecoration","info","main","fontFamily","rest","errorBlock","withBreak","variant","ecListTransform","ecList","map","getLimitSizes","resourceQuotas","quotas","returnQuotas","forEach","rsQuota","stCName","split","hard","used","tenantIsOnline","tenant","currentState","status","health_status","BorderLinearProgress","colorPrimary","bar","padChart","LinearProgress","allValue","currentUsage","centerItem","maxValue","currValue","renderFunction","loading","labels","porcentualValue","toString","buttonContainer","infoText","formFieldStyles","modalStyleUtils","closeModalAndRefresh","namespace","idTenant","isSending","setIsSending","minioImage","setMinioImage","imageRegistry","setImageRegistry","imageRegistryEndpoint","setImageRegistryEndpoint","imageRegistryUsername","setImageRegistryUsername","imageRegistryPassword","setImageRegistryPassword","validMinioImage","setValidMinioImage","validateImage","fieldToCheck","pattern","RegExp","test","ModalWrapper","Grid","modalFormScrollable","formFieldRow","InputBoxWrapper","e","target","FormSwitchWrapper","modalButtonBar","Button","trim","payload","image","enable_prometheus","registry","image_registry","username","password","api","invoke","then","catch","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","logEnabled","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","redState","yellowState","warning","greenState","success","greyState","centerAlign","detailSection","minWidth","float","wordWrap","overflowWrap","clear","linkedSection","containerForHeader","spacing","match","capacity","setCapacity","poolCount","setPoolCount","instances","setInstances","volumes","setVolumes","updateMinioVersion","setUpdateMinioVersion","tenantName","params","tenantNamespace","total_size","pools","total_volumes","total_instances","sectionTitle","Paper","paperContainer","hrClass","niceBytes","href","endpoints","minio","rel","console","AButton","CircularProgress","UsageBarWrapper","usage","raw_usage","raw","healthCol","drives_online","drives_offline","write_quorum","history","push","anchorButton"],"mappings":"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","file":"static/js/65.cdc641c4.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","import React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ErrorBlock from \"../../../shared/ErrorBlock\";\n\ninterface IProgressBar {\n  maxValue: number;\n  currValue: number;\n  label: string;\n  renderFunction?: (element: string) => any;\n  error: string;\n  loading: boolean;\n  classes: any;\n  labels?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    allValue: {\n      fontSize: 16,\n      fontWeight: 700,\n      marginBottom: 8,\n    },\n    currentUsage: {\n      fontSize: 12,\n      marginTop: 8,\n    },\n    centerItem: {\n      textAlign: \"center\",\n    },\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#F4F4F4\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#081C42\",\n  },\n  padChart: {\n    padding: \"5px\",\n  },\n}))(LinearProgress);\n\nconst UsageBarWrapper = ({\n  classes,\n  maxValue,\n  currValue,\n  label,\n  renderFunction,\n  loading,\n  error,\n  labels = true,\n}: IProgressBar) => {\n  const porcentualValue = (currValue * 100) / maxValue;\n\n  const renderComponent = () => {\n    if (!loading) {\n      return error !== \"\" ? (\n        <ErrorBlock errorMessage={error} withBreak={false} />\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.allValue}>\n            {labels && (\n              <Fragment>\n                {label}{\" \"}\n                {renderFunction\n                  ? renderFunction(maxValue.toString())\n                  : maxValue}\n              </Fragment>\n            )}\n          </Grid>\n          <BorderLinearProgress variant=\"determinate\" value={porcentualValue} />\n          <Grid item xs={12} className={classes.currentUsage}>\n            {labels && (\n              <Fragment>\n                Used:{\" \"}\n                {renderFunction\n                  ? renderFunction(currValue.toString())\n                  : currValue}\n              </Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.padChart}>\n          <Grid item xs={12} className={classes.centerItem}>\n            <CircularProgress\n              color=\"primary\"\n              size={40}\n              variant=\"indeterminate\"\n            />\n          </Grid>\n        </div>\n      )}\n      {renderComponent()}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(UsageBarWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Grid } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../common/api\";\n\ninterface IUpdateTenantModal {\n  open: boolean;\n  closeModalAndRefresh: (update: boolean) => any;\n  namespace: string;\n  idTenant: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    infoText: {\n      fontSize: 14,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst UpdateTenantModal = ({\n  open,\n  closeModalAndRefresh,\n  namespace,\n  idTenant,\n  setModalErrorSnackMessage,\n  classes,\n}: IUpdateTenantModal) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [minioImage, setMinioImage] = useState<string>(\"\");\n  const [imageRegistry, setImageRegistry] = useState<boolean>(false);\n  const [imageRegistryEndpoint, setImageRegistryEndpoint] =\n    useState<string>(\"\");\n  const [imageRegistryUsername, setImageRegistryUsername] =\n    useState<string>(\"\");\n  const [imageRegistryPassword, setImageRegistryPassword] =\n    useState<string>(\"\");\n  const [validMinioImage, setValidMinioImage] = useState<boolean>(true);\n\n  const validateImage = useCallback(\n    (fieldToCheck: string) => {\n      const pattern = new RegExp(\"^$|^((.*?)/(.*?):(.+))$\");\n\n      switch (fieldToCheck) {\n        case \"minioImage\":\n          setValidMinioImage(pattern.test(minioImage));\n          break;\n      }\n    },\n    [minioImage]\n  );\n\n  useEffect(() => {\n    validateImage(\"minioImage\");\n  }, [minioImage, validateImage]);\n\n  const closeAction = () => {\n    closeModalAndRefresh(false);\n  };\n\n  const resetForm = () => {\n    setMinioImage(\"\");\n    setImageRegistry(false);\n    setImageRegistryEndpoint(\"\");\n    setImageRegistryUsername(\"\");\n    setImageRegistryPassword(\"\");\n  };\n\n  const updateMinIOImage = () => {\n    setIsSending(true);\n\n    let payload = {\n      image: minioImage,\n      enable_prometheus: true,\n    };\n\n    if (imageRegistry) {\n      const registry: any = {\n        image_registry: {\n          registry: imageRegistryEndpoint,\n          username: imageRegistryUsername,\n          password: imageRegistryPassword,\n        },\n      };\n      payload = {\n        ...payload,\n        ...registry,\n      };\n    }\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${namespace}/tenants/${idTenant}`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(error);\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title={\"Update MinIO Version\"}\n      modalOpen={open}\n      onClose={closeAction}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.modalFormScrollable}>\n          <div className={classes.infoText}>\n            Please enter the MinIO image from dockerhub to use. If blank, then\n            latest build will be used.\n          </div>\n          <br />\n          <br />\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              value={minioImage}\n              label={\"MinIO's Image\"}\n              id={\"minioImage\"}\n              name={\"minioImage\"}\n              placeholder={\"E.g. minio/minio:RELEASE.2021-08-20T18-32-01Z\"}\n              onChange={(e) => {\n                setMinioImage(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"imageRegistry\"\n              id=\"setImageRegistry\"\n              name=\"setImageRegistry\"\n              checked={imageRegistry}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setImageRegistry(!imageRegistry);\n              }}\n              label={\"Set Custom Image Registry\"}\n              indicatorLabels={[\"Yes\", \"No\"]}\n            />\n          </Grid>\n          {imageRegistry && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryEndpoint}\n                  label={\"Endpoint\"}\n                  id={\"imageRegistry\"}\n                  name={\"imageRegistry\"}\n                  placeholder={\"E.g. https://index.docker.io/v1/\"}\n                  onChange={(e) => {\n                    setImageRegistryEndpoint(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryUsername}\n                  label={\"Username\"}\n                  id={\"imageRegistryUsername\"}\n                  name={\"imageRegistryUsername\"}\n                  placeholder={\"Enter image registry username\"}\n                  onChange={(e) => {\n                    setImageRegistryUsername(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryPassword}\n                  label={\"Password\"}\n                  id={\"imageRegistryPassword\"}\n                  name={\"imageRegistryPassword\"}\n                  placeholder={\"Enter image registry password\"}\n                  onChange={(e) => {\n                    setImageRegistryPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={resetForm}\n          >\n            Clear\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !validMinioImage ||\n              (imageRegistry &&\n                (imageRegistryEndpoint.trim() === \"\" ||\n                  imageRegistryUsername.trim() === \"\" ||\n                  imageRegistryPassword.trim() === \"\")) ||\n              isSending\n            }\n            onClick={updateMinIOImage}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UpdateTenantModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, CircularProgress } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { ITenant } from \"../ListTenants/types\";\nimport UsageBarWrapper from \"../../Common/UsageBarWrapper/UsageBarWrapper\";\nimport UpdateTenantModal from \"./UpdateTenantModal\";\nimport { AppState } from \"../../../../store\";\nimport history from \"./../../../../history\";\nimport { CircleIcon } from \"../../../../icons\";\nimport { tenantIsOnline } from \"../ListTenants/utils\";\nimport AButton from \"../../Common/AButton/AButton\";\n\ninterface ITenantsSummary {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  logEnabled: boolean;\n  monitoringEnabled: boolean;\n  encryptionEnabled: boolean;\n  minioTLS: boolean;\n  consoleTLS: boolean;\n  consoleEnabled: boolean;\n  adEnabled: boolean;\n  oidcEnabled: boolean;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    detailSection: {\n      \"& div\": {\n        \"& b,i\": {\n          minWidth: 80,\n          display: \"block\",\n          float: \"left\",\n        },\n        \"& i\": {\n          fontStyle: \"normal\",\n          wordWrap: \"break-word\",\n          overflowWrap: \"break-word\",\n        },\n        \"& div\": {\n          clear: \"both\",\n        },\n        clear: \"both\",\n        marginBottom: 2,\n      },\n    },\n    linkedSection: {\n      color: theme.palette.info.main,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantSummary = ({\n  classes,\n  match,\n  tenant,\n  logEnabled,\n  monitoringEnabled,\n  encryptionEnabled,\n  minioTLS,\n  consoleTLS,\n  consoleEnabled,\n  adEnabled,\n  oidcEnabled,\n  loadingTenant,\n}: ITenantsSummary) => {\n  const [capacity, setCapacity] = useState<number>(0);\n  const [poolCount, setPoolCount] = useState<number>(0);\n  const [instances, setInstances] = useState<number>(0);\n  const [volumes, setVolumes] = useState<number>(0);\n  const [updateMinioVersion, setUpdateMinioVersion] = useState<boolean>(false);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  const healthStatusToClass = (health_status: string) => {\n    return health_status === \"red\"\n      ? classes.redState\n      : health_status === \"yellow\"\n      ? classes.yellowState\n      : health_status === \"green\"\n      ? classes.greenState\n      : classes.greyState;\n  };\n\n  useEffect(() => {\n    if (tenant) {\n      setCapacity(tenant.total_size || 0);\n      setPoolCount(tenant.pools.length);\n      setVolumes(tenant.total_volumes || 0);\n      setInstances(tenant.total_instances || 0);\n    }\n  }, [tenant]);\n\n  return (\n    <Fragment>\n      {updateMinioVersion && (\n        <UpdateTenantModal\n          open={updateMinioVersion}\n          closeModalAndRefresh={() => {\n            setUpdateMinioVersion(false);\n          }}\n          idTenant={tenantName}\n          namespace={tenantNamespace}\n        />\n      )}\n      <h1 className={classes.sectionTitle}>Summary</h1>\n      <Paper className={classes.paperContainer}>\n        <Grid container>\n          <Grid item xs={12} sm={8}>\n            <Grid container>\n              <Grid item xs={12}>\n                <h2>Details</h2>\n                <hr className={classes.hrClass} />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                className={classes.detailSection}\n              >\n                <div>\n                  <b>Capacity:</b>\n                  <i>{niceBytes(capacity.toString(10))}</i>\n                  <div />\n                </div>\n                <div>\n                  <b>Instances:</b>\n                  <i>{instances}</i>\n                  <div />\n                </div>\n                <div>\n                  <b>Endpoint:</b>\n                  <i>\n                    <a\n                      href={tenant?.endpoints?.minio}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={classes.linkedSection}\n                    >\n                      {tenant?.endpoints?.minio}\n                    </a>\n                  </i>\n                  <div />\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                className={classes.detailSection}\n              >\n                <div>\n                  <b>Clusters:</b>\n                  <i>{poolCount}</i>\n                  <div />\n                </div>\n                <div>\n                  <b>Volumes:</b>\n                  <i>{volumes}</i>\n                  <div />\n                </div>\n                <div>\n                  <b>Console:</b>\n                  <i>\n                    <a\n                      href={tenant?.endpoints?.console}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={classes.linkedSection}\n                    >\n                      {tenant?.endpoints?.console}\n                    </a>\n                  </i>\n                  <div />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.detailSection}>\n                <div>\n                  <b>MinIO:</b>\n                  <i>\n                    <AButton\n                      onClick={() => {\n                        setUpdateMinioVersion(true);\n                      }}\n                    >\n                      {tenant ? tenant.image : \"\"}\n                    </AButton>\n                  </i>\n                  <div />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.detailSection}>\n                <div>\n                  <b>State:</b>\n                  <i>{tenant?.currentState}</i>\n                  <div />\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            {loadingTenant ? (\n              <div className={classes.centerAlign}>\n                <CircularProgress />\n              </div>\n            ) : (\n              <Fragment>\n                <UsageBarWrapper\n                  currValue={tenant?.status?.usage?.raw_usage ?? 0}\n                  maxValue={tenant?.status?.usage?.raw ?? 1}\n                  label={\"Storage\"}\n                  renderFunction={niceBytes}\n                  error={\"\"}\n                  loading={false}\n                />\n                <h4>\n                  {tenant && tenant.status && (\n                    <span\n                      className={healthStatusToClass(\n                        tenant?.status?.health_status\n                      )}\n                    >\n                      <CircleIcon />\n                    </span>\n                  )}\n                  Health\n                </h4>\n                <table>\n                  <tbody>\n                    <tr>\n                      <td className={classes.healthCol}>Drives Online</td>\n                      <td>\n                        {tenant?.status?.drives_online\n                          ? tenant?.status?.drives_online\n                          : 0}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className={classes.healthCol}>Drives Offline</td>\n                      <td>\n                        {tenant?.status?.drives_offline\n                          ? tenant?.status?.drives_offline\n                          : 0}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className={classes.healthCol}>Write Quorum</td>\n                      <td>\n                        {tenant?.status?.write_quorum\n                          ? tenant?.status?.write_quorum\n                          : 0}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <Button\n                  size={\"small\"}\n                  color={\"primary\"}\n                  variant=\"contained\"\n                  style={{ textDecoration: \"none !important\" }}\n                  onClick={() => {\n                    history.push(\n                      `/namespaces/${tenantNamespace}/tenants/${tenantName}/hop`\n                    );\n                  }}\n                  disabled={!tenant || !tenantIsOnline(tenant)}\n                >\n                  Manage Tenant\n                </Button>\n              </Fragment>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n      <br />\n      <br />\n      <Paper className={classes.paperContainer}>\n        <Grid container>\n          <Grid item xs={12}>\n            <h2>Features</h2>\n            <hr className={classes.hrClass} />\n          </Grid>\n          {loadingTenant ? (\n            <Grid item xs={12} className={classes.centerAlign}>\n              <CircularProgress />\n            </Grid>\n          ) : (\n            <Fragment>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                className={classes.detailSection}\n              >\n                <div>\n                  <b>Logs:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {logEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n                <div>\n                  <b>MinIO TLS:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {minioTLS ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n                <div>\n                  <b>AD/LDAP:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {adEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                className={classes.detailSection}\n              >\n                <div>\n                  <b>Monitoring:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {monitoringEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n                <div>\n                  <b>Encryption:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {encryptionEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n                <div>\n                  <b>OpenID:</b>\n                  <i>\n                    <Button color=\"primary\" className={classes.anchorButton}>\n                      {oidcEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Button>\n                  </i>\n                  <div />\n                </div>\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n      </Paper>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSummary));\n"],"sourceRoot":""}