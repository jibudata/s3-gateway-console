{"version":3,"file":"static/js/7494.883411d0.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AccessRulePanel.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, DataTable, SectionTitle } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { api } from \"api\";\nimport { AccessRule as IAccessRule } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst AddAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./AddAccessRule\")),\n);\nconst DeleteAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./DeleteAccessRule\")),\n);\nconst EditAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./EditAccessRule\")),\n);\n\nconst AccessRule = () => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n\n  const [loadingAccessRules, setLoadingAccessRules] = useState<boolean>(true);\n  const [accessRules, setAccessRules] = useState<IAccessRule[] | undefined>([]);\n  const [addAccessRuleOpen, setAddAccessRuleOpen] = useState<boolean>(false);\n  const [deleteAccessRuleOpen, setDeleteAccessRuleOpen] =\n    useState<boolean>(false);\n  const [accessRuleToDelete, setAccessRuleToDelete] = useState<string>(\"\");\n  const [editAccessRuleOpen, setEditAccessRuleOpen] = useState<boolean>(false);\n  const [accessRuleToEdit, setAccessRuleToEdit] = useState<string>(\"\");\n  const [initialAccess, setInitialAccess] = useState<string>(\"\");\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const deleteAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_DELETE_BUCKET_POLICY,\n  ]);\n\n  const editAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n    IAM_SCOPES.S3_PUT_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingAccessRules(true);\n    }\n  }, [loadingBucket, setLoadingAccessRules]);\n\n  const AccessRuleActions = [\n    {\n      type: \"delete\",\n      disableButtonFunction: () => !deleteAccessRules,\n      onClick: (accessRule: any) => {\n        setDeleteAccessRuleOpen(true);\n        setAccessRuleToDelete(accessRule.prefix);\n      },\n    },\n    {\n      type: \"view\",\n      disableButtonFunction: () => !editAccessRules,\n      onClick: (accessRule: any) => {\n        setAccessRuleToEdit(accessRule.prefix);\n        setInitialAccess(accessRule.access);\n        setEditAccessRuleOpen(true);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_prefix\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingAccessRules) {\n      if (displayAccessRules) {\n        api.bucket\n          .listAccessRulesWithBucket(bucketName)\n          .then((res) => {\n            setAccessRules(res.data.accessRules);\n            setLoadingAccessRules(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err)));\n            setLoadingAccessRules(false);\n          });\n      } else {\n        setLoadingAccessRules(false);\n      }\n    }\n  }, [loadingAccessRules, dispatch, displayAccessRules, bucketName]);\n\n  const closeAddAccessRuleModal = () => {\n    setAddAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeDeleteAccessRuleModal = () => {\n    setDeleteAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeEditAccessRuleModal = () => {\n    setEditAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  return (\n    <Fragment>\n      {addAccessRuleOpen && (\n        <AddAccessRuleModal\n          modalOpen={addAccessRuleOpen}\n          onClose={closeAddAccessRuleModal}\n          bucket={bucketName}\n        />\n      )}\n      {deleteAccessRuleOpen && (\n        <DeleteAccessRuleModal\n          modalOpen={deleteAccessRuleOpen}\n          onClose={closeDeleteAccessRuleModal}\n          bucket={bucketName}\n          toDelete={accessRuleToDelete}\n        />\n      )}\n      {editAccessRuleOpen && (\n        <EditAccessRuleModal\n          modalOpen={editAccessRuleOpen}\n          onClose={closeEditAccessRuleModal}\n          bucket={bucketName}\n          toEdit={accessRuleToEdit}\n          initial={initialAccess}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_BUCKET_POLICY,\n              IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n              IAM_SCOPES.S3_GET_ACTIONS,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Access Rule\"}>\n              <Button\n                id={\"add-bucket-access-rule\"}\n                onClick={() => {\n                  setAddAccessRuleOpen(true);\n                }}\n                label={\"Add Access Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        Anonymous Access\n      </SectionTitle>\n      <SecureComponent\n        scopes={[IAM_SCOPES.S3_GET_BUCKET_POLICY, IAM_SCOPES.S3_GET_ACTIONS]}\n        resource={bucketName}\n        errorProps={{ disabled: true }}\n      >\n        <DataTable\n          itemActions={AccessRuleActions}\n          columns={[\n            {\n              label: \"Prefix\",\n              elementKey: \"prefix\",\n              renderFunction: (prefix: string) => {\n                return prefix || \"/\";\n              },\n            },\n            { label: \"Access\", elementKey: \"access\" },\n          ]}\n          isLoading={loadingAccessRules}\n          records={accessRules || []}\n          entityName=\"Access Rules\"\n          idField=\"prefix\"\n        />\n      </SecureComponent>\n    </Fragment>\n  );\n};\n\nexport default AccessRule;\n"],"names":["AddAccessRuleModal","withSuspense","React","DeleteAccessRuleModal","EditAccessRuleModal","dispatch","useAppDispatch","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","_useState","useState","_useState2","_slicedToArray","loadingAccessRules","setLoadingAccessRules","_useState3","_useState4","accessRules","setAccessRules","_useState5","_useState6","addAccessRuleOpen","setAddAccessRuleOpen","_useState7","_useState8","deleteAccessRuleOpen","setDeleteAccessRuleOpen","_useState9","_useState10","accessRuleToDelete","setAccessRuleToDelete","_useState11","_useState12","editAccessRuleOpen","setEditAccessRuleOpen","_useState13","_useState14","accessRuleToEdit","setAccessRuleToEdit","_useState15","_useState16","initialAccess","setInitialAccess","bucketName","displayAccessRules","hasPermission","IAM_SCOPES","S3_GET_BUCKET_POLICY","S3_GET_ACTIONS","deleteAccessRules","S3_DELETE_BUCKET_POLICY","editAccessRules","S3_PUT_BUCKET_POLICY","S3_PUT_ACTIONS","useEffect","AccessRuleActions","type","disableButtonFunction","onClick","accessRule","prefix","access","setHelpName","api","bucket","listAccessRulesWithBucket","then","res","data","catch","err","setErrorSnackMessage","errorToHandler","_jsxs","Fragment","children","_jsx","modalOpen","onClose","toDelete","toEdit","initial","SectionTitle","separator","sx","marginBottom","actions","SecureComponent","scopes","resource","matchAll","errorProps","disabled","TooltipWrapper","tooltip","Button","id","label","icon","AddIcon","variant","DataTable","itemActions","columns","elementKey","renderFunction","isLoading","records","entityName","idField"],"sourceRoot":""}