{"version":3,"file":"static/js/3875.571ef2f2.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Button, RemoveIcon } from \"mds\";\nimport { SiteInputRow } from \"./Types\";\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"name\"),\n          }}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"endpoint\"),\n          }}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} alignItems={\"center\"} display={\"flex\"}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BackLink, Button, ClustersIcon, HelpBox } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport SectionTitle from \"../../Common/SectionTitle\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          fontSize: \"14px\",\n          marginLeft: \"5px\",\n        }}\n      >\n        Site Name\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Endpoint {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Access Key {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Secret Key {\"*\"}</Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    }\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    []\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          })\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      []\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index ? { ...item, [fieldName]: filedValue } : item\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index)\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Replication Site\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <LinearProgress /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& .step-number\": {\n                      color: \"#ffffff\",\n                      height: \"25px\",\n                      width: \"25px\",\n                      background: \"#081C42\",\n                      marginRight: \"10px\",\n                      textAlign: \"center\",\n                      fontWeight: 600,\n                      borderRadius: \"50%\",\n                    },\n\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                      \"&:before\": {\n                        content: \"' '\",\n                        height: \"7px\",\n                        width: \"7px\",\n                        backgroundColor: \"#2781B0\",\n                        marginRight: \"10px\",\n                        marginTop: \"12px\",\n                        flexShrink: 0,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n"],"names":["rowData","index","rowId","onFieldChange","onAddClick","onRemoveClick","canAdd","canRemove","showRowActions","disabledFields","fieldErrors","endpoint","accessKey","secretKey","name","Fragment","Box","InputBoxWrapper","id","placeholder","label","extraInputProps","readOnly","includes","value","onChange","e","error","required","disabled","type","Grid","item","xs","alignItems","display","sx","justifyContent","alignSelf","marginTop","borderColor","color","borderRadius","TooltipWrapper","tooltip","variant","icon","onClick","preventDefault","style","width","height","padding","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","fontSize","SiteTypeHeader","title","marginBottom","fontWeight","dispatch","useAppDispatch","navigate","useNavigate","useSelector","selSession","serverEndPoint","useState","currentSite","setCurrentSite","existingSites","setExistingSites","setDefaultNewRows","useApi","res","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","success","setSnackBarMessage","status","resetForm","IAM_PAGES","setErrorSnackMessage","errorMessage","detailedError","isAdding","invokeSiteAddApi","prevItems","ix","PageHeaderWrapper","PageLayout","gap","gridTemplateColumns","border","SectionTitle","LinearProgress","fontStyle","noValidate","autoComplete","onSubmit","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","concat","addSiteReplication","maxHeight","overflowY","cs","accessKeyError","secretKeyError","fieldName","filedValue","target","ps","endPointError","newRows","_","iconComponent","help","backgroundColor","marginRight","paddingLeft","fill","flexFlow","flex","background","textAlign","content","flexShrink","paddingTop"],"sourceRoot":""}