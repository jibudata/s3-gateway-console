{"version":3,"file":"static/js/7338.77590c89.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/DirectPV/DirectPVDrives.tsx","../node_modules/@mui/icons-material/Group.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  AddIcon,\n  Button,\n  HelpBox,\n  PageHeader,\n  RefreshIcon,\n  SearchIcon,\n  StorageIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  IDirectPVDrives,\n  IDirectPVFormatResItem,\n  IDrivesResponse,\n} from \"./types\";\nimport { niceBytes } from \"../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\n\nconst FormatDrives = withSuspense(React.lazy(() => import(\"./FormatDrives\")));\nconst FormatErrorsResult = withSuspense(\n  React.lazy(() => import(\"./FormatErrorsResult\"))\n);\n\ninterface IDirectPVMain {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableWrapper: {\n      height: \"calc(100vh - 275px)\",\n    },\n    linkItem: {\n      display: \"default\",\n      color: theme.palette.info.main,\n      textDecoration: \"none\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n        color: \"#000\",\n      },\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader,\n  });\n\nconst DirectPVMain = ({ classes }: IDirectPVMain) => {\n  const [records, setRecords] = useState<IDirectPVDrives[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [checkedDrives, setCheckedDrives] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formatOpen, setFormatOpen] = useState<boolean>(false);\n  const [formatAll, setFormatAll] = useState<boolean>(false);\n  const [formatErrorsResult, setFormatErrorsResult] = useState<\n    IDirectPVFormatResItem[]\n  >([]);\n  const [formatErrorsOpen, setFormatErrorsOpen] = useState<boolean>(false);\n  const [drivesToFormat, setDrivesToFormat] = useState<string[]>([]);\n  const [notAvailable, setNotAvailable] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", \"/api/v1/directpv/drives\")\n        .then((res: IDrivesResponse) => {\n          let drives: IDirectPVDrives[] = get(res, \"drives\", []);\n\n          if (!drives) {\n            drives = [];\n          }\n\n          drives = drives.map((item) => {\n            const newItem = { ...item };\n            newItem.joinName = `${newItem.node}:${newItem.drive}`;\n\n            return newItem;\n          });\n\n          drives.sort((d1, d2) => {\n            if (d1.drive > d2.drive) {\n              return 1;\n            }\n\n            if (d1.drive < d2.drive) {\n              return -1;\n            }\n\n            return 0;\n          });\n\n          setRecords(drives);\n          setLoading(false);\n          setNotAvailable(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setNotAvailable(true);\n        });\n    }\n  }, [loading, notAvailable]);\n\n  const formatAllDrives = () => {\n    const allDrives = records.map((item) => {\n      return `${item.node}:${item.drive}`;\n    });\n    setFormatAll(true);\n    setDrivesToFormat(allDrives);\n    setFormatOpen(true);\n  };\n\n  const formatSingleUnit = (driveID: string) => {\n    const selectedUnit = [driveID];\n    setDrivesToFormat(selectedUnit);\n    setFormatAll(false);\n    setFormatOpen(true);\n  };\n\n  const formatSelectedDrives = () => {\n    if (checkedDrives.length > 0) {\n      setDrivesToFormat(checkedDrives);\n      setFormatAll(false);\n      setFormatOpen(true);\n    }\n  };\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...checkedDrives]; // We clone the checkedDrives array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedDrivesList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedDrives(elements);\n\n    return elements;\n  };\n\n  const closeFormatModal = (\n    refresh: boolean,\n    errorsList: IDirectPVFormatResItem[]\n  ) => {\n    setFormatOpen(false);\n    if (refresh) {\n      // Errors are present, we trigger the modal box to show these changes.\n      if (errorsList && errorsList.length > 0) {\n        setFormatErrorsResult(errorsList);\n        setFormatErrorsOpen(true);\n      }\n      setLoading(true);\n      setCheckedDrives([]);\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"format\",\n      onClick: formatSingleUnit,\n      sendOnlyId: true,\n    },\n  ];\n\n  const filteredRecords: IDirectPVDrives[] = records.filter((elementItem) =>\n    elementItem.drive.includes(filter)\n  );\n\n  return (\n    <Fragment>\n      {formatOpen && (\n        <FormatDrives\n          closeFormatModalAndRefresh={closeFormatModal}\n          deleteOpen={formatOpen}\n          allDrives={formatAll}\n          drivesToFormat={drivesToFormat}\n        />\n      )}\n\n      {formatErrorsOpen && (\n        <FormatErrorsResult\n          errorsList={formatErrorsResult}\n          open={formatErrorsOpen}\n          onCloseFormatErrorsList={() => {\n            setFormatErrorsOpen(false);\n          }}\n        />\n      )}\n      <PageHeader label=\"Local Drives\" />\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <TextField\n            placeholder=\"Search Drives\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n            disabled={notAvailable}\n            variant=\"standard\"\n          />\n          <Button\n            id={\"refresh-directpv-list\"}\n            color=\"primary\"\n            aria-label=\"Refresh DirectPV List\"\n            onClick={() => {\n              setLoading(true);\n            }}\n            disabled={notAvailable}\n            icon={<RefreshIcon />}\n          />\n          <Button\n            id={\"format-selected-drives\"}\n            variant=\"callAction\"\n            disabled={checkedDrives.length <= 0 || notAvailable}\n            onClick={formatSelectedDrives}\n            label={\"Format Selected Drives\"}\n            icon={<GroupIcon />}\n          />\n          <Button\n            id={\"format-all-drives\"}\n            variant=\"callAction\"\n            label={\"Format All Drives\"}\n            onClick={formatAllDrives}\n            disabled={notAvailable}\n            icon={<AddIcon />}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          {notAvailable && !loading ? (\n            <HelpBox\n              title={\"Leverage locally attached drives\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  We can automatically provision persistent volumes (PVs) on top\n                  locally attached drives on your Kubernetes nodes by leveraging\n                  DirectPV.\n                  <br />\n                  <br />\n                  For more information{\" \"}\n                  <a\n                    href=\"https://github.com/minio/directpv\"\n                    rel=\"noopener\"\n                    target=\"_blank\"\n                    className={classes.linkItem}\n                  >\n                    Visit DirectPV Documentation\n                  </a>\n                </Fragment>\n              }\n            />\n          ) : (\n            <TableWrapper\n              itemActions={tableActions}\n              columns={[\n                {\n                  label: \"Drive\",\n                  elementKey: \"drive\",\n                },\n                {\n                  label: \"Capacity\",\n                  elementKey: \"capacity\",\n                  renderFunction: niceBytes,\n                },\n                {\n                  label: \"Allocated\",\n                  elementKey: \"allocated\",\n                  renderFunction: niceBytes,\n                },\n                {\n                  label: \"Volumes\",\n                  elementKey: \"volumes\",\n                },\n                {\n                  label: \"Node\",\n                  elementKey: \"node\",\n                },\n                {\n                  label: \"Status\",\n                  elementKey: \"status\",\n                },\n              ]}\n              onSelect={selectionChanged}\n              selectedItems={checkedDrives}\n              isLoading={loading}\n              records={filteredRecords}\n              customPaperHeight={classes.tableWrapper}\n              entityName=\"Drives\"\n              idField=\"joinName\"\n            />\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DirectPVMain);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n}), 'Group');\nexports.default = _default;"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","FormatDrives","withSuspense","React","FormatErrorsResult","withStyles","theme","createStyles","tableWrapper","height","linkItem","display","color","palette","info","main","textDecoration","actionsTray","searchField","containerForHeader","classes","useState","records","setRecords","filter","setFilter","checkedDrives","setCheckedDrives","loading","setLoading","formatOpen","setFormatOpen","formatAll","setFormatAll","formatErrorsResult","setFormatErrorsResult","formatErrorsOpen","setFormatErrorsOpen","drivesToFormat","setDrivesToFormat","notAvailable","setNotAvailable","useEffect","api","then","res","drives","get","map","item","newItem","joinName","node","drive","sort","d1","d2","catch","err","tableActions","type","onClick","driveID","sendOnlyId","filteredRecords","elementItem","includes","Fragment","closeFormatModalAndRefresh","refresh","errorsList","length","deleteOpen","allDrives","open","onCloseFormatErrorsList","label","xs","className","placeholder","id","InputProps","disableUnderline","startAdornment","position","onChange","e","target","value","disabled","variant","icon","title","iconComponent","help","href","rel","itemActions","columns","elementKey","renderFunction","niceBytes","onSelect","targetD","checked","elements","push","element","selectedItems","isLoading","customPaperHeight","entityName","idField","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}