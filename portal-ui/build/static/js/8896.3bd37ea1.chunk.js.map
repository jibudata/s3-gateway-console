{"version":3,"file":"static/js/8896.3bd37ea1.chunk.js","mappings":"oOA6EMA,EAAqB,CACzBC,qBAAAA,EAAAA,IAGIC,GAAYC,EAAAA,EAAAA,IAAQ,KAAMH,GAEhC,UAAeE,GAnDK,SAAC,GAKA,IAJnBE,EAIkB,EAJlBA,eACAC,EAGkB,EAHlBA,WACAC,EAEkB,EAFlBA,2BACAL,EACkB,EADlBA,qBASA,GAAyCM,EAAAA,EAAAA,IAPpB,kBAAMD,GAA2B,MACnC,SAACE,GAClBP,EAAqBO,GACrBF,GAA2B,MAI7B,eAAOG,EAAP,KAAsBC,EAAtB,KAEA,IAAKN,EACH,OAAO,KAET,IAMMO,EAAeP,EAAeQ,KAAI,SAACC,GAAD,OAAW,0BAAiB,uBAAIA,KAAXA,MAE7D,OACE,SAAC,IAAD,CACEC,MAAK,sBAAiBV,EAAeW,OAAQ,EAAI,IAAK,IACtDC,YAAa,SACbC,OAAQZ,EACRa,WAAW,SAAC,MAAD,IACXC,UAAWV,EACXW,UAfmB,WAAO,IAAD,YACThB,GADS,IAC3B,2BAAiC,CAAC,IAAzBS,EAAwB,QACjCH,EAAgB,SAAD,6BAAiCW,UAAUR,MAF/B,gCAgBzBS,QAvBY,kBAAMhB,GAA2B,IAwB7CiB,qBACE,UAAC,IAAD,4DACiDnB,EAAeW,OADhE,SAC8EX,EAAeW,OAAQ,EAAI,KAAM,IAC5GJ","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n  setErrorSnackMessage,\n}: IDeleteGroup) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    setErrorSnackMessage(err);\n    closeDeleteModalAndRefresh(true);\n  }\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups){\n    invokeDeleteApi(\"DELETE\", `/api/v1/group?name=${encodeURI(group)}`);\n    }\n  }; \n\n  const renderGroups = selectedGroups.map((group) => <div key={group}><b>{group}</b></div>);\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length >1 ? \"s\": \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length} group{selectedGroups.length >1 ? \"s?\": \"?\"}    \n          {renderGroups}      \n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteGroup);\n"],"names":["mapDispatchToProps","setErrorSnackMessage","connector","connect","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","useApi","err","deleteLoading","invokeDeleteApi","renderGroups","map","group","title","length","confirmText","isOpen","titleIcon","isLoading","onConfirm","encodeURI","onClose","confirmationContent"],"sourceRoot":""}