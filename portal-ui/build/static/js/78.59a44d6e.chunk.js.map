{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","common/HelpBox.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Policies/ListPolicies.tsx"],"names":["mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","length","component","onClick","size","pageContentStyles","children","contentSpacer","unSelected","selected","CloudIcon","active","xmlns","viewBox","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","spacing","margin","buttonDisabled","cursor","filter","opacity","type","valueToSend","idField","to","sendOnlyId","disabled","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","e","stopPropagation","preventDefault","Tooltip","title","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","paper","overflow","flexDirection","padding","border","borderRadius","overflowY","position","noBackground","defaultPaperHeight","loadingBox","paddingTop","paddingBottom","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","borderBottom","checkAllWrapper","transitionDuration","outline","userSelect","fontStyle","borderColor","textTransform","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","Paper","LinearProgress","Popover","id","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","checked","onChange","target","name","value","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","inputProps","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","action","vlSend","showLoaderFunction","CircularProgress","elementActions","fieldBasic","tooltipHelper","fieldContainer","marginBottom","flexBasis","tooltip","Fragment","htmlFor","noMinWidthLabel","tooltipContainer","placement","root","paddingLeft","paddingRight","leftItems","marginRight","helpText","iconComponent","help","searchField","adornment","placeholder","adornmentPosition","overrideClass","disableUnderline","InputProps","AddPolicy","withSuspense","lazy","DeletePolicy","setErrorSnackMessage","actionsTray","maxWidth","tableBlock","tableStyles","containerForHeader","setRecords","loading","setLoading","addScreenOpen","setAddScreenOpen","deleteOpen","setDeleteOpen","selectedPolicy","setSelectedPolicy","filterPolicies","setFilterPolicies","policyEdit","setPolicyEdit","viewPolicy","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","ADMIN_GET_POLICY","deletePolicy","ADMIN_DELETE_POLICY","displayPolicies","ADMIN_LIST_USER_POLICIES","useEffect","fetchRecords","api","invoke","then","res","policies","pa","pb","catch","err","tableActions","policy","filteredRecords","elementItem","closeModalAndRefresh","refresh","closeDeleteModalAndRefresh","pageContainer","scopes","ADMIN_CREATE_POLICY","resource","errorProps","endIcon","href","rel"],"mappings":"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","file":"static/js/78.59a44d6e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid rgb(234, 237, 238)\",\n      borderRadius: 5,\n      paddingTop: 10,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingBottom: 40,\n      marginTop: 10,\n      marginBottom: 10,\n      backgroundColor: \"#fbfafa\",\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        width: \"2.5rem\",\n        marginRight: \".8rem\",\n      },\n    },\n    helpText: {\n      fontSize: 16,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","import React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Kubernetes Cloud\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Policy, PolicyList } from \"./types\";\nimport { AddIcon, IAMPoliciesIcon } from \"../../../icons\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport api from \"../../../common/api\";\nimport history from \"../../../history\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport SecureComponent, {\n  hasPermission,\n} from \"../../../common/SecureComponent/SecureComponent\";\nimport SearchBox from \"../Common/SearchBox\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nconst AddPolicy = withSuspense(React.lazy(() => import(\"./AddPolicy\")));\nconst DeletePolicy = withSuspense(React.lazy(() => import(\"./DeletePolicy\")));\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IPoliciesProps {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst ListPolicies = ({ classes, setErrorSnackMessage }: IPoliciesProps) => {\n  const [records, setRecords] = useState<Policy[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addScreenOpen, setAddScreenOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedPolicy, setSelectedPolicy] = useState<string>(\"\");\n  const [filterPolicies, setFilterPolicies] = useState<string>(\"\");\n  const [policyEdit, setPolicyEdit] = useState<any>(null);\n\n  const viewPolicy = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_POLICY,\n  ]);\n\n  const deletePolicy = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_DELETE_POLICY,\n  ]);\n\n  const displayPolicies = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayPolicies) {\n        api\n          .invoke(\"GET\", `/api/v1/policies`)\n          .then((res: PolicyList) => {\n            const policies = get(res, \"policies\", []);\n\n            policies.sort((pa, pb) => {\n              if (pa.name > pb.name) {\n                return 1;\n              }\n\n              if (pa.name < pb.name) {\n                return -1;\n              }\n\n              return 0;\n            });\n\n            setLoading(false);\n            setRecords(policies);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            setErrorSnackMessage(err);\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, setErrorSnackMessage, displayPolicies]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const closeAddModalAndRefresh = (refresh: boolean) => {\n    setAddScreenOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const confirmDeletePolicy = (policy: string) => {\n    setDeleteOpen(true);\n    setSelectedPolicy(policy);\n  };\n\n  const viewAction = (policy: any) => {\n    history.push(`/policies/${policy.name}`);\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !viewPolicy,\n    },\n    {\n      type: \"delete\",\n      onClick: confirmDeletePolicy,\n      sendOnlyId: true,\n      disableButtonFunction: () => !deletePolicy,\n    },\n  ];\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filterPolicies)\n  );\n\n  return (\n    <React.Fragment>\n      {addScreenOpen && (\n        <AddPolicy\n          open={addScreenOpen}\n          closeModalAndRefresh={closeAddModalAndRefresh}\n          policyEdit={policyEdit}\n        />\n      )}\n      {deleteOpen && (\n        <DeletePolicy\n          deleteOpen={deleteOpen}\n          selectedPolicy={selectedPolicy}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeader label=\"IAM Policies\" />\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SearchBox\n            onChange={setFilterPolicies}\n            placeholder=\"Search Policies\"\n            overrideClass={classes.searchField}\n          />\n\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_CREATE_POLICY]}\n            resource={CONSOLE_UI_RESOURCE}\n            errorProps={{ disabled: true }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              endIcon={<AddIcon />}\n              onClick={() => {\n                setAddScreenOpen(true);\n                setPolicyEdit(null);\n              }}\n            >\n              Create Policy\n            </Button>\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n        <Grid item xs={12} className={classes.tableBlock}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.ADMIN_LIST_USER_POLICIES]}\n            resource={CONSOLE_UI_RESOURCE}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={tableActions}\n              columns={[{ label: \"Name\", elementKey: \"name\" }]}\n              isLoading={loading}\n              records={filteredRecords}\n              entityName=\"Policies\"\n              idField=\"name\"\n            />\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <HelpBox\n            title={\"Learn more about IAM POLICIES\"}\n            iconComponent={<IAMPoliciesIcon />}\n            help={\n              <Fragment>\n                MinIO uses Policy-Based Access Control (PBAC) to define the\n                authorized actions and resources to which an authenticated user\n                has access. Each policy describes one or more actions and\n                conditions that outline the permissions of a user or group of\n                users.\n                <br />\n                <br />\n                MinIO PBAC is built for compatibility with AWS IAM policy\n                syntax, structure, and behavior. The MinIO documentation makes a\n                best-effort to cover IAM-specific behavior and functionality.\n                Consider deferring to the IAM documentation for more complete\n                documentation on AWS IAM-specific topics.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://docs.min.io/minio/baremetal/security/minio-identity-management/policy-based-access-control.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ListPolicies));\n"],"sourceRoot":""}