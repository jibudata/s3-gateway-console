{"version":3,"file":"static/js/3061.6d2f437f.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Tenants/ListTenants/InformationItem.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx","screens/Console/Common/UsageBar/UsageBar.tsx","screens/Console/Tenants/ListTenants/TenantCapacity.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          // @ts-ignore\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface IInformationItemProps {\n  label: string;\n  value: string;\n  unit?: string;\n  variant?: \"normal\" | \"faded\";\n}\n\nconst InformationItem = ({\n  label,\n  value,\n  unit,\n  variant = \"normal\",\n}: IInformationItemProps) => {\n  return (\n    <div style={{ margin: \"0px 20px\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <span\n          style={{\n            fontSize: 18,\n            color: variant === \"normal\" ? \"#000\" : \"#999\",\n            fontWeight: 400,\n          }}\n        >\n          {value}\n        </span>\n        {unit && (\n          <Fragment>\n            {\" \"}\n            <span\n              style={{ fontSize: 12, color: \"#8F9090\", fontWeight: \"bold\" }}\n            >\n              {unit}\n            </span>\n          </Fragment>\n        )}\n      </div>\n      <div\n        style={{\n          textAlign: \"center\",\n          color: variant === \"normal\" ? \"#767676\" : \"#bababa\",\n          fontSize: 12,\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {label}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport { CapacityValues, ITenant, ValueUnit } from \"./types\";\nimport { setTenantName } from \"../tenantsSlice\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\nimport { DrivesIcon } from \"mds\";\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport InformationItem from \"./InformationItem\";\nimport TenantCapacity from \"./TenantCapacity\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    tenantItem: {\n      border: \"1px solid #EAEAEA\",\n      marginBottom: 16,\n      padding: \"15px 30px\",\n      \"&:hover\": {\n        backgroundColor: \"#FAFAFA\",\n        cursor: \"pointer\",\n      },\n    },\n    titleContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n    },\n    title: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n    },\n    namespaceLabel: {\n      display: \"inline-flex\",\n      backgroundColor: \"#EAEDEF\",\n      borderRadius: 2,\n      padding: \"4px 8px\",\n      fontSize: 10,\n      marginRight: 20,\n    },\n    status: {\n      fontSize: 12,\n      color: \"#8F9090\",\n    },\n  });\n\ninterface ITenantListItem {\n  tenant: ITenant;\n  classes: any;\n}\n\nconst TenantListItem = ({ tenant, classes }: ITenantListItem) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const healthStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"red\":\n        return classes.redState;\n      case \"yellow\":\n        return classes.yellowState;\n      case \"green\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  let raw: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let used: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let localUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let tieredUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (tenant.capacity_raw) {\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\n    const parts = b.split(\" \");\n    raw.value = parts[0];\n    raw.unit = parts[1];\n  }\n  if (tenant.capacity) {\n    const b = niceBytes(`${tenant.capacity}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (tenant.capacity_usage) {\n    const b = niceBytesInt(tenant.capacity_usage, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let spaceVariants: CapacityValues[] = [];\n  if (!tenant.tiers || tenant.tiers.length === 0) {\n    spaceVariants = [\n      { value: tenant.capacity_usage || 0, variant: \"STANDARD\" },\n    ];\n  } else {\n    spaceVariants = tenant.tiers.map((itemTenant) => {\n      return { value: itemTenant.size, variant: itemTenant.name };\n    });\n    let internalUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type === \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n    let tieredUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type !== \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\n\n    const t = niceBytesInt(tieredUsage, true);\n    const parts = t.split(\" \");\n    tieredUse.value = parts[0];\n    tieredUse.unit = parts[1];\n\n    const is = niceBytesInt(internalUsage, true);\n    const partsInternal = is.split(\" \");\n    localUse.value = partsInternal[0];\n    localUse.unit = partsInternal[1];\n  }\n\n  const openTenantDetails = () => {\n    dispatch(\n      setTenantName({\n        name: tenant.name,\n        namespace: tenant.namespace,\n      })\n    );\n    dispatch(getTenantAsync());\n    navigate(`/namespaces/${tenant.namespace}/tenants/${tenant.name}/summary`);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={classes.tenantItem}\n        id={`list-tenant-${tenant.name}`}\n        onClick={openTenantDetails}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.titleContainer}>\n            <div className={classes.title}>\n              <span>{tenant.name}</span>\n            </div>\n            <div>\n              <span className={classes.namespaceLabel}>\n                Namespace:&nbsp;{tenant.namespace}\n              </span>\n            </div>\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: 2 }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <TenantCapacity\n                  totalCapacity={tenant.capacity || 0}\n                  usedSpaceVariants={spaceVariants}\n                  statusClass={healthStatusToClass(tenant.health_status)}\n                />\n              </Grid>\n              <Grid item xs>\n                <Grid\n                  item\n                  xs\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <InformationItem\n                    label={\"Raw Capacity\"}\n                    value={raw.value}\n                    unit={raw.unit}\n                  />\n                  <InformationItem\n                    label={\"Usable Capacity\"}\n                    value={capacity.value}\n                    unit={capacity.unit}\n                  />\n                  <InformationItem\n                    label={\"Pools\"}\n                    value={tenant.pool_count.toString()}\n                    variant={\"faded\"}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ paddingLeft: \"20px\", marginTop: \"15px\" }}\n                >\n                  <span className={classes.status}>\n                    <strong>State:</strong> {tenant.currentState}\n                  </span>\n                </Grid>\n              </Grid>\n              <Grid item xs={3}>\n                <Fragment>\n                  <Grid container>\n                    <Grid\n                      item\n                      xs={2}\n                      textAlign={\"center\"}\n                      justifyContent={\"center\"}\n                      justifyItems={\"center\"}\n                    >\n                      <DrivesIcon\n                        style={{ width: 25, color: \"rgb(91,91,91)\" }}\n                      />\n                      <div\n                        style={{\n                          color: \"rgb(118, 118, 118)\",\n                          fontSize: 12,\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Usage\n                      </div>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item style={{ paddingTop: 8 }}>\n                      {(!tenant.tiers || tenant.tiers.length === 0) && (\n                        <div\n                          style={{\n                            fontSize: 14,\n                            fontWeight: 400,\n                          }}\n                        >\n                          <span\n                            style={{\n                              color: \"rgb(62,62,62)\",\n                            }}\n                          >\n                            Internal:{\" \"}\n                          </span>{\" \"}\n                          {`${used.value} ${used.unit}`}\n                        </div>\n                      )}\n\n                      {tenant.tiers && tenant.tiers.length > 0 && (\n                        <Fragment>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Internal:{\" \"}\n                            </span>{\" \"}\n                            {`${localUse.value} ${localUse.unit}`}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Tiered:{\" \"}\n                            </span>{\" \"}\n                            {`${tieredUse.value} ${tieredUse.unit}`}\n                          </div>\n                        </Fragment>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantListItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, HelpBox, RefreshIcon, TenantsIcon } from \"mds\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ITenant, ITenantsResponse } from \"./types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport TenantListItem from \"./TenantListItem\";\nimport AButton from \"../../Common/AButton/AButton\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst CredentialsPrompt = withSuspense(\n  React.lazy(() => import(\"../../Common/CredentialsPrompt/CredentialsPrompt\"))\n);\n\ninterface ITenantsList {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader,\n    tenantsList: {\n      height: \"calc(100vh - 195px)\",\n    },\n    sortByContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginBottom: 10,\n    },\n    innerSort: {\n      maxWidth: 200,\n      width: \"95%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    sortByLabel: {\n      whiteSpace: \"nowrap\",\n      fontSize: 14,\n      color: \"#838383\",\n      fontWeight: \"bold\",\n      marginRight: 10,\n    },\n  });\n\nconst ListTenants = ({ classes }: ITenantsList) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\n  const [records, setRecords] = useState<ITenant[]>([]);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [sortValue, setSortValue] = useState<string>(\"name\");\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setCreatedAccount(null);\n  };\n\n  const filteredRecords = records.filter((b: any) => {\n    if (filterTenants === \"\") {\n      return true;\n    } else {\n      if (b.name.indexOf(filterTenants) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n\n  filteredRecords.sort((a, b) => {\n    switch (sortValue) {\n      case \"capacity\":\n        if (!a.capacity || !b.capacity) {\n          return 0;\n        }\n\n        if (a.capacity > b.capacity) {\n          return 1;\n        }\n\n        if (a.capacity < b.capacity) {\n          return -1;\n        }\n\n        return 0;\n      case \"usage\":\n        if (!a.capacity_usage || !b.capacity_usage) {\n          return 0;\n        }\n\n        if (a.capacity_usage > b.capacity_usage) {\n          return 1;\n        }\n\n        if (a.capacity_usage < b.capacity_usage) {\n          return -1;\n        }\n\n        return 0;\n      case \"active_status\":\n        if (a.health_status === \"red\" && b.health_status !== \"red\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"red\" && b.health_status === \"red\") {\n          return -1;\n        }\n\n        return 0;\n      case \"failing_status\":\n        if (a.health_status === \"green\" && b.health_status !== \"green\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"green\" && b.health_status === \"green\") {\n          return -1;\n        }\n\n        return 0;\n      default:\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/tenants`)\n          .then((res: ITenantsResponse) => {\n            if (res === null) {\n              setIsLoading(false);\n              return;\n            }\n            let resTenants: ITenant[] = [];\n            if (res.tenants !== null) {\n              resTenants = res.tenants;\n            }\n\n            for (let i = 0; i < resTenants.length; i++) {\n              resTenants[i].total_capacity = niceBytes(\n                resTenants[i].total_size + \"\"\n              );\n            }\n\n            setRecords(resTenants);\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(setErrorSnackMessage(err));\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const renderItemLine = (index: number) => {\n    const tenant = filteredRecords[index] || null;\n\n    if (tenant) {\n      return <TenantListItem tenant={tenant} />;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Tenants\"\n        middleComponent={\n          <SearchBox\n            placeholder={\"Filter Tenants\"}\n            onChange={(val) => {\n              setFilterTenants(val);\n            }}\n            value={filterTenants}\n          />\n        }\n        actions={\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <TooltipWrapper tooltip={\"Refresh Tenant List\"}>\n              <Button\n                id={\"refresh-tenant-list\"}\n                onClick={() => {\n                  setIsLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n            <TooltipWrapper tooltip={\"Create Tenant\"}>\n              <Button\n                id={\"create-tenant\"}\n                label={\"Create Tenant\"}\n                onClick={() => {\n                  navigate(\"/tenants/add\");\n                }}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </Grid>\n        }\n      />\n      <PageLayout>\n        <Grid item xs={12} className={classes.tenantsList}>\n          {isLoading && <LinearProgress />}\n          {!isLoading && (\n            <Fragment>\n              {filteredRecords.length !== 0 && (\n                <Fragment>\n                  <Grid item xs={12} className={classes.sortByContainer}>\n                    <div className={classes.innerSort}>\n                      <span className={classes.sortByLabel}>Sort by</span>\n                      <SelectWrapper\n                        id={\"sort-by\"}\n                        label={\"\"}\n                        value={sortValue}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          setSortValue(e.target.value as string);\n                        }}\n                        name={\"sort-by\"}\n                        options={[\n                          { label: \"Name\", value: \"name\" },\n                          {\n                            label: \"Capacity\",\n                            value: \"capacity\",\n                          },\n                          {\n                            label: \"Usage\",\n                            value: \"usage\",\n                          },\n                          {\n                            label: \"Active Status\",\n                            value: \"active_status\",\n                          },\n                          {\n                            label: \"Failing Status\",\n                            value: \"failing_status\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </Grid>\n                  <VirtualizedList\n                    rowRenderFunction={renderItemLine}\n                    totalItems={filteredRecords.length}\n                  />\n                </Fragment>\n              )}\n              {filteredRecords.length === 0 && (\n                <Grid\n                  container\n                  justifyContent={\"center\"}\n                  alignContent={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <Grid item xs={8}>\n                    <HelpBox\n                      iconComponent={<TenantsIcon />}\n                      title={\"Tenants\"}\n                      help={\n                        <Fragment>\n                          Tenant is the logical structure to represent a MinIO\n                          deployment. A tenant can have different size and\n                          configurations from other tenants, even a different\n                          storage class.\n                          <br />\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              navigate(\"/tenants/add\");\n                            }}\n                          >\n                            Create a Tenant.\n                          </AButton>\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListTenants);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nexport interface ISizeBarItem {\n  value: number;\n  itemName: string;\n  color: string;\n}\n\nexport interface IUsageBar {\n  totalValue: number;\n  sizeItems: ISizeBarItem[];\n  bgColor?: string;\n}\n\nconst UsageBar = ({\n  totalValue,\n  sizeItems,\n  bgColor = \"#ededed\",\n}: IUsageBar) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 12,\n        backgroundColor: bgColor,\n        borderRadius: 30,\n        display: \"flex\",\n        transitionDuration: \"0.3s\",\n        overflow: \"hidden\",\n      }}\n    >\n      {sizeItems.map((sizeElement, index) => {\n        const itemPercentage = (sizeElement.value * 100) / totalValue;\n        return (\n          <div\n            key={`itemSize-${index.toString()}`}\n            style={{\n              width: `${itemPercentage}%`,\n              height: \"100%\",\n              backgroundColor: sizeElement.color,\n              transitionDuration: \"0.3s\",\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsageBar;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport { CapacityValue, CapacityValues } from \"./types\";\nimport { niceBytesInt } from \"../../../../common/utils\";\nimport { CircleIcon } from \"mds\";\nimport UsageBar, { ISizeBarItem } from \"../../Common/UsageBar/UsageBar\";\n\ninterface ITenantCapacity {\n  totalCapacity: number;\n  usedSpaceVariants: CapacityValues[];\n  statusClass: string;\n  render?: \"pie\" | \"bar\";\n}\n\nconst TenantCapacity = ({\n  totalCapacity,\n  usedSpaceVariants,\n  statusClass,\n  render = \"pie\",\n}: ITenantCapacity) => {\n  const colors = [\n    \"#8dacd3\",\n    \"#bca1ea\",\n    \"#92e8d2\",\n    \"#efc9ac\",\n    \"#97f274\",\n    \"#f7d291\",\n    \"#71ACCB\",\n    \"#f28282\",\n    \"#e28cc1\",\n    \"#2781B0\",\n  ];\n\n  const BGColor = \"#ededed\";\n\n  const totalUsedSpace = usedSpaceVariants.reduce((acc, currValue) => {\n    return acc + currValue.value;\n  }, 0);\n\n  const emptySpace = totalCapacity - totalUsedSpace;\n\n  let tiersList: CapacityValue[] = [];\n\n  const standardTier = usedSpaceVariants.find(\n    (tier) => tier.variant === \"STANDARD\"\n  ) || {\n    value: 0,\n    variant: \"empty\",\n  };\n\n  if (usedSpaceVariants.length > 10) {\n    const totalUsedByTiers = totalUsedSpace - standardTier.value;\n\n    tiersList = [\n      { value: totalUsedByTiers, color: \"#2781B0\", label: \"Total Tiers Space\" },\n    ];\n  } else {\n    tiersList = usedSpaceVariants\n      .filter((variant) => variant.variant !== \"STANDARD\")\n      .map((variant, index) => {\n        return {\n          value: variant.value,\n          color: colors[index],\n          label: `Tier - ${variant.variant}`,\n        };\n      });\n  }\n\n  let standardTierColor = \"#07193E\";\n\n  const usedPercentage = (standardTier.value * 100) / totalCapacity;\n\n  if (usedPercentage >= 90) {\n    standardTierColor = \"#C83B51\";\n  } else if (usedPercentage >= 75) {\n    standardTierColor = \"#FFAB0F\";\n  }\n\n  const plotValues: CapacityValue[] = [\n    {\n      value: standardTier.value,\n      color: standardTierColor,\n      label: \"Used Space by Tenant\",\n    },\n    ...tiersList,\n    {\n      value: emptySpace,\n      color: render === \"bar\" ? BGColor : \"transparent\",\n      label: \"Empty Space\",\n    },\n  ];\n\n  if (render === \"bar\") {\n    const plotValuesForUsageBar: ISizeBarItem[] = plotValues.map((plotVal) => {\n      return {\n        value: plotVal.value,\n        color: plotVal.color,\n        itemName: plotVal.label,\n      };\n    });\n\n    return (\n      <div style={{ width: \"100%\", marginBottom: 15 }}>\n        <UsageBar\n          totalValue={totalCapacity}\n          sizeItems={plotValuesForUsageBar}\n          bgColor={BGColor}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ position: \"relative\", width: 110, height: 110 }}>\n      <div\n        style={{ position: \"absolute\", right: -5, top: 15, zIndex: 400 }}\n        className={statusClass}\n      >\n        <CircleIcon\n          style={{\n            border: \"#fff 2px solid\",\n            borderRadius: \"100%\",\n            width: 20,\n            height: 20,\n          }}\n        />\n      </div>\n      <span\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          fontWeight: \"bold\",\n          color: \"#000\",\n          fontSize: 12,\n        }}\n      >\n        {!isNaN(totalUsedSpace) ? niceBytesInt(totalUsedSpace) : \"N/A\"}\n      </span>\n      <div>\n        <PieChart width={110} height={110}>\n          <Pie\n            data={[{ value: 100 }]}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n            fill={BGColor}\n            isAnimationActive={false}\n            stroke={\"none\"}\n          />\n          <Pie\n            data={plotValues}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n          >\n            {plotValues.map((entry, index) => (\n              <Cell\n                key={`cellCapacity-${index}`}\n                fill={entry.color}\n                stroke={\"none\"}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\nexport default TenantCapacity;\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","index","style","Fragment","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","width","height","itemSize","label","value","unit","variant","margin","textAlign","fontSize","color","fontWeight","whiteSpace","withStyles","theme","createStyles","redState","palette","error","main","float","marginRight","yellowState","warning","greenState","success","greyState","tenantItem","border","marginBottom","padding","backgroundColor","cursor","titleContainer","display","justifyContent","title","namespaceLabel","borderRadius","status","tenant","classes","dispatch","useAppDispatch","navigate","useNavigate","raw","capacity","used","localUse","tieredUse","capacity_raw","parts","niceBytes","split","capacity_usage","niceBytesInt","spaceVariants","tiers","length","map","itemTenant","size","name","internalUsage","filter","type","reduce","sum","tieredUsage","partsInternal","className","id","onClick","setTenantName","namespace","getTenantAsync","Grid","container","item","xs","sx","marginTop","TenantCapacity","totalCapacity","usedSpaceVariants","statusClass","health_status","healthStatusToClass","alignItems","pool_count","toString","paddingLeft","currentState","justifyItems","paddingTop","CredentialsPrompt","withSuspense","React","actionsTray","searchField","containerForHeader","tenantsList","sortByContainer","innerSort","maxWidth","flexDirection","sortByLabel","useState","isLoading","setIsLoading","filterTenants","setFilterTenants","records","setRecords","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","sortValue","setSortValue","filteredRecords","b","indexOf","sort","a","useEffect","api","then","res","resTenants","tenants","i","total_capacity","total_size","catch","err","setErrorSnackMessage","newServiceAccount","open","closeModal","entity","PageHeaderWrapper","middleComponent","SearchBox","placeholder","onChange","val","actions","TooltipWrapper","tooltip","icon","PageLayout","LinearProgress","SelectWrapper","e","target","options","VirtualizedList","alignContent","iconComponent","help","AButton","totalValue","sizeItems","bgColor","transitionDuration","overflow","sizeElement","itemPercentage","render","colors","BGColor","totalUsedSpace","acc","currValue","emptySpace","tiersList","standardTier","find","tier","standardTierColor","usedPercentage","plotValues","plotValuesForUsageBar","plotVal","itemName","position","right","top","zIndex","left","transform","isNaN","PieChart","Pie","data","cx","cy","dataKey","outerRadius","innerRadius","fill","isAnimationActive","stroke","entry","Cell"],"sourceRoot":""}