{"version":3,"file":"static/js/889.7aba45d8.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddReplicationModal.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BucketReplicationIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketReplicationRule, BulkReplicationResponse } from \"../types\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: () => any;\n  classes: any;\n  bucketName: string;\n\n  setReplicationRules: BucketReplicationRule[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    modalFormScrollable: {\n      ...modalStyleUtils.modalFormScrollable,\n      paddingRight: 10,\n    },\n  });\n\nconst AddReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n\n  setReplicationRules,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [metadataSync, setMetadataSync] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n\n  useEffect(() => {\n    if (setReplicationRules.length === 0) {\n      setPriority(\"1\");\n      return;\n    }\n\n    const greatestValue = setReplicationRules.reduce((prevAcc, currValue) => {\n      if (currValue.priority > prevAcc) {\n        return currValue.priority;\n      }\n      return prevAcc;\n    }, 0);\n\n    const nextPriority = greatestValue + 1;\n    setPriority(nextPriority.toString());\n  }, [setReplicationRules]);\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n      priority: parseInt(priority),\n      storageClass: targetStorageClass,\n      replicateMetadata: metadataSync,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = get(response, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            dispatch(\n              setModalErrorSnackMessage({\n                errorMessage: itemVal.errorString,\n                detailedError: \"\",\n              })\n            );\n            return;\n          }\n\n          closeModalAndRefresh();\n\n          return;\n        }\n        dispatch(\n          setModalErrorSnackMessage({\n            errorMessage: \"No changes applied\",\n            detailedError: \"\",\n          })\n        );\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Set Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddLoading(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"priority\"\n                name=\"priority\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.validity.valid) {\n                    setPriority(e.target.value);\n                  }\n                }}\n                label=\"Priority\"\n                value={priority}\n                pattern={\"[0-9]*\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetURL\"\n                name=\"targetURL\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetURL(e.target.value);\n                }}\n                placeholder=\"play.min.io\"\n                label=\"Target URL\"\n                value={targetURL}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                checked={useTLS}\n                id=\"useTLS\"\n                name=\"useTLS\"\n                label=\"Use TLS\"\n                onChange={(e) => {\n                  setUseTLS(e.target.checked);\n                }}\n                value=\"yes\"\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"accessKey\"\n                name=\"accessKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setAccessKey(e.target.value);\n                }}\n                label=\"Access Key\"\n                value={accessKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"secretKey\"\n                name=\"secretKey\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSecretKey(e.target.value);\n                }}\n                label=\"Secret Key\"\n                value={secretKey}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"targetBucket\"\n                name=\"targetBucket\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetBucket(e.target.value);\n                }}\n                label=\"Target Bucket\"\n                value={targetBucket}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"region\"\n                name=\"region\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setRegion(e.target.value);\n                }}\n                label=\"Region\"\n                value={region}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                id=\"replication_mode\"\n                name=\"replication_mode\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setReplicationMode(e.target.value as string);\n                }}\n                label=\"Replication Mode\"\n                value={replicationMode}\n                options={[\n                  { label: \"Asynchronous\", value: \"async\" },\n                  { label: \"Synchronous\", value: \"sync\" },\n                ]}\n              />\n            </Grid>\n\n            {replicationMode === \"async\" && (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <div className={classes.multiContainer}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"bandwidth_scalar\"\n                    name=\"bandwidth_scalar\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      if (e.target.validity.valid) {\n                        setBandwidthScalar(e.target.value as string);\n                      }\n                    }}\n                    label=\"Bandwidth\"\n                    value={bandwidthScalar}\n                    min=\"0\"\n                    pattern={\"[0-9]*\"}\n                    overlayObject={\n                      <InputUnitMenu\n                        id={\"quota_unit\"}\n                        onUnitChange={(newValue) => {\n                          setBandwidthUnit(newValue);\n                        }}\n                        unitSelected={bandwidthUnit}\n                        unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                        disabled={false}\n                      />\n                    }\n                  />\n                </div>\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"healthCheck\"\n                name=\"healthCheck\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setHealthCheck(e.target.value as string);\n                }}\n                label=\"Health Check Duration\"\n                value={healthCheck}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.spacerTop} ${classes.formFieldRow}`}\n            >\n              <InputBoxWrapper\n                id=\"storageClass\"\n                name=\"storageClass\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTargetStorageClass(e.target.value);\n                }}\n                placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n                label=\"Storage Class\"\n                value={targetStorageClass}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Object Filters\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    placeholder=\"prefix\"\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n            <Grid item xs={12}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Replication Options\n                </legend>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={metadataSync}\n                    id=\"metadatataSync\"\n                    name=\"metadatataSync\"\n                    label=\"Metadata Sync\"\n                    onChange={(e) => {\n                      setMetadataSync(e.target.checked);\n                    }}\n                    value={metadataSync}\n                    description={\"Metadata Sync\"}\n                  />\n                  <FormSwitchWrapper\n                    checked={repDeleteMarker}\n                    id=\"deleteMarker\"\n                    name=\"deleteMarker\"\n                    label=\"Delete Marker\"\n                    onChange={(e) => {\n                      setRepDeleteMarker(e.target.checked);\n                    }}\n                    value={repDeleteMarker}\n                    description={\"Replicate soft deletes\"}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    checked={repDelete}\n                    id=\"repDelete\"\n                    name=\"repDelete\"\n                    label=\"Deletes\"\n                    onChange={(e) => {\n                      setRepDelete(e.target.checked);\n                    }}\n                    value={repDelete}\n                    description={\"Replicate versioned deletes\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"submit\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddReplicationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n"],"names":["withStyles","theme","createStyles","multiContainer","display","alignItems","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","modalFormScrollable","paddingRight","open","closeModalAndRefresh","classes","bucketName","setReplicationRules","dispatch","useAppDispatch","useState","addLoading","setAddLoading","priority","setPriority","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","targetStorageClass","setTargetStorageClass","prefix","setPrefix","targetBucket","setTargetBucket","region","setRegion","useTLS","setUseTLS","repDeleteMarker","setRepDeleteMarker","repDelete","setRepDelete","metadataSync","setMetadataSync","tags","setTags","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","useEffect","length","greatestValue","reduce","prevAcc","currValue","toString","modalOpen","onClose","title","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","replicate","originBucket","destinationBucket","hc","parseInt","endURL","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","storageClass","replicateMetadata","api","then","response","states","get","itemVal","errorString","setModalErrorSnackMessage","errorMessage","detailedError","catch","err","addRecord","container","item","xs","className","formFieldRow","id","name","onChange","target","validity","valid","value","label","pattern","placeholder","checked","options","type","min","overlayObject","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","spacerTop","fieldGroup","descriptionText","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","modalButtonBar","variant","onClick","color","buttonTrigger","border","borderRadius","backgroundColor","fontSize","React","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","Fragment","undefined","event","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","map","unit","SelectStyled","root","height","lineHeight","marginTop","spacing","input","position","fontWeight","padding","borderColor","InputBase","fieldBasic","tooltipHelper","fieldContainer","flexFlow","tooltip","htmlFor","inputLabel","tooltipContainer","placement","fullWidth","option"],"sourceRoot":""}