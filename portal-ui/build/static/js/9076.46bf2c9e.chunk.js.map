{"version":3,"file":"static/js/9076.46bf2c9e.chunk.js","mappings":"+OA0FA,UA1DmB,SAAC,GAIK,IAHvBA,EAGsB,EAHtBA,2BACAC,EAEsB,EAFtBA,WACAC,EACsB,EADtBA,cAEMC,GAAWC,EAAAA,EAAAA,MAMjB,GAAyCC,EAAAA,EAAAA,IALpB,kBAAML,GAA2B,MACnC,SAACM,GAAD,OACjBH,GAASI,EAAAA,EAAAA,IAAqBD,OAGhC,eAAOE,EAAP,KAAsBC,EAAtB,KAEMC,EAAeC,aAAaC,QAAQ,iBAAmB,GAE7D,IAAKV,EACH,OAAO,KAET,IAAMW,EAAcX,EAAcY,KAAI,SAACC,GAAD,OACpC,0BACE,uBAAIA,KADIA,MAmBZ,OACE,SAAC,IAAD,CACEC,MAAK,qBAAgBd,EAAce,OAAS,EAAI,IAAM,IACtDC,YAAa,SACbC,OAAQlB,EACRmB,WAAW,SAAC,MAAD,IACXC,UAAWb,EACXc,UArBoB,WAAO,IAAD,YACXpB,GADW,IAC5B,2BAAgC,CAAC,IAAxBa,EAAuB,QAC1BA,IAASL,IACXH,EAAAA,EAAAA,IAAqB,CACnBgB,aAAc,yCACdC,cAAc,0CAAD,OAA4Cd,KAE3DV,GAA2B,IAE3BS,EAAgB,SAAD,wBAA2BgB,EAAAA,EAAAA,IAAgBV,MATlC,gCAsB1BW,QArCY,kBAAM1B,GAA2B,IAsC7C2B,qBACE,UAAC,IAAD,4DACiDzB,EAAce,OAAQ,IADvE,OAEOf,EAAce,OAAS,EAAI,KAAO,KACvC,uBAAIJ","sources":["screens/Console/Users/DeleteUser.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\n\ninterface IDeleteUserProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedUsers: string[] | null;\n}\n\nconst DeleteUser = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedUsers,\n}: IDeleteUserProps) => {\n  const dispatch = useDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const userLoggedIn = localStorage.getItem(\"userLoggedIn\") || \"\";\n\n  if (!selectedUsers) {\n    return null;\n  }\n  const renderUsers = selectedUsers.map((user) => (\n    <div key={user}>\n      <b>{user}</b>\n    </div>\n  ));\n\n  const onConfirmDelete = () => {\n    for (let user of selectedUsers) {\n      if (user === userLoggedIn) {\n        setErrorSnackMessage({\n          errorMessage: \"Cannot delete currently logged in user\",\n          detailedError: `Cannot delete currently logged in user ${userLoggedIn}`,\n        });\n        closeDeleteModalAndRefresh(true);\n      } else {\n        invokeDeleteApi(\"DELETE\", `/api/v1/user/${encodeURLString(user)}`);\n      }\n    }\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete User${selectedUsers.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedUsers.length}{\" \"}\n          user{selectedUsers.length > 1 ? \"s?\" : \"?\"}\n          <b>{renderUsers}</b>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteUser;\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedUsers","dispatch","useDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","userLoggedIn","localStorage","getItem","renderUsers","map","user","title","length","confirmText","isOpen","titleIcon","isLoading","onConfirm","errorMessage","detailedError","encodeURLString","onClose","confirmationContent"],"sourceRoot":""}