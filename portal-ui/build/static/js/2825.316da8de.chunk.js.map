{"version":3,"file":"static/js/2825.316da8de.chunk.js","mappings":"kTAwNMA,GAAYC,EAAAA,EAAAA,IAAQ,KAAM,CAC9BC,0BAAAA,EAAAA,KAGF,WAAeC,EAAAA,EAAAA,IApLA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kCACRC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,OA+KP,CAAkCT,GApKP,SAAC,GAMK,IAL/BU,EAK8B,EAL9BA,QACAC,EAI8B,EAJ9BA,KACAC,EAG8B,EAH9BA,WACAC,EAE8B,EAF9BA,qBACAX,EAC8B,EAD9BA,0BAEA,GAAoCY,EAAAA,EAAAA,WAAkB,GAAtD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,WAAkB,GAAxD,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA0CJ,EAAAA,EAAAA,UAAiB,cAA3D,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAA0CN,EAAAA,EAAAA,UAAiB,QAA3D,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAAkDR,EAAAA,EAAAA,UAAiB,GAAnE,eAAOS,EAAP,KAA0BC,EAA1B,KACA,GAA0BV,EAAAA,EAAAA,WAAkB,GAA5C,eAAOW,EAAP,KAAcC,EAAd,KAkDA,OA1BAC,EAAAA,EAAAA,YAAU,WACJC,OAAOC,MAAMN,IAAsBA,EAAoB,EACzDG,GAAS,GAGXA,GAAS,KACR,CAACH,KAEJI,EAAAA,EAAAA,YAAU,WACJV,GACFa,EAAAA,EAAAA,OACU,MADV,0BACoClB,EADpC,eAEGmB,MAAK,SAACC,GACLd,GAAe,GAGfE,EAAiBY,EAAIC,MACrBT,EAAqBQ,EAAIE,UACzBZ,EAAiBU,EAAIG,SAEtBC,OAAM,SAACC,GACNnB,GAAe,QAGpB,CAACD,EAAaL,KAGf,SAAC,IAAD,CACE0B,MAAM,8BACNC,UAAW5B,EACX6B,QAAS,WACP3B,KAJJ,SAOGI,GACC,SAAC,IAAD,CAAQwB,MAAO,CAAEC,MAAO,GAAIC,OAAQ,OAEpC,iBACEC,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,GACIA,EA9DfC,iBACFjC,IAGJC,GAAc,GACdc,EAAAA,EAAAA,OACU,MADV,0BACoClB,EADpC,cAC4D,CACxDqB,KAAMd,EACNgB,KAAMd,EACNa,SAAUX,IAEXQ,MAAK,WACJf,GAAc,GACdH,OAEDuB,OAAM,SAACC,GACNrB,GAAc,GACdd,EAA0BmC,QAyC1B,UAOE,UAAC,KAAD,CAAMY,WAAS,EAAf,WACE,UAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAW1C,EAAQ2C,oBAAtC,WACE,SAAC,KAAD,CAAMH,MAAI,EAACC,GAAI,GAAIC,UAAW1C,EAAQ4C,aAAtC,UACE,SAAC,IAAD,CACEC,iBAAkBpC,EAClBqC,GAAG,iBACHC,KAAK,iBACLC,MAAM,iBACNC,SAAU,SAACZ,GACT3B,EAAiB2B,EAAEa,OAAOC,QAE5BC,gBAAiB,CACf,CAAED,MAAO,aAAcH,MAAO,cAC9B,CAAEG,MAAO,aAAcH,MAAO,oBAIpC,SAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAIC,UAAW1C,EAAQ4C,aAAtC,UACE,SAAC,IAAD,CACEC,iBAAkBlC,EAClBmC,GAAG,iBACHC,KAAK,iBACLC,MAAM,iBACNC,SAAU,SAACZ,GACTzB,EAAiByB,EAAEa,OAAOC,QAE5BC,gBAAiB,CACf,CAAED,MAAO,OAAQH,MAAO,QACxB,CAAEG,MAAO,QAASH,MAAO,eAI/B,SAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAIC,UAAW1C,EAAQ4C,aAAtC,UACE,SAAC,IAAD,CACES,KAAK,SACLP,GAAG,qBACHC,KAAK,qBACLE,SAAU,SAACZ,GACTvB,EAAqBuB,EAAEa,OAAOI,gBAEhCN,MAAM,qBACNG,MAAOI,OAAO1C,GACd2C,UAAQ,EACRC,IAAI,YAIV,UAAC,KAAD,CAAMjB,MAAI,EAACC,GAAI,GAAIC,UAAW1C,EAAQ0D,eAAtC,WACE,SAAC,IAAD,CACEL,KAAK,SACLM,QAAQ,WACRC,MAAM,UACNC,SAAUxD,EACVyD,QAAS,WACP3D,KANJ,qBAWA,SAAC,IAAD,CACEkD,KAAK,SACLM,QAAQ,YACRC,MAAM,UACNC,SAAUxD,IAAeU,EAJ3B,oBASDV,IACC,SAAC,KAAD,CAAMmC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,kB,yMCpIVsB,GAAcC,EAAAA,EAAAA,IAAW,QAC7BC,KAAM,CACJ,UAAW,CACTC,gBAAiB,iBAGlBC,EAAAA,KAGCC,EAAc,SAACC,GACnB,IAAMrE,EAAU+D,IAEhB,OACE,SAAC,KAAD,QACErB,UAAW1C,EAAQiE,KACnBK,eAAa,EACbV,MAAM,UACNW,aAAa,iBAAM7B,UAAW1C,EAAQwE,oBACtCC,MAAM,iBAAM/B,UAAW1C,EAAQ0E,uBAC3BL,KAgEV,KAAe5E,EAAAA,EAAAA,IA9GA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0BACRgF,EAAAA,IACAC,EAAAA,IAFO,IAGVC,YAAa,CACX,iBAAkB,CAChB,+BAAgC,CAC9BjB,MAAO,YAGX,eAAgB,CACdkB,YAAa,GAEf,+BAAgC,CAC9BC,SAAU,GACVnB,MAAO,YAGXoB,cAAe,CACb,+BAAgC,CAC9BD,SAAU,GACVnB,MAAO,UACPqB,WAAY,WAwFpB,EA3DkC,SAAC,GAWX,IAAD,IAVrB7B,gBAAAA,OAUqB,MAVH,GAUG,EATrBP,EASqB,EATrBA,iBACAG,EAQqB,EARrBA,MACAF,EAOqB,EAPrBA,GACAC,EAMqB,EANrBA,KACAE,EAKqB,EALrBA,SAKqB,IAJrBiC,QAAAA,OAIqB,MAJX,GAIW,MAHrBC,eAAAA,OAGqB,SAFrBnF,EAEqB,EAFrBA,QAEqB,IADrBoF,gBAAAA,OACqB,SACrB,OACE,UAAC,KAAD,CAAM7C,WAAS,EAAC8C,WAAY,SAA5B,WACE,SAAC,KAAD,CAAM7C,MAAI,EAACC,IAAE,EAAb,UACE,UAAC,IAAD,CAAY6C,QAASxC,EAAIJ,UAAW1C,EAAQuF,WAA5C,WACE,0BAAOvC,IACM,KAAZkC,IACC,gBAAKxC,UAAW1C,EAAQwF,iBAAxB,UACE,SAAC,IAAD,CAAS5D,MAAOsD,EAASO,UAAU,YAAnC,UACE,0BACE,SAAC,IAAD,gBAOZ,SAAC,KAAD,CAAMjD,MAAI,EAACC,IAAE,EAACC,UAAW1C,EAAQ0F,mBAAjC,UACE,SAAC,IAAD,CACE,aAAY5C,EACZA,GAAIA,EACJC,KAAMA,EACNI,MAAON,EACPI,SAAUA,EACV0C,KAAMP,EACNrD,MAAO,CAAE6D,QAAS,QAASC,UAAW,SAPxC,SASGzC,EAAgB0C,KAAI,SAACC,GACpB,OACE,SAAC,IAAD,CAEE5C,MAAO4C,EAAe5C,MACtB6C,SAAS,SAAC5B,EAAD,IACTpB,MAAO+C,EAAe/C,MACtBa,SAAUsB,EACVzC,WAAWuD,EAAAA,EAAAA,GAAKjG,EAAQ6E,aAAT,UACZ7E,EAAQgF,cACPe,EAAe5C,QAAUN,KAR/B,aACaE,EADb,YACqBgD,EAAe5C,sB,yMCsC5C7D,GAAYC,EAAAA,EAAAA,KAJD,SAAC2G,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClCC,qBAAAA,EAAAA,KAGF,KAAe7G,EAAAA,EAAAA,IAvIA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACR4G,EAAAA,IADO,IAEVC,QAAS,CACPC,QAAS,GACTC,cAAe,GAEjBC,iBAAkB,CAChB3E,MAAO,OACP4E,SAAU,MAETC,EAAAA,OA4HP,CAAkCvH,GAzHb,SAAC,GAWF,IAVlBwC,EAUiB,EAVjBA,QACAD,EASiB,EATjBA,UACAD,EAQiB,EARjBA,MACAkF,EAOiB,EAPjBA,SACA9G,EAMiB,EANjBA,QAMiB,IALjB+G,UAAAA,OAKiB,SAJjBZ,EAIiB,EAJjBA,kBACAa,EAGiB,EAHjBA,iBACAV,EAEiB,EAFjBA,qBAEiB,IADjBW,UAAAA,OACiB,MADL,KACK,EACjB,GAAwC7G,EAAAA,EAAAA,WAAkB,GAA1D,eAAO8G,EAAP,KAAqBC,EAArB,MAEAlG,EAAAA,EAAAA,YAAU,WACRqF,EAAqB,MACpB,CAACA,KAEJrF,EAAAA,EAAAA,YAAU,WACR,GAAIkF,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBiB,QAEpB,YADAD,GAAgB,GAIa,UAA3BhB,EAAkB9C,MACpB8D,GAAgB,MAGnB,CAAChB,IAEJ,IAKMkB,EAAaN,EACf,CACE/G,QAAS,CACPsH,MAAOtH,EAAQ2G,mBAGnB,CAAEC,SAAU,KAAeW,WAAW,GAEtCH,EAAU,GAYd,OAVIjB,IACFiB,EAAUjB,EAAkBqB,kBAEa,KAAvCrB,EAAkBqB,kBAClBrB,EAAkBqB,iBAAiBC,OAAS,KAE5CL,EAAUjB,EAAkBiB,WAK9B,UAAC,KAAD,gBACEnH,KAAM4B,EACN7B,QAASA,GACLqH,GAHN,IAIEK,OAAQ,QACR5F,QAAS,SAAC6F,EAAOC,GACA,kBAAXA,GACF9F,KAGJY,UAAW1C,EAAQiE,KAVrB,WAYE,UAAC,IAAD,CAAavB,UAAW1C,EAAQ4B,MAAhC,WACE,iBAAKc,UAAW1C,EAAQ6H,UAAxB,UACGZ,EADH,IACerF,MAEf,gBAAKc,UAAW1C,EAAQ8H,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXhF,GAAI,QACJJ,UAAW1C,EAAQ+H,YACnBjE,QAAShC,EACTwC,eAAa,EACb0D,KAAK,QANP,UAQE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAWC,SAAS,KACpB,SAAC,IAAD,CACEhI,KAAMiH,EACNxE,UAAW1C,EAAQkI,cACnBpG,QAAS,WA3DbqF,GAAgB,GAChBb,EAAqB,KA6DjBc,QAASA,EACTe,aAAc,CACZzF,UAAU,GAAD,OAAK1C,EAAQoI,SAAb,YACPjC,GAAgD,UAA3BA,EAAkB9C,KACnCrD,EAAQqI,cACR,KAGRC,iBACEnC,GAAgD,UAA3BA,EAAkB9C,KAAmB,IAAQ,OAGtE,SAAC,IAAD,CAAeX,UAAWsE,EAAmB,GAAKhH,EAAQwG,QAA1D,SACGM,a,0BCrKLyB,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQ,EAAUG","sources":["screens/Console/Buckets/BucketDetails/SetRetentionConfig.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  ErrorResponseHandler,\n  IRetentionConfig,\n} from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Loader from \"../../Common/Loader/Loader\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface ISetRetentionConfigProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst SetRetentionConfig = ({\n  classes,\n  open,\n  bucketName,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: ISetRetentionConfigProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingForm, setLoadingForm] = useState<boolean>(true);\n  const [retentionMode, setRetentionMode] = useState<string>(\"compliance\");\n  const [retentionUnit, setRetentionUnit] = useState<string>(\"days\");\n  const [retentionValidity, setRetentionValidity] = useState<number>(1);\n  const [valid, setValid] = useState<boolean>(false);\n\n  const setRetention = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/retention`, {\n        mode: retentionMode,\n        unit: retentionUnit,\n        validity: retentionValidity,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (Number.isNaN(retentionValidity) || retentionValidity < 1) {\n      setValid(false);\n      return;\n    }\n    setValid(true);\n  }, [retentionValidity]);\n\n  useEffect(() => {\n    if (loadingForm) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/retention`)\n        .then((res: IRetentionConfig) => {\n          setLoadingForm(false);\n\n          // We set default values\n          setRetentionMode(res.mode);\n          setRetentionValidity(res.validity);\n          setRetentionUnit(res.unit);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingForm(false);\n        });\n    }\n  }, [loadingForm, bucketName]);\n\n  return (\n    <ModalWrapper\n      title=\"Set Retention Configuration\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n    >\n      {loadingForm ? (\n        <Loader style={{ width: 16, height: 16 }} />\n      ) : (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            setRetention(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.modalFormScrollable}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionMode}\n                  id=\"retention_mode\"\n                  name=\"retention_mode\"\n                  label=\"Retention Mode\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionMode(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"compliance\", label: \"Compliance\" },\n                    { value: \"governance\", label: \"Governance\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionUnit}\n                  id=\"retention_unit\"\n                  name=\"retention_unit\"\n                  label=\"Retention Unit\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionUnit(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"days\", label: \"Days\" },\n                    { value: \"years\", label: \"Years\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"retention_validity\"\n                  name=\"retention_validity\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setRetentionValidity(e.target.valueAsNumber);\n                  }}\n                  label=\"Retention Validity\"\n                  value={String(retentionValidity)}\n                  required\n                  min=\"1\"\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh();\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !valid}\n              >\n                Set\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SetRetentionConfig));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"names":["connector","connect","setModalErrorSnackMessage","withStyles","theme","createStyles","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","classes","open","bucketName","closeModalAndRefresh","useState","addLoading","setAddLoading","loadingForm","setLoadingForm","retentionMode","setRetentionMode","retentionUnit","setRetentionUnit","retentionValidity","setRetentionValidity","valid","setValid","useEffect","Number","isNaN","api","then","res","mode","validity","unit","catch","err","title","modalOpen","onClose","style","width","height","noValidate","autoComplete","onSubmit","e","preventDefault","container","item","xs","className","modalFormScrollable","formFieldRow","currentSelection","id","name","label","onChange","target","value","selectorOptions","type","valueAsNumber","String","required","min","modalButtonBar","variant","color","disabled","onClick","radioStyles","makeStyles","root","backgroundColor","radioIcons","RadioButton","props","disableRipple","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","fieldBasic","tooltipHelper","optionLabel","marginRight","fontSize","checkedOption","fontWeight","tooltip","disableOptions","displayInColumn","alignItems","htmlFor","inputLabel","tooltipContainer","placement","radioOptionsLayout","row","display","textAlign","map","selectorOption","control","clsx","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","event","reason","titleText","closeContainer","closeButton","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}