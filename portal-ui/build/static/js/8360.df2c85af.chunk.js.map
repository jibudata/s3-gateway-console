{"version":3,"file":"static/js/8360.df2c85af.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/EditSiteEndPoint.tsx","screens/Console/Configurations/SiteReplication/ReplicationSites.tsx","screens/Console/Configurations/SiteReplication/SiteReplication.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Box, Button, EditIcon, Grid, InputBox, InputLabel } from \"mds\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\nconst SiteEndpointContainer = styled.div(({ theme }) => ({\n  \"& .alertText\": {\n    color: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n  },\n}));\n\nconst EditSiteEndPoint = ({\n  editSite = {},\n  onClose,\n  onComplete,\n}: {\n  editSite: any;\n  onClose: () => void;\n  onComplete: () => void;\n}) => {\n  const dispatch = useAppDispatch();\n  const [editEndPointName, setEditEndPointName] = useState<string>(\"\");\n\n  const [isEditing, invokeSiteEditApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          }),\n        );\n      }\n      onComplete();\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n      onComplete();\n    },\n  );\n\n  const updatePeerSite = () => {\n    invokeSiteEditApi(\"PUT\", `api/v1/admin/site-replication`, {\n      endpoint: editEndPointName,\n      name: editSite.name,\n      deploymentId: editSite.deploymentID, // readonly\n    });\n  };\n\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(editEndPointName);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n\n  return (\n    <ModalWrapper\n      title={`Edit Replication Endpoint `}\n      modalOpen={true}\n      titleIcon={<EditIcon />}\n      onClose={onClose}\n    >\n      <SiteEndpointContainer>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginBottom: \"15px\",\n          }}\n        >\n          <Box sx={{ marginBottom: \"10px\" }}>\n            <strong>Site:</strong> {\"  \"}\n            {editSite.name}\n          </Box>\n          <Box sx={{ marginBottom: \"10px\" }}>\n            <strong>Current Endpoint:</strong> {\"  \"}\n            {editSite.endpoint}\n          </Box>\n        </Box>\n\n        <Grid item xs={12}>\n          <InputLabel sx={{ marginBottom: 5 }}>New Endpoint:</InputLabel>\n          <InputBox\n            id=\"edit-rep-peer-endpoint\"\n            name=\"edit-rep-peer-endpoint\"\n            placeholder={\"https://dr.minio-storage:9000\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setEditEndPointName(event.target.value);\n            }}\n            label=\"\"\n            value={editEndPointName}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            marginBottom: 15,\n            fontStyle: \"italic\",\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: \"12px\",\n            marginTop: 2,\n          }}\n        >\n          <strong>Note:</strong>&nbsp;\n          <span className={\"alertText\"}>\n            Access Key and Secret Key should be same on the new site/endpoint.\n          </span>\n        </Grid>\n      </SiteEndpointContainer>\n\n      <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n        <Button\n          id={\"close\"}\n          type=\"button\"\n          variant=\"regular\"\n          onClick={onClose}\n          label={\"Cancel\"}\n        />\n        <Button\n          id={\"update\"}\n          type=\"button\"\n          variant=\"callAction\"\n          disabled={isEditing || !isValidEndPointUrl}\n          onClick={updatePeerSite}\n          label={\"Update\"}\n        />\n      </Grid>\n    </ModalWrapper>\n  );\n};\nexport default EditSiteEndPoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  CircleIcon,\n  ConfirmDeleteIcon,\n  DataTable,\n  IColumns,\n  ItemActions,\n  Tooltip,\n} from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { ReplicationSite } from \"./SiteReplication\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport EditSiteEndPoint from \"./EditSiteEndPoint\";\n\nconst EndpointRender = styled.div(({ theme }) => ({\n  display: \"flex\",\n  gap: 10,\n  \"& .currentIndicator\": {\n    \"& .min-icon\": {\n      width: 12,\n      height: 12,\n      fill: get(theme, \"signalColors.good\", \"#4CCB92\"),\n    },\n  },\n  \"& .endpointName\": {\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\nconst ReplicationSites = ({\n  sites,\n  onDeleteSite,\n  onRefresh,\n}: {\n  sites: ReplicationSite[];\n  onDeleteSite: (isAll: boolean, sites: string[]) => void;\n  onRefresh: () => void;\n}) => {\n  const [deleteSiteKey, setIsDeleteSiteKey] = useState<string>(\"\");\n  const [editSite, setEditSite] = useState<any>(null);\n\n  const replicationColumns: IColumns[] = [\n    { label: \"Site Name\", elementKey: \"name\" },\n    {\n      label: \"Endpoint\",\n      elementKey: \"endpoint\",\n      renderFullObject: true,\n      renderFunction: (siteInfo) => (\n        <EndpointRender>\n          {siteInfo.isCurrent ? (\n            <Tooltip tooltip={\"This site/cluster\"} placement=\"top\">\n              <Box className={\"currentIndicator\"}>\n                <CircleIcon />\n              </Box>\n            </Tooltip>\n          ) : null}\n          <Tooltip tooltip={siteInfo.endpoint}>\n            <Box className={\"endpointName\"}>{siteInfo.endpoint}</Box>\n          </Tooltip>\n        </EndpointRender>\n      ),\n    },\n  ];\n\n  const actions: ItemActions[] = [\n    {\n      type: \"edit\",\n      onClick: (valueToSend) => setEditSite(valueToSend),\n      tooltip: \"Edit Endpoint\",\n    },\n    {\n      type: \"delete\",\n      onClick: (valueToSend) => setIsDeleteSiteKey(valueToSend.name),\n      tooltip: \"Delete Site\",\n    },\n  ];\n\n  return (\n    <Fragment>\n      <DataTable\n        columns={replicationColumns}\n        records={sites}\n        itemActions={actions}\n        idField={\"name\"}\n        customPaperHeight={\"calc(100vh - 660px)\"}\n        sx={{ marginBottom: 20 }}\n      />\n\n      {deleteSiteKey !== \"\" && (\n        <ConfirmDialog\n          title={`Delete Replication Site`}\n          confirmText={\"Delete\"}\n          isOpen={deleteSiteKey !== \"\"}\n          titleIcon={<ConfirmDeleteIcon />}\n          isLoading={false}\n          onConfirm={() => {\n            onDeleteSite(false, [deleteSiteKey]);\n          }}\n          onClose={() => {\n            setIsDeleteSiteKey(\"\");\n          }}\n          confirmationContent={\n            <Fragment>\n              Are you sure you want to remove the replication site:{\" \"}\n              <strong>{deleteSiteKey}</strong>?\n            </Fragment>\n          }\n        />\n      )}\n\n      {editSite !== null && (\n        <EditSiteEndPoint\n          onComplete={() => {\n            setEditSite(null);\n            onRefresh();\n          }}\n          editSite={editSite}\n          onClose={() => {\n            setEditSite(null);\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ReplicationSites;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  ActionLink,\n  AddIcon,\n  Box,\n  Button,\n  ClustersIcon,\n  ConfirmDeleteIcon,\n  Grid,\n  HelpBox,\n  Loader,\n  PageLayout,\n  RecoverIcon,\n  SectionTitle,\n  TrashIcon,\n} from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ReplicationSites from \"./ReplicationSites\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nexport type ReplicationSite = {\n  deploymentID: string;\n  endpoint: string;\n  name: string;\n  isCurrent?: boolean;\n};\n\nconst SiteReplication = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [sites, setSites] = useState([]);\n\n  const [deleteAll, setIsDeleteAll] = useState(false);\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n        };\n        siteList.splice(foundIdx, 1, curSite);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n      setSites(siteList);\n    },\n    (err: any) => {\n      setSites([]);\n    },\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  const [isRemoving, invokeSiteRemoveApi] = useApi(\n    (res: any) => {\n      setIsDeleteAll(false);\n      dispatch(setSnackBarMessage(`Successfully deleted.`));\n      getSites();\n    },\n    (err: ErrorResponseHandler) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  const removeSites = (isAll: boolean = false, delSites: string[] = []) => {\n    invokeSiteRemoveApi(\"DELETE\", `api/v1/admin/site-replication`, {\n      all: isAll,\n      sites: delSites,\n    });\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const hasSites = sites?.length;\n\n  useEffect(() => {\n    dispatch(setHelpName(\"site-replication\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Site Replication\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <SectionTitle\n          separator={!!hasSites}\n          sx={{ marginBottom: 15 }}\n          actions={\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                gap: 8,\n              }}\n            >\n              {hasSites ? (\n                <Fragment>\n                  <TooltipWrapper tooltip={\"Delete All\"}>\n                    <Button\n                      id={\"delete-all\"}\n                      label={\"Delete All\"}\n                      variant=\"secondary\"\n                      disabled={isRemoving}\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setIsDeleteAll(true);\n                      }}\n                    />\n                  </TooltipWrapper>\n                  <TooltipWrapper tooltip={\"Replication Status\"}>\n                    <Button\n                      id={\"replication-status\"}\n                      label={\"Replication Status\"}\n                      variant=\"regular\"\n                      icon={<RecoverIcon />}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        navigate(IAM_PAGES.SITE_REPLICATION_STATUS);\n                      }}\n                    />\n                  </TooltipWrapper>\n                </Fragment>\n              ) : null}\n              <TooltipWrapper tooltip={\"Add Replication Sites\"}>\n                <Button\n                  id={\"add-replication-site\"}\n                  label={\"Add Sites\"}\n                  variant=\"callAction\"\n                  disabled={isRemoving}\n                  icon={<AddIcon />}\n                  onClick={() => {\n                    navigate(IAM_PAGES.SITE_REPLICATION_ADD);\n                  }}\n                />\n              </TooltipWrapper>\n            </Box>\n          }\n        >\n          {hasSites ? \"List of Replicated Sites\" : \"\"}\n        </SectionTitle>\n        {hasSites ? (\n          <ReplicationSites\n            sites={sites}\n            onDeleteSite={removeSites}\n            onRefresh={getSites}\n          />\n        ) : null}\n        {isSiteInfoLoading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"calc( 100vh - 450px )\",\n            }}\n          >\n            <Loader style={{ width: 16, height: 16 }} />\n          </Box>\n        ) : null}\n        {!hasSites && !isSiteInfoLoading ? (\n          <Grid container>\n            <Grid item xs={8}>\n              <HelpBox\n                title={\"Site Replication\"}\n                iconComponent={<ClustersIcon />}\n                help={\n                  <Fragment>\n                    This feature allows multiple independent MinIO sites (or\n                    clusters) that are using the same external IDentity Provider\n                    (IDP) to be configured as replicas.\n                    <br />\n                    <br />\n                    To get started,{\" \"}\n                    <ActionLink\n                      isLoading={false}\n                      label={\"\"}\n                      onClick={() => {\n                        navigate(IAM_PAGES.SITE_REPLICATION_ADD);\n                      }}\n                    >\n                      Add a Replication Site\n                    </ActionLink>\n                    .\n                    <br />\n                    You can learn more at our{\" \"}\n                    <a\n                      href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/multi-site-replication.html?ref=con\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      documentation\n                    </a>\n                    .\n                  </Fragment>\n                }\n              />\n            </Grid>\n          </Grid>\n        ) : null}\n        {hasSites && !isSiteInfoLoading ? (\n          <HelpBox\n            title={\"Site Replication\"}\n            iconComponent={<ClustersIcon />}\n            help={\n              <Fragment>\n                This feature allows multiple independent MinIO sites (or\n                clusters) that are using the same external IDentity Provider\n                (IDP) to be configured as replicas. In this situation the set of\n                replica sites are referred to as peer sites or just sites.\n                <br />\n                <br />\n                Initially, only one of the sites added for replication may have\n                data. After site-replication is successfully configured, this\n                data is replicated to the other (initially empty) sites.\n                Subsequently, objects may be written to any of the sites, and\n                they will be replicated to all other sites.\n                <br />\n                <br />\n                All sites must have the same deployment credentials (i.e.\n                MINIO_ROOT_USER, MINIO_ROOT_PASSWORD).\n                <br />\n                <br />\n                All sites must be using the same external IDP(s) if any.\n                <br />\n                <br />\n                For SSE-S3 or SSE-KMS encryption via KMS, all sites must have\n                access to a central KMS deployment server.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://github.com/minio/minio/tree/master/docs/site-replication?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        ) : null}\n\n        {deleteAll ? (\n          <ConfirmDialog\n            title={`Delete All`}\n            confirmText={\"Delete\"}\n            isOpen={true}\n            titleIcon={<ConfirmDeleteIcon />}\n            isLoading={false}\n            onConfirm={() => {\n              const siteNames = sites.map((s: any) => s.name);\n              removeSites(true, siteNames);\n            }}\n            onClose={() => {\n              setIsDeleteAll(false);\n            }}\n            confirmationContent={\n              <Fragment>\n                Are you sure you want to remove all the replication sites?.\n              </Fragment>\n            }\n          />\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default SiteReplication;\n"],"names":["SiteEndpointContainer","styled","div","_ref","theme","color","get","_ref2","_ref2$editSite","editSite","onClose","onComplete","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","editEndPointName","setEditEndPointName","_useApi","useApi","res","success","setSnackBarMessage","status","setErrorSnackMessage","errorMessage","detailedError","err","_useApi2","isEditing","invokeSiteEditApi","isValidEndPointUrl","URL","_jsxs","ModalWrapper","title","modalOpen","titleIcon","_jsx","EditIcon","children","Box","sx","display","flexFlow","marginBottom","name","endpoint","Grid","item","xs","InputLabel","InputBox","id","placeholder","onChange","event","target","value","label","fontStyle","alignItems","fontSize","marginTop","className","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","disabled","deploymentId","deploymentID","EndpointRender","gap","width","height","fill","overflow","textOverflow","whiteSpace","sites","onDeleteSite","onRefresh","deleteSiteKey","setIsDeleteSiteKey","_useState3","_useState4","setEditSite","replicationColumns","elementKey","renderFullObject","renderFunction","siteInfo","isCurrent","Tooltip","tooltip","placement","CircleIcon","actions","valueToSend","Fragment","DataTable","columns","records","itemActions","idField","customPaperHeight","ConfirmDialog","confirmText","isOpen","ConfirmDeleteIcon","isLoading","onConfirm","confirmationContent","EditSiteEndPoint","navigate","useNavigate","setSites","deleteAll","setIsDeleteAll","siteList","curSiteName","foundIdx","findIndex","el","curSite","_objectSpread","splice","sort","x","y","isSiteInfoLoading","invokeSiteInfoApi","getSites","_useApi3","_useApi4","isRemoving","invokeSiteRemoveApi","removeSites","all","arguments","length","undefined","useEffect","hasSites","setHelpName","PageHeaderWrapper","HelpMenu","PageLayout","SectionTitle","separator","justifyContent","TooltipWrapper","icon","TrashIcon","RecoverIcon","e","preventDefault","IAM_PAGES","SITE_REPLICATION_STATUS","AddIcon","SITE_REPLICATION_ADD","ReplicationSites","Loader","style","container","HelpBox","iconComponent","ClustersIcon","help","ActionLink","href","rel","siteNames","map","s"],"sourceRoot":""}