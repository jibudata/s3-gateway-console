{"version":3,"sources":["screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","screens/Console/Tenants/TenantDetails/pods/PodLogs.tsx","screens/Console/Tenants/TenantDetails/pods/PodEvents.tsx","screens/Console/Tenants/TenantDetails/pods/PodDetails.tsx"],"names":["unSelected","selected","CloudIcon","active","xmlns","width","height","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","withStyles","createStyles","spacing","margin","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","sendOnlyId","disabled","classes","label","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","size","className","e","stopPropagation","preventDefault","Tooltip","title","isString","borderColor","rowText","fontWeight","fontSize","borderWidth","transitionDuration","padding","paddingRight","paddingLeft","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","dialogContainer","paper","display","overflow","flexDirection","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","color","defaultPaperHeight","allTableSettings","minTableHeader","rowUnselected","rowSelected","paginatorContainer","justifyContent","checkBoxHeader","textAlign","paddingBottom","actionsContainer","paginatorComponent","borderBottom","checkBoxRow","loadingBox","paddingTop","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","checkAllWrapper","marginTop","outline","userSelect","fontStyle","alignItems","textTransform","left","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","item","xs","Paper","container","style","LinearProgress","Popover","id","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","checked","onChange","target","name","value","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","inputProps","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","theme","fieldBasic","tooltipHelper","fieldContainer","marginBottom","flexBasis","tooltip","Fragment","htmlFor","noMinWidthLabel","tooltipContainer","placement","getFormHelperTextUtilityClasses","slot","generateUtilityClass","formHelperTextClasses","generateUtilityClasses","_excluded","FormHelperTextRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","contained","filled","_extends","palette","text","secondary","typography","caption","marginRight","marginLeft","error","main","FormHelperText","inProps","useThemeProps","children","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","focused","required","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","dangerouslySetInnerHTML","__html","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","TextField","autoComplete","autoFocus","defaultValue","FormHelperTextProps","fullWidth","helperText","InputLabelProps","InputProps","inputRef","maxRows","minRows","multiline","onBlur","onFocus","placeholder","rows","select","SelectProps","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","Select","labelId","input","getInputAdornmentUtilityClass","inputAdornmentClasses","InputAdornmentRoot","disablePointerEvents","whiteSpace","positionStart","hiddenLabel","pointerEvents","InputAdornment","disableTypography","variantProp","FormControlContext","Provider","connector","connect","loadingTenant","tenants","tenantDetails","setErrorSnackMessage","logList","background","buttonsStyles","searchField","actionsTray","logerror","logerror_tab","ansidefault","highlight","containerForHeader","tenant","namespace","podName","propLoading","setHighlight","logLines","setLogLines","loading","setLoading","useEffect","renderLines","m","i","logMessage","substr","replace","highlightedLine","toLowerCase","startsWith","tab","renderLog","api","invoke","then","res","split","catch","err","val","disableUnderline","startAdornment","SearchIcon","hrClass","setEvent","currentTime","Date","now","seen","niceDays","last_seen","TableWrapper","breadcrumLink","textDecoration","match","curTab","setCurTab","tenantNamespace","params","tenantName","a11yProps","sectionTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab"],"mappings":"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","file":"static/js/110.4160d1cf.chunk.js","sourcesContent":["export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst rowText = {\n  fontWeight: 400,\n  fontSize: 14,\n  borderColor: borderColor,\n  borderWidth: \"0.5px\",\n  height: 40,\n  transitionDuration: \"0.3s\",\n  padding: \"initial\",\n  paddingRight: 6,\n  paddingLeft: 6,\n};\n\nconst styles = () =>\n  createStyles({\n    dialogContainer: {\n      padding: \"12px 26px 22px\",\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    allTableSettings: {\n      \"& .MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: \"initial\",\n      },\n      \"& .MuiTableCell-body.MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: 6,\n      },\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: 700,\n          fontSize: 14,\n          borderColor: \"#39393980\",\n          borderWidth: \"0.5px\",\n          padding: \"6px 0 10px\",\n        },\n      },\n    },\n    rowUnselected: {\n      ...rowText,\n      color: \"#393939\",\n    },\n    rowSelected: {\n      ...rowText,\n      color: \"#081C42\",\n      fontWeight: 600,\n    },\n    paginatorContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"5px 38px\",\n    },\n    checkBoxHeader: {\n      width: 50,\n      textAlign: \"left\",\n      paddingRight: 10,\n      \"&.MuiTableCell-paddingCheckbox\": {\n        paddingBottom: 4,\n        paddingLeft: 0,\n      },\n    },\n    actionsContainer: {\n      width: 150,\n      borderColor: borderColor,\n    },\n    paginatorComponent: {\n      borderBottom: 0,\n    },\n    checkBoxRow: {\n      borderColor: borderColor,\n      padding: \"0 10px 0 0\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: theme.palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: theme.palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n\n  const {\n    children,\n    className,\n    component = 'p'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ?\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    _jsx(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    }) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormHelperText;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { refType } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { TextField } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport api from \"../../../../../common/api\";\nimport {\n  actionsTray,\n  buttonsStyles,\n  containerForHeader,\n  searchField,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { AppState } from \"../../../../../store\";\nimport SearchIcon from \"../../../../../icons/SearchIcon\";\n\ninterface IPodLogsProps {\n  classes: any;\n  tenant: string;\n  namespace: string;\n  podName: string;\n  propLoading: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    logList: {\n      background: \"#fff\",\n      minHeight: 400,\n      height: \"calc(100vh - 304px)\",\n      overflow: \"auto\",\n      fontSize: 13,\n      padding: \"25px 45px 0\",\n      border: \"1px solid #EAEDEE\",\n      borderRadius: 4,\n    },\n    ...buttonsStyles,\n    ...searchField,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"15px 0 0\",\n    },\n    logerror: {\n      color: \"#A52A2A\",\n    },\n    logerror_tab: {\n      color: \"#A52A2A\",\n      paddingLeft: 25,\n    },\n    ansidefault: {\n      color: \"#000\",\n    },\n    highlight: {\n      \"& span\": {\n        backgroundColor: \"#082F5238\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PodLogs = ({\n  classes,\n  tenant,\n  namespace,\n  podName,\n  propLoading,\n  setErrorSnackMessage,\n  loadingTenant,\n}: IPodLogsProps) => {\n  const [highlight, setHighlight] = useState<string>(\"\");\n  const [logLines, setLogLines] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  const renderLog = (logMessage: string, index: number) => {\n    // remove any non ascii characters, exclude any control codes\n    logMessage = logMessage.replace(/([^\\x20-\\x7F])/g, \"\");\n\n    // regex for terminal colors like e.g. `[31;4m `\n    const tColorRegex = /((\\[[0-9;]+m))/g;\n\n    // get substring if there was a match for to split what\n    // is going to be colored and what not, here we add color\n    // only to the first match.\n    let substr = logMessage.replace(tColorRegex, \"\");\n\n    // in case highlight is set, we select the line that contains the requested string\n    let highlightedLine =\n      highlight !== \"\"\n        ? logMessage.toLowerCase().includes(highlight.toLowerCase())\n        : false;\n\n    // if starts with multiple spaces add padding\n    if (substr.startsWith(\"   \")) {\n      return (\n        <div\n          key={index}\n          className={`${highlightedLine ? classes.highlight : \"\"}`}\n        >\n          <span className={classes.tab}>{substr}</span>\n        </div>\n      );\n    } else {\n      // for all remaining set default class\n      return (\n        <div\n          key={index}\n          className={`${highlightedLine ? classes.highlight : \"\"}`}\n        >\n          <span className={classes.ansidefault}>{substr}</span>\n        </div>\n      );\n    }\n  };\n\n  const renderLines = logLines.map((m, i) => {\n    return renderLog(m, i);\n  });\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pods/${podName}`\n        )\n        .then((res: string) => {\n          setLogLines(res.split(\"\\n\"));\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, podName, namespace, tenant, setErrorSnackMessage]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Highlight Line\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          onChange={(val) => {\n            setHighlight(val.target.value);\n          }}\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"standard\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>\n          <div className={classes.logList}>{renderLines}</div>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PodLogs));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  buttonsStyles,\n  hrClass,\n  searchField,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { IEvent } from \"../../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { niceDays } from \"../../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport TableWrapper from \"../../../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../../../common/api\";\nimport { AppState } from \"../../../../../store\";\n\ninterface IPodEventsProps {\n  classes: any;\n  tenant: string;\n  namespace: string;\n  podName: string;\n  propLoading: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...buttonsStyles,\n    ...searchField,\n    ...hrClass,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"15px 0 0\",\n    },\n  });\n\nconst PodEvents = ({\n  classes,\n  tenant,\n  namespace,\n  podName,\n  propLoading,\n  setErrorSnackMessage,\n  loadingTenant,\n}: IPodEventsProps) => {\n  const [event, setEvent] = useState<IEvent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pods/${podName}/events`\n        )\n        .then((res: IEvent[]) => {\n          for (let i = 0; i < res.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n\n            res[i].seen = niceDays((currentTime - res[i].last_seen).toString());\n          }\n          setEvent(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, podName, namespace, tenant, setErrorSnackMessage]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TableWrapper\n          itemActions={[]}\n          columns={[\n            { label: \"Namespace\", elementKey: \"namespace\" },\n            { label: \"Last Seen\", elementKey: \"seen\" },\n            { label: \"Message\", elementKey: \"message\" },\n            { label: \"Event Type\", elementKey: \"event_type\" },\n            { label: \"Reason\", elementKey: \"reason\" },\n          ]}\n          isLoading={loading}\n          records={event}\n          entityName=\"Events\"\n          idField=\"event\"\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n});\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PodEvents));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { containerForHeader } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { Link } from \"react-router-dom\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport PodLogs from \"./PodLogs\";\nimport PodEvents from \"./PodEvents\";\n\ninterface IPodDetailsProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PodDetails = ({ classes, match }: IPodDetailsProps) => {\n  const [curTab, setCurTab] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n  const tenantName = match.params[\"tenantName\"];\n  const podName = match.params[\"podName\"];\n\n  function a11yProps(index: any) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  useEffect(() => {\n    if (loading) {\n      setLoading(false);\n    }\n  }, [loading]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <h1 className={classes.sectionTitle}>\n          <Link\n            to={`/namespaces/${tenantNamespace}/tenants/${tenantName}/pods`}\n            className={classes.breadcrumLink}\n          >\n            Pods\n          </Link>{\" \"}\n          &gt; {podName}\n        </h1>\n      </Grid>\n      <Grid container>\n        <Grid item xs={9}>\n          <Tabs\n            value={curTab}\n            onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n              setCurTab(newValue);\n            }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"cluster-tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"Events\" {...a11yProps(0)} />\n            <Tab label=\"Logs\" {...a11yProps(1)} />\n          </Tabs>\n        </Grid>\n        {curTab === 0 && (\n          <PodEvents\n            tenant={tenantName}\n            namespace={tenantNamespace}\n            podName={podName}\n            propLoading={loading}\n          />\n        )}\n        {curTab === 1 && (\n          <PodLogs\n            tenant={tenantName}\n            namespace={tenantNamespace}\n            podName={podName}\n            propLoading={loading}\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodDetails);\n"],"sourceRoot":""}