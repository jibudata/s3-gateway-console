{"version":3,"file":"static/js/9537.177d91d7.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/TenantDetails/AddPoolModal.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx","screens/Console/Tenants/TenantDetails/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { generatePoolName, niceBytes } from \"../../../../common/utils\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { IAddPoolRequest, ITenant } from \"../ListTenants/types\";\nimport { ErrorResponseHandler, IAffinityModel } from \"../../../../common/types\";\nimport { getDefaultAffinity } from \"./utils\";\n\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IQuotaElement, IQuotas, Opts } from \"../ListTenants/utils\";\nimport { NewPoolIcon } from \"../../../../icons\";\n\ninterface IAddPoolProps {\n  tenant: ITenant;\n  classes: any;\n  open: boolean;\n  onClosePoolAndReload: (shouldReload: boolean) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginLeft: 30,\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddPoolModal = ({\n  tenant,\n  classes,\n  open,\n  onClosePoolAndReload,\n}: IAddPoolProps) => {\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [numberOfNodes, setNumberOfNodes] = useState<number>(0);\n  const [volumeSize, setVolumeSize] = useState<number>(0);\n  const [volumesPerServer, setVolumesPerSever] = useState<number>(0);\n  const [selectedStorageClass, setSelectedStorageClass] = useState<string>(\"\");\n  const [storageClasses, setStorageClasses] = useState<Opts[]>([]);\n\n  const instanceCapacity: number = volumeSize * 1073741824 * volumesPerServer;\n  const totalCapacity: number = instanceCapacity * numberOfNodes;\n\n  useEffect(() => {\n    setSelectedStorageClass(\"\");\n\n    setStorageClasses([]);\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`\n      )\n      .then((res: IQuotas) => {\n        const elements: IQuotaElement[] = get(res, \"elements\", []);\n\n        const newStorage = elements.map((storageClass: any) => {\n          const name = get(storageClass, \"name\", \"\").split(\n            \".storageclass.storage.k8s.io/requests.storage\"\n          )[0];\n\n          return { label: name, value: name };\n        });\n\n        setStorageClasses(newStorage);\n        if (newStorage.length > 0) {\n          setSelectedStorageClass(newStorage[0].value);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n      });\n  }, [tenant]);\n\n  return (\n    <ModalWrapper\n      onClose={() => onClosePoolAndReload(false)}\n      modalOpen={open}\n      title=\"Add Pool\"\n      titleIcon={<NewPoolIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddSending(true);\n\n          const poolName = generatePoolName(tenant.pools);\n\n          const defaultAffinity: IAffinityModel = getDefaultAffinity(\n            tenant.name,\n            poolName\n          );\n\n          const data: IAddPoolRequest = {\n            name: poolName,\n            servers: numberOfNodes,\n            volumes_per_server: volumesPerServer,\n            volume_configuration: {\n              size: volumeSize * 1073741824,\n              storage_class_name: selectedStorageClass,\n              labels: null,\n            },\n            affinity: defaultAffinity,\n          };\n\n          api\n            .invoke(\n              \"POST\",\n              `/api/v1/namespaces/${tenant.namespace}/tenants/${tenant.name}/pools`,\n              data\n            )\n            .then(() => {\n              setAddSending(false);\n              onClosePoolAndReload(true);\n            })\n            .catch((err: ErrorResponseHandler) => {\n              setAddSending(false);\n              // setDeleteError(err);\n            });\n        }}\n      >\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"number_of_nodes\"\n            name=\"number_of_nodes\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setNumberOfNodes(parseInt(e.target.value));\n            }}\n            label=\"Number of Nodes\"\n            value={numberOfNodes.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"pool_size\"\n            name=\"pool_size\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setVolumeSize(parseInt(e.target.value));\n            }}\n            label=\"Volume Size (Gi)\"\n            value={volumeSize.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"volumes_per_sever\"\n            name=\"volumes_per_sever\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setVolumesPerSever(parseInt(e.target.value));\n            }}\n            label=\"Volumes per Server\"\n            value={volumesPerServer.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <SelectWrapper\n            id=\"storage_class\"\n            name=\"storage_class\"\n            onChange={(e: SelectChangeEvent<string>) => {\n              setSelectedStorageClass(e.target.value as string);\n            }}\n            label=\"Storage Class\"\n            value={selectedStorageClass}\n            options={storageClasses}\n            disabled={storageClasses.length < 1}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.bottomContainer}>\n          <div className={classes.factorElements}>\n            <div>\n              <div className={classes.sizeNumber}>\n                {niceBytes(instanceCapacity.toString(10))}\n              </div>\n              <div className={classes.sizeDescription}>Instance Capacity</div>\n            </div>\n            <div>\n              <div className={classes.sizeNumber}>\n                {niceBytes(totalCapacity.toString(10))}\n              </div>\n              <div className={classes.sizeDescription}>Total Capacity</div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"primary\"\n            disabled={addSending}\n            onClick={() => onClosePoolAndReload(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={addSending}\n          >\n            Save\n          </Button>\n        </Grid>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddPoolModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { TextField } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { AddIcon } from \"../../../../icons\";\nimport { IPool, ITenant } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport AddPoolModal from \"./AddPoolModal\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { AppState } from \"../../../../store\";\nimport { setTenantDetailsLoad } from \"../actions\";\nimport SearchIcon from \"../../../../icons/SearchIcon\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\ninterface IPoolsSummary {\n  classes: any;\n  tenant: ITenant | null;\n  loadingTenant: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsSummary = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setTenantDetailsLoad,\n}: IPoolsSummary) => {\n  const [pools, setPools] = useState<IPool[]>([]);\n  const [addPoolOpen, setAddPool] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const onClosePoolAndRefresh = (reload: boolean) => {\n    setAddPool(false);\n\n    if (reload) {\n      setTenantDetailsLoad(true);\n    }\n  };\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return (\n    <Fragment>\n      {addPoolOpen && tenant !== null && (\n        <AddPoolModal\n          open={addPoolOpen}\n          onClosePoolAndReload={onClosePoolAndRefresh}\n          tenant={tenant}\n        />\n      )}\n\n      <h1 className={classes.sectionTitle}>Pools</h1>\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <TextField\n            placeholder=\"Filter\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            onChange={(event) => {\n              setFilter(event.target.value);\n            }}\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            variant=\"standard\"\n          />\n\n          <RBIconButton\n            tooltip={\"Expand Tenant\"}\n            text={\"Expand Tenant\"}\n            onClick={() => {\n              setAddPool(true);\n            }}\n            icon={<AddIcon />}\n            color=\"primary\"\n            variant={\"contained\"}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n\n        <Grid item xs={12} className={classes.tableBlock}>\n          <TableWrapper\n            itemActions={[]}\n            columns={[\n              { label: \"Name\", elementKey: \"name\" },\n              { label: \"Capacity\", elementKey: \"capacity\" },\n              { label: \"# of Instances\", elementKey: \"servers\" },\n              { label: \"# of Drives\", elementKey: \"volumes\" },\n            ]}\n            isLoading={loadingTenant}\n            records={filteredPools}\n            entityName=\"Servers\"\n            idField=\"name\"\n            customEmptyMessage=\"No Pools found\"\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n});\n\nexport default withStyles(styles)(connector(PoolsSummary));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { IAffinityModel } from \"../../../../common/types\";\n\nexport const getDefaultAffinity = (tenantName: string, poolName: string) => {\n  const defaultAffinity: IAffinityModel = {\n    podAntiAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n          labelSelector: {\n            matchExpressions: [\n              {\n                key: \"v1.min.io/tenant\",\n                operator: \"In\",\n                values: [tenantName],\n              },\n              {\n                key: \"v1.min.io/pool\",\n                operator: \"In\",\n                values: [poolName],\n              },\n            ],\n          },\n          topologyKey: \"kubernetes.io/hostname\",\n        },\n      ],\n    },\n  };\n  return defaultAffinity;\n};\n\nexport const getNodeSelector = (\n  labels: string,\n  withPodAntiAffinity: boolean,\n  tenantName: string,\n  poolName: string\n) => {\n  // Labels in the form of key1=value1&key2=value2&key3=value3...\n  const splittedLabels = labels.split(\"&\");\n  let matchExpressions: any = [];\n\n  splittedLabels.forEach((label: string) => {\n    const splitKeyValue = label.split(\"=\");\n    if (splitKeyValue.length === 2) {\n      matchExpressions.push({\n        key: splitKeyValue[0],\n        operator: \"In\",\n        values: [splitKeyValue[1]],\n      });\n    }\n  });\n\n  const nodeSelector: IAffinityModel = {\n    nodeAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [\n          {\n            matchExpressions: matchExpressions,\n          },\n        ],\n      },\n    },\n  };\n  if (withPodAntiAffinity) {\n    const def = getDefaultAffinity(tenantName, poolName);\n    nodeSelector.podAntiAffinity = def.podAntiAffinity;\n  }\n  console.log(nodeSelector);\n  return nodeSelector;\n};\n"],"names":["useStyles","makeStyles","theme","root","padding","color","props","variant","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","classes","onClick","disabled","tooltip","icon","restProps","size","sx","border","fontSize","display","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","withStyles","createStyles","deleteDialogStyles","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","useState","openSnackbar","setOpenSnackbar","useEffect","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","className","titleText","closeContainer","id","closeButton","disableRipple","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","buttonContainer","textAlign","bottomContainer","flexGrow","alignItems","margin","justifyContent","flexFlow","factorElements","sizeNumber","fontWeight","sizeDescription","formFieldStyles","modalStyleUtils","tenant","onClosePoolAndReload","addSending","setAddSending","numberOfNodes","setNumberOfNodes","volumeSize","setVolumeSize","volumesPerServer","setVolumesPerSever","selectedStorageClass","setSelectedStorageClass","storageClasses","setStorageClasses","instanceCapacity","totalCapacity","api","namespace","then","res","newStorage","get","map","storageClass","name","split","label","value","catch","err","console","error","ModalWrapper","noValidate","autoComplete","onSubmit","e","preventDefault","poolName","generatePoolName","pools","defaultAffinity","getDefaultAffinity","data","servers","volumes_per_server","volume_configuration","storage_class_name","labels","affinity","Grid","item","xs","formFieldRow","InputBoxWrapper","onChange","parseInt","target","toString","SelectWrapper","options","niceBytes","modalButtonBar","Button","LinearProgress","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","setErrorSnackMessage","setTenantDetailsLoad","tenantDetailsStyles","actionsTray","tableStyles","containerForHeader","spacing","setPools","addPoolOpen","setAddPool","filter","setFilter","resPools","filteredPools","pool","toLowerCase","includes","Fragment","reload","sectionTitle","container","TextField","placeholder","searchField","InputProps","disableUnderline","startAdornment","InputAdornment","position","SearchIcon","RBIconButton","tableBlock","TableWrapper","itemActions","columns","elementKey","isLoading","records","entityName","idField","customEmptyMessage","tenantName","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","labelSelector","matchExpressions","key","operator","values","topologyKey","getNodeSelector","withPodAntiAffinity","splittedLabels","forEach","splitKeyValue","push","nodeSelector","nodeAffinity","nodeSelectorTerms","def","log"],"sourceRoot":""}