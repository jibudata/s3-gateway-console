{"version":3,"file":"static/js/7233.4cd8608c.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetAccessPolicy.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Policies/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, ChangeAccessPolicyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport CodeMirrorWrapper from \"../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { emptyPolicy } from \"../../Policies/utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    codeMirrorContainer: {\n      marginBottom: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\ncreateStyles({\n  ...modalStyleUtils,\n  ...spacingUtils,\n});\n\ninterface ISetAccessPolicyProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  actualPolicy: string;\n  actualDefinition: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst SetAccessPolicy = ({\n  classes,\n  open,\n  bucketName,\n  actualPolicy,\n  actualDefinition,\n  closeModalAndRefresh,\n}: ISetAccessPolicyProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessPolicy, setAccessPolicy] = useState<string>(\"\");\n  const [policyDefinition, setPolicyDefinition] = useState<string>(emptyPolicy);\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/set-policy`, {\n        access: accessPolicy,\n        definition: policyDefinition,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    setAccessPolicy(actualPolicy);\n    setPolicyDefinition(\n      actualDefinition\n        ? JSON.stringify(JSON.parse(actualDefinition), null, 4)\n        : emptyPolicy\n    );\n  }, [setAccessPolicy, actualPolicy, setPolicyDefinition, actualDefinition]);\n\n  return (\n    <ModalWrapper\n      title=\"Change Access Policy\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      titleIcon={<ChangeAccessPolicyIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                value={accessPolicy}\n                label=\"Access Policy\"\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setAccessPolicy(e.target.value as string);\n                }}\n                options={[\n                  { value: \"PRIVATE\", label: \"Private\" },\n                  { value: \"PUBLIC\", label: \"Public\" },\n                  { value: \"CUSTOM\", label: \"Custom\" },\n                ]}\n              />\n            </Grid>\n            {accessPolicy === \"PUBLIC\" && (\n              <div\n                style={{\n                  marginTop: \"25px\",\n                  fontSize: \"14px\",\n                  fontStyle: \"italic\",\n                  color: \"#5E5E5E\",\n                }}\n              >\n                * Warning: With Public access anyone will be able to upload,\n                download and delete files from this Bucket *\n              </div>\n            )}\n            {accessPolicy === \"CUSTOM\" && (\n              <Grid item xs={12} className={classes.codeMirrorContainer}>\n                <CodeMirrorWrapper\n                  label={`Write Policy`}\n                  value={policyDefinition}\n                  onBeforeChange={(editor, data, value) => {\n                    setPolicyDefinition(value);\n                  }}\n                  editorHeight={\"350px\"}\n                />\n              </Grid>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={addLoading}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"set\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={\n                addLoading || (accessPolicy === \"CUSTOM\" && !policyDefinition)\n              }\n              label={\"Set\"}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetAccessPolicy);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const emptyPolicy =\n  \"{\\n\" +\n  '    \"Version\": \"2012-10-17\",\\n' +\n  '    \"Statement\": [\\n' +\n  \"        \\n\" +\n  \"    ]\\n\" +\n  \"}\";\n"],"names":["createStyles","_objectSpread","modalStyleUtils","spacingUtils","withStyles","theme","codeMirrorContainer","marginBottom","display","formFieldStyles","_ref","classes","open","bucketName","actualPolicy","actualDefinition","closeModalAndRefresh","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","addLoading","setAddLoading","_useState3","_useState4","accessPolicy","setAccessPolicy","_useState5","emptyPolicy","_useState6","policyDefinition","setPolicyDefinition","useEffect","JSON","stringify","parse","_jsx","ModalWrapper","title","modalOpen","onClose","titleIcon","ChangeAccessPolicyIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","api","concat","access","definition","then","res","catch","err","setModalErrorSnackMessage","_jsxs","Grid","container","item","xs","className","modalFormScrollable","formFieldRow","SelectWrapper","value","label","id","name","onChange","target","options","style","marginTop","fontSize","fontStyle","color","CodeMirrorWrapper","onBeforeChange","editor","data","editorHeight","modalButtonBar","Button","type","variant","onClick","disabled","fieldBasic","_ref$label","_ref$tooltip","tooltip","_ref$mode","mode","_ref$editorHeight","readOnly","React","sx","InputLabel","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","maxHeight","overflow","border","CodeEditor","language","evn","padding","backgroundColor","fontFamily","minHeight","background","borderTop","Box","alignItems","paddingRight","justifyContent","height","width","marginLeft","TooltipWrapper","CopyToClipboard","text","icon","CopyIcon","SelectStyled","root","lineHeight","spacing","input","position","fontWeight","borderRadius","borderColor","InputBase","tooltipHelper","fieldContainer","flexFlow","_ref$disabled","htmlFor","FormControl","fullWidth","Select","map","option","MenuItem"],"sourceRoot":""}