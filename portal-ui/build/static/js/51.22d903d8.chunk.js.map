{"version":3,"file":"static/js/51.22d903d8.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, LifecycleConfigIcon } from \"mds\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { ITiersDropDown } from \"./AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    formFieldRowAccordion: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  classes,\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString()\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString()\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\"\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\"\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\"\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\"\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(expiryDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCExpirationDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/buckets/${selectedBucket}/lifecycle/${lifecycleRule.id}`,\n          lifecycleUpdate\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"id\"\n                  name=\"id\"\n                  label=\"Id\"\n                  value={lifecycleRule.id}\n                  onChange={() => {}}\n                  disabled\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormSwitchWrapper\n                  label=\"Status\"\n                  indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                  checked={enabled}\n                  value={\"user_enabled\"}\n                  id=\"rule_status\"\n                  name=\"rule_status\"\n                  onChange={(e) => {\n                    setEnabled(e.target.checked);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <RadioGroupSelector\n                  currentSelection={ilmType}\n                  id=\"rule_type\"\n                  name=\"rule_type\"\n                  label=\"Rule Type\"\n                  selectorOptions={[\n                    { value: \"expiry\", label: \"Expiry\" },\n                    { value: \"transition\", label: \"Transition\" },\n                  ]}\n                  onChange={() => {}}\n                  disableOptions\n                />\n              </Grid>\n              {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"expiry_days\"\n                    name=\"expiry_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiryDays(e.target.value);\n                    }}\n                    label=\"Expiry Days\"\n                    value={expiryDays}\n                    min=\"0\"\n                  />\n                </Grid>\n              )}\n\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"noncurrentversion_expiration_days\"\n                      name=\"noncurrentversion_expiration_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setNCExpirationDays(e.target.value);\n                      }}\n                      label=\"Non-current Expiration Days\"\n                      value={NCExpirationDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n                )}\n              {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n                <Fragment>\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"transition_days\"\n                      name=\"transition_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setTransitionDays(e.target.value);\n                      }}\n                      label=\"Transition Days\"\n                      value={transitionDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <SelectWrapper\n                      label=\"Storage Class\"\n                      id=\"storage_class\"\n                      name=\"storage_class\"\n                      value={storageClass}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        setStorageClass(e.target.value as string);\n                      }}\n                      options={tiersList}\n                    />\n                  </Grid>\n                </Fragment>\n              )}\n\n              {ilmType === \"transition\" &&\n                lifecycleRule.transition?.noncurrent_transition_days && (\n                  <Fragment>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_transition_days\"\n                        name=\"noncurrentversion_transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionDays(e.target.value);\n                        }}\n                        label=\"Non-current Transition Days\"\n                        value={NCTransitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"noncurrentversion_t_SC\"\n                        name=\"noncurrentversion_t_SC\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionSC(e.target.value);\n                        }}\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\n                        label=\"Non-current Version Transition Storage Class\"\n                        value={NCTransitionSC}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                <Accordion>\n                  <AccordionSummary>\n                    <Typography>Filters</Typography>\n                  </AccordionSummary>\n\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"prefix\"\n                        name=\"prefix\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setPrefix(e.target.value);\n                        }}\n                        label=\"Prefix\"\n                        value={prefix}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <QueryMultiSelector\n                        name=\"tags\"\n                        label=\"Tags\"\n                        elements={tags}\n                        onChange={(vl: string) => {\n                          setTags(vl);\n                        }}\n                        keyPlaceholder=\"Tag Key\"\n                        valuePlaceholder=\"Tag Value\"\n                        withBorder\n                      />\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Advanced</Typography>\n                      </AccordionSummary>\n\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <FormSwitchWrapper\n                            value=\"expired_delete_marker\"\n                            id=\"expired_delete_marker\"\n                            name=\"expired_delete_marker\"\n                            checked={expiredObjectDM}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setExpiredObjectDM(event.target.checked);\n                            }}\n                            label={\"Expired Object Delete Marker\"}\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                )}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n              label={\"Save\"}\n            />\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EditLifecycleConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Button, LifecycleConfigIcon } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { BucketVersioning } from \"../types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  bucketName: string;\n}\n\nexport interface ITiersDropDown {\n  label: string;\n  value: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    formFieldRowFilter: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [isVersioned, setIsVersioned] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\"\n  );\n\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/versioning`)\n        .then((res: BucketVersioning) => {\n          setIsVersioned(res.is_versioned);\n          setLoadingVersioning(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/buckets/${bucketName}/lifecycle`,\n        lifecycleInsert\n      )\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container className={classes.loadingBox}>\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <Grid item xs={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <RadioGroupSelector\n                      currentSelection={ilmType}\n                      id=\"ilm_type\"\n                      name=\"ilm_type\"\n                      label=\"Type of lifecycle\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as string);\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                  </Grid>\n                  {isVersioned && (\n                    <Grid item xs={12}>\n                      <SelectWrapper\n                        value={targetVersion}\n                        id=\"object_version\"\n                        name=\"object_version\"\n                        label=\"Object Version\"\n                        onChange={(e) => {\n                          setTargetVersion(\n                            e.target.value as \"current\" | \"noncurrent\"\n                          );\n                        }}\n                        options={[\n                          { value: \"current\", label: \"Current Version\" },\n                          { value: \"noncurrent\", label: \"Non-Current Version\" },\n                        ]}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      id=\"expiry_days\"\n                      name=\"expiry_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setLifecycleDays(e.target.value);\n                        }\n                      }}\n                      pattern={\"[0-9]*\"}\n                      label=\"After\"\n                      value={lifecycleDays}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"expire-current-unit\"}\n                          unitSelected={\"days\"}\n                          unitsList={[{ label: \"Days\", value: \"days\" }]}\n                          disabled={true}\n                        />\n                      }\n                    />\n                  </Grid>\n\n                  {ilmType === \"expiry\" ? (\n                    <Fragment></Fragment>\n                  ) : (\n                    <Fragment>\n                      <Grid item xs={12}>\n                        <SelectWrapper\n                          label=\"To Tier\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setStorageClass(e.target.value as string);\n                          }}\n                          options={tiersList}\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                  <Grid item xs={12} className={classes.formFieldRowFilter}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Filters</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <InputBoxWrapper\n                            id=\"prefix\"\n                            name=\"prefix\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setPrefix(e.target.value);\n                            }}\n                            label=\"Prefix\"\n                            value={prefix}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <QueryMultiSelector\n                            name=\"tags\"\n                            label=\"Tags\"\n                            elements={\"\"}\n                            onChange={(vl: string) => {\n                              setTags(vl);\n                            }}\n                            keyPlaceholder=\"Tag Key\"\n                            valuePlaceholder=\"Tag Value\"\n                            withBorder\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                  {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                    <Grid item xs={12} className={classes.formFieldRowFilter}>\n                      <Accordion>\n                        <AccordionSummary>\n                          <Typography>Advanced</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <Grid item xs={12}>\n                            <FormSwitchWrapper\n                              value=\"expired_delete_marker\"\n                              id=\"expired_delete_marker\"\n                              name=\"expired_delete_marker\"\n                              checked={expiredObjectDM}\n                              onChange={(\n                                event: React.ChangeEvent<HTMLInputElement>\n                              ) => {\n                                setExpiredObjectDM(event.target.checked);\n                              }}\n                              label={\"Expire Delete Marker\"}\n                              description={\n                                \"Remove the reference to the object if no versions are left\"\n                              }\n                            />\n                          </Grid>\n                        </AccordionDetails>\n                      </Accordion>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddLifecycleModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\nimport { ConfirmDeleteIcon } from \"mds\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\n\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api\n        .invoke(\"DELETE\", `/api/v1/buckets/${bucket}/lifecycle/${id}`)\n        .then((res) => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(DeleteBucketLifecycleRule);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { LifeCycleItem } from \"../types\";\nimport { AddIcon, Button, HelpBox, TiersIcon } from \"mds\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketLifecyclePanelProps {\n  classes: any;\n}\n\nconst BucketLifecyclePanel = ({ classes }: IBucketLifecyclePanelProps) => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<LifeCycleItem[]>([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/lifecycle`)\n          .then((res: any) => {\n            const records = get(res, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            console.error(err);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 || el.expiration.noncurrent_expiration_days)\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Lifecycle Rules</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(BucketLifecyclePanel);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon } from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["withStyles","theme","createStyles","formFieldRowAccordion","padding","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","classes","closeModalAndRefresh","selectedBucket","lifecycleRule","open","dispatch","useAppDispatch","useState","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","useEffect","api","then","res","get","length","objList","map","tier","tierType","type","value","label","catch","err","valid","status","transitionMode","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","ModalWrapper","onClose","modalOpen","title","titleIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","expiry","parseInt","lifecycleUpdate","disable","expired_object_delete_marker","id","setModalErrorSnackMessage","saveRecord","Grid","container","item","xs","className","formScrollable","spacing","InputBoxWrapper","name","onChange","disabled","FormSwitchWrapper","indicatorLabels","checked","target","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","min","Fragment","SelectWrapper","options","placeholder","Accordion","AccordionSummary","Typography","AccordionDetails","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","variant","onClick","color","LinearProgress","formFieldRowFilter","bucketName","distributedSetup","useSelector","selDistSet","isVersioned","setIsVersioned","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","is_versioned","loadingBox","lifecycleInsert","addRecord","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","description","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","searchField","actionsTray","twHeight","minHeight","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","records","console","error","lifecycleColumns","renderFullObject","renderFunction","el","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","refresh","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","iconComponent","help","href","rel","fieldBasic","tooltipHelper","inputWithBorder","border","height","overflowY","position","marginTop","lineInputBoxes","display","marginBottom","queryDiv","alignSelf","margin","fontWeight","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","fieldContainer","inputLabel","tooltipContainer","placement","ref","root","fontSize","children"],"sourceRoot":""}