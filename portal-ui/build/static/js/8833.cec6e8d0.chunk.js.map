{"version":3,"file":"static/js/8833.cec6e8d0.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Support/RegisterCluster.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { HelpBox } from \"mds\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup.</div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HelpBox, WarnIcon } from \"mds\";\n\ninterface IRegisterCluster {\n  compactMode?: boolean;\n}\n\nconst RegisterCluster = ({ compactMode = false }: IRegisterCluster) => {\n  const navigate = useNavigate();\n\n  const redirectButton = (\n    <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => navigate(\"/support/register\")}\n    >\n      Register your Cluster\n    </Button>\n  );\n\n  const registerMessage =\n    \"Use your MinIO Subscription Network login credentials to register this cluster.\";\n\n  if (compactMode) {\n    return (\n      <Fragment>\n        <HelpBox\n          title={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexGrow: 1,\n              }}\n            >\n              <span>{registerMessage}</span> {redirectButton}\n            </div>\n          }\n          iconComponent={<WarnIcon />}\n          help={<Fragment />}\n        />\n        <br />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        padding: \"25px\",\n        border: \"1px solid #eaeaea\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n        marginBottom: \"15px\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              marginRight: \"8px\",\n              fontSize: \"16px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n\n              \"& .min-icon\": {\n                width: \"83px\",\n                height: \"14px\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n              },\n            }}\n          >\n            Register your cluster\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: {\n                xs: \"column\",\n                md: \"row\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                flex: \"2\",\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {registerMessage}\n              </Box>\n              <Box\n                sx={{\n                  flex: \"1\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  {redirectButton}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegisterCluster;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, DialogContentText } from \"@mui/material\";\nimport {\n  Button,\n  HelpBox,\n  InspectMenuIcon,\n  PageHeader,\n  PasswordKeyIcon,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteCookie,\n  encodeURLString,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport KeyRevealer from \"./KeyRevealer\";\nimport { selDistSet, setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\nimport { registeredCluster } from \"../../../config\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    switchLabel: {\n      fontWeight: \"normal\",\n    },\n    ...deleteDialogStyles,\n    ...modalStyleUtils,\n  });\n\nconst ExampleBlock = ({\n  volumeVal,\n  pathVal,\n}: {\n  volumeVal: string;\n  pathVal: string;\n}) => {\n  return (\n    <Box className=\"code-block-container\">\n      <Box className=\"example-code-block\">\n        <Box\n          sx={{\n            display: \"flex\",\n            marginBottom: \"5px\",\n            flexFlow: {\n              sm: \"row\",\n              xs: \"column\",\n            },\n          }}\n        >\n          <label>Volume/bucket Name :</label> <code>{volumeVal}</code>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: {\n              sm: \"row\",\n              xs: \"column\",\n            },\n          }}\n        >\n          <label>Path : </label>\n          <code>{pathVal}</code>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst Inspect = ({ classes }: { classes: any }) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const distributedSetup = useSelector(selDistSet);\n\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n  const clusterRegistered = registeredCluster();\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    const file = encodeURLString(inspectPath);\n    const volume = encodeURLString(volumeName);\n\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: resErr.message,\n              detailedError: resErr.code,\n            })\n          );\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Inspect\"} />\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n              border: \"1px solid #eaeaea\",\n              padding: {\n                lg: \"40px\",\n                xs: \"15px\",\n              },\n              flexWrap: \"wrap\",\n              gap: {\n                lg: \"55px\",\n                xs: \"20px\",\n              },\n              height: {\n                md: \"calc(100vh - 120px)\",\n                xs: \"100%\",\n              },\n              flexFlow: {\n                lg: \"row\",\n                xs: \"column\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                border: \"1px solid #eaeaea\",\n                flex: {\n                  md: 2,\n                  xs: 1,\n                },\n                width: {\n                  lg: \"auto\",\n                  xs: \"100%\",\n                },\n                padding: {\n                  lg: \"40px\",\n                  xs: \"15px\",\n                },\n              }}\n            >\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  e.preventDefault();\n                  if (!clusterRegistered) {\n                    navigate(\"/support/register\");\n                    return;\n                  }\n                  performInspect();\n                }}\n              >\n                <Box>\n                  <InputBoxWrapper\n                    id=\"inspect_volume\"\n                    name=\"inspect_volume\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_volume\",\n                    }}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setVolumeName(e.target.value);\n                    }}\n                    label=\"Volume or Bucket Name\"\n                    value={volumeName}\n                    error={volumeError}\n                    required\n                    placeholder={\"test-bucket\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"15px\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    id=\"inspect_path\"\n                    name=\"inspect_path\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_path\",\n                    }}\n                    error={pathError}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setInspectPath(e.target.value);\n                    }}\n                    label=\"File or Path to inspect\"\n                    value={inspectPath}\n                    required\n                    placeholder={\"test*/xl.meta\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"25px\",\n                  }}\n                >\n                  <FormSwitchWrapper\n                    classes={{\n                      inputLabel: classes.switchLabel,\n                    }}\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_encrypt\",\n                    }}\n                    label=\"Encrypt\"\n                    indicatorLabels={[\"True\", \"False\"]}\n                    checked={isEncrypt}\n                    value={\"true\"}\n                    id=\"inspect_encrypt\"\n                    name=\"inspect_encrypt\"\n                    onChange={(e) => {\n                      setIsEncrypt(!isEncrypt);\n                    }}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"55px\",\n                  }}\n                >\n                  <Button\n                    id={\"inspect-clear-button\"}\n                    style={{\n                      marginRight: \"15px\",\n                    }}\n                    type=\"button\"\n                    variant=\"regular\"\n                    data-test-id=\"inspect-clear-button\"\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n                  <Button\n                    id={\"inspect-start\"}\n                    type=\"submit\"\n                    variant={!clusterRegistered ? \"regular\" : \"callAction\"}\n                    data-test-id=\"inspect-submit-button\"\n                    disabled={!isFormValid}\n                    label={\"Inspect\"}\n                  />\n                </Box>\n              </form>\n            </Box>\n            <Box\n              sx={{\n                flex: 1,\n                minWidth: {\n                  md: \"365px\",\n                  xs: \"100%\",\n                },\n                width: \"100%\",\n              }}\n            >\n              <HelpBox\n                title={\"\"}\n                iconComponent={null}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"-25px\",\n                        fontSize: \"16px\",\n                        fontWeight: 600,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        padding: \"2px\",\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          backgroundColor: \"#07193E\",\n                          height: \"15px\",\n                          width: \"15px\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          borderRadius: \"50%\",\n                          marginRight: \"18px\",\n                          padding: \"3px\",\n                          \"& .min-icon\": {\n                            height: \"11px\",\n                            width: \"11px\",\n                            fill: \"#ffffff\",\n                          },\n                        }}\n                      >\n                        <InspectMenuIcon />\n                      </Box>\n                      Learn more about the Inspect feature\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"16px\",\n                        fontWeight: 600,\n                        fontStyle: \"italic\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      Examples:\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        fontSize: \"14px\",\n                        flex: \"2\",\n                        \"& .step-number\": {\n                          color: \"#ffffff\",\n                          height: \"25px\",\n                          width: \"25px\",\n                          background: \"#081C42\",\n                          marginRight: \"10px\",\n                          textAlign: \"center\",\n                          fontWeight: 600,\n                          borderRadius: \"50%\",\n                        },\n\n                        \"& .step-row\": {\n                          fontSize: \"14px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n\n                          \"&.step-text\": {\n                            fontWeight: 400,\n                          },\n                          \"&:before\": {\n                            content: \"' '\",\n                            height: \"7px\",\n                            width: \"7px\",\n                            backgroundColor: \"#2781B0\",\n                            marginRight: \"10px\",\n                            marginTop: \"7px\",\n                            flexShrink: 0,\n                          },\n                        },\n\n                        \"& .code-block-container\": {\n                          flex: \"1\",\n                          marginTop: \"15px\",\n                          marginLeft: \"35px\",\n\n                          \"& input\": {\n                            color: \"#737373\",\n                          },\n                        },\n\n                        \"& .example-code-block label\": {\n                          display: \"inline-block\",\n                          width: {\n                            sm: \"160px\",\n                            xs: \"100%\",\n                          },\n                          fontWeight: 600,\n                          fontSize: \"14px\",\n                        },\n\n                        \"& code\": {\n                          width: {\n                            sm: \"100px\",\n                            xs: \"100%\",\n                          },\n                          paddingLeft: \"10px\",\n                          fontFamily: \"monospace\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"3px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          border: \"1px solid #eaeaea\",\n                          fontSize: \"10px\",\n                          color: \"#082146\",\n                          fontWeight: 500,\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test-bucket`}\n                        />\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test*/*/part.*`}\n                        />\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test/**`}\n                        />\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                        marginLeft: \"15px\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            </Box>\n          </Box>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <DialogContentText component=\"div\">\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <form\n                noValidate\n                onSubmit={() => {\n                  return false;\n                }}\n              >\n                <KeyRevealer value={decryptionKey} />\n              </form>\n            </DialogContentText>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Inspect);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button, CopyIcon } from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = useState<boolean>(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n      }}\n    >\n      <InputBoxWrapper\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        extraInputProps={{\n          readOnly: true,\n        }}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        id={\"show-hide-key\"}\n        style={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"callAction\"\n        onClick={() => setShown(!shown)}\n        label={\"Show/Hide\"}\n      />\n    </Box>\n  );\n};\n\nexport default KeyRevealer;\n"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","compactMode","navigate","useNavigate","redirectButton","type","variant","onClick","registerMessage","Fragment","style","justifyContent","flexGrow","padding","sm","marginBottom","marginRight","fontWeight","width","height","marginLeft","flex","marginTop","ExampleBlock","volumeVal","pathVal","className","withStyles","createStyles","switchLabel","deleteDialogStyles","modalStyleUtils","classes","dispatch","useAppDispatch","distributedSetup","useSelector","selDistSet","useState","volumeName","setVolumeName","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","clusterRegistered","registeredCluster","useEffect","isVolValid","isPathValid","trim","length","slice","isValid","makeRequest","url","fetch","method","performInspect","file","encodeURLString","volume","urlOfInspectApi","then","res","ok","json","resErr","setErrorSnackMessage","errorMessage","message","detailedError","code","blob","filename","headers","get","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","label","lg","flexWrap","gap","noValidate","autoComplete","onSubmit","e","preventDefault","id","name","extraInputProps","onChange","value","error","required","placeholder","inputLabel","indicatorLabels","checked","disabled","minWidth","backgroundColor","borderRadius","fill","fontStyle","background","textAlign","content","flexShrink","paddingLeft","fontFamily","paddingRight","paddingTop","paddingBottom","modalOpen","onClose","deleteCookie","titleIcon","component","shown","setShown","overlayIcon","readOnly","overlayAction","navigator","clipboard","writeText"],"sourceRoot":""}