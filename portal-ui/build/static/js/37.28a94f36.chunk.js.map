{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/shared/ErrorBlock.tsx","icons/WarnIcon.tsx","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","icons/NewAccountIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/UsageBarWrapper/UsageBarWrapper.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","modalSnackMessage","modalSnackBar","modalErrorContainer","position","border","borderLeftWidth","borderRadius","zIndex","padding","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","cursor","errorTitle","errorLabel","marginRight","messageIcon","simpleError","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","baseCloseLine","content","borderLeft","setModalSnackMessage","dialogContainer","closeContainer","modalCloseIcon","closeIcon","borderColor","titleClass","whiteSpace","textOverflow","modalContent","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","IconButton","disableRipple","size","DialogTitle","id","DialogContent","root","borderWidth","borderStyle","contained","background","dark","light","tooltip","rest","button","clsx","paddingTop","paddingRight","paddingBottom","marginBottom","leftItems","iconSize","helpText","iconComponent","help","margin","textDecoration","info","fontFamily","errorBlock","error","withBreak","Fragment","component","WarnIcon","props","xmlns","cx","cy","r","stroke","d","ecListTransform","ecList","map","value","getLimitSizes","resourceQuotas","quotas","returnQuotas","forEach","rsQuota","stCName","name","split","hard","used","tenantIsOnline","tenant","currentState","status","health_status","flexFlow","inputWithCopy","inputLabel","OutlinedInput","readOnly","endAdornment","InputAdornment","text","BoxIconButton","onMouseDown","edge","NewAccountIcon","viewBox","rx","warningBlock","credentialTitle","buttonContainer","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","promptIcon","newServiceAccount","closeModal","entity","consoleCreds","idp","ModalWrapper","Grid","formScrollable","Array","isArray","credentialsPair","index","accessKey","secretKey","Button","consoleExtras","cCreds","itemMap","access_key","secret_key","console","filename","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","JSON","stringify","endIcon","BorderLinearProgress","colorPrimary","bar","padChart","LinearProgress","paperContainer","allValue","currentUsage","centerItem","maxValue","currValue","renderFunction","loading","labels","porcentualValue","toString","setErrorSnackMessage","redState","float","yellowState","warning","greenState","success","greyState","tenantIcon","healthStatusIcon","top","tenantItem","titleSubKey","titleSubValue","boxyTitle","boxyValue","boxyUnit","manageButton","textTransform","raw","unit","capacity","capacity_raw","parts","niceBytes","capacity_usage","usageProportion","capacity_raw_usage","namespace","pool_count","disabled","history","push","TenantsIcon","healthStatusToClass","UsageBarWrapper","actionsTray","searchField","containerForHeader","spacing","addTenant","theaderSearchLabel","grey","addBucket","theaderSearch","actionHeaderItems","mainActions","isLoading","setIsLoading","filterTenants","setFilterTenants","records","setRecords","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","filteredRecords","filter","b","indexOf","api","invoke","then","res","resTenants","tenants","i","total_capacity","total_size","catch","err","CredentialsPrompt","PageHeader","Box","TextField","placeholder","onChange","val","target","inputProps","disableUnderline","SearchIcon","RefreshIcon","t","alignContent","HelpBox","AButton"],"mappings":"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","file":"static/js/37.28a94f36.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={classes.headerContainer}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    simpleError: {\n      marginTop: 5,\n      padding: \"2px 5px\",\n      fontSize: 16,\n      color: \"#000\",\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { snackBarCommon } from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst baseCloseLine = {\n  content: '\" \"',\n  borderLeft: \"2px solid #9C9C9C\",\n  height: 33,\n  width: 1,\n  position: \"absolute\",\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dialogContainer: {\n      padding: \"8px 15px 22px\",\n    },\n    closeContainer: {\n      textAlign: \"right\",\n    },\n    closeButton: {\n      height: 16,\n      width: 16,\n      padding: 0,\n      backgroundColor: \"initial\",\n      \"&:hover\": {\n        backgroundColor: \"initial\",\n      },\n      \"&:active\": {\n        backgroundColor: \"initial\",\n      },\n    },\n    modalCloseIcon: {\n      fontSize: 35,\n      color: \"#9C9C9C\",\n      fontWeight: 300,\n      \"&:hover\": {\n        color: \"#9C9C9C\",\n      },\n    },\n    closeIcon: {\n      \"&::before\": {\n        ...baseCloseLine,\n        transform: \"rotate(45deg)\",\n        height: 12,\n      },\n      \"&::after\": {\n        ...baseCloseLine,\n        transform: \"rotate(-45deg)\",\n        height: 12,\n      },\n      \"&:hover::before, &:hover::after\": {\n        borderColor: \"#9C9C9C\",\n      },\n      display: \"block\",\n      position: \"relative\",\n      height: 12,\n      width: 12,\n    },\n    titleClass: {\n      padding: \"0px 50px 12px\",\n      fontSize: \"1.2rem\",\n      fontWeight: 600,\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n    },\n    modalContent: {\n      padding: \"0 50px\",\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...customSize}\n    >\n      <div className={classes.dialogContainer}>\n        <ModalError />\n        <Snackbar\n          open={openSnackbar}\n          className={classes.snackBarModal}\n          onClose={() => {\n            closeSnackBar();\n          }}\n          message={message}\n          ContentProps={{\n            className: `${classes.snackBar} ${\n              modalSnackMessage && modalSnackMessage.type === \"error\"\n                ? classes.errorSnackBar\n                : \"\"\n            }`,\n          }}\n          autoHideDuration={\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? 10000\n              : 5000\n          }\n        />\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"large\"\n          >\n            <span className={classes.closeIcon} />\n          </IconButton>\n        </div>\n        <DialogTitle id=\"alert-dialog-title\" className={classes.titleClass}>\n          {title}\n        </DialogTitle>\n        <DialogContent className={noContentPadding ? \"\" : classes.modalContent}>\n          {children}\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid rgb(234, 237, 238)\",\n      borderRadius: 5,\n      paddingTop: 10,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingBottom: 40,\n      marginTop: 10,\n      marginBottom: 10,\n      backgroundColor: \"#fbfafa\",\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        width: \"2.5rem\",\n        marginRight: \".8rem\",\n      },\n    },\n    iconSize: {\n      fontSize: 64,\n    },\n    helpText: {\n      fontSize: 16,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst WarnIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        cx=\"8\"\n        cy=\"8\"\n        r=\"7\"\n        fill=\"none\"\n        stroke=\"#e04006\"\n        stroke-width=\"2\"\n      />\n      <path fill=\"none\" stroke=\"#e04006\" stroke-width=\"2\" d=\"M8 4v6m0 1v2\" />\n    </svg>\n  );\n};\n\nexport default WarnIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      fontSize: \".8rem\",\n      fontWeight: 600,\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { SVGProps } from \"react\";\n\nconst NewAccountIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      id=\"Account_Icon\"\n      data-name=\"Account Icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 16.409 13.096\"\n    >\n      <path\n        id=\"Trazado_391\"\n        data-name=\"Trazado 391\"\n        d=\"M-4332.855-1143.481a3.023,3.023,0,0,0,2.958-3.078,3.023,3.023,0,0,0-2.958-3.078,3.023,3.023,0,0,0-2.958,3.078A3.023,3.023,0,0,0-4332.855-1143.481Zm0-5.194a2.078,2.078,0,0,1,2.03,2.116,2.077,2.077,0,0,1-2.03,2.116,2.075,2.075,0,0,1-2.028-2.116A2.076,2.076,0,0,1-4332.855-1148.675Z\"\n        transform=\"translate(4339.12 1149.637)\"\n        fill=\"#07193e\"\n      />\n      <path\n        id=\"Trazado_392\"\n        data-name=\"Trazado 392\"\n        d=\"M-4337.952-1130.053a1.374,1.374,0,0,0,1.252.775h4.993a1.354,1.354,0,0,0,1.25-.786,1.675,1.675,0,0,0-.164-1.686,4.521,4.521,0,0,0-1.7-1.405,4.361,4.361,0,0,0-2.125-.438,4.483,4.483,0,0,0-3.318,1.808c-.026.035-.051.071-.075.106A1.641,1.641,0,0,0-4337.952-1130.053Zm6.663-.437a.426.426,0,0,1-.417.25h-4.993a.453.453,0,0,1-.427-.254.64.64,0,0,1,.053-.632h0c.017-.027.037-.054.057-.08a3.539,3.539,0,0,1,2.622-1.424c.056,0,.113,0,.168,0a3.606,3.606,0,0,1,2.864,1.466A.686.686,0,0,1-4331.29-1130.49Z\"\n        transform=\"translate(4340.467 1140.236)\"\n        fill=\"#07193e\"\n      />\n      <path\n        id=\"Trazado_393\"\n        data-name=\"Trazado 393\"\n        d=\"M-4329.387-1146.951h-3.506a.476.476,0,0,0-.477.476.477.477,0,0,0,.477.476h3.506a1.047,1.047,0,0,1,1.046,1.045v7.99a1.047,1.047,0,0,1-1.046,1.045H-4341.8a1.047,1.047,0,0,1-1.046-1.045v-7.99A1.048,1.048,0,0,1-4341.8-1146a.476.476,0,0,0,.476-.476.476.476,0,0,0-.476-.476,2,2,0,0,0-2,2v7.99a2,2,0,0,0,2,2h12.412a2,2,0,0,0,2-2v-7.99A2,2,0,0,0-4329.387-1146.951Z\"\n        transform=\"translate(4343.797 1148.063)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_809\"\n        data-name=\"Rectángulo 809\"\n        width=\"3.266\"\n        height=\"2.781\"\n        rx=\"1.024\"\n        transform=\"translate(11.002 3.376)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_810\"\n        data-name=\"Rectángulo 810\"\n        width=\"3.266\"\n        height=\"1.336\"\n        rx=\"0.668\"\n        transform=\"translate(11.002 7.328)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_811\"\n        data-name=\"Rectángulo 811\"\n        width=\"3.266\"\n        height=\"1.336\"\n        rx=\"0.668\"\n        transform=\"translate(11.002 9.621)\"\n        fill=\"#07193e\"\n      />\n    </svg>\n  );\n};\n\nexport default NewAccountIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport { Button } from \"@mui/material\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport NewAccountIcon from \"../../../../icons/NewAccountIcon\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n    promptIcon: {\n      marginRight: \".1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"2rem\",\n      width: \"2rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div className={classes.promptIcon}>\n            <NewAccountIcon />\n          </div>{\" \"}\n          <div>New {entity} Created</div>\n        </div>\n      }\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          <Button\n            variant=\"outlined\"\n            className={classes.buttonSpacer}\n            onClick={() => {\n              closeModal();\n            }}\n            color=\"primary\"\n          >\n            Done\n          </Button>\n\n          {!idp && (\n            <Button\n              onClick={() => {\n                let consoleExtras = {};\n\n                if (consoleCreds) {\n                  if (!Array.isArray(consoleCreds)) {\n                    consoleExtras = {\n                      console: [\n                        {\n                          access_key: consoleCreds.accessKey,\n                          secret_key: consoleCreds.secretKey,\n                        },\n                      ],\n                    };\n                  } else {\n                    const cCreds = consoleCreds.map((itemMap) => {\n                      return {\n                        access_key: itemMap.accessKey,\n                        secret_key: itemMap.secretKey,\n                      };\n                    });\n\n                    consoleExtras = {\n                      console: [...cCreds],\n                    };\n                  }\n                }\n\n                download(\n                  \"credentials.json\",\n                  JSON.stringify({\n                    ...consoleExtras,\n                  })\n                );\n              }}\n              endIcon={<DownloadIcon />}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Download\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","import React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ErrorBlock from \"../../../shared/ErrorBlock\";\n\ninterface IProgressBar {\n  maxValue: number;\n  currValue: number;\n  label: string;\n  renderFunction?: (element: string) => any;\n  error: string;\n  loading: boolean;\n  classes: any;\n  labels?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paperContainer: {\n      padding: 15,\n    },\n    allValue: {\n      fontSize: 16,\n      fontWeight: 700,\n      marginBottom: 8,\n    },\n    currentUsage: {\n      fontSize: 12,\n      marginTop: 8,\n    },\n    centerItem: {\n      textAlign: \"center\",\n    },\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#F4F4F4\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#081C42\",\n  },\n  padChart: {\n    padding: \"5px\",\n  },\n}))(LinearProgress);\n\nconst UsageBarWrapper = ({\n  classes,\n  maxValue,\n  currValue,\n  label,\n  renderFunction,\n  loading,\n  error,\n  labels = true,\n}: IProgressBar) => {\n  const porcentualValue = (currValue * 100) / maxValue;\n\n  const renderComponent = () => {\n    if (!loading) {\n      return error !== \"\" ? (\n        <ErrorBlock errorMessage={error} withBreak={false} />\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12} className={classes.allValue}>\n            {labels && (\n              <Fragment>\n                {label}{\" \"}\n                {renderFunction\n                  ? renderFunction(maxValue.toString())\n                  : maxValue}\n              </Fragment>\n            )}\n          </Grid>\n          <BorderLinearProgress variant=\"determinate\" value={porcentualValue} />\n          <Grid item xs={12} className={classes.currentUsage}>\n            {labels && (\n              <Fragment>\n                Used:{\" \"}\n                {renderFunction\n                  ? renderFunction(currValue.toString())\n                  : currValue}\n              </Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.padChart}>\n          <Grid item xs={12} className={classes.centerItem}>\n            <CircularProgress\n              color=\"primary\"\n              size={40}\n              variant=\"indeterminate\"\n            />\n          </Grid>\n        </div>\n      )}\n      {renderComponent()}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(UsageBarWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { ITenant } from \"./types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport Grid from \"@mui/material/Grid\";\nimport { ArrowRightIcon, CircleIcon } from \"../../../../icons\";\nimport history from \"../../../../history\";\nimport TenantsIcon from \"../../../../icons/TenantsIcon\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport UsageBarWrapper from \"../../Common/UsageBarWrapper/UsageBarWrapper\";\nimport { tenantIsOnline } from \"./utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        float: \"left\",\n        marginRight: 4,\n      },\n    },\n    tenantIcon: { width: 40, height: 40, position: \"relative\" },\n    healthStatusIcon: {\n      position: \"absolute\",\n      fontSize: 10,\n      top: 0,\n      right: -20,\n      height: 10,\n    },\n    tenantItem: {\n      border: \"1px solid #dedede\",\n      marginBottom: 20,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 30,\n      paddingBottom: 30,\n    },\n    title: {\n      fontSize: 22,\n      fontWeight: \"bold\",\n    },\n    titleSubKey: {\n      fontSize: 14,\n      paddingRight: 8,\n    },\n    titleSubValue: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      paddingRight: 16,\n    },\n    boxyTitle: {\n      fontWeight: \"bold\",\n    },\n    boxyValue: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    boxyUnit: {\n      fontSize: 12,\n      color: \"#5E5E5E\",\n    },\n    manageButton: {\n      marginRight: 8,\n      textTransform: \"initial\",\n    },\n  });\n\ninterface ITenantListItem {\n  tenant: ITenant;\n  classes: any;\n}\n\ninterface ValueUnit {\n  value: string;\n  unit: string;\n}\n\nconst TenantListItem = ({ tenant, classes }: ITenantListItem) => {\n  const healthStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"red\":\n        return classes.redState;\n      case \"yellow\":\n        return classes.yellowState;\n      case \"green\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  var raw: ValueUnit = { value: \"n/a\", unit: \"\" };\n  var capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  var used: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (tenant.capacity_raw) {\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\n    const parts = b.split(\" \");\n    raw.value = parts[0];\n    raw.unit = parts[1];\n  }\n  if (tenant.capacity) {\n    const b = niceBytes(`${tenant.capacity}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (tenant.capacity_usage) {\n    const usageProportion =\n      (tenant.capacity! * tenant.capacity_raw_usage!) / tenant.capacity_raw!;\n    const b = niceBytes(`${usageProportion}`, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.tenantItem}>\n        <Grid container>\n          <Grid item xs={8}>\n            <div className={classes.title}>{tenant.name}</div>\n            <div>\n              <span className={classes.titleSubKey}>Namespace:</span>\n              <span className={classes.titleSubValue}>{tenant.namespace}</span>\n              <span className={classes.titleSubKey}>Pools:</span>\n              <span className={classes.titleSubValue}>{tenant.pool_count}</span>\n              <span className={classes.titleSubKey}>State:</span>\n              <span className={classes.titleSubValue}>\n                {tenant.currentState}\n              </span>\n            </div>\n          </Grid>\n          <Grid item xs={4} textAlign={\"end\"}>\n            <Button\n              size={\"small\"}\n              color={\"primary\"}\n              variant=\"outlined\"\n              disabled={!tenantIsOnline(tenant)}\n              className={classes.manageButton}\n              onClick={() => {\n                history.push(\n                  `/namespaces/${tenant.namespace}/tenants/${tenant.name}/hop`\n                );\n              }}\n            >\n              Manage\n            </Button>\n            <Button\n              endIcon={<ArrowRightIcon />}\n              variant=\"contained\"\n              onClick={() => {\n                history.push(\n                  `/namespaces/${tenant.namespace}/tenants/${tenant.name}`\n                );\n              }}\n            >\n              View\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <hr />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container alignItems={\"center\"}>\n              <Grid item xs={7}>\n                <Grid container>\n                  <Grid item xs={3} style={{ textAlign: \"center\" }}>\n                    <div className={classes.tenantIcon}>\n                      <TenantsIcon style={{ height: 40, width: 40 }} />\n                      <div className={classes.healthStatusIcon}>\n                        <span\n                          className={healthStatusToClass(tenant.health_status)}\n                        >\n                          <CircleIcon />\n                        </span>\n                      </div>\n                    </div>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Grid container>\n                      <Grid item xs={12} className={classes.boxyTitle}>\n                        Raw Capacity\n                      </Grid>\n                      <Grid item className={classes.boxyValue}>\n                        {raw.value}\n                        <span className={classes.boxyUnit}>{raw.unit}</span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Grid container>\n                      <Grid item xs={12} className={classes.boxyTitle}>\n                        Capacity\n                      </Grid>\n                      <Grid item className={classes.boxyValue}>\n                        {capacity.value}\n                        <span className={classes.boxyUnit}>\n                          {capacity.unit}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Grid container>\n                      <Grid item xs={12} className={classes.boxyTitle}>\n                        Usage\n                      </Grid>\n                      <Grid item className={classes.boxyValue}>\n                        {used.value}\n                        <span className={classes.boxyUnit}>{used.unit}</span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={5}>\n                <UsageBarWrapper\n                  currValue={tenant.capacity_raw_usage ?? 0}\n                  maxValue={tenant.capacity_raw ?? 1}\n                  label={\"\"}\n                  renderFunction={niceBytes}\n                  error={\"\"}\n                  loading={false}\n                  labels={false}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(TenantListItem));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { Box, Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ITenant, ITenantsResponse } from \"./types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AddIcon, TenantsIcon } from \"../../../../icons\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport history from \"../../../../history\";\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\nimport SearchIcon from \"../../../../icons/SearchIcon\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport TenantListItem from \"./TenantListItem\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport BoxIconButton from \"../../Common/BoxIconButton/BoxIconButton\";\nimport AButton from \"../../Common/AButton/AButton\";\n\ninterface ITenantsList {\n  classes: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n    addTenant: {\n      marginRight: 8,\n    },\n    theaderSearchLabel: {\n      color: theme.palette.grey[\"400\"],\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    addBucket: {\n      marginRight: 8,\n    },\n    theaderSearch: {\n      borderColor: theme.palette.grey[\"200\"],\n      \"& .MuiInputBase-input\": {\n        paddingTop: 10,\n        paddingBottom: 10,\n      },\n      \"& .MuiInputBase-root\": {\n        \"& .MuiInputAdornment-root\": {\n          \"& .min-icon\": {\n            color: theme.palette.grey[\"400\"],\n            height: 14,\n          },\n        },\n      },\n      actionHeaderItems: {\n        \"@media (min-width: 320px)\": {\n          marginTop: 8,\n        },\n      },\n      marginRight: 10,\n      marginLeft: 10,\n    },\n    mainActions: {\n      textAlign: \"right\",\n      marginBottom: 8,\n    },\n    healthStatusIcon: {\n      position: \"relative\",\n      fontSize: 10,\n      right: -30,\n      height: 10,\n      top: -50,\n    },\n    tenantItem: {\n      border: \"1px solid #dedede\",\n      marginBottom: 20,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingTop: 30,\n      paddingBottom: 30,\n    },\n  });\n\nconst ListTenants = ({ classes, setErrorSnackMessage }: ITenantsList) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\n  const [records, setRecords] = useState<any[]>([]);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setCreatedAccount(null);\n  };\n\n  const filteredRecords = records.filter((b: any) => {\n    if (filterTenants === \"\") {\n      return true;\n    } else {\n      if (b.name.indexOf(filterTenants) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/tenants`)\n          .then((res: ITenantsResponse) => {\n            if (res === null) {\n              setIsLoading(false);\n              return;\n            }\n            let resTenants: ITenant[] = [];\n            if (res.tenants !== null) {\n              resTenants = res.tenants;\n            }\n\n            for (let i = 0; i < resTenants.length; i++) {\n              resTenants[i].total_capacity = niceBytes(\n                resTenants[i].total_size + \"\"\n              );\n            }\n\n            setRecords(resTenants);\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, setErrorSnackMessage]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeader\n        label=\"Tenants\"\n        actions={\n          <Fragment>\n            <Grid\n              container\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              className={classes.actionHeaderItems}\n            >\n              <Box display={{ xs: \"none\", sm: \"none\", md: \"block\" }}>\n                <Grid item>\n                  <div className={classes.theaderSearchLabel}>\n                    Filter Tenants:\n                  </div>\n                </Grid>\n              </Box>\n              <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n                <TextField\n                  className={classes.theaderSearch}\n                  variant={\"outlined\"}\n                  id=\"search-resource\"\n                  placeholder={\"Filter Tenants\"}\n                  onChange={(val) => {\n                    setFilterTenants(val.target.value);\n                  }}\n                  inputProps={{\n                    disableUnderline: true,\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n              <Box display={{ xs: \"none\", sm: \"none\", md: \"block\" }}>\n                <TextField\n                  className={classes.theaderSearch}\n                  variant={\"outlined\"}\n                  id=\"search-resource\"\n                  onChange={(val) => {\n                    setFilterTenants(val.target.value);\n                  }}\n                  inputProps={{\n                    disableUnderline: true,\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Box>\n\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  endIcon={<AddIcon />}\n                  onClick={() => {\n                    history.push(\"/tenants/add\");\n                  }}\n                  className={classes.addTenant}\n                >\n                  Create Tenant\n                </Button>\n              </Grid>\n            </Grid>\n          </Fragment>\n        }\n      />\n      <Grid container>\n        <Grid item xs={12} className={classes.container}>\n          <Grid container>\n            <Grid item xs={12} className={classes.mainActions}>\n              <BoxIconButton\n                color=\"primary\"\n                aria-label=\"Refresh Tenant List\"\n                onClick={() => {\n                  setIsLoading(true);\n                }}\n                size=\"large\"\n              >\n                <RefreshIcon />\n              </BoxIconButton>\n            </Grid>\n\n            <Grid item xs={12}>\n              {isLoading && <LinearProgress />}\n              {!isLoading && (\n                <Fragment>\n                  {filteredRecords.map((t) => {\n                    return <TenantListItem tenant={t} />;\n                  })}\n                  {filteredRecords.length === 0 && (\n                    <Grid\n                      container\n                      justifyContent={\"center\"}\n                      alignContent={\"center\"}\n                      alignItems={\"center\"}\n                    >\n                      <Grid item xs={8}>\n                        <HelpBox\n                          iconComponent={<TenantsIcon />}\n                          title={\"Tenants\"}\n                          help={\n                            <Fragment>\n                              Tenant is the logical structure to represent a\n                              MinIO deployment. A tenant can have different size\n                              and configurations from other tenants, even a\n                              different storage class.\n                              <br />\n                              <br />\n                              To get started,&nbsp;\n                              <AButton\n                                onClick={() => {\n                                  history.push(\"/tenants/add\");\n                                }}\n                              >\n                                Create a Tenant.\n                              </AButton>\n                            </Fragment>\n                          }\n                        />\n                      </Grid>\n                    </Grid>\n                  )}\n                </Fragment>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ListTenants));\n"],"sourceRoot":""}