{"version":3,"file":"static/js/51.d010edb2.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from \"@mui/material\";\nimport { api } from \"api\";\nimport { Tier } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(expiryDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCExpirationDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <Switch\n            label=\"Status\"\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enabled}\n            value={\"user_enabled\"}\n            id=\"rule_status\"\n            name=\"rule_status\"\n            onChange={(e) => {\n              setEnabled(e.target.checked);\n            }}\n          />\n          <InputBox\n            id=\"id\"\n            name=\"id\"\n            label=\"Id\"\n            value={lifecycleRule.id}\n            onChange={() => {}}\n            disabled\n          />\n          <RadioGroup\n            currentValue={ilmType}\n            id=\"rule_type\"\n            name=\"rule_type\"\n            label=\"Rule Type\"\n            selectorOptions={[\n              { value: \"expiry\", label: \"Expiry\" },\n              { value: \"transition\", label: \"Transition\" },\n            ]}\n            onChange={() => {}}\n            disableOptions\n          />\n\n          <InputBox\n            id=\"object-version\"\n            name=\"object-version\"\n            label=\"Object Version\"\n            value={objectVersion}\n            onChange={() => {}}\n            disabled\n          />\n\n          {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n            <InputBox\n              type=\"number\"\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setExpiryDays(e.target.value);\n              }}\n              label=\"Expiry Days\"\n              value={expiryDays}\n              min=\"0\"\n            />\n          )}\n\n          {ilmType === \"expiry\" &&\n            lifecycleRule.expiration?.noncurrent_expiration_days && (\n              <InputBox\n                type=\"number\"\n                id=\"noncurrentversion_expiration_days\"\n                name=\"noncurrentversion_expiration_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setNCExpirationDays(e.target.value);\n                }}\n                label=\"Non-current Expiration Days\"\n                value={NCExpirationDays}\n                min=\"0\"\n              />\n            )}\n          {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n            <Fragment>\n              <InputBox\n                type=\"number\"\n                id=\"transition_days\"\n                name=\"transition_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTransitionDays(e.target.value);\n                }}\n                label=\"Transition Days\"\n                value={transitionDays}\n                min=\"0\"\n              />\n              <Select\n                label=\"Storage Class\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value);\n                }}\n                options={tiersList}\n              />\n            </Fragment>\n          )}\n\n          {ilmType === \"transition\" &&\n            lifecycleRule.transition?.noncurrent_transition_days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_transition_days\"\n                  name=\"noncurrentversion_transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCTransitionDays(e.target.value);\n                  }}\n                  label=\"Non-current Transition Days\"\n                  value={NCTransitionDays}\n                  min=\"0\"\n                />\n                <InputBox\n                  id=\"noncurrentversion_t_SC\"\n                  name=\"noncurrentversion_t_SC\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCTransitionSC(e.target.value);\n                  }}\n                  placeholder=\"Set Non-current Version Transition Storage Class\"\n                  label=\"Non-current Version Transition Storage Class\"\n                  value={NCTransitionSC}\n                />\n              </Fragment>\n            )}\n          <Grid item xs={12} sx={formFieldRowFilter}>\n            <Accordion>\n              <AccordionSummary>\n                <Typography>Filters</Typography>\n              </AccordionSummary>\n\n              <AccordionDetails>\n                <InputBox\n                  id=\"prefix\"\n                  name=\"prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPrefix(e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={prefix}\n                />\n                <QueryMultiSelector\n                  name=\"tags\"\n                  label=\"Tags\"\n                  elements={tags}\n                  onChange={(vl: string) => {\n                    setTags(vl);\n                  }}\n                  keyPlaceholder=\"Tag Key\"\n                  valuePlaceholder=\"Tag Value\"\n                  withBorder\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Grid>\n          {ilmType === \"expiry\" &&\n            lifecycleRule.expiration?.noncurrent_expiration_days && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion>\n                  <AccordionSummary>\n                    <Typography>Advanced</Typography>\n                  </AccordionSummary>\n\n                  <AccordionDetails>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            )}\n          <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n              label={\"Save\"}\n            />\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          )}\n        </FormLayout>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Button,\n  FormLayout,\n  InputBox,\n  LifecycleConfigIcon,\n  RadioGroup,\n  Select,\n  Grid,\n  ProgressBar,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from \"@mui/material\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n              />\n            )}\n\n            <InputBox\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <InputUnitMenu\n                  id={\"expire-current-unit\"}\n                  unitSelected={\"days\"}\n                  unitsList={[{ label: \"Days\", value: \"days\" }]}\n                  disabled={true}\n                />\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion>\n                <AccordionSummary>\n                  <Typography>Filters</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid item xs={12}>\n                    <InputBox\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                      label=\"Prefix\"\n                      value={prefix}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <QueryMultiSelector\n                      name=\"tags\"\n                      label=\"Tags\"\n                      elements={\"\"}\n                      onChange={(vl: string) => {\n                        setTags(vl);\n                      }}\n                      keyPlaceholder=\"Tag Key\"\n                      valuePlaceholder=\"Tag Value\"\n                      withBorder\n                    />\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion>\n                  <AccordionSummary>\n                    <Typography>Advanced</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <FormSwitchWrapper\n                        value=\"expired_delete_marker\"\n                        id=\"expired_delete_marker\"\n                        name=\"expired_delete_marker\"\n                        checked={expiredObjectDM}\n                        onChange={(\n                          event: React.ChangeEvent<HTMLInputElement>,\n                        ) => {\n                          setExpiredObjectDM(event.target.checked);\n                        }}\n                        label={\"Expire Delete Marker\"}\n                        description={\n                          \"Remove the reference to the object if no versions are left\"\n                        }\n                      />\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 || el.expiration.noncurrent_expiration_days)\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        Lifecycle Rules\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectorType } from \"mds\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","onCloseAndRefresh","deleteOpen","bucket","id","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","deletingRule","setDeletingRule","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_jsxs","Fragment","children","_lifecycleRule$expira10","_lifecycleRule$expira11","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$expira12","closeModalAndRefresh","selectedBucket","lifecycleRule","open","loadingTiers","setLoadingTiers","_useState3","_useState4","addLoading","setAddLoading","_useState5","_useState6","tags","setTags","_useState7","_useState8","enabled","setEnabled","_useState9","_useState10","tiersList","setTiersList","_useState11","_useState12","prefix","setPrefix","_useState13","_useState14","storageClass","setStorageClass","_useState15","_useState16","NCTransitionSC","setNCTransitionSC","_useState17","_useState18","expiredObjectDM","setExpiredObjectDM","_useState19","_useState20","NCExpirationDays","setNCExpirationDays","_useState21","_useState22","NCTransitionDays","setNCTransitionDays","_useState23","_useState24","ilmType","setIlmType","_useState25","_useState26","expiryDays","setExpiryDays","_useState27","_useState28","transitionDays","setTransitionDays","_useState29","_useState30","isFormValid","setIsFormValid","formFieldRowFilter","padding","admin","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","valid","_lifecycleRule$expira3","status","_lifecycleRule$transi","_lifecycleRule$transi2","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$expira","_lifecycleRule$expira2","transitionMode","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira4","_lifecycleRule$expira5","_lifecycleRule$expira6","expiry","parseInt","_objectSpread","_lifecycleRule$expira7","_lifecycleRule$expira8","_lifecycleRule$expira9","lifecycleUpdate","disable","expired_object_delete_marker","updateBucketLifecycle","setModalErrorSnackMessage","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","disabled","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","options","placeholder","Grid","item","xs","sx","Accordion","AccordionSummary","Typography","AccordionDetails","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","getBucketVersioning","container","lifecycleInsert","addBucketLifecycle","addRecord","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","FormSwitchWrapper","description","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","href","rel","StyledSwitch","withStyles","theme","root","width","height","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transitions","create","focusVisible","switchContainer","display","alignItems","justifyContent","createStyles","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","actionsTray","fieldBasic","_ref$label","_ref$checked","_ref$disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","classes","_ref$extraInputProps","extraInputProps","switchComponent","React","className","clsx","_defineProperty","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","textAlign","component","buttonTrigger","onUnitChange","_React$useState","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","unit","MenuItem","_ref$keyPlaceholder","_ref$valuePlaceholder","_ref$withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","_toConsumableArray","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","alignSelf","Box","style","overflowY","position","ref"],"sourceRoot":""}