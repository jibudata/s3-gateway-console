{"version":3,"file":"static/js/4061.8b0d3150.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n","import React, { useState } from \"react\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AddMembersToGroupIcon } from \"../../../icons\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ntype UserPickerModalProps = {\n  classes?: any;\n  title?: string;\n  preSelectedUsers?: string[];\n  selectedGroup?: string;\n  open: boolean;\n  onClose: () => void;\n  onSaveClick: () => void;\n  groupStatus?: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddGroupMember = ({\n  classes,\n  title = \"\",\n  groupStatus = \"enabled\",\n  preSelectedUsers = [],\n  selectedGroup = \"\",\n  open,\n  onClose,\n}: UserPickerModalProps) => {\n  const dispatch = useAppDispatch();\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\n\n  function addMembersToGroup() {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(selectedGroup)}`, {\n        group: selectedGroup,\n        members: selectedUsers,\n        status: groupStatus,\n      })\n      .then((res) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        onClose();\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={onClose}\n      title={title}\n      titleIcon={<AddMembersToGroupIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.formFieldRow}>\n            <PredefinedList label={`Selected Group`} content={selectedGroup} />\n          </div>\n          <div className={classes.userSelector}>\n            <UsersSelectors\n              selectedUsers={selectedUsers}\n              setSelectedUsers={setSelectedUsers}\n              editMode={!selectedGroup}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            setSelectedUsers(preSelectedUsers);\n          }}\n        >\n          Reset\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            addMembersToGroup();\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddGroupMember);\n","import React, { Fragment } from \"react\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport BackLink from \"../../../common/BackLink\";\n\nconst styles = (theme: Theme) => createStyles({});\n\ntype DetailsHeaderProps = {\n  classes: any;\n};\n\nconst GroupDetailsHeader = ({ classes }: DetailsHeaderProps) => {\n  return (\n    <PageHeader\n      label={\n        <Fragment>\n          <BackLink to={IAM_PAGES.GROUPS} label={\"Groups\"} />\n        </Fragment>\n      }\n      actions={<React.Fragment />}\n    />\n  );\n};\n\nexport default withStyles(styles)(GroupDetailsHeader);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport {\n  AddIcon,\n  GroupsIcon,\n  IAMPoliciesIcon,\n  TrashIcon,\n} from \"../../../icons\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../common/api\";\nimport SetPolicy from \"../Policies/SetPolicy\";\nimport AddGroupMember from \"./AddGroupMember\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { decodeURLString, encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n      width: \"100%\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".7rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".7rem\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 280,\n    },\n    ...tableStyles,\n    ...spacingUtils,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n\n      alignItems: \"center\",\n      \"& h1\": {\n        flex: 1,\n      },\n      \"& button\": {\n        marginLeft: \".8rem\",\n      },\n      \"@media (max-width: 900px)\": {\n        justifyContent: \"flex-end\",\n        \"& h1\": {\n          display: \"none\",\n        },\n        \"& button\": {\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n        },\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IGroupDetailsProps {\n  classes: any;\n}\n\ntype GroupInfo = {\n  members?: any[];\n  name?: string;\n  policy?: string;\n  status?: string;\n};\n\nexport const formatPolicy = (policy: string = \"\"): string[] => {\n  if (policy.length <= 0) return [];\n  return policy.split(\",\");\n};\n\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\n\n  /*Modals*/\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\n\n  const groupName = decodeURLString(params.groupName || \"\");\n\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\n\n  const filteredMembers = members.filter((elementItem) =>\n    elementItem.includes(memberFilter)\n  );\n\n  useEffect(() => {\n    if (groupName) {\n      fetchGroupInfo();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupName]);\n\n  const groupPolicies = formatPolicy(policy);\n  const isGroupEnabled = groupEnabled === \"enabled\";\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\n\n  const getGroupDetails = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_GROUP,\n  ]);\n\n  function fetchGroupInfo() {\n    if (getGroupDetails) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(groupName)}`)\n        .then((res: any) => {\n          setGroupDetails(res);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setGroupDetails({});\n        });\n    }\n  }\n\n  function toggleGroupStatus(nextStatus: boolean) {\n    return api\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(groupName)}`, {\n        group: groupName,\n        members: members,\n        status: nextStatus ? \"enabled\" : \"disabled\",\n      })\n      .then((res) => {\n        fetchGroupInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }\n\n  const groupsTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Members</PanelTitle>\n        <SearchBox\n          placeholder={\"Search members\"}\n          onChange={(searchText) => {\n            setMemberFilter(searchText);\n          }}\n          overrideClass={classes.searchField}\n          value={memberFilter}\n        />\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP]}\n          errorProps={{ disabled: true }}\n        >\n          <RBIconButton\n            tooltip={memberActionText}\n            text={memberActionText}\n            variant=\"contained\"\n            color=\"primary\"\n            icon={<AddIcon />}\n            onClick={() => {\n              setUsersOpen(true);\n            }}\n          />\n        </SecureComponent>\n      </div>\n\n      <div className={classes.tableBlock}>\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_LIST_USERS]}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            itemActions={[\n              {\n                type: \"view\",\n                onClick: (userName) => {\n                  navigate(`${IAM_PAGES.USERS}/${encodeURLString(userName)}`);\n                },\n              },\n            ]}\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\n            selectedItems={[]}\n            isLoading={false}\n            records={filteredMembers}\n            entityName=\"Users\"\n            idField=\"\"\n          />\n        </SecureComponent>\n      </div>\n    </React.Fragment>\n  );\n\n  const policiesTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Policies</PanelTitle>\n\n        <RBIconButton\n          tooltip={`Set Policies`}\n          text={`Set Policies`}\n          variant=\"contained\"\n          color=\"primary\"\n          icon={<IAMPoliciesIcon />}\n          onClick={() => {\n            setPolicyOpen(true);\n          }}\n        />\n      </div>\n      <div className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={[\n            {\n              type: \"view\",\n              onClick: (policy) => {\n                navigate(`${IAM_PAGES.POLICIES}/${encodeURLString(policy)}`);\n              },\n            },\n          ]}\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\n          isLoading={false}\n          records={groupPolicies}\n          entityName=\"Policies\"\n          idField=\"\"\n        />\n      </div>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <GroupDetailsHeader />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <GroupsIcon width={40} />\n              </Fragment>\n            }\n            title={groupName}\n            subTitle={null}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>Group Status:</span>\n                <span id=\"group-status\" className={classes.statusValue}>\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[\n                    IAM_SCOPES.ADMIN_ENABLE_GROUP,\n                    IAM_SCOPES.ADMIN_DISABLE_GROUP,\n                  ]}\n                  errorProps={{ disabled: true }}\n                  matchAll\n                >\n                  <FormSwitchWrapper\n                    indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                    checked={isGroupEnabled}\n                    value={\"group_enabled\"}\n                    id=\"group-status\"\n                    name=\"group-status\"\n                    onChange={() => {\n                      toggleGroupStatus(!isGroupEnabled);\n                    }}\n                    switchOnly\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[IAM_SCOPES.ADMIN_REMOVE_USER_FROM_GROUP]}\n                  errorProps={{ disabled: true }}\n                >\n                  <div className={classes.spacerLeft}>\n                    <RBIconButton\n                      tooltip={`Delete Group`}\n                      text={``}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setDeleteOpen(true);\n                      }}\n                    />\n                  </div>\n                </SecureComponent>\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: { label: \"Members\" },\n              content: groupsTabContent,\n            }}\n            {{\n              tabConfig: { label: \"Policies\" },\n              content: policiesTabContent,\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n      {/*Modals*/}\n      {policyOpen ? (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={[groupName]}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {usersOpen ? (\n        <AddGroupMember\n          selectedGroup={groupName}\n          onSaveClick={() => {}}\n          title={memberActionText}\n          groupStatus={groupEnabled}\n          preSelectedUsers={members}\n          open={usersOpen}\n          onClose={() => {\n            setUsersOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={[groupName]}\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\n            setDeleteOpen(false);\n            if (isDelSuccess) {\n              navigate(IAM_PAGES.GROUPS);\n            }\n          }}\n        />\n      )}\n      {/*Modals*/}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(GroupsDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport { useSelector } from \"react-redux\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n}: ISelectPolicyProps) => {\n  const dispatch = useAppDispatch();\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    dispatch(setSelectedPolicies(elements));\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for a Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={classes.tableBlock}\n              style={{ paddingBottom: 16 }}\n            >\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={currentPolicies}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(PolicySelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\n\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\n\nimport { useSelector } from \"react-redux\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroups: string[] | null;\n  open: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroups,\n  open,\n}: ISetPolicyProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n  const setPolicyAction = () => {\n    let users = null;\n    let groups = null;\n    if (selectedGroups !== null) {\n      groups = selectedGroups;\n    } else {\n      if (selectedUser !== null) {\n        users = [selectedUser.accessKey] || [\" \"];\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy-multi`, {\n        name: currentPolicies,\n        groups: groups,\n        users: users,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroups?.length === 1) {\n      api\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(selectedGroups[0])}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setModalErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroups?.length === 1) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroups?.length, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid container>\n        {(selectedGroups?.length === 1 || selectedUser != null) && (\n          <Fragment>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={`Selected ${selectedGroups !== null ? \"Group\" : \"User\"}`}\n                content={selectedGroups !== null ? selectedGroups[0] : userName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <PredefinedList\n                label={\"Current Policy\"}\n                content={actualPolicy.join(\", \")}\n              />\n            </Grid>\n          </Fragment>\n        )}\n        {selectedGroups && selectedGroups?.length > 1 && (\n          <PredefinedList\n            label={\"Selected Groups\"}\n            content={selectedGroups.join(\", \")}\n          />\n        )}\n        <Grid item xs={12}>\n          <div className={classes.tableBlock}>\n            <PolicySelectors selectedPolicy={selectedPolicy} />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n        >\n          Reset\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(SetPolicy);\n"],"names":["withStyles","theme","createStyles","predefinedList","classes","label","content","multiLine","actionButton","Fragment","className","prefinedContainer","item","xs","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","deleteDialogStyles","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","root","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","margin","fontSize","Context","React","TabContext","props","value","idPrefix","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","name","overridesResolver","styles","spacing","inProps","useThemeProps","ownerState","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","tabStripStyle","minHeight","tabsContainer","display","height","tabsHeaderContainer","background","borderRight","flexFlow","alignItems","justifyContent","borderBottom","marginRight","marginBottom","fontWeight","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","push","tabConfig","Box","onChange","newValue","orientation","variant","scrollButtons","tabList","map","index","Tab","tabHeader","style","disableTouchRipple","focusRipple","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","group","confirmText","isOpen","isLoading","onConfirm","encodeURLString","confirmationContent","userSelector","modalStyleUtils","formFieldStyles","modalBasic","groupStatus","preSelectedUsers","selectedGroup","selectedUsers","setSelectedUsers","ModalWrapper","Grid","container","formFieldRow","PredefinedList","UsersSelectors","editMode","modalButtonBar","Button","color","api","members","status","then","res","catch","setModalErrorSnackMessage","PageHeader","BackLink","to","IAM_PAGES","actions","formatPolicy","policy","split","pageContainer","border","statusLabel","statusValue","searchField","tableStyles","spacingUtils","actionsTray","flex","marginLeft","whiteSpace","textOverflow","containerForHeader","navigate","useNavigate","params","useParams","groupDetails","setGroupDetails","policyOpen","setPolicyOpen","usersOpen","setUsersOpen","setDeleteOpen","memberFilter","setMemberFilter","groupName","decodeURLString","groupEnabled","filteredMembers","filter","elementItem","includes","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","groupsTabContent","PanelTitle","SearchBox","placeholder","searchText","overrideClass","SecureComponent","resource","scopes","errorProps","disabled","RBIconButton","tooltip","text","icon","tableBlock","TableWrapper","itemActions","userName","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","PageLayout","ScreenTitle","subTitle","matchAll","FormSwitchWrapper","indicatorLabels","checked","nextStatus","switchOnly","spacerLeft","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","onSaveClick","DeleteGroup","isDelSuccess","noFound","textAlign","searchBox","fieldLabel","filterBox","selectorsCommon","selectedPolicy","setRecords","loading","setFilter","currentPolicies","createUser","selectedPolicies","fetchPolicies","useCallback","policies","sort","policySort","filteredRecords","onSelect","e","targetD","target","elements","element","setSelectedPolicies","customPaperHeight","multiSelectTable","marginTop","buttonContainer","setLoading","actualPolicy","setActualPolicy","setSelectedPolicy","groupPolicy","get","userPolicy","join","spacerRight","users","groups","accessKey"],"sourceRoot":""}