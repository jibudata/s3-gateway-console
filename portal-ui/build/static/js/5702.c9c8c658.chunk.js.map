{"version":3,"file":"static/js/5702.c9c8c658.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/BucketEventsPanel.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport { AddIcon, Button, HelpBox, LambdaIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { BucketEvent, BucketEventList } from \"../types\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../../common/api\";\n\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst DeleteEvent = withSuspense(React.lazy(() => import(\"./DeleteEvent\")));\nconst AddEvent = withSuspense(React.lazy(() => import(\"./AddEvent\")));\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketEventsProps {\n  classes: any;\n}\n\nconst BucketEventsPanel = ({ classes }: IBucketEventsProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n\n  const [addEventScreenOpen, setAddEventScreenOpen] = useState<boolean>(false);\n  const [loadingEvents, setLoadingEvents] = useState<boolean>(true);\n  const [records, setRecords] = useState<BucketEvent[]>([]);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedEvent, setSelectedEvent] = useState<BucketEvent | null>(null);\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayEvents = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_NOTIFICATIONS,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingEvents(true);\n    }\n  }, [loadingBucket, setLoadingEvents]);\n\n  useEffect(() => {\n    if (loadingEvents) {\n      if (displayEvents) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/events`)\n          .then((res: BucketEventList) => {\n            const events = get(res, \"events\", []);\n            setLoadingEvents(false);\n            setRecords(events || []);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingEvents(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setLoadingEvents(false);\n      }\n    }\n  }, [loadingEvents, dispatch, bucketName, displayEvents]);\n\n  const eventsDisplay = (events: string[]) => {\n    return <Fragment>{events.join(\", \")}</Fragment>;\n  };\n\n  const confirmDeleteEvent = (evnt: BucketEvent) => {\n    setDeleteOpen(true);\n    setSelectedEvent(evnt);\n  };\n\n  const closeAddEventAndRefresh = () => {\n    setAddEventScreenOpen(false);\n    setLoadingEvents(true);\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    if (refresh) {\n      setLoadingEvents(true);\n    }\n  };\n\n  const tableActions = [{ type: \"delete\", onClick: confirmDeleteEvent }];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteEvent\n          deleteOpen={deleteOpen}\n          selectedBucket={bucketName}\n          bucketEvent={selectedEvent}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      {addEventScreenOpen && (\n        <AddEvent\n          open={addEventScreenOpen}\n          selectedBucket={bucketName}\n          closeModalAndRefresh={closeAddEventAndRefresh}\n        />\n      )}\n\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Events</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_BUCKET_NOTIFICATIONS,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n              IAM_SCOPES.ADMIN_SERVER_INFO,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Subscribe to Event\"}>\n              <Button\n                id={\"Subscribe-bucket-event\"}\n                onClick={() => {\n                  setAddEventScreenOpen(true);\n                }}\n                label={\"Subscribe to Event\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_BUCKET_NOTIFICATIONS,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={tableActions}\n              columns={[\n                { label: \"SQS\", elementKey: \"arn\" },\n                {\n                  label: \"Events\",\n                  elementKey: \"events\",\n                  renderFunction: eventsDisplay,\n                },\n                { label: \"Prefix\", elementKey: \"prefix\" },\n                { label: \"Suffix\", elementKey: \"suffix\" },\n              ]}\n              isLoading={loadingEvents}\n              records={records}\n              entityName=\"Events\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingEvents && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Event Notifications\"}\n              iconComponent={<LambdaIcon />}\n              help={\n                <Fragment>\n                  MinIO bucket notifications allow administrators to send\n                  notifications to supported external services on certain object\n                  or bucket events. MinIO supports bucket and object-level S3\n                  events similar to the Amazon S3 Event Notifications.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/monitoring/bucket-notifications.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(BucketEventsPanel);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["DeleteEvent","withSuspense","React","AddEvent","withStyles","theme","createStyles","searchField","actionsTray","twHeight","minHeight","classes","dispatch","useAppDispatch","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","useState","addEventScreenOpen","setAddEventScreenOpen","loadingEvents","setLoadingEvents","records","setRecords","deleteOpen","setDeleteOpen","selectedEvent","setSelectedEvent","bucketName","displayEvents","hasPermission","IAM_SCOPES","useEffect","api","then","res","events","get","catch","err","setErrorSnackMessage","tableActions","type","onClick","evnt","Fragment","selectedBucket","bucketEvent","closeDeleteModalAndRefresh","refresh","open","closeModalAndRefresh","container","item","xs","className","scopes","resource","matchAll","errorProps","disabled","tooltip","id","label","icon","variant","itemActions","columns","elementKey","renderFunction","join","isLoading","entityName","idField","customPaperHeight","title","iconComponent","help","href","target","rel","root","padding","margin","fontSize","children"],"sourceRoot":""}