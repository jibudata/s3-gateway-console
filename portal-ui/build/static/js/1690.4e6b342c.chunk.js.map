{"version":3,"file":"static/js/1690.4e6b342c.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/TabSelector/TabSelector.tsx","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx","screens/Console/IDP/AddIDPConfigurationHelpbox.tsx","screens/Console/IDP/LDAP/LDAPResultsBlock.tsx","screens/Console/IDP/LDAP/LDAPEntitiesQuery.tsx","screens/Console/IDP/LDAP/IDPLDAPConfigurationDetails.tsx","screens/Console/IDP/utils.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/shared/tabs.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { ITabOption } from \"./types\";\n\ninterface ITabSelector {\n  selectedTab: number;\n  onChange: (newValue: number) => void;\n  tabOptions: ITabOption[];\n}\n\nconst tabSubStyles = makeStyles({\n  tabRoot: {\n    height: \"40px\",\n    borderBottom: \"1px solid #eaeaea\",\n  },\n  root: {\n    width: \"120px\",\n    backgroundColor: \"transparent\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: \"14px\",\n    fontWeight: 600,\n    color: \"#07193E\",\n    height: \"40px\",\n  },\n  selected: {\n    \"&.MuiTab-selected\": {\n      backgroundColor: \"#F6F7F7 !important\",\n    },\n    \"&.MuiTab-wrapper\": {\n      color: \"#07193E\",\n      fontWeight: 600,\n    },\n  },\n  indicator: {\n    background:\n      \"transparent linear-gradient(90deg, #072B4E 0%, #081C42 100%) 0% 0% no-repeat padding-box;\",\n    height: 2,\n  },\n  scroller: {\n    maxWidth: 1185,\n    position: \"relative\",\n    \"&::after\": {\n      content: '\" \"',\n      backgroundColor: \"#EEF1F4\",\n      height: 2,\n      width: \"100%\",\n      display: \"block\",\n    },\n  },\n});\n\nconst TabSelector = ({ selectedTab, onChange, tabOptions }: ITabSelector) => {\n  const subStyles = tabSubStyles();\n\n  return (\n    <Fragment>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"cluster-tabs\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        value={selectedTab}\n        onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n          onChange(newValue);\n        }}\n        classes={{\n          root: subStyles.tabRoot,\n          indicator: subStyles.indicator,\n          scroller: subStyles.scroller,\n        }}\n      >\n        {tabOptions.map((option, index) => {\n          let tabOptions: ITabOption = {\n            label: option.label,\n          };\n\n          if (option.value) {\n            tabOptions = { ...tabOptions, value: option.value };\n          }\n\n          if (option.disabled) {\n            tabOptions = { ...tabOptions, disabled: option.disabled };\n          }\n\n          return (\n            <Tab\n              {...tabOptions}\n              classes={{\n                root: subStyles.root,\n                selected: subStyles.selected,\n              }}\n              id={`simple-tab-${index}`}\n              aria-controls={`simple-tabpanel-${index}`}\n              key={`tab-${index}-${option.label}`}\n            />\n          );\n        })}\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default TabSelector;\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {resetLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b className={classes.wrapText}>\n              Please note that this may cause your system to not be accessible\n            </b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(ResetConfigurationModal);\n","import React, { Fragment } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IContent {\n  icon: React.ReactNode;\n  text: string;\n  iconDescription: string;\n}\n\ninterface IAddIDPConfigurationHelpBoxProps {\n  helpText: string;\n  docLink: string;\n  docText: string;\n  contents: IContent[];\n}\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\n\nconst AddIDPConfigurationHelpBox = ({\n  helpText,\n  docLink,\n  docText,\n  contents,\n}: IAddIDPConfigurationHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content, index) => (\n          <Fragment key={`feature-item-${index}`}>\n            {content.icon && (\n              <Box sx={{ paddingBottom: \"20px\" }}>\n                <FeatureItem\n                  icon={content.icon}\n                  description={content.iconDescription}\n                />\n              </Box>\n            )}\n            <Box sx={{ paddingBottom: \"20px\" }}>{content.text}</Box>\n          </Fragment>\n        ))}\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <a href={docLink} target=\"_blank\" rel=\"noopener\">\n            {docText}\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddIDPConfigurationHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, CollapseCaret, GroupsMenuIcon, SectionTitle } from \"mds\";\nimport { LDAPEntitiesResponse } from \"./types\";\n\ninterface IResultBlock {\n  entityName: \"Group\" | \"User\" | \"Policy\";\n  results: LDAPEntitiesResponse;\n}\n\ninterface IEntityResultName {\n  name: string;\n}\n\ninterface IEntityResultItem {\n  blockName: \"Policies\" | \"Groups\" | \"Users\";\n  results: string[];\n}\n\nconst EntityResultTitle = ({ name }: IEntityResultName) => {\n  return (\n    <h4>\n      <CollapseCaret style={{ transform: \"rotateZ(90deg)\" }} />\n      {name}\n    </h4>\n  );\n};\n\nconst EntityResultItems = ({ blockName, results }: IEntityResultItem) => {\n  return (\n    <Fragment>\n      <strong>{blockName}:</strong>\n      <ul>\n        {results.map((res, index) => (\n          <li key={`policy-${blockName}-${index}`}>{res}</li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nconst LDAPResultsBlock = ({ entityName, results }: IResultBlock) => {\n  let entityLength = 0;\n\n  switch (entityName) {\n    case \"Group\":\n      entityLength = results.groups?.length || 0;\n      break;\n    case \"Policy\":\n      entityLength = results.policies?.length || 0;\n      break;\n    case \"User\":\n      entityLength = results.users?.length || 0;\n      break;\n  }\n\n  return (\n    <Box\n      className={\"resultElement\"}\n      sx={{\n        marginTop: 50,\n        \"&:first-of-type\": {\n          marginTop: 0,\n        },\n      }}\n    >\n      <SectionTitle\n        separator\n        sx={{ fontSize: 12 }}\n        icon={<GroupsMenuIcon style={{ width: 17, height: 17 }} />}\n        actions={\n          <Box sx={{ fontSize: 14 }}>\n            <strong>{entityLength}</strong> Entit\n            {entityLength === 1 ? \"y\" : \"ies\"} Found\n          </Box>\n        }\n      >\n        {entityName} Mappings\n      </SectionTitle>\n      <Box\n        className={\"resultsList\"}\n        sx={{\n          h4: {\n            borderBottom: \"#e2e2e2 1px solid\",\n            padding: \"12px 0\",\n            margin: 0,\n            marginBottom: 15,\n            display: \"flex\",\n            alignItems: \"center\",\n            \"& svg\": {\n              marginRight: 10,\n              fill: \"#3C77A7\",\n            },\n          },\n        }}\n      >\n        {entityName === \"Group\" &&\n          results.groups?.map((groupData, index) => {\n            return (\n              <Fragment key={`policy-res-${index}`}>\n                <EntityResultTitle name={groupData.group} />\n                {groupData.policies && (\n                  <EntityResultItems\n                    blockName={\"Policies\"}\n                    results={groupData.policies}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n        {entityName === \"User\" &&\n          results.users?.map((groupData, index) => {\n            return (\n              <Fragment key={`users-res-${index}`}>\n                <EntityResultTitle name={groupData.user} />\n                {groupData.policies && (\n                  <EntityResultItems\n                    blockName={\"Policies\"}\n                    results={groupData.policies}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n        {entityName === \"Policy\" &&\n          results.policies?.map((groupData, index) => {\n            return (\n              <Fragment key={`policy-map-${index}`}>\n                <EntityResultTitle name={groupData.policy} />\n                {groupData.groups && (\n                  <EntityResultItems\n                    blockName={\"Groups\"}\n                    results={groupData.groups}\n                  />\n                )}\n                {groupData.users && (\n                  <EntityResultItems\n                    blockName={\"Users\"}\n                    results={groupData.users}\n                  />\n                )}\n              </Fragment>\n            );\n          })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default LDAPResultsBlock;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport {\n  AddIcon,\n  Box,\n  Button,\n  Grid,\n  InputBox,\n  Loader,\n  RemoveIcon,\n  SearchIcon,\n  SectionTitle,\n  TimeIcon,\n} from \"mds\";\nimport PolicySelectors from \"../../Policies/PolicySelectors\";\nimport { useSelector } from \"react-redux\";\nimport { LDAPEntitiesResponse } from \"./types\";\nimport { DateTime } from \"luxon\";\nimport LDAPResultsBlock from \"./LDAPResultsBlock\";\n\nconst LDAPEntitiesQuery = () => {\n  const dispatch = useAppDispatch();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [users, setUsers] = useState<string[]>([\"\"]);\n  const [groups, setGroups] = useState<string[]>([\"\"]);\n  const [results, setResults] = useState<LDAPEntitiesResponse | null>(null);\n\n  const selectedPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n\n  const searchEntities = () => {\n    setLoading(true);\n\n    let data: any = {};\n\n    let cleanPolicies = selectedPolicies.filter((pol) => pol !== \"\");\n    let cleanUsers = users.filter((usr) => usr !== \"\");\n    let cleanGroups = groups.filter((grp) => grp !== \"\");\n\n    if (cleanPolicies.length > 0) {\n      data[\"policies\"] = cleanPolicies;\n    }\n\n    if (cleanUsers.length > 0) {\n      data[\"users\"] = cleanUsers;\n    }\n\n    if (cleanGroups.length > 0) {\n      data[\"groups\"] = cleanGroups;\n    }\n\n    api\n      .invoke(\"POST\", \"/api/v1/ldap-entities\", data)\n      .then((result: LDAPEntitiesResponse) => {\n        setResults(result);\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n      });\n  };\n\n  const alterUsersList = (addItem: boolean, index: number) => {\n    if (addItem) {\n      const alterUsers = [...users, \"\"];\n      setUsers(alterUsers);\n\n      return;\n    }\n\n    const filteredUsers = users.filter((_, indx) => indx !== index);\n\n    setUsers(filteredUsers);\n  };\n\n  const alterGroupsList = (addItem: boolean, index: number) => {\n    if (addItem) {\n      const alterGroups = [...groups, \"\"];\n      setGroups(alterGroups);\n\n      return;\n    }\n\n    const filteredGroups = groups.filter((_, indx) => indx !== index);\n\n    setGroups(filteredGroups);\n  };\n\n  return (\n    <Box sx={{ marginTop: 15, paddingTop: 0 }}>\n      <Grid container sx={{ marginTop: 5 }}>\n        <Grid item sm={12} md={6} lg={5} sx={{ padding: 10, paddingTop: 0 }}>\n          <SectionTitle>Query Filters</SectionTitle>\n\n          <Box\n            sx={{\n              padding: \"0 10px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 40,\n            }}\n          >\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <Box sx={{ display: \"flex\" }}>\n                <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                  Users\n                </h4>\n              </Box>\n              <Box\n                sx={{\n                  overflowY: \"auto\",\n                  minHeight: 50,\n                  maxHeight: 250,\n                  \"& > div > div\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                {users.map((userDat, index) => {\n                  return (\n                    <InputBox\n                      id={`search-user-${index}`}\n                      key={`search-user-${index}`}\n                      value={userDat}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        const usersElements = [...users];\n                        usersElements[index] = e.target.value;\n                        setUsers(usersElements);\n                      }}\n                      overlayIcon={\n                        users.length === index + 1 ? (\n                          <AddIcon />\n                        ) : (\n                          <RemoveIcon />\n                        )\n                      }\n                      overlayAction={() => {\n                        alterUsersList(users.length === index + 1, index);\n                      }}\n                    />\n                  );\n                })}\n              </Box>\n            </Box>\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                Groups\n              </h4>\n              <Box\n                sx={{\n                  overflowY: \"auto\",\n                  minHeight: 50,\n                  maxHeight: \"calc(100vh - 340px)\",\n                  \"& > div > div\": {\n                    width: \"100%\",\n                  },\n                }}\n              >\n                {groups.map((groupDat, index) => {\n                  return (\n                    <InputBox\n                      id={`search-group-${index}`}\n                      key={`search-group-${index}`}\n                      value={groupDat}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        const groupsElements = [...groups];\n                        groupsElements[index] = e.target.value;\n                        setGroups(groupsElements);\n                      }}\n                      overlayIcon={\n                        groups.length === index + 1 ? (\n                          <AddIcon />\n                        ) : (\n                          <RemoveIcon />\n                        )\n                      }\n                      overlayAction={() => {\n                        alterGroupsList(groups.length === index + 1, index);\n                      }}\n                    />\n                  );\n                })}\n              </Box>\n            </Box>\n            <Box sx={{ padding: \"10px 26px\" }} withBorders>\n              <h4 style={{ margin: 0, marginBottom: 10, fontSize: 14 }}>\n                Policies\n              </h4>\n              <Box\n                sx={{\n                  minHeight: 265,\n                  maxHeight: \"calc(100vh - 740px)\",\n                }}\n              >\n                <PolicySelectors selectedPolicy={selectedPolicies} noTitle />\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid\n          item\n          sm={12}\n          md={6}\n          lg={7}\n          sx={{\n            padding: 10,\n            paddingTop: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {loading ? (\n            <Box sx={{ textAlign: \"center\" }}>\n              <Loader />\n            </Box>\n          ) : (\n            <Fragment>\n              <SectionTitle\n                actions={\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      fontSize: 14,\n                    }}\n                  >\n                    {results?.timestamp ? (\n                      <Fragment>\n                        <TimeIcon\n                          style={{\n                            width: 14,\n                            height: 14,\n                            marginRight: 5,\n                            fill: \"#BEBFBF\",\n                          }}\n                        />\n                        {DateTime.fromISO(results.timestamp).toFormat(\n                          \"D HH:mm:ss\"\n                        )}\n                      </Fragment>\n                    ) : (\n                      \"\"\n                    )}\n                  </Box>\n                }\n              >\n                Query Results\n              </SectionTitle>\n              {results ? (\n                <Box\n                  sx={{\n                    backgroundColor: \"#FBFAFA\",\n                    padding: \"8px 22px\",\n                    flexGrow: 1,\n                    overflowY: \"auto\",\n                  }}\n                >\n                  {!results.groups && !results.users && !results.policies && (\n                    <Box sx={{ textAlign: \"center\" }}>\n                      <h4>No Results Available</h4>\n                    </Box>\n                  )}\n                  {!!results.groups && (\n                    <LDAPResultsBlock results={results} entityName={\"Group\"} />\n                  )}\n                  {!!results.users && (\n                    <LDAPResultsBlock results={results} entityName={\"User\"} />\n                  )}\n                  {!!results.policies && (\n                    <LDAPResultsBlock results={results} entityName={\"Policy\"} />\n                  )}\n                </Box>\n              ) : (\n                <Box sx={{ textAlign: \"center\" }}>No query results yet</Box>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            marginTop: 45,\n            padding: \"0 20px\",\n          }}\n        >\n          <Button\n            id={\"search-entity\"}\n            type={\"button\"}\n            variant={\"callAction\"}\n            onClick={searchEntities}\n            icon={<SearchIcon />}\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default LDAPEntitiesQuery;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  EditIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  Loader,\n  PageLayout,\n  RefreshIcon,\n} from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport api from \"../../../../common/api\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport LabelValuePair from \"../../Common/UsageBarWrapper/LabelValuePair\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { ldapFormFields, ldapHelpBoxContents } from \"../utils\";\nimport AddIDPConfigurationHelpBox from \"../AddIDPConfigurationHelpbox\";\nimport LDAPEntitiesQuery from \"./LDAPEntitiesQuery\";\nimport ResetConfigurationModal from \"../../EventDestinations/CustomForms/ResetConfigurationModal\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport { TabPanel } from \"../../../shared/tabs\";\nimport TabSelector from \"../../Common/TabSelector/TabSelector\";\n\nconst enabledConfigLDAP = [\n  \"server_addr\",\n  \"lookup_bind_dn\",\n  \"lookup_bind_password\",\n  \"user_dn_search_base_dn\",\n  \"user_dn_search_filter\",\n];\n\nconst IDPLDAPConfigurationDetails = () => {\n  const dispatch = useAppDispatch();\n\n  const formFields = ldapFormFields;\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isEnabled, setIsEnabled] = useState<boolean>(false);\n  const [hasConfiguration, setHasConfiguration] = useState<boolean>(false);\n  const [fields, setFields] = useState<any>({});\n  const [record, setRecord] = useState<IElementValue[] | null>(null);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [resetOpen, setResetOpen] = useState<boolean>(false);\n  const [curTab, setCurTab] = useState<number>(0);\n\n  const toggleEditMode = () => {\n    if (editMode && record) {\n      parseFields(record);\n    }\n    setEditMode(!editMode);\n  };\n\n  const parseFields = (record: IElementValue[]) => {\n    let fields: any = {};\n    if (record && record.length > 0) {\n      const enabled = record.find((item: any) => item.key === \"enable\");\n\n      let totalCoincidences = 0;\n\n      record.forEach((item: any) => {\n        fields[item.key] = item.value;\n\n        if (\n          enabledConfigLDAP.includes(item.key) &&\n          item.value &&\n          item.value !== \"\" &&\n          item.value !== \"off\"\n        ) {\n          totalCoincidences++;\n        }\n      });\n\n      const hasConfig = totalCoincidences === enabledConfigLDAP.length;\n\n      if ((!enabled || enabled.value === \"on\") && hasConfig) {\n        setIsEnabled(true);\n      } else {\n        setIsEnabled(false);\n      }\n\n      setHasConfiguration(hasConfig);\n    }\n    setFields(fields);\n  };\n\n  useEffect(() => {\n    const loadRecord = () => {\n      api\n        .invoke(\"GET\", `/api/v1/configs/identity_ldap`)\n        .then((res: IConfigurationSys[]) => {\n          if (res.length > 0) {\n            setRecord(res[0].key_values);\n            parseFields(res[0].key_values);\n          }\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    };\n\n    if (loading) {\n      loadRecord();\n    }\n  }, [dispatch, loading]);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(formFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const saveRecord = () => {\n    const keyVals = Object.keys(formFields).map((key) => {\n      return {\n        key,\n        value: fields[key],\n      };\n    });\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/identity_ldap`, {\n        key_values: keyVals,\n      })\n      .then((res) => {\n        setEditMode(false);\n        setRecord(keyVals);\n        parseFields(keyVals);\n        dispatch(setServerNeedsRestart(res.restart));\n\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setResetOpen(false);\n\n    if (refresh) {\n      dispatch(setServerNeedsRestart(refresh));\n      setRecord(null);\n      setFields({});\n      setIsEnabled(false);\n      setHasConfiguration(false);\n      setEditMode(false);\n    }\n  };\n\n  const toggleConfiguration = (value: boolean) => {\n    const payload = {\n      key_values: [\n        {\n          key: \"enable\",\n          value: value ? \"on\" : \"off\",\n        },\n      ],\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/identity_ldap`, payload)\n      .then((res) => {\n        setIsEnabled(!isEnabled);\n        dispatch(setServerNeedsRestart(res.restart));\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const renderFormField = (key: string, value: any) => {\n    switch (value.type) {\n      case \"toggle\":\n        return (\n          <Box className={\"inputItem\"}>\n            <FormSwitchWrapper\n              key={key}\n              indicatorLabels={[\"Enabled\", \"Disabled\"]}\n              checked={fields[key] === \"on\"}\n              value={\"is-field-enabled\"}\n              id={\"is-field-enabled\"}\n              name={\"is-field-enabled\"}\n              label={value.label}\n              tooltip={value.tooltip}\n              onChange={(e) =>\n                setFields({ ...fields, [key]: e.target.checked ? \"on\" : \"off\" })\n              }\n              description=\"\"\n              disabled={!editMode}\n            />\n          </Box>\n        );\n      default:\n        return (\n          <InputBox\n            key={key}\n            id={key}\n            required={value.required}\n            name={key}\n            label={value.label}\n            tooltip={value.tooltip}\n            error={value.hasError(fields[key], editMode)}\n            value={fields[key] ? fields[key] : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setFields({ ...fields, [key]: e.target.value })\n            }\n            placeholder={value.placeholder}\n            disabled={!editMode}\n            type={value.type}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      {resetOpen && (\n        <ResetConfigurationModal\n          configurationName={\"identity_ldap\"}\n          closeResetModalAndRefresh={closeDeleteModalAndRefresh}\n          resetOpen={resetOpen}\n        />\n      )}\n      <PageHeaderWrapper label={\"LDAP\"} />\n      <PageLayout variant={\"constrained\"}>\n        <TabSelector\n          selectedTab={curTab}\n          onChange={(newValue: number) => {\n            setCurTab(newValue);\n            setEditMode(false);\n          }}\n          tabOptions={[\n            { label: \"Configuration\" },\n            {\n              label: \"Entities\",\n              disabled: !hasConfiguration || !isEnabled,\n            },\n          ]}\n        />\n        <TabPanel index={0} value={curTab}>\n          <ScreenTitle\n            title={editMode ? \"Edit Configuration\" : \"\"}\n            actions={\n              !editMode ? (\n                <Fragment>\n                  <Button\n                    id={\"edit\"}\n                    type=\"button\"\n                    variant={\"callAction\"}\n                    icon={<EditIcon />}\n                    onClick={toggleEditMode}\n                    label={\"Edit Configuration\"}\n                    disabled={loading}\n                  />\n                  {hasConfiguration && (\n                    <Button\n                      id={\"is-configuration-enabled\"}\n                      onClick={() => toggleConfiguration(!isEnabled)}\n                      label={isEnabled ? \"Disable LDAP\" : \"Enable LDAP\"}\n                      variant={isEnabled ? \"secondary\" : \"regular\"}\n                    />\n                  )}\n                  <Button\n                    id={\"refresh-idp-config\"}\n                    onClick={() => setLoading(true)}\n                    label={\"Refresh\"}\n                    icon={<RefreshIcon />}\n                  />\n                </Fragment>\n              ) : null\n            }\n          />\n          <br />\n          {loading ? (\n            <Box\n              sx={{ display: \"flex\", justifyContent: \"center\", marginTop: 10 }}\n            >\n              <Loader />\n            </Box>\n          ) : (\n            <Fragment>\n              {editMode ? (\n                <Fragment>\n                  <FormLayout\n                    helpBox={\n                      <AddIDPConfigurationHelpBox\n                        helpText={\"Learn more about LDAP Configurations\"}\n                        contents={ldapHelpBoxContents}\n                        docLink={\n                          \"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-ad-ldap\"\n                        }\n                        docText={\"Learn more about LDAP Configurations\"}\n                      />\n                    }\n                  >\n                    {Object.entries(formFields).map(([key, value]) =>\n                      renderFormField(key, value)\n                    )}\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-end\",\n                        marginTop: \"20px\",\n                        gap: \"15px\",\n                      }}\n                    >\n                      {editMode && (\n                        <Button\n                          id={\"clear\"}\n                          type=\"button\"\n                          variant=\"secondary\"\n                          onClick={() => setResetOpen(true)}\n                          label={\"Reset Configuration\"}\n                        />\n                      )}\n                      {editMode && (\n                        <Button\n                          id={\"cancel\"}\n                          type=\"button\"\n                          variant=\"regular\"\n                          onClick={toggleEditMode}\n                          label={\"Cancel\"}\n                        />\n                      )}\n                      {editMode && (\n                        <Button\n                          id={\"save-key\"}\n                          type=\"submit\"\n                          variant=\"callAction\"\n                          color=\"primary\"\n                          disabled={loading || !validSave()}\n                          label={\"Save\"}\n                          onClick={saveRecord}\n                        />\n                      )}\n                    </Box>\n                  </FormLayout>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Box\n                    sx={{\n                      display: \"grid\",\n                      gridTemplateColumns: \"1fr\",\n                      gridAutoFlow: \"dense\",\n                      gap: 3,\n                      padding: \"15px\",\n                      border: \"1px solid #eaeaea\",\n                      [`@media (min-width: 576px)`]: {\n                        gridTemplateColumns: \"2fr 1fr\",\n                        gridAutoFlow: \"row\",\n                      },\n                    }}\n                  >\n                    <LabelValuePair\n                      label={\"LDAP Enabled\"}\n                      value={isEnabled ? \"Yes\" : \"No\"}\n                    />\n                    {hasConfiguration && (\n                      <Fragment>\n                        {Object.entries(formFields).map(([key, value]) => (\n                          <LabelValuePair\n                            key={key}\n                            label={value.label}\n                            value={fields[key] ? fields[key] : \"\"}\n                          />\n                        ))}\n                      </Fragment>\n                    )}\n                  </Box>\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </TabPanel>\n        <TabPanel index={1} value={curTab}>\n          {hasConfiguration && (\n            <Box>\n              <LDAPEntitiesQuery />\n            </Box>\n          )}\n        </TabPanel>\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default IDPLDAPConfigurationDetails;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { LockIcon } from \"mds\";\n\nexport const ldapHelpBoxContents = [\n  {\n    text: \"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: <LoginIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries\",\n    icon: null,\n    iconDescription: \"\",\n  },\n  {\n    text: \"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDHelpBoxContents = [\n  {\n    text: \"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.\",\n    icon: <LockIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_userinfo: {\n    required: false,\n    label: \"Claim User Info\",\n    tooltip: \"\",\n    placeholder: \"Claim User Info\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri_dynamic: {\n    required: false,\n    label: \"Redirect URI Dynamic\",\n    tooltip: \"\",\n    placeholder: \"Redirect URI Dynamic\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n};\n\nexport const ldapFormFields = {\n  server_insecure: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Insecure\",\n    tooltip: \"disable SSL certificate verification \",\n    placeholder: \"myldapserver.com:636\",\n    type: \"toggle\",\n  },\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n  },\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"../../../api\";\nimport {\n  HttpResponse,\n  ListPoliciesResponse,\n  Error,\n} from \"../../../api/consoleApi\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  noTitle?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({ classes, noTitle = false }: ISelectPolicyProps) => {\n  const dispatch = useAppDispatch();\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const currentPolicies = useSelector(\n    (state: AppState) => state.createUser.selectedPolicies\n  );\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api.policies\n      .listPolicies()\n      .then((res: HttpResponse<ListPoliciesResponse, Error>) => {\n        const policies = res.data.policies ?? [];\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    dispatch(setSelectedPolicies(elements));\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              {!noTitle && (\n                <span className={classes.fieldLabel}>Assign Policies</span>\n              )}\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Start typing to search for a Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              className={classes.tableBlock}\n              style={{ paddingBottom: 16 }}\n            >\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={currentPolicies}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(PolicySelectors);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref","_ref$label","label","onChange","value","id","name","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","_jsxs","React","children","_jsx","className","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","textAlign","Typography","component","useStyles","makeStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","maxWidth","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","concat","style","tabSubStyles","tabRoot","paddingTop","paddingBottom","selected","indicator","background","scroller","position","content","selectedTab","tabOptions","subStyles","Fragment","Tabs","indicatorColor","textColor","variant","scrollButtons","e","newValue","map","option","index","_createElement","Tab","key","_ref$value","_ref$orientation","orientation","_ref$stkProps","stkProps","_ref$lblProps","lblProps","_ref$valProps","valProps","Stack","direction","wrapText","whiteSpace","wordWrap","deleteDialogStyles","configurationName","closeResetModalAndRefresh","resetOpen","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","resetLoading","setResetLoading","useEffect","api","then","res","catch","err","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onClose","confirmationContent","LinearProgress","DialogContentText","FeatureItem","Box","sx","marginBottom","fontStyle","_ref2","helpText","docLink","docText","contents","flex","HelpIconFilled","iconDescription","text","href","target","rel","EntityResultTitle","CollapseCaret","EntityResultItems","blockName","results","_ref3","_results$groups","_results$policies","_results$users","_results$groups2","_results$users2","_results$policies2","entityName","entityLength","groups","policies","users","SectionTitle","separator","GroupsMenuIcon","h4","fill","groupData","group","user","policy","loading","setLoading","_useState3","_useState4","setUsers","_useState5","_useState6","setGroups","_useState7","_useState8","setResults","selectedPolicies","useSelector","state","createUser","lg","flexDirection","gap","withBorders","overflowY","minHeight","maxHeight","userDat","InputBox","usersElements","_toConsumableArray","overlayIcon","AddIcon","RemoveIcon","overlayAction","addItem","alterUsers","filteredUsers","filter","_","indx","alterUsersList","groupDat","groupsElements","alterGroups","filteredGroups","alterGroupsList","PolicySelectors","selectedPolicy","noTitle","Loader","timestamp","TimeIcon","DateTime","toFormat","flexGrow","LDAPResultsBlock","Button","type","onClick","data","cleanPolicies","pol","cleanUsers","usr","cleanGroups","grp","result","SearchIcon","enabledConfigLDAP","formFields","ldapFormFields","isEnabled","setIsEnabled","hasConfiguration","setHasConfiguration","fields","setFields","_useState9","_useState10","record","setRecord","_useState11","_useState12","editMode","setEditMode","_useState13","_useState14","setResetOpen","_useState15","_useState16","curTab","setCurTab","toggleEditMode","parseFields","enabled","find","totalCoincidences","forEach","includes","hasConfig","key_values","closeDeleteModalAndRefresh","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","wrap","_context","prev","next","setServerNeedsRestart","stop","_x","apply","arguments","ResetConfigurationModal","PageHeaderWrapper","PageLayout","TabSelector","TabPanel","ScreenTitle","EditIcon","payload","restart","setSnackBarMessage","toggleConfiguration","RefreshIcon","FormLayout","helpBox","AddIDPConfigurationHelpBox","ldapHelpBoxContents","Object","entries","FormSwitchWrapper","required","error","hasError","placeholder","renderFormField","_i","_Object$entries","_Object$entries$_i","undefined","validSave","keyVals","keys","gridTemplateColumns","gridAutoFlow","LabelValuePair","_ref5","_ref6","LDAPEntitiesQuery","LoginIcon","openIDHelpBoxContents","LockIcon","openIDFormFields","config_url","s","client_id","client_secret","claim_name","display_name","claim_prefix","scopes","redirect_uri","role_policy","claim_userinfo","redirect_uri_dynamic","server_insecure","server_addr","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter","noFound","searchBox","fieldLabel","tableBlock","tableStyles","filterBox","searchField","selectorsCommon","_ref$noTitle","records","setRecords","setFilter","currentPolicies","fetchPolicies","useCallback","_res$data$policies","sort","policySort","setModalErrorSnackMessage","filteredRecords","elementItem","SearchBox","TableWrapper","columns","elementKey","onSelect","targetD","elements","push","element","setSelectedPolicies","selectedItems","idField","customPaperHeight","multiSelectTable","props","other","_objectWithoutProperties","_excluded","role","hidden"],"sourceRoot":""}