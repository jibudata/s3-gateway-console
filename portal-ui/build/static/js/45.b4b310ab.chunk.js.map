{"version":3,"sources":["../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/Dialog/dialogClasses.js","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Policies/AddPolicy.tsx"],"names":["DialogContext","createContext","getDialogTitleUtilityClass","slot","generateUtilityClass","dialogTitleClasses","generateUtilityClasses","getDialogUtilityClass","dialogClasses","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","id","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","_excluded","DialogBackdrop","styled","Backdrop","overrides","styles","backdrop","DialogRoot","Modal","overridesResolver","DialogContainer","ownerState","capitalize","_extends","outline","justifyContent","overflowY","overflowX","textAlign","verticalAlign","DialogPaper","Paper","String","paperFullWidth","fullScreen","paperFullScreen","margin","boxShadow","flexDirection","breakpoints","unit","Math","values","xs","paperScrollBody","down","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","React","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","disableEscapeKeyDown","onBackdropClick","PaperComponent","PaperProps","TransitionComponent","Fade","TransitionProps","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","as","closeAfterTransition","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","Provider","DialogTitleRoot","Typography","flex","idProp","component","variant","getDialogContentUtilityClass","DialogContentRoot","dividers","WebkitOverflowScrolling","borderTop","palette","divider","borderBottom","paddingTop","require","mode","onBeforeChange","readOnly","item","options","lineNumbers","buttonContainer","codeMirrorContainer","marginBottom","spacingUtils","modalStyleUtils","closeModalAndRefresh","policyEdit","addLoading","setAddLoading","policyName","setPolicyName","policyDefinition","setPolicyDefinition","JSON","stringify","parse","policy","validSave","trim","noValidate","onSubmit","e","preventDefault","api","invoke","then","res","catch","err","modalFormScrollable","formFieldRow","editor","data","modalButtonBar"],"mappings":"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","file":"static/js/45.b4b310ab.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nrequire(\"codemirror/mode/yaml/yaml\");\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"yaml\",\n  classes,\n  onChange = () => {},\n  onBeforeChange,\n  readOnly = false,\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12}>\n        <CodeMirror\n          value={value}\n          options={{\n            mode: mode,\n            lineNumbers: true,\n            readOnly,\n          }}\n          onBeforeChange={onBeforeChange}\n          onChange={onChange}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Kubernetes Cloud\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../common/api\";\nimport { Policy } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport {\n  fieldBasic,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    codeMirrorContainer: {\n      marginBottom: 20,\n      marginTop: 20,\n      \"&:nth-child(2) .MuiGrid-root:nth-child(3)\": {\n        border: \"1px solid #EAEAEA\",\n      },\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...fieldBasic,\n  });\n\ninterface IAddPolicyProps {\n  classes: any;\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => void;\n  policyEdit: Policy;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddPolicy = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  policyEdit,\n  setModalErrorSnackMessage,\n}: IAddPolicyProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [policyName, setPolicyName] = useState<string>(\"\");\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", \"/api/v1/policies\", {\n        name: policyName,\n        policy: policyDefinition,\n      })\n      .then((res) => {\n        setAddLoading(false);\n\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (policyEdit) {\n      setPolicyName(policyEdit.name);\n      setPolicyDefinition(\n        policyEdit ? JSON.stringify(JSON.parse(policyEdit.policy), null, 4) : \"\"\n      );\n    }\n  }, [policyEdit]);\n\n  const resetForm = () => {\n    setPolicyName(\"\");\n    setPolicyDefinition(\"\");\n  };\n\n  const validSave = policyName.trim() !== \"\";\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`${policyEdit ? \"Info\" : \"Create\"} Policy`}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"policy-name\"\n                name=\"policy-name\"\n                label=\"Policy Name\"\n                placeholder=\"Enter Policy Name\"\n                autoFocus={true}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPolicyName(e.target.value);\n                }}\n                value={policyName}\n                disabled={!!policyEdit}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.codeMirrorContainer}>\n              <CodeMirrorWrapper\n                label={`${policyEdit ? \"Edit\" : \"Write\"} Policy`}\n                value={policyDefinition}\n                onBeforeChange={(editor, data, value) => {\n                  setPolicyDefinition(value);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            {!policyEdit && (\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={resetForm}\n              >\n                Clear\n              </Button>\n            )}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !validSave}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddPolicy));\n"],"sourceRoot":""}