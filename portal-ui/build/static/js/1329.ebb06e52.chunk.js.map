{"version":3,"file":"static/js/1329.ebb06e52.chunk.js","mappings":"mNAqFA,IAjDoC,SAAHA,GAKS,IAJxCC,EAA0BD,EAA1BC,2BACAC,EAAUF,EAAVE,WACAC,EAAGH,EAAHG,IACAC,EAAOJ,EAAPI,QAEMC,GAAWC,EAAAA,EAAAA,MASjBC,GAAyCC,EAAAA,EAAAA,IARpB,SAACC,GACpBR,GAA2B,GAC3BI,GAASK,EAAAA,EAAAA,KAAsC,IAAhBD,EAAIE,SACrC,IACmB,SAACC,GAAyB,OAC3CP,GAASQ,EAAAA,EAAAA,IAAqBD,GAAM,IAGmCE,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAAlES,EAAaF,EAAA,GAAEG,EAAeH,EAAA,GAErC,IAAKX,EACH,OAAO,KAGT,IAIMe,EAAsB,MAARf,EAAc,UAAYA,EAE9C,OACEgB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,UAAAC,OAAYJ,GACjBK,YAAa,SACbC,OAAQtB,EACRuB,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,IAAiB,IAC7BC,UAAWX,EACXY,UAboB,WACtBX,EAAgB,SAAS,eAADK,OAAiBlB,EAAO,KAAAkB,OAAInB,GACtD,EAYI0B,QAtBY,WAAH,OAAS5B,GAA2B,EAAO,EAuBpD6B,mBAAoB,CAClBC,SAAUf,GAEZgB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAiB,CAAAC,SAAA,CAAC,wCACmBhB,EAAAA,EAAAA,KAAA,KAAAgB,SAAIjB,IAAiB,IAAI,mBAC9CC,EAAAA,EAAAA,KAAA,aAKzB,C,qUCuJA,GAAeiB,EAAAA,EAAAA,IA1LA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACF,GAuLL,EArL0B,SAAHxC,GAAsD,IAAhDyC,EAAOzC,EAAPyC,QAASrC,EAAOJ,EAAPI,QAC9BC,GAAWC,EAAAA,EAAAA,MACXoC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAoCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAA/B,EAAAA,EAAAA,GAAA6B,EAAA,GAArD1C,EAAU4C,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAAsCH,EAAAA,EAAAA,UAAiB,IAAGI,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAAnDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8BP,EAAAA,EAAAA,WAAkB,GAAMQ,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA/CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BX,EAAAA,EAAAA,UAAgB,IAAGY,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAA1CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAYC,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACnDC,EAAAA,GAAWC,sBAGPC,GAAUJ,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACjDC,EAAAA,GAAWC,sBAGPE,GAAcL,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACrDC,EAAAA,GAAWC,uBAGbG,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACJb,IACEY,EACFG,EAAAA,EAAIlE,IACDmE,mBAAmBlE,GACnBmE,MAAK,SAAC9D,GACL8C,GAAW,GACP9C,EAAI+D,KAAKC,SACXd,EACElD,EAAI+D,KAAKC,QAAQC,KAAI,SAACC,GAGpB,OAFAA,EAAEC,KAAkB,MAAXD,EAAEC,KAAe,UAAYD,EAAEC,KACxCD,EAAEE,SAAwB,IAAdF,EAAEE,QAAmB,UAAY,WACtCF,CACT,IAGN,IACCG,OAAM,SAAClE,GACN2C,GAAW,GACXlD,GAASQ,EAAAA,EAAAA,KAAqBkE,EAAAA,EAAAA,GAAenE,EAAIoE,QACnD,IAEFzB,GAAW,GAGjB,GAAG,CAACD,EAASC,EAAYI,EAAYtD,EAAU6D,EAAa9D,IAE5D,IAAMgE,EAAe,WACnBb,GAAW,EACb,EAaMtD,EAA0B,eAAAgF,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAgB,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxD3C,GAAc,GAEVuC,GACFlB,IACD,wBAAAoB,EAAAG,OAAA,GAAAN,EAAA,KACF,gBAN+BO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAQ1BC,EAAe,CACnB,CACEC,KAAM,OACNC,QAhBe,SAAC9F,GAClB,IAAIyE,EAAoB,YAAbzE,EAAIyE,KAAqB,IAAMzE,EAAIyE,KAC9ClC,EAAS,iBAADpB,OAAkBlB,EAAO,oBAAAkB,OAAmBsD,GACtD,EAcIsB,sBAAuB,kBAAOjC,CAAO,GAEvC,CACE+B,KAAM,SACNC,QA3BqB,SAAC9F,GACxB4C,GAAc,GAEdI,EADAhD,EAAc,YAARA,EAAoB,IAAMA,EAElC,EAwBIgG,YAAY,EACZD,sBAAuB,SAAC/F,GAAW,OAAMyD,GAAqB,YAARzD,CAAiB,IAS3E,OALAgE,EAAAA,EAAAA,YAAU,WACR9D,GAAS+F,EAAAA,EAAAA,IAAY,eAEvB,GAAG,KAGDnE,EAAAA,EAAAA,MAACoE,EAAAA,SAAQ,CAAAlE,SAAA,CACNjC,IACCiB,EAAAA,EAAAA,KAACmF,EAAAA,EAA2B,CAC1BpG,WAAYA,EACZC,IAAK+C,EACL9C,QAASA,EACTH,2BAA4BA,KAGhCkB,EAAAA,EAAAA,KAACoF,EAAAA,EAAiB,CAChBC,MAAK,GAAAlF,OAAKlB,EAAQqG,cAAa,mBAC/BC,SAASvF,EAAAA,EAAAA,KAACwF,EAAAA,EAAQ,OAGpBxF,EAAAA,EAAAA,KAACyF,EAAAA,IAAU,CAACC,UAAWpE,EAAQqE,cAAc3E,UAC3CF,EAAAA,EAAAA,MAAC8E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE9E,SAAA,EACzBF,EAAAA,EAAAA,MAAC8E,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,GAAI,CACF,WAAY,CACVC,WAAY,QAEdrF,SAAA,EAEFhB,EAAAA,EAAAA,KAACsG,EAAAA,EAAe,CACdC,OAAQ,CAAC3D,EAAAA,GAAWC,qBACpB2D,SAAU7D,EAAAA,GACV8D,WAAY,CAAE7F,UAAU,GAAOI,UAE/BhB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAc,CAACC,QAAS,UAAU3F,UACjChB,EAAAA,EAAAA,KAAC4G,EAAAA,IAAM,CACLC,GAAI,eACJC,QAAQ,UACRC,MAAM/G,EAAAA,EAAAA,KAACgH,EAAAA,IAAW,IAClBlC,QAAS,kBAAM1C,GAAW,EAAK,SAIrCpC,EAAAA,EAAAA,KAACsG,EAAAA,EAAe,CACdC,OAAQ,CAAC3D,EAAAA,GAAWC,qBACpB2D,SAAU7D,EAAAA,GACV8D,WAAY,CAAE7F,UAAU,GAAOI,UAE/BhB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAc,CAACC,QAAO,UAAAxG,OAAYlB,EAAO,kBAAiB+B,UACzDhB,EAAAA,EAAAA,KAAC4G,EAAAA,IAAM,CACLC,GAAI,aACJxB,MAAO,uBACPyB,QAAS,aACTC,MAAM/G,EAAAA,EAAAA,KAACiH,EAAAA,IAAO,IACdnC,QAAS,kBACPvD,EAAS,iBAADpB,OAAkBlB,EAAO,2BAA0B,YAMrEe,EAAAA,EAAAA,KAAC4F,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIN,UAAWpE,EAAQ4F,WAAWlG,UAC/ChB,EAAAA,EAAAA,KAACsG,EAAAA,EAAe,CACdC,OAAQ,CAAC3D,EAAAA,GAAWC,qBACpB2D,SAAU7D,EAAAA,GACV8D,WAAY,CAAE7F,UAAU,GAAOI,UAE/BhB,EAAAA,EAAAA,KAACmH,EAAAA,EAAY,CACXC,YAAaxC,EACbyC,QAAS,CACP,CAAEhC,MAAO,OAAQiC,WAAY,QAC7B,CAAEjC,MAAO,OAAQiC,WAAY,QAC7B,CAAEjC,MAAO,UAAWiC,WAAY,YAElC9G,UAAW2B,EACXI,QAASA,EACTgF,WAAW,OACXC,QAAQ,oBAQxB,ICjNA,EAJgC,WAC9B,OAAOxH,EAAAA,EAAAA,KAACyH,EAAiB,CAACxI,QAAS,UACrC,C","sources":["screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurations.tsx","screens/Console/IDP/IDPOpenIDConfigurations.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useAppDispatch } from \"../../../store\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { containerForHeader } from \"../Common/FormComponents/common/styleLibrary\";\nimport { Grid } from \"@mui/material\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Button, PageLayout, RefreshIcon } from \"mds\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ntype IDPConfigurationsProps = {\n  classes?: any;\n  idpType: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...containerForHeader,\n  });\n\nconst IDPConfigurations = ({ classes, idpType }: IDPConfigurationsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedIDP, setSelectedIDP] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<any[]>([]);\n\n  const deleteIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const viewIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const displayIDPs = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayIDPs) {\n        api.idp\n          .listConfigurations(idpType)\n          .then((res) => {\n            setLoading(false);\n            if (res.data.results) {\n              setRecords(\n                res.data.results.map((r: any) => {\n                  r.name = r.name === \"_\" ? \"Default\" : r.name;\n                  r.enabled = r.enabled === true ? \"Enabled\" : \"Disabled\";\n                  return r;\n                })\n              );\n            }\n          })\n          .catch((err) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayIDPs, idpType]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const confirmDeleteIDP = (idp: string) => {\n    setDeleteOpen(true);\n    idp = idp === \"Default\" ? \"_\" : idp;\n    setSelectedIDP(idp);\n  };\n\n  const viewAction = (idp: any) => {\n    let name = idp.name === \"Default\" ? \"_\" : idp.name;\n    navigate(`/identity/idp/${idpType}/configurations/${name}`);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !viewIDP,\n    },\n    {\n      type: \"delete\",\n      onClick: confirmDeleteIDP,\n      sendOnlyId: true,\n      disableButtonFunction: (idp: string) => !deleteIDP || idp === \"Default\",\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(setHelpName(\"idp_configs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={selectedIDP}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label={`${idpType.toUpperCase()} Configurations`}\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid container spacing={1}>\n          <Grid\n            item\n            xs={12}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"flex-end\"}\n            sx={{\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={`Create ${idpType} configuration`}>\n                <Button\n                  id={\"create-idp\"}\n                  label={\"Create Configuration\"}\n                  variant={\"callAction\"}\n                  icon={<AddIcon />}\n                  onClick={() =>\n                    navigate(`/identity/idp/${idpType}/configurations/add-idp`)\n                  }\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Grid>\n          <Grid item xs={12} className={classes.tableBlock}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TableWrapper\n                itemActions={tableActions}\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Type\", elementKey: \"type\" },\n                  { label: \"Enabled\", elementKey: \"enabled\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(IDPConfigurations);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport IDPConfigurations from \"./IDPConfigurations\";\n\nconst IDPOpenIDConfigurations = () => {\n  return <IDPConfigurations idpType={\"openid\"} />;\n};\n\nexport default IDPOpenIDConfigurations;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","_useApi","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","_useApi2","_slicedToArray","deleteLoading","invokeDeleteApi","displayName","_jsx","ConfirmDialog","title","concat","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","DialogContentText","children","withStyles","theme","createStyles","_objectSpread","containerForHeader","classes","navigate","useNavigate","_useState","useState","_useState2","setDeleteOpen","_useState3","_useState4","selectedIDP","setSelectedIDP","_useState5","_useState6","loading","setLoading","_useState7","_useState8","records","setRecords","deleteIDP","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","ADMIN_CONFIG_UPDATE","viewIDP","displayIDPs","useEffect","fetchRecords","api","listConfigurations","then","data","results","map","r","name","enabled","catch","errorToHandler","error","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","wrap","_context","prev","next","stop","_x","apply","arguments","tableActions","type","onClick","disableButtonFunction","sendOnlyId","setHelpName","Fragment","DeleteIDPConfigurationModal","PageHeaderWrapper","label","toUpperCase","actions","HelpMenu","PageLayout","className","pageContainer","Grid","container","spacing","item","xs","display","alignItems","justifyContent","sx","marginLeft","SecureComponent","scopes","resource","errorProps","TooltipWrapper","tooltip","Button","id","variant","icon","RefreshIcon","AddIcon","tableBlock","TableWrapper","itemActions","columns","elementKey","entityName","idField","IDPConfigurations"],"sourceRoot":""}