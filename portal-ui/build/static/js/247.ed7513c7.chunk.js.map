{"version":3,"file":"static/js/247.ed7513c7.chunk.js","mappings":"gRAwJA,WAAeA,EAAAA,EAAAA,IA5GA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAa,0BACRC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACF,GAuGL,EArG0B,SAAH,GAOC,IANtBC,EAAS,EAATA,UACAC,EAAW,EAAXA,YACAC,EAAgB,EAAhBA,iBACAC,EAAU,EAAVA,WAEAC,EAAO,EAAPA,QAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAiB,IAAG,eAAzCC,EAAM,KAAEC,EAAS,KACxB,GAAgCF,EAAAA,EAAAA,UAAiB,IAAG,eAA7CG,EAAQ,KAAEC,EAAW,KAC5B,GAAkCJ,EAAAA,EAAAA,WAAkB,GAAM,eAAnDK,EAAS,KAAEC,EAAY,KA4B9B,OACE,SAAC,IAAY,CACXb,UAAWA,EACXc,MAAK,eACLC,QAAS,WACPb,GAAiB,EACnB,EACAc,WAAW,SAAC,MAAa,IAAI,UAE7B,UAAC,KAAI,CAACC,WAAS,aACb,iBAAKC,UAAWd,EAAQe,aAAa,WACnC,4BAAQ,WAAe,KAAGhB,MAE5B,SAAC,KAAI,CAACiB,MAAI,EAACC,GAAI,GAAIH,UAAWd,EAAQkB,aAAa,UACjD,SAAC,IAAe,CACdC,MAAOf,EACPgB,MAAO,cACPC,GAAI,YACJC,KAAM,YACNC,YAAa,oBACbC,SAAU,SAACC,GACTpB,EAAUoB,EAAEC,OAAOP,MACrB,OAGJ,SAAC,KAAI,CAACH,MAAI,EAACC,GAAI,GAAIH,UAAWd,EAAQkB,aAAa,UACjD,SAAC,IAAe,CACdC,MAAOb,EACPc,MAAO,gBACPC,GAAI,cACJC,KAAM,cACNC,YAAa,sBACbC,SAAU,SAACC,GACTlB,EAAYkB,EAAEC,OAAOP,MACvB,OAGJ,UAAC,KAAI,CAACH,MAAI,EAACC,GAAI,GAAIH,UAAWd,EAAQ2B,eAAe,WACnD,SAAC,MAAM,CACLN,GAAI,QACJO,KAAK,SACLC,QAAQ,UACRC,QApEQ,WAChBvB,EAAY,IACZF,EAAU,GACZ,EAkEUe,MAAO,WAET,SAAC,MAAM,CACLC,GAAI,sBACJO,KAAK,SACLC,QAAQ,aACRE,MAAM,UACNC,SACsB,KAApB1B,EAAS2B,QAAmC,KAAlB7B,EAAO6B,QAAiBzB,EAEpDsB,QA1EY,WACpBrB,GAAa,GACb,IAAMyB,EAAc,CAAC,EAErBA,EAAO9B,GAAUE,EACjB,IAAM6B,GAAU,kBAAQtC,GAAgBqC,GAExCE,EAAAA,EAAAA,OACU,MAAM,mBAAD,OAAqBrC,EAAU,SAAS,CACnDsC,KAAMF,IAEPG,MAAK,SAACC,GACL9B,GAAa,GACbX,GAAiB,EACnB,IACC0C,OAAM,SAACC,GACNxC,GAASyC,EAAAA,EAAAA,IAA0BD,IACnChC,GAAa,EACf,GACJ,EAwDUW,MAAO,gBAMnB,G","sources":["screens/Console/Buckets/BucketDetails/AddBucketTagModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Button } from \"mds\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport { AddNewTagIcon } from \"mds\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IBucketTagModal {\n  modalOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  onCloseAndUpdate: (refresh: boolean) => void;\n\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst AddBucketTagModal = ({\n  modalOpen,\n  currentTags,\n  onCloseAndUpdate,\n  bucketName,\n\n  classes,\n}: IBucketTagModal) => {\n  const dispatch = useAppDispatch();\n  const [newKey, setNewKey] = useState<string>(\"\");\n  const [newLabel, setNewLabel] = useState<string>(\"\");\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const resetForm = () => {\n    setNewLabel(\"\");\n    setNewKey(\"\");\n  };\n\n  const addTagProcess = () => {\n    setIsSending(true);\n    const newTag: any = {};\n\n    newTag[newKey] = newLabel;\n    const newTagList = { ...currentTags, ...newTag };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/tags`, {\n        tags: newTagList,\n      })\n      .then((res: any) => {\n        setIsSending(false);\n        onCloseAndUpdate(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        dispatch(setModalErrorSnackMessage(error));\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={modalOpen}\n      title={`Add New Tag `}\n      onClose={() => {\n        onCloseAndUpdate(false);\n      }}\n      titleIcon={<AddNewTagIcon />}\n    >\n      <Grid container>\n        <div className={classes.spacerBottom}>\n          <strong>Bucket</strong>: {bucketName}\n        </div>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newKey}\n            label={\"New Tag Key\"}\n            id={\"newTagKey\"}\n            name={\"newTagKey\"}\n            placeholder={\"Enter New Tag Key\"}\n            onChange={(e: any) => {\n              setNewKey(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            value={newLabel}\n            label={\"New Tag Label\"}\n            id={\"newTagLabel\"}\n            name={\"newTagLabel\"}\n            placeholder={\"Enter New Tag Label\"}\n            onChange={(e: any) => {\n              setNewLabel(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n          <Button\n            id={\"save-add-bucket-tag\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={\n              newLabel.trim() === \"\" || newKey.trim() === \"\" || isSending\n            }\n            onClick={addTagProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddBucketTagModal);\n"],"names":["withStyles","theme","createStyles","formFieldStyles","modalStyleUtils","spacingUtils","modalOpen","currentTags","onCloseAndUpdate","bucketName","classes","dispatch","useAppDispatch","useState","newKey","setNewKey","newLabel","setNewLabel","isSending","setIsSending","title","onClose","titleIcon","container","className","spacerBottom","item","xs","formFieldRow","value","label","id","name","placeholder","onChange","e","target","modalButtonBar","type","variant","onClick","color","disabled","trim","newTag","newTagList","api","tags","then","res","catch","error","setModalErrorSnackMessage"],"sourceRoot":""}