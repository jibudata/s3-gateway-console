{"version":3,"file":"static/js/3875.b530d1e3.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  }),\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer,\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Button, RemoveIcon } from \"mds\";\nimport { SiteInputRow } from \"./Types\";\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"name\"),\n          }}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"endpoint\"),\n          }}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} alignItems={\"center\"} display={\"flex\"}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BackLink, Button, ClustersIcon, HelpBox, PageLayout } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport SectionTitle from \"../../Common/SectionTitle\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          fontSize: \"14px\",\n          marginLeft: \"5px\",\n        }}\n      >\n        Site Name\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Endpoint {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Access Key {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Secret Key {\"*\"}</Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    },\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add-replication-sites\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    [],\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          }),\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item,\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index\n                        ? { ...item, [fieldName]: filedValue }\n                        : item,\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index),\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Replication Site\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <LinearProgress /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& .step-number\": {\n                      color: \"#ffffff\",\n                      height: \"25px\",\n                      width: \"25px\",\n                      background: \"#081C42\",\n                      marginRight: \"10px\",\n                      textAlign: \"center\",\n                      fontWeight: 600,\n                      borderRadius: \"50%\",\n                    },\n\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                      \"&:before\": {\n                        content: \"' '\",\n                        height: \"7px\",\n                        width: \"7px\",\n                        backgroundColor: \"#2781B0\",\n                        marginRight: \"10px\",\n                        marginTop: \"12px\",\n                        flexShrink: 0,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n"],"names":["inputStyles","makeStyles","theme","createStyles","_objectSpread","inputFieldStyles","InputField","props","classes","_jsx","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref","label","onChange","value","id","name","_ref$type","type","_ref$autoComplete","autoComplete","_ref$disabled","disabled","_ref$multiline","multiline","_ref$tooltip","tooltip","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","className","onKeyPress","onFocus","onPaste","inputProps","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","React","children","_jsxs","Grid","container","clsx","errorInField","inputBoxContainer","InputLabel","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","fullWidth","helperText","inputRebase","concat","IconButton","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","rowData","rowId","onFieldChange","onAddClick","onRemoveClick","_ref$canAdd","canAdd","_ref$canRemove","canRemove","_ref$showRowActions","showRowActions","_ref$disabledFields","disabledFields","_ref$fieldErrors","fieldErrors","_rowData$endpoint","endpoint","_rowData$accessKey","accessKey","_rowData$secretKey","secretKey","_rowData$name","Fragment","Box","InputBoxWrapper","readOnly","includes","e","item","xs","alignItems","display","sx","justifyContent","alignSelf","marginTop","borderColor","color","borderRadius","TooltipWrapper","Button","variant","icon","AddIcon","preventDefault","style","width","height","padding","RemoveIcon","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","fontSize","SiteTypeHeader","marginBottom","fontWeight","dispatch","useAppDispatch","navigate","useNavigate","_useSelector$serverEn","useSelector","selSession","serverEndPoint","currentSite","setCurrentSite","_useState3","_useState4","existingSites","setExistingSites","setDefaultNewRows","_useApi","useApi","res","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","_useApi2","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","setHelpName","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","_currentSite$","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","_useApi3","success","setSnackBarMessage","status","resetForm","IAM_PAGES","SITE_REPLICATION","setErrorSnackMessage","errorMessage","detailedError","_useApi4","isAdding","invokeSiteAddApi","prevItems","ix","PageHeaderWrapper","BackLink","actions","HelpMenu","PageLayout","gap","gridTemplateColumns","border","SectionTitle","ClustersIcon","LinearProgress","fontStyle","noValidate","onSubmit","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","addSiteReplication","overflowY","cs","accessKeyError","secretKeyError","SRSiteInputRow","fieldName","filedValue","target","_defineProperty","ps","endPointError","newRows","_toConsumableArray","_","HelpBox","iconComponent","help","backgroundColor","marginRight","paddingLeft","fill","flexFlow","flex","background","textAlign","content","flexShrink","paddingTop"],"sourceRoot":""}