{"version":3,"sources":["screens/Console/Buckets/ListBuckets/Objects/ListObjects/DeleteMultipleObjects.tsx"],"names":["mapDispatchToProps","setErrorSnackMessage","connector","connect","closeDeleteModalAndRefresh","deleteOpen","selectedBucket","selectedObjects","useApi","err","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","isLoading","onConfirm","toSend","i","length","endsWith","push","path","versionID","recursive","onClose","confirmationContent"],"mappings":"4LA6FMA,EAAqB,CACzBC,0BAGIC,EAAYC,YAAQ,KAAMH,GAEjBE,aAnEM,SAAC,GAMK,IALzBE,EAKwB,EALxBA,2BACAC,EAIwB,EAJxBA,WACAC,EAGwB,EAHxBA,eACAC,EAEwB,EAFxBA,gBACAN,EACwB,EADxBA,qBAMA,EAAyCO,aAJpB,kBAAMJ,GAA2B,MACnC,SAACK,GAAD,OAA+BR,EAAqBQ,MAGvE,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,IAAKJ,EACH,OAAO,KA6BT,OACE,cAAC,IAAD,CACEK,MAAK,iBACLC,YAAa,SACbC,OAAQT,EACRU,UAAWL,EACXM,UAjCoB,WAEtB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIX,EAAgBY,OAAQD,IACtCX,EAAgBW,GAAGE,SAAS,KAC9BH,EAAOI,KAAK,CACVC,KAAMf,EAAgBW,GACtBK,UAAW,GACXC,WAAW,IAGbP,EAAOI,KAAK,CACVC,KAAMf,EAAgBW,GACtBK,UAAW,GACXC,WAAW,IAKbP,GACFN,EACE,OADa,0BAEML,EAFN,mBAGbW,IAYFQ,QAzCY,kBAAMrB,GAA2B,IA0C7CsB,oBACE,eAAC,IAAD,2DACgDnB,EAAgBY,OAAQ,IADxE,WAEW","file":"static/js/147.9285f311.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport useApi from \"../../../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteObjectProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedObjects: string[];\n  selectedBucket: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteObject = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n  selectedObjects,\n  setErrorSnackMessage,\n}: IDeleteObjectProps) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedObjects) {\n    return null;\n  }\n  const onConfirmDelete = () => {\n    let toSend = [];\n    for (let i = 0; i < selectedObjects.length; i++) {\n      if (selectedObjects[i].endsWith(\"/\")) {\n        toSend.push({\n          path: selectedObjects[i],\n          versionID: \"\",\n          recursive: true,\n        });\n      } else {\n        toSend.push({\n          path: selectedObjects[i],\n          versionID: \"\",\n          recursive: false,\n        });\n      }\n    }\n\n    if (toSend) {\n      invokeDeleteApi(\n        \"POST\",\n        `/api/v1/buckets/${selectedBucket}/delete-objects`,\n        toSend\n      );\n    }\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Objects`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the selected {selectedObjects.length}{\" \"}\n          objects?{\" \"}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteObject);\n"],"sourceRoot":""}