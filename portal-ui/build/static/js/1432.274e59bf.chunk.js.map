{"version":3,"file":"static/js/1432.274e59bf.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/EventDestinations/WebhookSettings/AddEndpointModal.tsx","screens/Console/EventDestinations/WebhookSettings/DeleteWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/EditWebhookEndpoint.tsx","screens/Console/EventDestinations/WebhookSettings/WebhookSettings.tsx","screens/Console/EventDestinations/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ExportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ImportConfigButton.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/EventDestinations/CustomForms/ResetConfigurationModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useLocation } from \"react-router-dom\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const theme = useTheme();\n  const { pathname = \"\" } = useLocation();\n\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [value, setValue] = useState(selectedTab);\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n  useEffect(() => {\n    if (isRouteTabs) {\n      const tabConfigElement = children.find(\n        (item) => item.tabConfig.to === pathname\n      );\n\n      if (tabConfigElement) {\n        setValue(tabConfigElement.tabConfig.value);\n      }\n    }\n  }, [isRouteTabs, children, pathname]);\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  onCloseEndpoint: () => void;\n}\n\nconst AddEndpointModal = ({ open, type, onCloseEndpoint }: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n  ]);\n  const [initialInputs, setInitialInputs] = useState<string[]>([\n    \"name\",\n    \"endpoint\",\n    \"auth-token\",\n  ]);\n\n  const dispatch = useAppDispatch();\n\n  const saveWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (name.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"name\"]);\n\n      return;\n    }\n\n    if (endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n      ],\n      arn_resource_id: name,\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/${type}`, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.restart));\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const initializeInput = (name: string) => {\n    setInitialInputs(initialInputs.filter((item) => item !== name));\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  let title = \"Add new Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = \"New Logger Webhook\";\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = \"New Audit Webhook\";\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={title}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"name\"\n            name=\"name\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"name\");\n              setName(event.target.value);\n              validateInput(\"name\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"name\") && !initialInputs.includes(\"name\")\n                ? \"Invalid Name\"\n                : \"\"\n            }\n            label=\"Name\"\n            value={name}\n            pattern={\"^(?=.*[a-zA-Z0-9]).{1,}$\"}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"endpoint\"\n            name=\"endpoint\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"endpoint\");\n              setEndpoint(event.target.value);\n              validateInput(\"endpoint\", event.target.validity.valid);\n            }}\n            error={\n              invalidInputs.includes(\"endpoint\") &&\n              !initialInputs.includes(\"endpoint\")\n                ? \"Invalid Endpoint set\"\n                : \"\"\n            }\n            label=\"Endpoint\"\n            value={endpoint}\n            pattern={\n              \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n            }\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n          <InputBoxWrapper\n            id=\"auth-token\"\n            name=\"auth-token\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              initializeInput(\"auth-token\");\n              setAuthToken(event.target.value);\n            }}\n            label=\"Auth Token\"\n            value={authToken}\n          />\n        </Grid>\n        {saving && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginBottom: 10,\n            }}\n          >\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button\n            id={\"reset\"}\n            type=\"button\"\n            variant=\"regular\"\n            disabled={saving}\n            onClick={onCloseEndpoint}\n            label={\"Cancel\"}\n            sx={{\n              marginRight: 10,\n            }}\n          />\n          <Button\n            id={\"save-lifecycle\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            color=\"primary\"\n            disabled={saving || invalidInputs.length !== 0}\n            label={\"Save\"}\n            onClick={saveWebhook}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default AddEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { DialogContentText } from \"@mui/material\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteWebhookEndpoint {\n  modalOpen: boolean;\n  onClose: () => void;\n  selectedARN: string;\n  type: string;\n}\n\nconst DeleteWebhookEndpoint = ({\n  modalOpen,\n  onClose,\n  selectedARN,\n  type,\n}: IDeleteWebhookEndpoint) => {\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (deleteLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${selectedARN}/reset`)\n        .then(() => {\n          setDeleteLoading(false);\n          dispatch(setServerNeedsRestart(true));\n          dispatch(configurationIsLoading(true));\n          onClose();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeleteLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [deleteLoading, dispatch, onClose, selectedARN]);\n\n  const onConfirmDelete = () => {\n    setDeleteLoading(true);\n  };\n\n  const defaultWH = !selectedARN.includes(\":\");\n\n  let message = \"Are you sure you want to delete the Configured Endpoint\";\n\n  // Main webhook, we just reset\n  if (defaultWH) {\n    message = \"Are you sure you want to reset the Default\";\n  }\n\n  return (\n    <ConfirmDialog\n      title={defaultWH ? `Reset Default Webhook` : `Delete Webhook`}\n      confirmText={defaultWH ? \"Reset\" : \"Delete\"}\n      isOpen={modalOpen}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          {`${message} `}\n          <strong>{selectedARN}</strong>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteWebhookEndpoint;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, ConsoleIcon, Grid, Tooltip } from \"mds\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Webhook } from \"@mui/icons-material\";\nimport { formFieldStyles } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport api from \"../../../../common/api\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IConfigurationSys } from \"../../Configurations/types\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { overrideFields } from \"../../Configurations/utils\";\n\ninterface IEndpointModal {\n  open: boolean;\n  type: string;\n  endpointInfo: IConfigurationSys;\n  onCloseEndpoint: () => void;\n}\n\nconst EditEndpointModal = ({\n  open,\n  type,\n  endpointInfo,\n  onCloseEndpoint,\n}: IEndpointModal) => {\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [authToken, setAuthToken] = useState<string>(\"\");\n  const [endpointState, setEndpointState] = useState<string>(\"on\");\n  const [saving, setSaving] = useState<boolean>(false);\n  const [invalidInputs, setInvalidInput] = useState<string[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (endpointInfo) {\n      const endpointLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"endpoint\"\n      );\n      const tokenLocate = endpointInfo.key_values.find(\n        (key) => key.key === \"auth_token\"\n      );\n      const enable = endpointInfo.key_values.find(\n        (key) => key.key === \"enable\"\n      );\n\n      let invalidInputs: string[] = [];\n\n      if (endpointLocate) {\n        const endpointValue = endpointLocate.value;\n\n        if (endpointValue === \"\") {\n          invalidInputs.push(\"endpoint\");\n        } else {\n          setEndpoint(endpointValue);\n        }\n      }\n\n      if (tokenLocate) {\n        const tokenValue = tokenLocate.value;\n\n        if (tokenValue === \"\") {\n          invalidInputs.push(\"auth-token\");\n        } else {\n          setAuthToken(tokenValue);\n        }\n      }\n\n      if (enable) {\n        if (enable.value === \"off\") {\n          setEndpointState(enable.value);\n        }\n      }\n\n      setName(endpointInfo.name || \"\");\n      setInvalidInput(invalidInputs);\n    }\n  }, [endpointInfo]);\n\n  const updateWebhook = () => {\n    if (saving) {\n      return;\n    }\n\n    if (invalidInputs.length !== 0) {\n      return;\n    }\n\n    if (!endpoint || endpoint.trim() === \"\") {\n      setInvalidInput([...invalidInputs, \"endpoint\"]);\n\n      return;\n    }\n\n    setSaving(true);\n\n    const payload = {\n      key_values: [\n        {\n          key: \"endpoint\",\n          value: endpoint,\n        },\n        {\n          key: \"auth_token\",\n          value: authToken,\n        },\n        {\n          key: \"enable\",\n          value: endpointState,\n        },\n      ],\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/configs/${name}`, payload)\n      .then((res) => {\n        setSaving(false);\n        dispatch(setServerNeedsRestart(res.restart));\n        if (!res.restart) {\n          dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n        }\n\n        onCloseEndpoint();\n        dispatch(configurationIsLoading(true));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setSaving(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const validateInput = (name: string, valid: boolean) => {\n    if (invalidInputs.includes(name) && valid) {\n      setInvalidInput(invalidInputs.filter((item) => item !== name));\n      return;\n    }\n\n    if (!valid && !invalidInputs.includes(name)) {\n      setInvalidInput([...invalidInputs, name]);\n    }\n  };\n\n  const defaultWH = !name.includes(\":\");\n  const hasOverride = endpointInfo.key_values.filter(\n    (itm) => !!itm.env_override\n  );\n\n  const overrideValues = overrideFields(hasOverride);\n\n  let title = \"Edit Webhook\";\n  let icon = <Webhook />;\n\n  switch (type) {\n    case \"logger_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Logger Webhook`;\n      icon = <CallToActionIcon />;\n      break;\n    case \"audit_webhook\":\n      title = `Edit ${defaultWH ? \" the Default \" : \"\"}Audit Webhook`;\n      icon = <PendingActionsIcon />;\n      break;\n  }\n\n  if (hasOverride.length > 0) {\n    title = \"View env variable Webhook\";\n  }\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={open}\n        title={`${title}${defaultWH ? \"\" : ` - ${name}`}`}\n        onClose={onCloseEndpoint}\n        titleIcon={icon}\n      >\n        {hasOverride.length > 0 ? (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Enabled\"}\n                content={overrideValues.enable?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.enable.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Endpoint\"}\n                content={overrideValues.endpoint?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.endpoint.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <PredefinedList\n                label={\"Auth Token\"}\n                content={overrideValues.auth_token?.value || \"-\"}\n                actionButton={\n                  <Grid\n                    item\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      paddingRight: \"10px\",\n                    }}\n                  >\n                    <Tooltip\n                      tooltip={\n                        overrideValues.enable\n                          ? `This value is set from the ${overrideValues.auth_token.overrideEnv} environment variable`\n                          : \"\"\n                      }\n                      placement={\"left\"}\n                    >\n                      <ConsoleIcon style={{ width: 20 }} />\n                    </Tooltip>\n                  </Grid>\n                }\n              />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <FormSwitchWrapper\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const value = e.target.checked ? \"on\" : \"off\";\n                  setEndpointState(value);\n                }}\n                id={\"endpoint_enabled\"}\n                name={\"endpoint_enabled\"}\n                label={\"Enabled\"}\n                value={\"switch_on\"}\n                checked={endpointState === \"on\"}\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"endpoint\"\n                name=\"endpoint\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setEndpoint(event.target.value);\n                  validateInput(\"endpoint\", event.target.validity.valid);\n                }}\n                error={\n                  invalidInputs.includes(\"endpoint\")\n                    ? \"Invalid Endpoint set\"\n                    : \"\"\n                }\n                label=\"Endpoint\"\n                value={endpoint}\n                pattern={\n                  \"^(https?):\\\\/\\\\/([a-zA-Z0-9\\\\-.]+)(:[0-9]+)?(\\\\/[a-zA-Z0-9\\\\-.\\\\/]*)?$\"\n                }\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sx={{ ...formFieldStyles.formFieldRow }}>\n              <InputBoxWrapper\n                id=\"auth-token\"\n                name=\"auth-token\"\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setAuthToken(event.target.value);\n                }}\n                label=\"Auth Token\"\n                value={authToken}\n              />\n            </Grid>\n            {saving && (\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 10,\n                }}\n              >\n                <LinearProgress />\n              </Grid>\n            )}\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={saving}\n                onClick={onCloseEndpoint}\n                label={\"Cancel\"}\n                sx={{\n                  marginRight: 10,\n                }}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={saving || invalidInputs.length !== 0}\n                label={\"Update\"}\n                onClick={updateWebhook}\n              />\n            </Grid>\n          </Fragment>\n        )}\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditEndpointModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { IConfigurationSys, IElementValue } from \"../../Configurations/types\";\nimport {\n  Button,\n  ConsoleIcon,\n  DataTable,\n  Grid,\n  TierOfflineIcon,\n  TierOnlineIcon,\n} from \"mds\";\nimport AddEndpointModal from \"./AddEndpointModal\";\nimport DeleteWebhookEndpoint from \"./DeleteWebhookEndpoint\";\nimport EditWebhookEndpoint from \"./EditWebhookEndpoint\";\n\ninterface WebhookSettingsProps {\n  WebhookSettingslist: IConfigurationSys[];\n  setResetConfigurationOpen: () => void;\n  type: string;\n}\n\nconst WebhookSettings = ({\n  setResetConfigurationOpen,\n  WebhookSettingslist,\n  type,\n}: WebhookSettingsProps) => {\n  const [newEndpointOpen, setNewEndpointOpen] = useState<boolean>(false);\n  const [deleteWebhookOpen, setDeleteWebhookOpen] = useState<boolean>(false);\n  const [editWebhookOpen, setEditWebhookOpen] = useState<boolean>(false);\n  const [selectedARN, setSelectedARN] = useState<string>(\"\");\n  const [selectedEndpoint, setSelectedEndpoint] =\n    useState<IConfigurationSys | null>(null);\n\n  const renderEndpoint = (item: IElementValue[]) => {\n    const endpointFilter = item.find((itm) => itm.key === \"endpoint\");\n\n    if (endpointFilter) {\n      if (endpointFilter.env_override) {\n        return endpointFilter.env_override.value;\n      }\n\n      return endpointFilter.value;\n    }\n\n    return \"\";\n  };\n\n  const renderWebhookStatus = (item: IElementValue[]) => {\n    const EnableFilter = item.find((itm) => itm.key === \"enable\");\n\n    if (EnableFilter?.env_override) {\n      const overrideEnabled =\n        !EnableFilter?.env_override.value ||\n        EnableFilter?.env_override.value === \"on\" ||\n        !EnableFilter?.env_override.value\n          ? \"Enabled\"\n          : \"Disabled\";\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <ConsoleIcon style={{ fill: \"#052F51\", width: \"14px\" }} />\n          {overrideEnabled ? \"Enabled\" : \"Disabled\"}\n        </Grid>\n      );\n    }\n\n    // If enable is not set, then enabled by default\n    if (!EnableFilter || EnableFilter.value === \"on\" || !EnableFilter.value) {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyItems: \"start\",\n            fontSize: \"8px\",\n          }}\n        >\n          <TierOnlineIcon style={{ fill: \"#4CCB92\", width: 14, height: 14 }} />\n          Enabled\n        </Grid>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyItems: \"start\",\n          fontSize: \"8px\",\n        }}\n      >\n        <TierOfflineIcon style={{ fill: \"#C83B51\", width: 14, height: 14 }} />\n        Disabled\n      </Grid>\n    );\n  };\n\n  const onCloseDelete = () => {\n    setDeleteWebhookOpen(false);\n    setSelectedARN(\"\");\n  };\n\n  const onCloseEditWebhook = () => {\n    setEditWebhookOpen(false);\n    setSelectedEndpoint(null);\n  };\n\n  const actions = [\n    {\n      type: \"view\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setEditWebhookOpen(true);\n          setSelectedEndpoint(item);\n        }\n      },\n    },\n    {\n      type: \"delete\",\n      onClick: (item: IConfigurationSys) => {\n        if (item.name) {\n          setDeleteWebhookOpen(true);\n          setSelectedARN(item.name);\n        }\n      },\n      disableButtonFunction: (item: string) => {\n        const wHook = WebhookSettingslist.find(\n          (element) => element.name === item\n        );\n\n        if (wHook) {\n          const hasOverride = wHook.key_values.filter(\n            (itm) => !!itm.env_override\n          );\n\n          // Has override values, we cannot delete.\n          if (hasOverride.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n        return false;\n      },\n    },\n  ];\n  return (\n    <Grid container>\n      {newEndpointOpen && (\n        <AddEndpointModal\n          open={newEndpointOpen}\n          type={type}\n          onCloseEndpoint={() => {\n            setNewEndpointOpen(false);\n          }}\n        />\n      )}\n      {deleteWebhookOpen && (\n        <DeleteWebhookEndpoint\n          modalOpen={deleteWebhookOpen}\n          onClose={onCloseDelete}\n          selectedARN={selectedARN}\n          type={type}\n        />\n      )}\n      {editWebhookOpen && selectedEndpoint && (\n        <EditWebhookEndpoint\n          open={editWebhookOpen}\n          type={type}\n          endpointInfo={selectedEndpoint}\n          onCloseEndpoint={onCloseEditWebhook}\n        />\n      )}\n      <Grid item xs={12} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button\n          id={\"newWebhook\"}\n          variant=\"callAction\"\n          onClick={() => {\n            setNewEndpointOpen(true);\n          }}\n        >\n          New Endpoint\n        </Button>\n      </Grid>\n      <Grid item xs={12} sx={{ padding: \"0 10px 10px\" }}>\n        <Fragment>\n          <h3>Currently Configured Endpoints</h3>\n          <DataTable\n            columns={[\n              {\n                label: \"Status\",\n                elementKey: \"key_values\",\n                renderFunction: renderWebhookStatus,\n                width: 50,\n              },\n              { label: \"Name\", elementKey: \"name\" },\n              {\n                label: \"Endpoint\",\n                elementKey: \"key_values\",\n                renderFunction: renderEndpoint,\n              },\n            ]}\n            itemActions={actions}\n            idField=\"name\"\n            isLoading={false}\n            records={WebhookSettingslist}\n            entityName=\"endpoints\"\n            customPaperHeight={\"calc(100vh - 750px)\"}\n          />\n        </Fragment>\n      </Grid>\n    </Grid>\n  );\n};\nexport default WebhookSettings;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Button, Loader } from \"mds\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\n\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  overrideFields,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IConfigurationSys,\n  IElementValue,\n  IOverrideEnv,\n  KVField,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\nimport {\n  configurationIsLoading,\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport WebhookSettings from \"../WebhookSettings/WebhookSettings\";\nimport { useSelector } from \"react-redux\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    settingsFormContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gridGap: \"10px\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  classes,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<IConfigurationSys[]>(\n    []\n  );\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const [overrideEnvs, setOverrideEnvs] = useState<IOverrideEnv>({});\n\n  const loadingConfig = useSelector(\n    (state: AppState) => state.system.loadingConfigurations\n  );\n\n  useEffect(() => {\n    dispatch(configurationIsLoading(true));\n  }, [selConfigTab, dispatch]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId) {\n        api\n          .invoke(\"GET\", `/api/v1/configs/${configId}`)\n          .then((res) => {\n            setConfigSubsysList(res);\n            let values: IElementValue[] = get(res[0], \"key_values\", []);\n\n            const fieldsConfig: KVField[] = fieldsConfigurations[configId];\n\n            const keyVals = fieldsConfig.map((field) => {\n              const includedValue = values.find(\n                (element: IElementValue) => element.key === field.name\n              );\n              const customValue = includedValue?.value || \"\";\n\n              return {\n                key: field.name,\n                value: field.customValueProcess\n                  ? field.customValueProcess(customValue)\n                  : customValue,\n              };\n            });\n\n            setConfigValues(keyVals);\n            setOverrideEnvs(overrideFields(keyVals));\n            dispatch(configurationIsLoading(false));\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(configurationIsLoading(false));\n            dispatch(setErrorSnackMessage(err));\n          });\n\n        return;\n      }\n      dispatch(configurationIsLoading(false));\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.restart));\n          dispatch(configurationIsLoading(true));\n          if (!res.restart) {\n            dispatch(setSnackBarMessage(\"Configuration saved successfully\"));\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      dispatch(configurationIsLoading(true));\n    }\n  };\n\n  const resetConfigurationMOpen = () => {\n    setResetConfigurationOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <div\n        onMouseMove={() => {\n          dispatch(\n            setHelpName(`settings_${selectedConfiguration.configuration_label}`)\n          );\n        }}\n      >\n        {resetConfigurationOpen && (\n          <ResetConfigurationModal\n            configurationName={selectedConfiguration.configuration_id}\n            closeResetModalAndRefresh={continueReset}\n            resetOpen={resetConfigurationOpen}\n          />\n        )}\n        {loadingConfig ? (\n          <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          <Box\n            sx={{\n              padding: \"15px\",\n              height: \"100%\",\n            }}\n          >\n            {selectedConfiguration.configuration_id === \"logger_webhook\" ||\n            selectedConfiguration.configuration_id === \"audit_webhook\" ? (\n              <WebhookSettings\n                WebhookSettingslist={configSubsysList}\n                setResetConfigurationOpen={resetConfigurationMOpen}\n                type={selectedConfiguration.configuration_id}\n              />\n            ) : (\n              <Fragment>\n                <form\n                  noValidate\n                  onSubmit={submitForm}\n                  className={className}\n                  style={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                  }}\n                >\n                  <Grid item xs={12} className={classes.settingsFormContainer}>\n                    <ConfTargetGeneric\n                      fields={\n                        fieldsConfigurations[\n                          selectedConfiguration.configuration_id\n                        ]\n                      }\n                      onChange={onValueChange}\n                      defaultVals={configValues}\n                      overrideEnv={overrideEnvs}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sx={{\n                      paddingTop: \"15px \",\n                      textAlign: \"right\" as const,\n                      maxHeight: \"60px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\",\n                    }}\n                  >\n                    <Button\n                      id={\"restore-defaults\"}\n                      variant=\"secondary\"\n                      onClick={resetConfigurationMOpen}\n                      label={\"Restore Defaults\"}\n                    />\n                    &nbsp; &nbsp;\n                    <Button\n                      id={\"save\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      disabled={saving}\n                      label={\"Save\"}\n                    />\n                  </Grid>\n                </form>\n              </Fragment>\n            )}\n          </Box>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Grid } from \"mds\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../EventDestinations/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","import React from \"react\";\nimport { Button, UploadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { performDownload } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useDispatch } from \"react-redux\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst ExportConfigButton = () => {\n  const dispatch = useDispatch();\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      performDownload(\n        new Blob([window.atob(res.value)]),\n        `minio-server-config-${DateTime.now().toFormat(\n          \"LL-dd-yyyy-HH-mm-ss\"\n        )}.conf`\n      );\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  return (\n    <TooltipWrapper tooltip=\"Warning! The resulting file will contain server configuration information in plain text\">\n      <Button\n        id={\"export-config\"}\n        onClick={() => {\n          invokeApi(\"GET\", `api/v1/configs/export`);\n        }}\n        icon={<UploadIcon />}\n        label={\"Export\"}\n        variant={\"regular\"}\n        disabled={isReqLoading}\n      />\n    </TooltipWrapper>\n  );\n};\n\nexport default ExportConfigButton;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Button, DownloadIcon } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst ImportConfigButton = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const needsRestart = useSelector(\n    (state: AppState) => state.system.serverNeedsRestart\n  );\n\n  const [refreshPage, setRefreshPage] = useState<boolean | undefined>(\n    undefined\n  );\n  const fileUpload = useRef<HTMLInputElement>(null);\n\n  const [isReqLoading, invokeApi] = useApi(\n    (res: any) => {\n      //base64 encoded information so decode before downloading.\n      dispatch(setServerNeedsRestart(true)); //import should refreshPage as per mc.\n      setRefreshPage(true);\n    },\n    (err) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  useEffect(() => {\n    if (!needsRestart && refreshPage) {\n      navigate(0); // refresh the page.\n    }\n  }, [needsRestart, refreshPage, navigate]);\n\n  const handleUploadButton = (e: any) => {\n    if (\n      e === null ||\n      e === undefined ||\n      e.target.files === null ||\n      e.target.files === undefined\n    ) {\n      return;\n    }\n    e.preventDefault();\n    const [fileToUpload] = e.target.files;\n\n    const formData = new FormData();\n    const blobFile = new Blob([fileToUpload], { type: fileToUpload.type });\n\n    formData.append(\"file\", blobFile, fileToUpload.name);\n    // @ts-ignore\n    invokeApi(\"POST\", `api/v1/configs/import`, formData);\n\n    e.target.value = \"\";\n  };\n\n  return (\n    <Fragment>\n      <input\n        type=\"file\"\n        onChange={handleUploadButton}\n        style={{ display: \"none\" }}\n        ref={fileUpload}\n      />\n      <TooltipWrapper tooltip=\"The file must be valid and  should have valid config values\">\n        <Button\n          id={\"import-config\"}\n          onClick={() => {\n            if (fileUpload && fileUpload.current) {\n              fileUpload.current.click();\n            }\n          }}\n          icon={<DownloadIcon />}\n          label={\"Import\"}\n          variant={\"regular\"}\n          disabled={isReqLoading}\n        />\n      </TooltipWrapper>\n    </Fragment>\n  );\n};\n\nexport default ImportConfigButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { HelpBox, PageLayout, SettingsIcon } from \"mds\";\nimport { Link, Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport VerticalTabs from \"../../Common/VerticalTabs/VerticalTabs\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport ExportConfigButton from \"./ExportConfigButton\";\nimport ImportConfigButton from \"./ImportConfigButton\";\nimport { Box } from \"@mui/material\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IConfigurationOptions {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    settingsOptionsContainer: {\n      display: \"flex\" as const,\n      flexDirection: \"row\" as const,\n      justifyContent: \"flex-start\" as const,\n      flexWrap: \"wrap\" as const,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      backgroundColor: \"#fff\",\n    },\n    ...searchField,\n    ...actionsTray,\n    ...containerForHeader,\n  });\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\nconst ConfigurationOptions = ({ classes }: IConfigurationOptions) => {\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"settings_Region\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Settings\"} actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid item xs={12}>\n          <div\n            id=\"settings-container\"\n            className={classes.settingsOptionsContainer}\n          >\n            <ScreenTitle\n              icon={<SettingsIcon />}\n              title={\"MinIO Configuration:\"}\n              actions={\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    gap: 2,\n                  }}\n                >\n                  <ImportConfigButton />\n                  <ExportConfigButton />\n                </Box>\n              }\n            />\n            <VerticalTabs\n              selectedTab={selConfigTab}\n              isRouteTabs\n              routes={\n                <Routes>\n                  {configurationElements.map((element) => (\n                    <Route\n                      key={`configItem-${element.configuration_label}`}\n                      path={`${element.configuration_id}`}\n                      element={<ConfigurationForm />}\n                    />\n                  ))}\n                  <Route\n                    path={\"/\"}\n                    element={<Navigate to={`${IAM_PAGES.SETTINGS}/region`} />}\n                  />\n                </Routes>\n              }\n            >\n              {configurationElements.map((element) => {\n                const { configuration_id, configuration_label, icon } = element;\n                return {\n                  tabConfig: {\n                    label: configuration_label,\n                    value: configuration_id,\n                    icon: icon,\n                    component: Link,\n                    to: getRoutePath(configuration_id),\n                  },\n                };\n              })}\n            </VerticalTabs>\n          </div>\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about Configurations\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationOptions);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport CompressIcon from \"@mui/icons-material/Compress\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport FindReplaceIcon from \"@mui/icons-material/FindReplace\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport PendingActionsIcon from \"@mui/icons-material/PendingActions\";\nimport CallToActionIcon from \"@mui/icons-material/CallToAction\";\nimport { IElement, IElementValue, IOverrideEnv, OverrideValue } from \"./types\";\nimport { LogsIcon } from \"mds\";\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <PublicIcon />,\n    configuration_id: \"region\",\n    configuration_label: \"Region\",\n  },\n  {\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: \"Compression\",\n  },\n  {\n    icon: <CodeIcon />,\n    configuration_id: \"api\",\n    configuration_label: \"API\",\n  },\n  {\n    icon: <LocalHospitalIcon />,\n    configuration_id: \"heal\",\n    configuration_label: \"Heal\",\n  },\n  {\n    icon: <FindReplaceIcon />,\n    configuration_id: \"scanner\",\n    configuration_label: \"Scanner\",\n  },\n  {\n    icon: <VpnKeyIcon />,\n    configuration_id: \"etcd\",\n    configuration_label: \"Etcd\",\n  },\n  {\n    icon: <CallToActionIcon />,\n    configuration_id: \"logger_webhook\",\n    configuration_label: \"Logger Webhook\",\n  },\n  {\n    icon: <PendingActionsIcon />,\n    configuration_id: \"audit_webhook\",\n    configuration_label: \"Audit Webhook\",\n  },\n  {\n    icon: (\n      <LogsIcon\n        className={\n          \"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiTab-iconWrapper css-i4bv87-MuiSvgIcon-root\"\n        }\n        style={{ width: 24, height: 24 }}\n      />\n    ),\n    configuration_id: \"audit_kafka\",\n    configuration_label: \"Audit Kafka\",\n  },\n];\n\nexport const fieldsConfigurations: any = {\n  region: [\n    {\n      name: \"name\",\n      required: true,\n      label: \"Server Location\",\n      tooltip: 'Name of the location of the server e.g. \"us-west-rack2\"',\n      type: \"string\",\n      placeholder: \"e.g. us-west-rack-2\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: \"Extensions\",\n      tooltip:\n        'Extensions to compress e.g. \".txt\", \".log\" or \".csv\" -  you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter an Extension\",\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label: \"Mime Types\",\n      tooltip:\n        'Mime types e.g. \"text/*\", \"application/json\" or \"application/xml\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter a Mime Type\",\n      withBorder: true,\n    },\n  ],\n  api: [\n    {\n      name: \"requests_max\",\n      required: false,\n      label: \"Requests Max\",\n      tooltip: \"Maximum number of concurrent requests, e.g. '1600'\",\n      type: \"number\",\n      placeholder: \"Enter Requests Max\",\n    },\n    {\n      name: \"cors_allow_origin\",\n      required: false,\n      label: \"Cors Allow Origin\",\n      tooltip: \"List of origins allowed for CORS requests\",\n      type: \"csv\",\n      placeholder: \"Enter allowed origin e.g. https://example.com\",\n    },\n    {\n      name: \"replication_workers\",\n      required: false,\n      label: \"Replication Workers\",\n      tooltip: \"Number of replication workers, defaults to 100\",\n      type: \"number\",\n      placeholder: \"Enter Replication Workers\",\n    },\n    {\n      name: \"replication_failed_workers\",\n      required: false,\n      label: \"Replication Failed Workers\",\n      tooltip:\n        \"Number of replication workers for recently failed replicas, defaults to 4\",\n      type: \"number\",\n      placeholder: \"Enter Replication Failed Workers\",\n    },\n  ],\n  heal: [\n    {\n      name: \"bitrotscan\",\n      required: false,\n      label: \"Bitrot Scan\",\n      tooltip:\n        \"Perform bitrot scan on disks when checking objects during scanner\",\n      type: \"on|off\",\n    },\n    {\n      name: \"max_sleep\",\n      required: false,\n      label: \"Max Sleep\",\n      tooltip:\n        \"Maximum sleep duration between objects to slow down heal operation, e.g. 2s\",\n      type: \"duration\",\n      placeholder: \"Enter Max Sleep Duration\",\n    },\n    {\n      name: \"max_io\",\n      required: false,\n      label: \"Max IO\",\n      tooltip:\n        \"Maximum IO requests allowed between objects to slow down heal operation, e.g. 3\",\n      type: \"number\",\n      placeholder: \"Enter Max IO\",\n    },\n  ],\n  scanner: [\n    {\n      name: \"delay\",\n      required: false,\n      label: \"Delay Multiplier\",\n      tooltip: \"Scanner delay multiplier, defaults to '10.0'\",\n      type: \"number\",\n      placeholder: \"Enter Delay\",\n    },\n    {\n      name: \"max_wait\",\n      required: false,\n      label: \"Max Wait\",\n      tooltip: \"Maximum wait time between operations, defaults to '15s'\",\n      type: \"duration\",\n      placeholder: \"Enter Max Wait\",\n    },\n    {\n      name: \"cycle\",\n      required: false,\n      label: \"Cycle\",\n      tooltip: \"Time duration between scanner cycles, defaults to '1m'\",\n      type: \"duration\",\n      placeholder: \"Enter Cycle\",\n    },\n  ],\n  etcd: [\n    {\n      name: \"endpoints\",\n      required: true,\n      label: \"Endpoints\",\n      tooltip:\n        'List of etcd endpoints e.g. \"http://localhost:2379\" - you can write one per field',\n      type: \"csv\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"path_prefix\",\n      required: false,\n      label: \"Path Prefix\",\n      tooltip: 'Namespace prefix to isolate tenants e.g. \"customer1/\"',\n      type: \"string\",\n      placeholder: \"Enter Path Prefix\",\n    },\n    {\n      name: \"coredns_path\",\n      required: false,\n      label: \"Coredns Path\",\n      tooltip: 'Shared bucket DNS records, default is \"/skydns\"',\n      type: \"string\",\n      placeholder: \"Enter Coredns Path\",\n    },\n    {\n      name: \"client_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_cert_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: \"Comment\",\n      tooltip: \"You can add a comment to this setting\",\n      type: \"comment\",\n      multiline: true,\n      placeholder: \"Enter custom notes if any\",\n    },\n  ],\n  logger_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_webhook: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      type: \"string\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      required: true,\n      label: \"Auth Token\",\n      type: \"string\",\n      placeholder: \"Enter Auth Token\",\n    },\n  ],\n  audit_kafka: [\n    {\n      name: \"enable\",\n      required: false,\n      label: \"Enable\",\n      tooltip: \"Enable audit_kafka target\",\n      type: \"on|off\",\n      customValueProcess: (origValue: string) => {\n        return origValue === \"\" || origValue === \"on\" ? \"on\" : \"off\";\n      },\n    },\n    {\n      name: \"brokers\",\n      required: true,\n      label: \"Brokers\",\n      type: \"csv\",\n      placeholder: \"Enter Kafka Broker\",\n    },\n    {\n      name: \"topic\",\n      required: false,\n      label: \"Topic\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n    },\n    {\n      name: \"sasl\",\n      required: false,\n      label: \"Use SASL\",\n      tooltip:\n        \"Enable SASL (Simple Authentication and Security Layer) authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"sasl_username\",\n      required: false,\n      label: \"SASL Username\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_password\",\n      required: false,\n      label: \"SASL Password\",\n      type: \"password\",\n      placeholder: \"Enter SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      required: false,\n      label: \"SASL Mechanism\",\n      type: \"string\",\n      placeholder: \"Enter SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism\",\n    },\n    {\n      name: \"tls\",\n      required: false,\n      label: \"Use TLS\",\n      tooltip: \"Enable TLS (Transport Layer Security)\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: \"Skip TLS Verification\",\n      tooltip: \"Trust server TLS without verification\",\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      required: false,\n      label: \"Client Cert\",\n      tooltip: \"Client cert for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      required: false,\n      label: \"Client Cert Key\",\n      tooltip: \"Client cert key for mTLS authentication\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert Key\",\n    },\n    {\n      name: \"tls_client_auth\",\n      required: false,\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"ClientAuth determines the Kafka server's policy for TLS client authorization\",\n      type: \"string\",\n    },\n    {\n      name: \"version\",\n      required: false,\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster\",\n      type: \"string\",\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[]\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n\nexport const overrideFields = (formFields: IElementValue[]): IOverrideEnv => {\n  let overrideReturn: IOverrideEnv = {};\n\n  formFields.forEach((envItem) => {\n    // it has override values, we construct the value\n    if (envItem.env_override) {\n      const value: OverrideValue = {\n        value: envItem.env_override.value,\n        overrideEnv: envItem.env_override.name,\n      };\n\n      overrideReturn = { ...overrideReturn, [envItem.key]: value };\n    }\n  });\n\n  return overrideReturn;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Restore Defaults`}\n      confirmText={\"Yes, Reset Configuration\"}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {resetLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to restore these configurations to default\n            values?\n            <br />\n            <b className={classes.wrapText}>\n              Please note that this may cause your system to not be accessible\n            </b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(ResetConfigurationModal);\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref","_ref$label","label","onChange","value","id","name","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","_jsxs","React","children","_jsx","className","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","textAlign","Typography","component","useStyles","makeStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","maxWidth","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","concat","style","tabStripStyle","minHeight","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","tabContentContainer","tabPanel","flexDirection","_ref$selectedTab","selectedTab","routes","isRouteTabs","useTheme","_useLocation$pathname","useLocation","pathname","isSmallScreen","useMediaQuery","breakpoints","down","_useState","useState","_useState2","_slicedToArray","setValue","headerList","contentList","useEffect","tabConfigElement","find","tabConfig","to","forEach","child","push","content","TabContext","Box","TabList","event","newValue","orientation","variant","scrollButtons","tabList","map","index","Tab","tabHeader","focusRipple","TabPanel","open","type","onCloseEndpoint","setName","_useState3","_useState4","endpoint","setEndpoint","_useState5","_useState6","authToken","setAuthToken","_useState7","_useState8","saving","setSaving","_useState9","_useState10","invalidInputs","setInvalidInput","_useState11","_useState12","initialInputs","setInitialInputs","dispatch","useAppDispatch","initializeInput","filter","validateInput","valid","includes","_toConsumableArray","Webhook","CallToActionIcon","PendingActionsIcon","Fragment","ModalWrapper","modalOpen","onClose","titleIcon","sx","formFieldStyles","formFieldRow","InputBoxWrapper","target","validity","error","pattern","required","LinearProgress","Button","onClick","trim","payload","key_values","key","arn_resource_id","api","invoke","then","res","setServerNeedsRestart","restart","setSnackBarMessage","configurationIsLoading","catch","err","setErrorSnackMessage","selectedARN","deleteLoading","setDeleteLoading","defaultWH","message","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","ConfirmDeleteIcon","confirmationContent","DialogContentText","_overrideValues$enabl","_overrideValues$endpo","_overrideValues$auth_","endpointInfo","endpointState","setEndpointState","endpointLocate","tokenLocate","enable","endpointValue","tokenValue","hasOverride","itm","env_override","overrideValues","overrideFields","PredefinedList","actionButton","paddingRight","overrideEnv","ConsoleIcon","auth_token","FormSwitchWrapper","e","setResetConfigurationOpen","WebhookSettingslist","newEndpointOpen","setNewEndpointOpen","deleteWebhookOpen","setDeleteWebhookOpen","editWebhookOpen","setEditWebhookOpen","setSelectedARN","selectedEndpoint","setSelectedEndpoint","disableButtonFunction","wHook","element","AddEndpointModal","DeleteWebhookEndpoint","EditWebhookEndpoint","DataTable","columns","elementKey","renderFunction","EnableFilter","overrideEnabled","justifyItems","fill","TierOfflineIcon","TierOnlineIcon","endpointFilter","itemActions","idField","records","entityName","customPaperHeight","settingsCommon","settingsFormContainer","gridTemplateColumns","gridGap","selectedConfiguration","_ref$className","navigate","useNavigate","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","configValues","setConfigValues","configSubsysList","setConfigSubsysList","resetConfigurationOpen","overrideEnvs","setOverrideEnvs","loadingConfig","useSelector","state","system","loadingConfigurations","configId","get","values","keyVals","fieldsConfigurations","field","includedValue","customValue","customValueProcess","removeEmptyFields","configuration_id","onValueChange","useCallback","resetConfigurationMOpen","onMouseMove","setHelpName","configuration_label","ResetConfigurationModal","configurationName","closeResetModalAndRefresh","resetOpen","paddingTop","Loader","WebhookSettings","noValidate","onSubmit","preventDefault","ConfTargetGeneric","fields","defaultVals","maxHeight","configName","validActiveConfig","configurationElements","containerClassName","minWidth","EditConfiguration","useDispatch","_useApi","useApi","performDownload","Blob","window","atob","DateTime","now","toFormat","_useApi2","isReqLoading","invokeApi","TooltipWrapper","UploadIcon","needsRestart","serverNeedsRestart","undefined","refreshPage","setRefreshPage","fileUpload","useRef","files","fileToUpload","formData","FormData","blobFile","append","ref","current","click","DownloadIcon","settingsOptionsContainer","flexWrap","searchField","containerForHeader","PageHeaderWrapper","HelpMenu","PageLayout","ScreenTitle","SettingsIcon","gap","ImportConfigButton","ExportConfigButton","VerticalTabs","Routes","Route","path","ConfigurationForm","Navigate","IAM_PAGES","SETTINGS","Link","HelpBox","iconComponent","help","href","rel","PublicIcon","CompressIcon","CodeIcon","LocalHospitalIcon","FindReplaceIcon","VpnKeyIcon","LogsIcon","region","placeholder","compression","withBorder","heal","scanner","etcd","multiline","logger_webhook","audit_webhook","audit_kafka","origValue","formFields","selectSAs","setSelectedSAs","selectedSAs","targetD","elements","overrideReturn","envItem","wrapText","whiteSpace","wordWrap","deleteDialogStyles","resetLoading","setResetLoading"],"sourceRoot":""}