{"version":3,"file":"static/js/3509.3accc3d1.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditReplicationModal.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  BucketReplicationIcon,\n  Button,\n  FormLayout,\n  InputBox,\n  ReadBox,\n  Switch,\n  Grid,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEditReplicationModal {\n  closeModalAndRefresh: (refresh: boolean) => void;\n  open: boolean;\n  classes: any;\n  bucketName: string;\n  ruleID: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    modalFormScrollable: {\n      ...modalStyleUtils.modalFormScrollable,\n      paddingRight: 10,\n    },\n  });\n\nconst EditReplicationModal = ({\n  closeModalAndRefresh,\n  open,\n  classes,\n  bucketName,\n  ruleID,\n}: IEditReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [editLoading, setEditLoading] = useState<boolean>(true);\n  const [saveEdit, setSaveEdit] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [destination, setDestination] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(false);\n  const [metadataSync, setMetadataSync] = useState<boolean>(false);\n  const [initialTags, setInitialTags] = useState<string>(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [repExisting, setRepExisting] = useState<boolean>(false);\n  const [repDelete, setRepDelete] = useState<boolean>(false);\n  const [ruleState, setRuleState] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (editLoading) {\n      api.buckets\n        .getBucketReplicationRule(bucketName, ruleID)\n        .then((res) => {\n          setPriority(res.data.priority ? res.data.priority.toString() : \"\");\n          const pref = res.data.prefix || \"\";\n          const tag = res.data.tags || \"\";\n          setPrefix(pref);\n          setInitialTags(tag);\n          setTags(tag);\n          setDestination(res.data.destination?.bucket || \"\");\n          setRepDeleteMarker(res.data.delete_marker_replication || false);\n          setTargetStorageClass(res.data.storageClass || \"\");\n          setRepExisting(!!res.data.existingObjects);\n          setRepDelete(!!res.data.deletes_replication);\n          setRuleState(res.data.status === \"Enabled\");\n          setMetadataSync(!!res.data.metadata_replication);\n\n          setEditLoading(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n          setEditLoading(false);\n        });\n    }\n  }, [editLoading, dispatch, bucketName, ruleID]);\n\n  useEffect(() => {\n    if (saveEdit) {\n      const remoteBucketsInfo = {\n        arn: destination,\n        ruleState: ruleState,\n        prefix: prefix,\n        tags: tags,\n        replicateDeleteMarkers: repDeleteMarker,\n        replicateDeletes: repDelete,\n        replicateExistingObjects: repExisting,\n        replicateMetadata: metadataSync,\n        priority: parseInt(priority),\n        storageClass: targetStorageClass,\n      };\n\n      api.buckets\n        .updateMultiBucketReplication(bucketName, ruleID, remoteBucketsInfo)\n        .then(() => {\n          setSaveEdit(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n          setSaveEdit(false);\n        });\n    }\n  }, [\n    saveEdit,\n    bucketName,\n    ruleID,\n    destination,\n    prefix,\n    tags,\n    repDeleteMarker,\n    priority,\n    repDelete,\n    repExisting,\n    ruleState,\n    metadataSync,\n    targetStorageClass,\n    closeModalAndRefresh,\n    dispatch,\n  ]);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Edit Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setSaveEdit(true);\n        }}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <Switch\n            checked={ruleState}\n            id=\"ruleState\"\n            name=\"ruleState\"\n            label=\"Rule State\"\n            onChange={(e) => {\n              setRuleState(e.target.checked);\n            }}\n          />\n          <ReadBox label={\"Destination\"} sx={{ width: \"100%\" }}>\n            {destination}\n          </ReadBox>\n\n          <InputBox\n            id=\"priority\"\n            name=\"priority\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              if (e.target.validity.valid) {\n                setPriority(e.target.value);\n              }\n            }}\n            label=\"Priority\"\n            value={priority}\n            pattern={\"[0-9]*\"}\n          />\n          <InputBox\n            id=\"storageClass\"\n            name=\"storageClass\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setTargetStorageClass(e.target.value);\n            }}\n            placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n            label=\"Storage Class\"\n            value={targetStorageClass}\n          />\n          <fieldset className={\"inputItem\"}>\n            <legend>Object Filters</legend>\n            <InputBox\n              id=\"prefix\"\n              name=\"prefix\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setPrefix(e.target.value);\n              }}\n              placeholder=\"prefix\"\n              label=\"Prefix\"\n              value={prefix}\n            />\n            <QueryMultiSelector\n              name=\"tags\"\n              label=\"Tags\"\n              elements={initialTags}\n              onChange={(vl: string) => {\n                setTags(vl);\n              }}\n              keyPlaceholder=\"Tag Key\"\n              valuePlaceholder=\"Tag Value\"\n              withBorder\n            />\n          </fieldset>\n          <fieldset className={\"inputItem\"}>\n            <legend>Replication Options</legend>\n\n            <Switch\n              checked={repExisting}\n              id=\"repExisting\"\n              name=\"repExisting\"\n              label=\"Existing Objects\"\n              onChange={(e) => {\n                setRepExisting(e.target.checked);\n              }}\n              description={\"Replicate existing objects\"}\n            />\n\n            <Switch\n              checked={metadataSync}\n              id=\"metadatataSync\"\n              name=\"metadatataSync\"\n              label=\"Metadata Sync\"\n              onChange={(e) => {\n                setMetadataSync(e.target.checked);\n              }}\n              description={\"Metadata Sync\"}\n            />\n\n            <Switch\n              checked={repDeleteMarker}\n              id=\"deleteMarker\"\n              name=\"deleteMarker\"\n              label=\"Delete Marker\"\n              onChange={(e) => {\n                setRepDeleteMarker(e.target.checked);\n              }}\n              description={\"Replicate soft deletes\"}\n            />\n            <Switch\n              checked={repDelete}\n              id=\"repDelete\"\n              name=\"repDelete\"\n              label=\"Deletes\"\n              onChange={(e) => {\n                setRepDelete(e.target.checked);\n              }}\n              description={\"Replicate versioned deletes\"}\n            />\n          </fieldset>\n          <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n            <Button\n              id={\"cancel-edit-replication\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={editLoading || saveEdit}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save-replication\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={editLoading || saveEdit}\n              label={\"Save\"}\n            />\n          </Grid>\n        </FormLayout>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EditReplicationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["withStyles","theme","createStyles","_objectSpread","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","modalFormScrollable","paddingRight","_ref","closeModalAndRefresh","open","bucketName","classes","ruleID","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","editLoading","setEditLoading","_useState3","_useState4","saveEdit","setSaveEdit","_useState5","_useState6","priority","setPriority","_useState7","_useState8","destination","setDestination","_useState9","_useState10","prefix","setPrefix","_useState11","_useState12","repDeleteMarker","setRepDeleteMarker","_useState13","_useState14","metadataSync","setMetadataSync","_useState15","_useState16","initialTags","setInitialTags","_useState17","_useState18","tags","setTags","_useState19","_useState20","targetStorageClass","setTargetStorageClass","_useState21","_useState22","repExisting","setRepExisting","_useState23","_useState24","repDelete","setRepDelete","_useState25","_useState26","ruleState","setRuleState","useEffect","api","buckets","getBucketReplicationRule","then","res","_res$data$destination","data","toString","pref","tag","bucket","delete_marker_replication","storageClass","existingObjects","deletes_replication","status","metadata_replication","catch","err","setModalErrorSnackMessage","errorToHandler","error","remoteBucketsInfo","arn","replicateDeleteMarkers","replicateDeletes","replicateExistingObjects","replicateMetadata","parseInt","updateMultiBucketReplication","_jsx","ModalWrapper","modalOpen","onClose","title","titleIcon","BucketReplicationIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","_jsxs","FormLayout","containerPadding","withBorders","Switch","checked","id","name","label","onChange","target","ReadBox","sx","width","InputBox","validity","valid","value","pattern","placeholder","className","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","Grid","item","xs","modalButtonBar","Button","type","variant","disabled","onClick","_ref$tooltip","tooltip","_ref$keyPlaceholder","_ref$valuePlaceholder","_ref$withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","length","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","_toConsumableArray","index","get","onChangeValue","debounce","queryString","keyVal","insertString","concat","inputs","map","overlayIcon","AddIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","Fragment","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","placement","HelpIcon","style","height","padding","overflowY","position","marginTop","ref"],"sourceRoot":""}