{"version":3,"file":"static/js/8455.6eaf8924.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditAccessRule.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { AddAccessRuleIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IEditAccessRule {\n  classes: any;\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toEdit: string;\n  initial: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\n\nconst EditAccessRule = ({\n  modalOpen,\n  onClose,\n  classes,\n  bucket,\n  toEdit,\n  initial,\n}: IEditAccessRule) => {\n  const dispatch = useAppDispatch();\n  const [selectedAccess, setSelectedAccess] = useState<any>(initial);\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setSelectedAccess(initial);\n  };\n\n  const createProcess = () => {\n    api\n      .invoke(\"PUT\", `/api/v1/bucket/${bucket}/access-rules`, {\n        prefix: toEdit,\n        access: selectedAccess,\n      })\n      .then((res: any) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        onClose();\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title={`Edit Access Rule for ${`${bucket}/${toEdit || \"\"}`}`}\n        onClose={onClose}\n        titleIcon={<AddAccessRuleIcon />}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.spacerTop}>\n            <SelectWrapper\n              id=\"access\"\n              name=\"Access\"\n              onChange={(e) => {\n                setSelectedAccess(e.target.value);\n              }}\n              label=\"Access\"\n              value={selectedAccess}\n              options={accessOptions}\n              disabled={false}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"clear\"}\n              type=\"button\"\n              variant=\"regular\"\n              onClick={resetForm}\n              label={\"Clear\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              onClick={createProcess}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditAccessRule);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Tooltip,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n"],"names":["withStyles","theme","createStyles","modalStyleUtils","spacingUtils","modalOpen","onClose","classes","bucket","toEdit","initial","dispatch","useAppDispatch","useState","selectedAccess","setSelectedAccess","title","titleIcon","container","item","xs","className","spacerTop","id","name","onChange","e","target","value","label","options","disabled","modalButtonBar","type","variant","onClick","api","prefix","access","then","res","catch","err","setErrorSnackMessage","SelectStyled","root","height","lineHeight","marginTop","spacing","input","position","color","fontSize","fontWeight","padding","border","borderRadius","display","alignItems","borderColor","backgroundColor","InputBase","fieldBasic","tooltipHelper","fieldContainer","flexFlow","tooltip","htmlFor","inputLabel","tooltipContainer","placement","fullWidth","map","option"],"sourceRoot":""}