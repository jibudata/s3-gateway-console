{"version":3,"file":"static/js/1724.d1b98d6d.chunk.js","mappings":"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","sources":["screens/Console/Common/TabSelector/TabSelector.tsx","screens/Console/Dashboard/BasicDashboard/ServerInfoCard.tsx","screens/Console/Dashboard/BasicDashboard/DriveInfoCard.tsx","screens/Console/Common/GeneralUsePaginator/GeneralUsePaginator.tsx","screens/Console/Dashboard/BasicDashboard/BasicDashboard.tsx","screens/Console/Dashboard/CommonCard.tsx","screens/Console/Dashboard/Prometheus/types.ts","screens/Console/Dashboard/Prometheus/utils.tsx","screens/Console/Dashboard/Prometheus/MergedWidgets.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/BarChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/BarChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/LineChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/LinearGraphWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/PieChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SimpleWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleRepWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleValueWidget.tsx","screens/Console/Dashboard/Prometheus/widgetUtils.tsx","screens/Console/Dashboard/Prometheus/ZoomWidget.tsx","screens/Console/Dashboard/Prometheus/PrDashboard.tsx","screens/shared/tabs.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { ITabOption } from \"./types\";\n\ninterface ITabSelector {\n  selectedTab: number;\n  onChange: (newValue: number) => void;\n  tabOptions: ITabOption[];\n}\n\nconst tabSubStyles = makeStyles({\n  root: {\n    backgroundColor: \"transparent\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: 22,\n    textTransform: \"uppercase\",\n    color: \"#D0D0D0\",\n  },\n  selected: { \"& .MuiTab-wrapper\": { color: \"#07193E\", fontWeight: \"bold\" } },\n  indicator: {\n    background:\n      \"transparent linear-gradient(90deg, #072B4E 0%, #081C42 100%) 0% 0% no-repeat padding-box;\",\n    height: 4,\n  },\n  scroller: {\n    maxWidth: 1185,\n    position: \"relative\",\n    \"&::after\": {\n      content: '\" \"',\n      backgroundColor: \"#EEF1F4\",\n      height: 4,\n      width: \"100%\",\n      display: \"block\",\n    },\n  },\n});\n\nconst TabSelector = ({ selectedTab, onChange, tabOptions }: ITabSelector) => {\n  const subStyles = tabSubStyles();\n\n  return (\n    <Fragment>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"cluster-tabs\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        value={selectedTab}\n        onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n          onChange(newValue);\n        }}\n        classes={{\n          indicator: subStyles.indicator,\n          scroller: subStyles.scroller,\n        }}\n      >\n        {tabOptions.map((option, index) => {\n          let tabOptions: ITabOption = {\n            label: option.label,\n          };\n\n          if (option.value) {\n            tabOptions = { ...tabOptions, value: option.value };\n          }\n\n          if (option.disabled) {\n            tabOptions = { ...tabOptions, disabled: option.disabled };\n          }\n\n          return (\n            <Tab\n              {...tabOptions}\n              classes={{\n                root: subStyles.root,\n                selected: subStyles.selected,\n              }}\n              id={`simple-tab-${index}`}\n              aria-controls={`simple-tabpanel-${index}`}\n              key={`tab-${index}-${option.label}`}\n            />\n          );\n        })}\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default TabSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { ServerInfo } from \"../types\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { Card, CardHeader } from \"@mui/material\";\nimport { CircleIcon, VersionIcon } from \"../../../../icons\";\nimport get from \"lodash/get\";\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...commonDashboardInfocard,\n  });\n\ninterface ICardProps {\n  classes: any;\n  server: ServerInfo;\n  index: number;\n}\n\nconst ServerInfoCard = ({ classes, server, index }: ICardProps) => {\n  const serverStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"offline\":\n        return classes.redState;\n      case \"online\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n  const networkKeys = Object.keys(get(server, \"network\", {}));\n  const networkTotal = networkKeys.length;\n  const totalDrives = server.drives ? server.drives.length : 0;\n  const activeNetwork = networkKeys.reduce((acc: number, currValue: string) => {\n    const item = server.network[currValue];\n    if (item === \"online\") {\n      return acc + 1;\n    }\n    return acc;\n  }, 0);\n  const activeDisks = server.drives\n    ? server.drives.filter((element) => element.state === \"ok\").length\n    : 0;\n  return (\n    <Card className={classes.cardContainer}>\n      <CardHeader\n        className={classes.cardHeader}\n        title={\n          <div>\n            <div className={classes.cardNumber}>Server {index}</div>\n            <div className={classes.referenceTitle}>\n              {server.state && (\n                <span className={serverStatusToClass(server.state)}>\n                  <CircleIcon />\n                </span>\n              )}\n              {server.endpoint || \"\"}\n            </div>\n          </div>\n        }\n        subheader={\n          <Grid item xs={12} className={classes.stateContainer}>\n            <span className={classes.infoValue}>\n              <span\n                className={`${classes.innerState} ${\n                  activeDisks <= totalDrives / 2 && classes.redState\n                }  ${\n                  totalDrives !== 2 &&\n                  activeDisks === totalDrives / 2 + 1 &&\n                  classes.yellowState\n                }  ${activeDisks === totalDrives && classes.greenState}`}\n              >\n                <CircleIcon />\n              </span>\n              Drives: {activeDisks}/{totalDrives}{\" \"}\n            </span>\n            <span className={classes.infoValue}>\n              <span\n                className={`${classes.innerState} ${\n                  activeNetwork <= networkTotal / 2 && classes.redState\n                } ${\n                  activeNetwork === networkTotal / 2 + 1 && classes.yellowState\n                } ${activeNetwork === networkTotal && classes.greenState}`}\n              >\n                <CircleIcon />\n              </span>\n              Network: {activeNetwork}/{networkTotal}{\" \"}\n            </span>\n            <span className={classes.infoValue}>\n              Uptime: {server.uptime ? niceDays(server.uptime) : \"N/A\"}\n            </span>\n            <span className={classes.infoValue}>\n              <VersionIcon />\n              <strong>Version</strong> {server.version ? server.version : \"N/A\"}\n            </span>\n          </Grid>\n        }\n      />\n    </Card>\n  );\n};\nexport default withStyles(styles)(ServerInfoCard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IDriveInfo } from \"../types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { Card, CardHeader } from \"@mui/material\";\nimport { CircleIcon } from \"../../../../icons\";\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...commonDashboardInfocard,\n  });\n\ninterface ICardProps {\n  classes: any;\n  drive: IDriveInfo;\n}\n\nconst DriveInfoCard = ({ classes, drive }: ICardProps) => {\n  const driveStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"offline\":\n        return classes.redState;\n      case \"ok\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card className={classes.cardContainer}>\n        <CardHeader\n          className={classes.cardHeader}\n          title={\n            <div className={classes.referenceTitle}>\n              {drive.state && (\n                <span className={driveStatusToClass(drive.state)}>\n                  <CircleIcon />\n                </span>\n              )}\n              {drive.endpoint || \"\"}\n            </div>\n          }\n          subheader={\n            <Grid item xs={12} className={classes.stateContainer}>\n              <span className={classes.infoValue}>\n                <strong>Capacity:</strong>{\" \"}\n                {niceBytes(\n                  drive.totalSpace ? drive.totalSpace.toString() : \"0\"\n                )}\n              </span>\n              <span className={classes.infoValue}>\n                <strong>Used:</strong>{\" \"}\n                {niceBytes(drive.usedSpace ? drive.usedSpace.toString() : \"0\")}\n              </span>\n              <span className={classes.infoValue}>\n                <strong>Available:</strong>{\" \"}\n                {niceBytes(\n                  drive.availableSpace ? drive.availableSpace.toString() : \"0\"\n                )}\n              </span>\n            </Grid>\n          }\n        />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(DriveInfoCard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport Pagination from \"@mui/material/Pagination\";\n\ninterface IGeneralUsePaginator {\n  classes: any;\n  page: number;\n  itemsPerPage?: number;\n  entity: string;\n  totalItems: number;\n  onChange: (newPage: number) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paginatorContainer: {\n      margin: \"10px 0 18px\",\n      flexWrap: \"wrap\",\n    },\n    paginatorInformation: {\n      color: \"#848484\",\n      fontSize: 12,\n      fontStyle: \"italic\",\n      whiteSpace: \"nowrap\",\n    },\n    paginatorEntity: {\n      color: \"#767676\",\n      fontSize: 12,\n      fontWeight: \"bold\",\n    },\n    paginationElement: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      color: \"#848484\",\n      fontSize: 12,\n    },\n  });\n\nconst paginatorStyling = makeStyles({\n  ul: {\n    \"& .MuiPaginationItem-root\": {\n      color: \"#07193E\",\n      fontSize: 14,\n      \"&.Mui-selected\": {\n        backgroundColor: \"transparent\",\n        fontWeight: \"bold\",\n        \"&::after\": {\n          backgroundColor: \"#07193E\",\n          width: \"100%\",\n          height: 3,\n          content: '\" \"',\n          position: \"absolute\",\n          bottom: -3,\n        },\n      },\n    },\n  },\n});\n\nconst GeneralUsePaginator = ({\n  classes,\n  page = 1,\n  itemsPerPage = 5,\n  entity,\n  totalItems,\n  onChange,\n}: IGeneralUsePaginator) => {\n  const paginatorStyles = paginatorStyling();\n\n  const currentInitialItem = page * itemsPerPage - itemsPerPage + 1;\n  const currentEndItem = currentInitialItem + itemsPerPage - 1;\n  const displayCurrentEndItem =\n    currentEndItem > totalItems ? totalItems : currentEndItem;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  return (\n    <Fragment>\n      <Grid container className={classes.paginatorContainer}>\n        <Grid item xs={6}>\n          <span className={classes.paginatorEntity}>{entity}</span>\n          <br />\n          <span className={classes.paginatorInformation}>\n            Showing{\" \"}\n            {totalPages > 1 ? (\n              <Fragment>\n                {currentInitialItem} - {displayCurrentEndItem} out of{\" \"}\n              </Fragment>\n            ) : null}\n            {totalItems} Total {entity}\n          </span>\n        </Grid>\n        <Grid item xs={6} className={classes.paginationElement}>\n          {totalPages > 1 && (\n            <Fragment>\n              Go to:{\" \"}\n              <Pagination\n                count={totalPages}\n                variant={\"text\"}\n                siblingCount={3}\n                page={page}\n                size=\"small\"\n                hideNextButton\n                hidePrevButton\n                onChange={(_, newPage: number) => {\n                  onChange(newPage);\n                }}\n                classes={{ ul: paginatorStyles.ul }}\n              />\n            </Fragment>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(GeneralUsePaginator);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IDriveInfo, Usage } from \"../types\";\nimport { calculateBytes, representationNumber } from \"../../../../common/utils\";\nimport { TabPanel } from \"../../../shared/tabs\";\nimport ServerInfoCard from \"./ServerInfoCard\";\nimport DriveInfoCard from \"./DriveInfoCard\";\nimport CommonCard from \"../CommonCard\";\nimport TabSelector from \"../../Common/TabSelector/TabSelector\";\nimport GeneralUsePaginator from \"../../Common/GeneralUsePaginator/GeneralUsePaginator\";\nimport { widgetContainerCommon } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { PrometheusIcon } from \"../../../../icons\";\nimport HelpBox from \"../../../../common/HelpBox\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    generalStatusTitle: {\n      color: \"#767676\",\n      fontSize: 16,\n      fontWeight: \"bold\",\n      margin: \"15px 10px 0 10px\",\n    },\n    paginatorContainer: {\n      maxWidth: 1185,\n      width: \"100%\",\n    },\n    ...widgetContainerCommon,\n  });\n\ninterface IDashboardProps {\n  classes: any;\n  usage: Usage | null;\n}\n\nconst itemsPerPage = 5;\n\nconst BasicDashboard = ({ classes, usage }: IDashboardProps) => {\n  const [curTab, setCurTab] = useState<number>(0);\n  const [serversPageNumber, setServersPageNumber] = useState<number>(1);\n  const [drivesPageNumber, setDrivesPageNumber] = useState<number>(1);\n\n  const prettyUsage = (usage: string | undefined) => {\n    if (usage === undefined) {\n      return { total: \"0\", unit: \"Mi\" };\n    }\n\n    const calculatedBytes = calculateBytes(usage);\n\n    return calculatedBytes;\n  };\n\n  const prettyNumber = (usage: number | undefined) => {\n    if (usage === undefined) {\n      return 0;\n    }\n\n    return usage.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const makeServerArray = (usage: Usage | null) => {\n    if (usage !== null) {\n      return usage.servers.sort(function (a, b) {\n        var nameA = a.endpoint.toLowerCase();\n        var nameB = b.endpoint.toLowerCase();\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n\n    return [];\n  };\n\n  const serverArray = makeServerArray(usage || null);\n\n  const usageToRepresent = prettyUsage(\n    usage && usage.usage ? usage.usage.toString() : \"0\"\n  );\n\n  let allDrivesArray: IDriveInfo[] = [];\n\n  serverArray.forEach((server) => {\n    const drivesInput = server.drives.map((drive) => {\n      return drive;\n    });\n\n    allDrivesArray = [...allDrivesArray, ...drivesInput];\n  });\n\n  const splitedServers = serverArray.slice(\n    serversPageNumber * itemsPerPage - itemsPerPage,\n    serversPageNumber * itemsPerPage\n  );\n\n  const splitedDrives = allDrivesArray.slice(\n    drivesPageNumber * itemsPerPage - itemsPerPage,\n    drivesPageNumber * itemsPerPage\n  );\n\n  return (\n    <Fragment>\n      <div className={classes.dashboardBG} />\n      {usage?.prometheusNotReady && (\n        <Grid\n          container\n          justifyContent={\"center\"}\n          alignContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <Grid item xs={8}>\n            <HelpBox\n              iconComponent={<PrometheusIcon />}\n              title={\"We can't retrieve advanced metrics at this time\"}\n              help={\n                <Fragment>\n                  MinIO Dashboard will display basic metrics as we couldn't\n                  connect to Prometheus successfully.\n                  <br /> <br />\n                  Please try again in a few minutes. If the problem persists,\n                  you can review your configuration and confirm that Prometheus\n                  server is up and running.\n                </Fragment>\n              }\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Grid container spacing={2}>\n        <Grid item xs={12} className={classes.generalStatusTitle}>\n          General Status\n        </Grid>\n        <Grid item xs={12} className={classes.dashboardRow}>\n          <Grid\n            item\n            xs={7}\n            sm={8}\n            md={6}\n            lg={3}\n            className={classes.widgetPanelDelimiter}\n          >\n            <CommonCard\n              title={\"All Buckets\"}\n              metricValue={usage ? representationNumber(usage.buckets) : 0}\n              extraMargin\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n            sm={8}\n            md={6}\n            lg={3}\n            className={classes.widgetPanelDelimiter}\n          >\n            <CommonCard\n              title={\"Usage\"}\n              metricValue={usageToRepresent.total}\n              metricUnit={usageToRepresent.unit}\n              extraMargin\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n            sm={8}\n            md={6}\n            lg={3}\n            className={classes.widgetPanelDelimiter}\n          >\n            <CommonCard\n              title={\"Total Objects\"}\n              metricValue={usage ? representationNumber(usage.objects) : 0}\n              extraMargin\n            />\n          </Grid>\n          <Grid\n            item\n            xs={7}\n            sm={8}\n            md={6}\n            lg={3}\n            className={classes.widgetPanelDelimiter}\n          >\n            <CommonCard\n              title={\"Servers\"}\n              metricValue={usage ? prettyNumber(serverArray.length) : 0}\n              subMessage={{ message: \"Total\" }}\n              extraMargin\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <TabSelector\n            selectedTab={curTab}\n            onChange={(newValue: number) => {\n              setCurTab(newValue);\n            }}\n            tabOptions={[{ label: \"Servers\" }, { label: \"Drives\" }]}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.widgetsContainer}>\n          <TabPanel index={0} value={curTab}>\n            <div className={classes.paginatorContainer}>\n              <GeneralUsePaginator\n                page={serversPageNumber}\n                entity={\"Servers\"}\n                totalItems={serverArray.length}\n                onChange={setServersPageNumber}\n                itemsPerPage={itemsPerPage}\n              />\n            </div>\n            {splitedServers.map((server, index) => (\n              <Grid item xs={12} key={`serverDS-${index.toString()}`}>\n                <ServerInfoCard server={server} index={index + 1} />\n              </Grid>\n            ))}\n          </TabPanel>\n          <TabPanel index={1} value={curTab}>\n            <div className={classes.paginatorContainer}>\n              <GeneralUsePaginator\n                page={drivesPageNumber}\n                entity={\"Drives\"}\n                totalItems={allDrivesArray.length}\n                onChange={setDrivesPageNumber}\n                itemsPerPage={itemsPerPage}\n              />\n            </div>\n            {splitedDrives.map((drive, index) => (\n              <Grid item xs={12} key={`drive-${index}-${drive.uuid}`}>\n                <DriveInfoCard drive={drive} />\n              </Grid>\n            ))}\n          </TabPanel>\n        </Grid>\n      </Grid>\n      {!usage?.prometheusNotReady && (\n        <Grid\n          container\n          justifyContent={\"center\"}\n          alignContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <Grid item xs={8}>\n            <HelpBox\n              iconComponent={<PrometheusIcon />}\n              title={\"Monitoring\"}\n              help={\n                <Fragment>\n                  The MinIO Dashboard is displaying basic metrics only due to\n                  missing the{\" \"}\n                  <a\n                    href=\"https://docs.min.io/minio/baremetal/console/minio-console.html?ref=con#configuration\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    necessary settings\n                  </a>{\" \"}\n                  for displaying extended metrics.\n                  <br />\n                  <br />\n                  See{\" \"}\n                  <a\n                    href=\"https://docs.min.io/minio/baremetal/monitoring/metrics-alerts/collect-minio-metrics-using-prometheus.html?ref=con#minio-metrics-collect-using-prometheus\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Collect MinIO Metrics Using Prometheus\n                  </a>{\" \"}\n                  for a complete tutorial on scraping and visualizing MinIO\n                  metrics with Prometheus.\n                </Fragment>\n              }\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(BasicDashboard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Card, CardHeader } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React, { Fragment } from \"react\";\nimport { widgetCommon } from \"../Common/FormComponents/common/styleLibrary\";\n\nexport interface ISubInterface {\n  message: string;\n  fontWeight?: \"normal\" | \"bold\";\n}\n\ninterface ICommonCard {\n  title: string;\n  metricValue: any;\n  metricUnit?: string;\n  subMessage?: ISubInterface;\n  moreLink?: string;\n  rightComponent?: any;\n  extraMargin?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    cardRoot: {\n      ...widgetCommon.singleValueContainer,\n      \"&.MuiPaper-root\": {\n        borderRadius: 10,\n      },\n    },\n    metricText: {\n      fontSize: 70,\n      lineHeight: 1.1,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n    },\n    unitText: {\n      fontSize: 10,\n      color: \"#767676\",\n      fontWeight: \"normal\",\n    },\n    subHearderContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    subMessage: {\n      fontSize: 10,\n      color: \"#767676\",\n      \"&.bold\": {\n        fontWeight: \"bold\",\n      },\n    },\n    headerContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    viewAll: {\n      fontSize: 10,\n      color: \"#C83B51\",\n      textTransform: \"capitalize\",\n\n      \"& a, & a:hover, & a:visited, & a:active\": {\n        color: \"#C83B51\",\n      },\n    },\n    extraMargin: {\n      margin: \"10px 20px 10px 0\",\n    },\n  });\n\nconst cardSubStyles = makeStyles({\n  root: { backgroundColor: \"#fff\", padding: 0 },\n  title: {\n    ...widgetCommon.titleContainer,\n  },\n  content: {\n    maxWidth: \"100%\",\n  },\n});\n\nconst CommonCard = ({\n  title,\n  metricValue,\n  metricUnit,\n  subMessage,\n  moreLink,\n  rightComponent,\n  extraMargin = false,\n  classes,\n}: ICommonCard) => {\n  const subStyles = cardSubStyles();\n  const SubHeader = () => {\n    return (\n      <Fragment>\n        <div className={classes.subHearderContainer}>\n          <div className={classes.leftSide}>\n            <div>\n              <span className={classes.metricText}>\n                {metricValue}\n                <span className={classes.unitText}>{metricUnit}</span>\n              </span>\n            </div>\n            {subMessage && (\n              <div\n                className={`${classes.subMessage} ${\n                  subMessage.fontWeight ? subMessage.fontWeight : \"\"\n                }`}\n              >\n                {subMessage.message}\n              </div>\n            )}\n          </div>\n          <div className={classes.rightSide}>{rightComponent}</div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  const Header = () => {\n    return (\n      <Fragment>\n        <div className={classes.headerContainer}>\n          <span className={classes.title}>{title}</span>\n          {moreLink && (\n            <Fragment>\n              <span className={classes.viewAll}>\n                <Link to={moreLink}>View All</Link>\n              </span>\n            </Fragment>\n          )}\n        </div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Card\n        className={`${classes.cardRoot} ${\n          extraMargin ? classes.extraMargin : \"\"\n        }`}\n      >\n        {metricValue !== \"\" && (\n          <CardHeader\n            title={<Header />}\n            subheader={\n              <Fragment>\n                <SubHeader />\n              </Fragment>\n            }\n            classes={{\n              root: subStyles.root,\n              title: subStyles.title,\n              content: subStyles.content,\n            }}\n          />\n        )}\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommonCard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  IBarChartConfiguration,\n  IBarChartRelation,\n  IDataSRep,\n  ILinearGraphConfiguration,\n  IPieChartConfiguration,\n} from \"./Widgets/types\";\n\nexport enum widgetType {\n  singleValue = \"singleValue\",\n  linearGraph = \"linearGraph\",\n  areaGraph = \"areaGraph\",\n  barChart = \"barChart\",\n  pieChart = \"pieChart\",\n  singleRep = \"singleRep\",\n  simpleWidget = \"simpleWidget\",\n}\n\nexport interface IDashboardPanel {\n  id: number;\n  mergedPanels?: IDashboardPanel[];\n  title: string;\n  data?: string | object[] | IDataSRep[];\n  dataOuter?: string | object[];\n  type?: widgetType;\n  widgetIcon?: any;\n  widgetConfiguration?:\n    | ILinearGraphConfiguration[]\n    | IBarChartConfiguration[]\n    | IPieChartConfiguration;\n  color?: string;\n  fillColor?: string;\n  innerLabel?: string;\n  labelDisplayFunction?: (value: string) => any;\n  disableYAxis?: boolean;\n  xAxisFormatter?: (item: string) => string;\n  yAxisFormatter?: (item: string) => string;\n  customStructure?: IBarChartRelation[];\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { IDashboardPanel, widgetType } from \"./types\";\nimport {\n  getTimeFromTimestamp,\n  niceBytes,\n  niceDays,\n  representationNumber,\n  textToRGBColor,\n  units,\n} from \"../../../../common/utils\";\nimport HealIcon from \"../../../../icons/HealIcon\";\nimport DiagnosticsIcon from \"../../../../icons/DiagnosticsIcon\";\nimport { UptimeIcon } from \"../../../../icons\";\n\nconst colorsMain = [\n  \"#C4D4E9\",\n  \"#DCD1EE\",\n  \"#D1EEE7\",\n  \"#EEDED1\",\n  \"#AAF38F\",\n  \"#F9E6C5\",\n  \"#C83B51\",\n  \"#F4CECE\",\n  \"#D6D6D6\",\n];\n\nconst niceDaysFromNS = (seconds: string) => {\n  return niceDays(seconds, \"ns\");\n};\n\nconst roundNumber = (value: string) => {\n  return parseInt(value).toString(10);\n};\n\nexport const panelsConfiguration: IDashboardPanel[] = [\n  {\n    id: 1,\n    title: \"Uptime\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <UptimeIcon />,\n    labelDisplayFunction: niceDays,\n  },\n  {\n    id: 50,\n    title: \"Capacity\",\n    data: [],\n    dataOuter: [{ name: \"outer\", value: 100 }],\n    widgetConfiguration: {\n      outerChart: {\n        colorList: [\"#9c9c9c\"],\n        innerRadius: 0,\n        outerRadius: 0,\n        startAngle: 0,\n        endAngle: 0,\n      },\n      innerChart: {\n        colorList: colorsMain,\n        innerRadius: 20,\n        outerRadius: 50,\n        startAngle: 90,\n        endAngle: -200,\n      },\n    },\n    type: widgetType.pieChart,\n    innerLabel: \"N/A\",\n    labelDisplayFunction: niceBytes,\n  },\n  {\n    id: 68,\n    title: \"Data Usage Growth\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.areaGraph,\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 52,\n    title: \"Object size distribution\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"a\",\n        color: colorsMain[0],\n        background: {\n          fill: \"#EEF1F4\",\n        },\n        greatestColor: \"#081C42\",\n      },\n    ],\n    customStructure: [\n      { originTag: \"LESS_THAN_1024_B\", displayTag: \"Less than 1024B\" },\n      {\n        originTag: \"BETWEEN_1024_B_AND_1_MB\",\n        displayTag: \"Between 1024B and 1MB\",\n      },\n      {\n        originTag: \"BETWEEN_1_MB_AND_10_MB\",\n        displayTag: \"Between 1MB and 10MB\",\n      },\n      {\n        originTag: \"BETWEEN_10_MB_AND_64_MB\",\n        displayTag: \"Between 10MB and 64MB\",\n      },\n      {\n        originTag: \"BETWEEN_64_MB_AND_128_MB\",\n        displayTag: \"Between 64MB and 128MB\",\n      },\n      {\n        originTag: \"BETWEEN_128_MB_AND_512_MB\",\n        displayTag: \"Between 128MB and 512MB\",\n      },\n      {\n        originTag: \"GREATER_THAN_512_MB\",\n        displayTag: \"Greater than 512MB\",\n      },\n    ],\n    type: widgetType.barChart,\n  },\n  {\n    id: 66,\n    title: \"Buckets\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#0071BC\",\n    fillColor: \"#ADD5E0\",\n  },\n  {\n    id: 44,\n    title: \"Objects\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#0071BC\",\n    fillColor: \"#ADD5E0\",\n  },\n  {\n    id: 63,\n    title: \"API Data Received Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 61,\n    title: \"Total Open FDs\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#22B573\",\n    fillColor: \"#A6E8C4\",\n  },\n  {\n    id: 62,\n    title: \"Total Goroutines\",\n    data: [],\n    innerLabel: \"N/A\",\n    type: widgetType.singleRep,\n    color: \"#F7655E\",\n    fillColor: \"#F4CECE\",\n  },\n  {\n    id: 77,\n    title: \"Node CPU Usage\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 60,\n    title: \"API Request Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 70,\n    title: \"API Data Sent Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 17,\n    title: \"Internode Data Transfer\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 73,\n    title: \"Node IO\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    yAxisFormatter: niceBytes,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 80,\n    title: \"Time Since Last Heal Activity\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <HealIcon />,\n    labelDisplayFunction: niceDaysFromNS,\n  },\n  {\n    id: 81,\n    title: \"Time Since Last Scan Activity\",\n    data: \"N/A\",\n    type: widgetType.simpleWidget,\n    widgetIcon: <DiagnosticsIcon />,\n    labelDisplayFunction: niceDaysFromNS,\n  },\n  {\n    id: 71,\n    title: \"API Request Error Rate\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 76,\n    title: \"Node Memory Usage\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 74,\n    title: \"Drive Used Capacity\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    xAxisFormatter: getTimeFromTimestamp,\n    yAxisFormatter: niceBytes,\n  },\n  {\n    id: 82,\n    title: \"Drives Free Inodes\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n\n    disableYAxis: true,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 11,\n    title: \"Node Syscalls\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 8,\n    title: \"Node File Descriptors\",\n    data: [],\n    widgetConfiguration: [\n      {\n        dataKey: \"\",\n        keyLabel: \"\",\n        lineColor: \"#000\",\n        fillColor: \"#000\",\n      },\n    ],\n    type: widgetType.linearGraph,\n    yAxisFormatter: roundNumber,\n    xAxisFormatter: getTimeFromTimestamp,\n  },\n  {\n    id: 500,\n    mergedPanels: [\n      {\n        id: 53,\n        title: \"Online\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n      {\n        id: 69,\n        title: \"Offline\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n    ],\n    title: \"Servers\",\n  },\n  {\n    id: 501,\n    mergedPanels: [\n      {\n        id: 9,\n        title: \"Online\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n      {\n        id: 78,\n        title: \"Offline\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n      },\n    ],\n    title: \"Drives\",\n  },\n  {\n    id: 502,\n    mergedPanels: [\n      {\n        id: 65,\n        title: \"Upload\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n\n        labelDisplayFunction: niceBytes,\n      },\n      {\n        id: 64,\n        title: \"Download\",\n        data: \"N/A\",\n        type: widgetType.singleValue,\n\n        labelDisplayFunction: niceBytes,\n      },\n    ],\n    title: \"Network\",\n  },\n];\n\nconst calculateMainValue = (elements: any[], metricCalc: string) => {\n  if (elements.length === 0) {\n    return [\"\", \"0\"];\n  }\n\n  switch (metricCalc) {\n    case \"mean\":\n      const sumValues = elements.reduce((accumulator, currValue) => {\n        return accumulator + parseFloat(currValue[1]);\n      }, 0);\n\n      const mean = Math.floor(sumValues / elements.length);\n\n      return [\"\", mean.toString()];\n    default:\n      const sortResult = elements.sort(\n        (value1: any[], value2: any[]) => value1[0] - value2[0]\n      );\n\n      return sortResult[sortResult.length - 1];\n  }\n};\n\nconst constructLabelNames = (metrics: any, legendFormat: string) => {\n  const keysToReplace = Object.keys(metrics);\n  const expToReplace = new RegExp(`{{(${keysToReplace.join(\"|\")})}}`, \"g\");\n\n  let replacedLegend = legendFormat.replace(expToReplace, (matchItem) => {\n    const nwMatchItem = matchItem.replace(/({{|}})/g, \"\");\n    return metrics[nwMatchItem];\n  });\n\n  const countVarsOpen = (replacedLegend.match(/{{/g) || []).length;\n  const countVarsClose = (replacedLegend.match(/}}/g) || []).length;\n\n  let cleanLegend = replacedLegend.replace(/{{(.*?)}}/g, \"\");\n\n  if (\n    countVarsOpen === countVarsClose &&\n    countVarsOpen !== 0 &&\n    countVarsClose !== 0\n  ) {\n    keysToReplace.forEach((element) => {\n      replacedLegend = replacedLegend.replace(element, metrics[element]);\n    });\n\n    cleanLegend = replacedLegend;\n  }\n\n  // In case not all the legends were replaced, we remove the placeholders.\n  return cleanLegend;\n};\n\nexport const getWidgetsWithValue = (payload: any[]): IDashboardPanel[] => {\n  return panelsConfiguration.map((panelItem: IDashboardPanel) => {\n    const payloadData = payload.find(\n      (panelT) =>\n        panelT.title.toLowerCase().trim() ===\n        panelItem.title.toLowerCase().trim()\n    );\n    return widgetDetailsToPanel(payloadData, panelItem);\n  });\n};\n\nexport const widgetDetailsToPanel = (\n  payloadData: any,\n  panelItem: IDashboardPanel\n) => {\n  if (!payloadData) {\n    return panelItem;\n  }\n\n  const typeOfPayload = payloadData.type;\n\n  switch (panelItem.type) {\n    case widgetType.singleValue:\n    case widgetType.simpleWidget:\n      if (typeOfPayload === \"stat\" || typeOfPayload === \"singlestat\") {\n        // We sort values & get the last value\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\n\n        if (elements === null) {\n          elements = [];\n        }\n\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valueDisplay = calculateMainValue(elements, metricCalc);\n\n        const data = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\n          : valueDisplay[1];\n\n        return {\n          ...panelItem,\n          data,\n        };\n      }\n      break;\n    case widgetType.pieChart:\n      if (typeOfPayload === \"gauge\") {\n        let chartSeries = get(payloadData, \"targets[0].result\", []);\n\n        if (chartSeries === null) {\n          chartSeries = [];\n        }\n\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valuesArray = chartSeries.length > 0 ? chartSeries[0].values : [];\n\n        const totalValues = calculateMainValue(valuesArray, metricCalc);\n\n        const values = chartSeries.map((elementValue: any) => {\n          const values = get(elementValue, \"values\", []);\n          const metricKeyItem = Object.keys(elementValue.metric);\n\n          const sortResult = values.sort(\n            (value1: any[], value2: any[]) => value1[0] - value2[0]\n          );\n\n          const metricName = elementValue.metric[metricKeyItem[0]];\n          const value = sortResult[sortResult.length - 1];\n          return { name: metricName, value: parseInt(value) };\n        });\n\n        const innerLabel = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(totalValues[1])\n          : totalValues[1];\n\n        return {\n          ...panelItem,\n          data: values,\n          innerLabel,\n        };\n      }\n      break;\n    case widgetType.linearGraph:\n    case widgetType.areaGraph:\n      if (typeOfPayload === \"graph\") {\n        let targets = get(payloadData, \"targets\", []);\n        if (targets === null) {\n          targets = [];\n        }\n\n        const series: any[] = [];\n        const plotValues: any[] = [];\n\n        targets.forEach(\n          (\n            targetMaster: { legendFormat: string; result: any[] },\n            index: number\n          ) => {\n            // Add a new serie to plot variables in case it is not from multiple values\n            let results = get(targetMaster, \"result\", []);\n            const legendFormat = targetMaster.legendFormat;\n            if (results === null) {\n              results = [];\n            }\n\n            results.forEach((itemVals: { metric: object; values: any[] }) => {\n              // Label Creation\n              const labelName = constructLabelNames(\n                itemVals.metric,\n                legendFormat\n              );\n              const keyName = `key_${index}${labelName}`;\n\n              // series creation with recently created label\n              series.push({\n                dataKey: keyName,\n                keyLabel: labelName,\n                lineColor: \"\",\n                fillColor: \"\",\n              });\n\n              // we iterate over values and create elements\n              let values = get(itemVals, \"values\", []);\n              if (values === null) {\n                values = [];\n              }\n\n              values.forEach((valInfo: any[]) => {\n                const itemIndex = plotValues.findIndex(\n                  (element) => element.name === valInfo[0]\n                );\n\n                // Element not exists yet\n                if (itemIndex === -1) {\n                  let itemToPush: any = { name: valInfo[0] };\n                  itemToPush[keyName] = valInfo[1];\n\n                  plotValues.push(itemToPush);\n                } else {\n                  plotValues[itemIndex][keyName] = valInfo[1];\n                }\n              });\n            });\n          }\n        );\n\n        const sortedSeries = series.sort((series1: any, series2: any) => {\n          if (series1.keyLabel < series2.keyLabel) {\n            return -1;\n          }\n          if (series1.keyLabel > series2.keyLabel) {\n            return 1;\n          }\n          return 0;\n        });\n\n        const seriesWithColors = sortedSeries.map(\n          (serialC: any, index: number) => {\n            return {\n              ...serialC,\n              lineColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\n              fillColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\n            };\n          }\n        );\n\n        const sortedVals = plotValues.sort(\n          (value1: any, value2: any) => value1.name - value2.name\n        );\n\n        return {\n          ...panelItem,\n          widgetConfiguration: seriesWithColors,\n          data: sortedVals,\n        };\n      }\n      break;\n    case widgetType.barChart:\n      if (typeOfPayload === \"bargauge\") {\n        let chartBars = get(payloadData, \"targets[0].result\", []);\n\n        if (chartBars === null) {\n          chartBars = [];\n        }\n\n        const sortFunction = (value1: any[], value2: any[]) =>\n          value1[0] - value2[0];\n\n        let values = [];\n        if (panelItem.customStructure) {\n          values = panelItem.customStructure.map((structureItem) => {\n            const metricTake = chartBars.find((element: any) => {\n              const metricKeyItem = Object.keys(element.metric);\n\n              const metricName = element.metric[metricKeyItem[0]];\n\n              return metricName === structureItem.originTag;\n            });\n\n            const elements = get(metricTake, \"values\", []);\n\n            const sortResult = elements.sort(sortFunction);\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\n\n            return {\n              name: structureItem.displayTag,\n              a: parseInt(lastValue[1]),\n            };\n          });\n        } else {\n          // If no configuration is set, we construct the series for bar chart and return the element\n          values = chartBars.map((elementValue: any) => {\n            const metricKeyItem = Object.keys(elementValue.metric);\n\n            const metricName = elementValue.metric[metricKeyItem[0]];\n\n            const elements = get(elementValue, \"values\", []);\n\n            const sortResult = elements.sort(sortFunction);\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\n            return { name: metricName, a: parseInt(lastValue[1]) };\n          });\n        }\n\n        return {\n          ...panelItem,\n          data: values,\n        };\n      }\n      break;\n    case widgetType.singleRep:\n      if (typeOfPayload === \"stat\") {\n        // We sort values & get the last value\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\n        if (elements === null) {\n          elements = [];\n        }\n        const metricCalc = get(\n          payloadData,\n          \"options.reduceOptions.calcs[0]\",\n          \"lastNotNull\"\n        );\n\n        const valueDisplay = calculateMainValue(elements, metricCalc);\n\n        const sortResult = elements.sort(\n          (value1: any[], value2: any[]) => value1[0] - value2[0]\n        );\n\n        let valuesForBackground = [];\n\n        if (sortResult.length === 1) {\n          valuesForBackground.push({ value: 0 });\n        }\n\n        sortResult.forEach((eachVal: any) => {\n          valuesForBackground.push({ value: parseInt(eachVal[1]) });\n        });\n\n        const innerLabel = panelItem.labelDisplayFunction\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\n          : valueDisplay[1];\n\n        return {\n          ...panelItem,\n          data: valuesForBackground,\n          innerLabel,\n        };\n      }\n      break;\n  }\n\n  return panelItem;\n};\n\nconst verifyNumeric = (item: string) => {\n  return !isNaN(parseFloat(item));\n};\n\nexport const splitSizeMetric = (val: string) => {\n  const splittedText = val.split(\" \");\n  // Value is not a size metric, we return as common string\n\n  const singleValue = () => {\n    let vl = val;\n\n    if (verifyNumeric(val)) {\n      vl = representationNumber(parseFloat(val));\n    }\n    return <Fragment>{vl}</Fragment>;\n  };\n\n  if (splittedText.length !== 2) {\n    return singleValue();\n  }\n\n  if (!units.includes(splittedText[1])) {\n    return singleValue();\n  }\n\n  return (\n    <span className=\"commonValue\">\n      {splittedText[0]}\n      <span className=\"unitText\">{splittedText[1]}</span>\n    </span>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CommonCard from \"../CommonCard\";\n\ninterface IMergedWidgets {\n  title: string;\n  leftComponent: any;\n  rightComponent: any;\n}\n\nconst MergedWidgets = ({\n  title,\n  leftComponent,\n  rightComponent,\n}: IMergedWidgets) => {\n  return (\n    <Fragment>\n      <CommonCard\n        title={title}\n        metricValue={leftComponent}\n        rightComponent={rightComponent}\n      />\n    </Fragment>\n  );\n};\n\nexport default MergedWidgets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tooltipCommon,\n  });\n\nconst BarChartTooltip = ({\n  active,\n  payload,\n  label,\n  barChartConfiguration,\n  classes,\n}: any) => {\n  if (active) {\n    return (\n      <div className={classes.customTooltip}>\n        <div className={classes.timeStampTitle}>{label}</div>\n        {payload &&\n          payload.map((pl: any, index: number) => {\n            return (\n              <div\n                className={classes.labelContainer}\n                key={`pltiem-${index}-${label}`}\n              >\n                <div\n                  className={classes.labelColor}\n                  style={{\n                    backgroundColor: barChartConfiguration[index].color,\n                  }}\n                />\n                <div className={classes.itemValue}>\n                  <span className={classes.valueContainer}>{pl.value}</span>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(BarChartTooltip);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Bar,\n  BarChart,\n  Cell,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { CircularProgress, useMediaQuery } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport { IBarChartConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport BarChartTooltip from \"./tooltips/BarChartTooltip\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport { openZoomPage } from \"../../actions\";\nimport { useTheme } from \"@mui/styles\";\n\ninterface IBarChartWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n  zoomActivated?: boolean;\n  openZoomPage: typeof openZoomPage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"15px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n  });\n\nconst CustomizedAxisTick = ({ y, payload }: any) => {\n  return (\n    <text\n      width={50}\n      fontSize={\"63%\"}\n      textAnchor=\"start\"\n      fill=\"#333\"\n      transform={`translate(5,${y})`}\n      fontWeight={700}\n      dy={3}\n    >\n      {payload.value}\n    </text>\n  );\n};\n\nconst BarChartWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n  zoomActivated = false,\n  openZoomPage,\n}: IBarChartWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<any>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setResult(widgetsWithValue);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  const barChartConfiguration = result\n    ? (result.widgetConfiguration as IBarChartConfiguration[])\n    : [];\n\n  let greatestIndex = 0;\n  let currentValue = 0;\n\n  if (barChartConfiguration.length === 1) {\n    const dataGraph = barChartConfiguration[0];\n    data.forEach((item: any, index: number) => {\n      if (item[dataGraph.dataKey] > currentValue) {\n        currentValue = item[dataGraph.dataKey];\n        greatestIndex = index;\n      }\n    });\n  }\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={zoomActivated ? \"\" : classes.singleValueContainer}>\n      {!zoomActivated && (\n        <div className={classes.titleContainer}>\n          {title}{\" \"}\n          <button\n            onClick={() => {\n              openZoomPage(panelItem);\n            }}\n            className={classes.zoomChartIcon}\n          >\n            <ZoomOutMapIcon />\n          </button>\n        </div>\n      )}\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <CircularProgress />\n        </div>\n      )}\n      {!loading && (\n        <div\n          className={\n            zoomActivated ? classes.zoomChartCont : classes.contentContainer\n          }\n        >\n          <ResponsiveContainer width=\"99%\">\n            <BarChart\n              data={data as object[]}\n              layout={\"vertical\"}\n              barCategoryGap={1}\n            >\n              <XAxis type=\"number\" hide />\n              <YAxis\n                dataKey=\"name\"\n                type=\"category\"\n                interval={0}\n                tick={<CustomizedAxisTick />}\n                tickLine={false}\n                axisLine={false}\n                width={150}\n                hide={!biggerThanMd}\n              />\n              {barChartConfiguration.map((bar) => (\n                <Bar\n                  key={`bar-${bar.dataKey}`}\n                  dataKey={bar.dataKey}\n                  fill={bar.color}\n                  background={bar.background}\n                  barSize={zoomActivated ? 25 : 12}\n                >\n                  {barChartConfiguration.length === 1 ? (\n                    <Fragment>\n                      {data.map((_: any, index: number) => (\n                        <Cell\n                          key={`chart-bar-${index.toString()}`}\n                          fill={\n                            index === greatestIndex\n                              ? bar.greatestColor\n                              : bar.color\n                          }\n                        />\n                      ))}\n                    </Fragment>\n                  ) : null}\n                </Bar>\n              ))}\n              <Tooltip\n                cursor={{ fill: \"rgba(255, 255, 255, 0.3)\" }}\n                content={\n                  <BarChartTooltip\n                    barChartConfiguration={barChartConfiguration}\n                  />\n                }\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n  openZoomPage: openZoomPage,\n});\n\nexport default withStyles(styles)(connector(BarChartWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { getTimeFromTimestamp } from \"../../../../../../common/utils\";\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tooltipCommon,\n  });\n\nconst LineChartTooltip = ({\n  active,\n  payload,\n  label,\n  linearConfiguration,\n  yAxisFormatter,\n  classes,\n}: any) => {\n  if (active) {\n    return (\n      <div className={classes.customTooltip}>\n        <div className={classes.timeStampTitle}>\n          {getTimeFromTimestamp(label, true)}\n        </div>\n        {payload &&\n          payload.map((pl: any, index: number) => {\n            return (\n              <div\n                className={classes.labelContainer}\n                key={`lbPl-${index}-${linearConfiguration[index].keyLabel}`}\n              >\n                <div\n                  className={classes.labelColor}\n                  style={{\n                    backgroundColor: linearConfiguration[index].lineColor,\n                  }}\n                />\n                <div className={classes.itemValue}>\n                  <span className={classes.valueContainer}>\n                    {linearConfiguration[index].keyLabel}:{\" \"}\n                    {yAxisFormatter(pl.value)}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(LineChartTooltip);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { CircularProgress, useMediaQuery } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport { ILinearGraphConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { IDashboardPanel } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport LineChartTooltip from \"./tooltips/LineChartTooltip\";\nimport { openZoomPage } from \"../../actions\";\nimport { useTheme } from \"@mui/styles\";\n\ninterface ILinearGraphWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n  hideYAxis?: boolean;\n  yAxisFormatter?: (item: string) => string;\n  xAxisFormatter?: (item: string) => string;\n  areaWidget?: boolean;\n  zoomActivated?: boolean;\n  openZoomPage: typeof openZoomPage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    containerElements: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"100%\",\n      flexGrow: 1,\n    },\n    verticalAlignment: {\n      flexDirection: \"column\",\n    },\n    chartCont: {\n      position: \"relative\",\n      height: 140,\n      width: \"100%\",\n    },\n    legendChart: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"0 1 auto\",\n      maxHeight: 130,\n      margin: 0,\n      overflowY: \"auto\",\n      position: \"relative\",\n      textAlign: \"center\",\n      width: \"100%\",\n      justifyContent: \"flex-start\",\n      color: \"#404143\",\n      fontWeight: \"bold\",\n      fontSize: 12,\n    },\n    loadingAlign: {\n      margin: \"auto\",\n    },\n  });\n\nconst LinearGraphWidget = ({\n  classes,\n  title,\n  displayErrorMessage,\n  timeStart,\n  timeEnd,\n  propLoading,\n  panelItem,\n  apiPrefix,\n  hideYAxis = false,\n  areaWidget = false,\n  yAxisFormatter = (item: string) => item,\n  xAxisFormatter = (item: string) => item,\n  zoomActivated = false,\n  openZoomPage,\n}: ILinearGraphWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<object[]>([]);\n  const [dataMax, setDataMax] = useState<number>(0);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setResult(widgetsWithValue);\n          setLoading(false);\n          let maxVal = 0;\n          for (const dp of widgetsWithValue.data) {\n            for (const key in dp) {\n              if (key === \"name\") {\n                continue;\n              }\n              let val = parseInt(dp[key]);\n\n              if (isNaN(val)) {\n                val = 0;\n              }\n\n              if (maxVal < val) {\n                maxVal = val;\n              }\n            }\n          }\n          setDataMax(maxVal);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  let intervalCount = Math.floor(data.length / 5);\n\n  const linearConfiguration = result\n    ? (result?.widgetConfiguration as ILinearGraphConfiguration[])\n    : [];\n\n  const CustomizedDot = (prop: any) => {\n    const { cx, cy, index } = prop;\n\n    if (index % 3 !== 0) {\n      return null;\n    }\n    return <circle cx={cx} cy={cy} r={3} strokeWidth={0} fill=\"#07264A\" />;\n  };\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={zoomActivated ? \"\" : classes.singleValueContainer}>\n      {!zoomActivated && (\n        <div className={classes.titleContainer}>\n          {title}{\" \"}\n          <button\n            onClick={() => {\n              openZoomPage(panelItem);\n            }}\n            className={classes.zoomChartIcon}\n          >\n            <ZoomOutMapIcon />\n          </button>\n        </div>\n      )}\n      <div\n        className={\n          zoomActivated ? classes.verticalAlignment : classes.containerElements\n        }\n      >\n        {loading && <CircularProgress className={classes.loadingAlign} />}\n        {!loading && (\n          <React.Fragment>\n            <div\n              className={\n                zoomActivated ? classes.zoomChartCont : classes.chartCont\n              }\n            >\n              <ResponsiveContainer width=\"99%\">\n                <AreaChart\n                  data={data}\n                  margin={{\n                    top: 5,\n                    right: 20,\n                    left: hideYAxis ? 20 : 5,\n                    bottom: 0,\n                  }}\n                >\n                  {areaWidget && (\n                    <defs>\n                      <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                          offset=\"0%\"\n                          stopColor=\"#ABC8F2\"\n                          stopOpacity={0.9}\n                        />\n                        <stop\n                          offset=\"95%\"\n                          stopColor=\"#ABC8F2\"\n                          stopOpacity={0}\n                        />\n                      </linearGradient>\n                    </defs>\n                  )}\n                  <CartesianGrid\n                    strokeDasharray={areaWidget ? \"0 0\" : \"3 3\"}\n                    strokeWidth={1}\n                    strokeOpacity={0.5}\n                    stroke={\"#07264A30\"}\n                    vertical={!areaWidget}\n                  />\n                  <XAxis\n                    dataKey=\"name\"\n                    tickFormatter={(value: any) => xAxisFormatter(value)}\n                    interval={intervalCount}\n                    tick={{\n                      fontSize: \"70%\",\n                      fontWeight: \"bold\",\n                      color: \"#404143\",\n                    }}\n                    tickCount={10}\n                    stroke={\"#082045\"}\n                  />\n                  <YAxis\n                    type={\"number\"}\n                    domain={[0, dataMax * 1.1]}\n                    hide={hideYAxis}\n                    tickFormatter={(value: any) => yAxisFormatter(value)}\n                    tick={{\n                      fontSize: \"70%\",\n                      fontWeight: \"bold\",\n                      color: \"#404143\",\n                    }}\n                    stroke={\"#082045\"}\n                  />\n                  {linearConfiguration.map((section, index) => {\n                    return (\n                      <Area\n                        key={`area-${section.dataKey}-${index.toString()}`}\n                        type=\"monotone\"\n                        dataKey={section.dataKey}\n                        stroke={section.lineColor}\n                        fill={areaWidget ? \"url(#colorUv)\" : section.fillColor}\n                        fillOpacity={areaWidget ? 0.3 : 0}\n                        strokeWidth={areaWidget ? 0 : 2}\n                        dot={areaWidget ? <CustomizedDot /> : false}\n                      />\n                    );\n                  })}\n                  <Tooltip\n                    content={\n                      <LineChartTooltip\n                        linearConfiguration={linearConfiguration}\n                        yAxisFormatter={yAxisFormatter}\n                      />\n                    }\n                    wrapperStyle={{\n                      zIndex: 5000,\n                    }}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n            {!areaWidget && (\n              <Fragment>\n                {zoomActivated && (\n                  <Fragment>\n                    <strong>Series</strong>\n                    <br />\n                    <br />\n                  </Fragment>\n                )}\n                {biggerThanMd && (\n                  <div className={classes.legendChart}>\n                    {linearConfiguration.map((section, index) => {\n                      return (\n                        <div\n                          className={classes.singleLegendContainer}\n                          key={`legend-${section.keyLabel}-${index.toString()}`}\n                        >\n                          <div\n                            className={classes.colorContainer}\n                            style={{ backgroundColor: section.lineColor }}\n                          />\n                          <div className={classes.legendLabel}>\n                            {section.keyLabel}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n  openZoomPage: openZoomPage,\n});\n\nexport default withStyles(styles)(connector(LinearGraphWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\nimport { IPieChartConfiguration } from \"./types\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport get from \"lodash/get\";\nimport api from \"../../../../../common/api\";\n\ninterface IPieChartWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"15px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n    pieChartLabel: {\n      fontSize: 60,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      width: \"100%\",\n      \"& .unitText\": {\n        color: \"#767676\",\n        fontSize: 12,\n      },\n    },\n    chartContainer: {\n      width: \"100%\",\n      height: 140,\n    },\n  });\n\nconst PieChartWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n}: IPieChartWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [dataInner, setDataInner] = useState<object[]>([]);\n  const [dataOuter, setDataOuter] = useState<object[]>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setDataInner(widgetsWithValue.data);\n          setDataOuter(widgetsWithValue.dataOuter as object[]);\n          setResult(widgetsWithValue);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  const pieChartConfiguration = result\n    ? (result.widgetConfiguration as IPieChartConfiguration)\n    : [];\n  const middleLabel = result?.innerLabel;\n\n  const innerColors = get(pieChartConfiguration, \"innerChart.colorList\", []);\n  const outerColors = get(pieChartConfiguration, \"outerChart.colorList\", []);\n\n  return (\n    <div className={classes.singleValueContainer}>\n      <div className={classes.titleContainer}>{title}</div>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <CircularProgress />\n        </div>\n      )}\n      {!loading && (\n        <div className={classes.contentContainer}>\n          <span className={classes.pieChartLabel}>\n            {middleLabel && splitSizeMetric(middleLabel)}\n          </span>\n          <div className={classes.chartContainer}>\n            <ResponsiveContainer width=\"99%\">\n              <PieChart margin={{ top: 5, bottom: 5 }}>\n                {dataOuter && (\n                  <Pie\n                    data={dataOuter as object[]}\n                    cx={\"50%\"}\n                    cy={\"50%\"}\n                    dataKey=\"value\"\n                    innerRadius={get(\n                      pieChartConfiguration,\n                      \"outerChart.innerRadius\",\n                      0\n                    )}\n                    outerRadius={get(\n                      pieChartConfiguration,\n                      \"outerChart.outerRadius\",\n                      \"80%\"\n                    )}\n                    startAngle={get(\n                      pieChartConfiguration,\n                      \"outerChart.startAngle\",\n                      0\n                    )}\n                    endAngle={get(\n                      pieChartConfiguration,\n                      \"outerChart.endAngle\",\n                      360\n                    )}\n                    fill=\"#201763\"\n                  >\n                    {dataOuter.map((entry, index) => (\n                      <Cell\n                        key={`cellOuter-${index}`}\n                        fill={\n                          typeof outerColors[index] === \"undefined\"\n                            ? \"#393939\"\n                            : outerColors[index]\n                        }\n                      />\n                    ))}\n                  </Pie>\n                )}\n                {dataInner && (\n                  <Pie\n                    data={dataInner as object[]}\n                    dataKey=\"value\"\n                    cx={\"50%\"}\n                    cy={\"50%\"}\n                    innerRadius={get(\n                      pieChartConfiguration,\n                      \"innerChart.innerRadius\",\n                      0\n                    )}\n                    outerRadius={get(\n                      pieChartConfiguration,\n                      \"innerChart.outerRadius\",\n                      \"80%\"\n                    )}\n                    startAngle={get(\n                      pieChartConfiguration,\n                      \"innerChart.startAngle\",\n                      0\n                    )}\n                    endAngle={get(\n                      pieChartConfiguration,\n                      \"innerChart.endAngle\",\n                      360\n                    )}\n                    fill=\"#201763\"\n                  >\n                    {dataInner.map((entry, index) => {\n                      return (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={\n                            typeof innerColors[index] === \"undefined\"\n                              ? \"#393939\"\n                              : innerColors[index]\n                          }\n                        />\n                      );\n                    })}\n                  </Pie>\n                )}\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PieChartWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { CircularProgress } from \"@mui/material\";\nimport api from \"../../../../../common/api\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { IDashboardPanel } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\n\ninterface ISimpleWidget {\n  classes: any;\n  iconWidget: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    mainWidgetContainer: {\n      display: \"inline-flex\",\n      color: \"#072A4D\",\n      alignItems: \"center\",\n    },\n    icon: {\n      color: \"#072A4D\",\n      fill: \"#072A4D\",\n      marginRight: 5,\n      marginLeft: 12,\n    },\n    widgetLabel: {\n      fontWeight: \"bold\",\n      textTransform: \"uppercase\",\n      marginRight: 10,\n    },\n    widgetValue: {\n      marginRight: 25,\n    },\n  });\n\nconst SimpleWidget = ({\n  classes,\n  iconWidget,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  apiPrefix,\n}: ISimpleWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n\n  return (\n    <Fragment>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <CircularProgress />\n        </div>\n      )}\n      {!loading && (\n        <span className={classes.mainWidgetContainer}>\n          <span className={classes.icon}>{iconWidget ? iconWidget : null}</span>\n          <span className={classes.widgetLabel}>{title}: </span>\n          <span className={classes.widgetValue}>{data}</span>\n        </span>\n      )}\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SimpleWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Area, AreaChart, ResponsiveContainer, YAxis } from \"recharts\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { IDataSRep } from \"./types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { IDashboardPanel } from \"../types\";\nimport { widgetDetailsToPanel } from \"../utils\";\nimport { CircularProgress } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport { representationNumber } from \"../../../../../common/utils\";\n\ninterface ISingleRepWidget {\n  classes: any;\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  color: string;\n  fillColor: string;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      paddingTop: \"5px\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n  });\n\nconst SingleRepWidget = ({\n  classes,\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  color,\n  fillColor,\n  apiPrefix,\n}: ISingleRepWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<IDataSRep[]>([]);\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setResult(widgetsWithValue);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n  const gradientID = `colorGradient-${title.split(\" \").join(\"-\")}`;\n\n  let repNumber = \"\";\n\n  if (result) {\n    const resultRep = parseInt(result.innerLabel || \"0\");\n\n    if (!isNaN(resultRep)) {\n      repNumber = representationNumber(resultRep);\n    } else {\n      repNumber = \"0\";\n    }\n  }\n\n  return (\n    <div className={classes.singleValueContainer}>\n      <div className={classes.titleContainer}>{title}</div>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <CircularProgress />\n        </div>\n      )}\n      {!loading && (\n        <div className={classes.contentContainer}>\n          <ResponsiveContainer width=\"99%\">\n            <AreaChart data={data}>\n              <defs>\n                <linearGradient id={gradientID} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={fillColor} stopOpacity={1} />\n                  <stop offset=\"95%\" stopColor={fillColor} stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <YAxis\n                domain={[0, (dataMax: number) => dataMax * 2]}\n                hide={true}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey={\"value\"}\n                stroke={color}\n                fill={`url(#${gradientID})`}\n                fillOpacity={1}\n              />\n              <text\n                x={\"0%\"}\n                y={\"80%\"}\n                textAnchor=\"start\"\n                dominantBaseline=\"auto\"\n                fontWeight={700}\n                fontSize={65}\n                fill={\"#07193E\"}\n              >\n                {result ? repNumber : \"\"}\n              </text>\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SingleRepWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../../../common/api\";\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\nimport { IDashboardPanel } from \"../types\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { CircularProgress } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\n\ninterface ISingleValueWidget {\n  title: string;\n  panelItem: IDashboardPanel;\n  timeStart: any;\n  timeEnd: any;\n  propLoading: boolean;\n  displayErrorMessage: any;\n  classes: any;\n  apiPrefix: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...widgetCommon,\n    loadingAlign: {\n      width: \"100%\",\n      textAlign: \"center\",\n      margin: \"auto\",\n    },\n    metric: {\n      fontSize: 60,\n      lineHeight: 1,\n      color: \"#07193E\",\n      fontWeight: 700,\n    },\n    titleElement: {\n      fontSize: 10,\n      color: \"#767676\",\n      fontWeight: 700,\n    },\n    containerAlignment: {\n      display: \"flex\",\n      height: 140,\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      \"& .unitText\": {\n        color: \"#767676\",\n        fontSize: 12,\n      },\n    },\n  });\n\nconst SingleValueWidget = ({\n  title,\n  panelItem,\n  timeStart,\n  timeEnd,\n  propLoading,\n  displayErrorMessage,\n  classes,\n  apiPrefix,\n}: ISingleValueWidget) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      let stepCalc = 0;\n      if (timeStart !== null && timeEnd !== null) {\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n        const periods = Math.floor(secondsInPeriod / 60);\n\n        stepCalc = periods < 1 ? 15 : periods;\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/${apiPrefix}/info/widgets/${\n            panelItem.id\n          }/?step=${stepCalc}&${\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n          }`\n        )\n        .then((res: any) => {\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\n          setData(widgetsWithValue.data);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          displayErrorMessage(err);\n          setLoading(false);\n        });\n    }\n  }, [loading, panelItem, timeEnd, timeStart, displayErrorMessage, apiPrefix]);\n  return (\n    <div className={classes.containerAlignment}>\n      {loading && (\n        <div className={classes.loadingAlign}>\n          <CircularProgress />\n        </div>\n      )}\n      {!loading && (\n        <Fragment>\n          <div className={classes.metric}>{splitSizeMetric(data)}</div>\n          <div className={classes.titleElement}>{title}</div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nconst connector = connect(null, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SingleValueWidget));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { IDashboardPanel, widgetType } from \"./types\";\nimport BarChartWidget from \"./Widgets/BarChartWidget\";\nimport LinearGraphWidget from \"./Widgets/LinearGraphWidget\";\nimport PieChartWidget from \"./Widgets/PieChartWidget\";\nimport SimpleWidget from \"./Widgets/SimpleWidget\";\nimport SingleRepWidget from \"./Widgets/SingleRepWidget\";\nimport SingleValueWidget from \"./Widgets/SingleValueWidget\";\n\nexport const componentToUse = (\n  value: IDashboardPanel,\n  timeStart: any,\n  timeEnd: any,\n  loading: boolean,\n  apiPrefix: string,\n  zoomActivated: boolean = false\n) => {\n  switch (value.type) {\n    case widgetType.singleValue:\n      return (\n        <SingleValueWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n        />\n      );\n    case widgetType.simpleWidget:\n      return (\n        <SimpleWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n          iconWidget={value.widgetIcon}\n        />\n      );\n    case widgetType.pieChart:\n      return (\n        <PieChartWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n        />\n      );\n    case widgetType.linearGraph:\n    case widgetType.areaGraph:\n      return (\n        <LinearGraphWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          hideYAxis={value.disableYAxis}\n          xAxisFormatter={value.xAxisFormatter}\n          yAxisFormatter={value.yAxisFormatter}\n          apiPrefix={apiPrefix}\n          areaWidget={value.type === widgetType.areaGraph}\n          zoomActivated={zoomActivated}\n        />\n      );\n    case widgetType.barChart:\n      return (\n        <BarChartWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          apiPrefix={apiPrefix}\n          zoomActivated={zoomActivated}\n        />\n      );\n    case widgetType.singleRep:\n      const fillColor = value.fillColor ? value.fillColor : value.color;\n      return (\n        <SingleRepWidget\n          title={value.title}\n          panelItem={value}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          propLoading={loading}\n          color={value.color as string}\n          fillColor={fillColor as string}\n          apiPrefix={apiPrefix}\n        />\n      );\n    default:\n      return null;\n  }\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { IDashboardPanel } from \"./types\";\nimport { componentToUse } from \"./widgetUtils\";\nimport { closeZoomPage } from \"../actions\";\n\ninterface IZoomWidget {\n  widgetRender: number;\n  value: IDashboardPanel | null;\n  modalOpen: boolean;\n  timeStart: any;\n  timeEnd: any;\n  apiPrefix: string;\n  onCloseAction: typeof closeZoomPage;\n}\nconst ZoomWidget = ({\n  value,\n  modalOpen,\n  timeStart,\n  timeEnd,\n  apiPrefix,\n  onCloseAction,\n}: IZoomWidget) => {\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <ModalWrapper\n      title={value.title}\n      onClose={() => {\n        onCloseAction();\n      }}\n      modalOpen={modalOpen}\n      wideLimit={false}\n      noContentPadding\n    >\n      <Fragment>\n        {componentToUse(value, timeStart, timeEnd, true, apiPrefix, true)}\n      </Fragment>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  onCloseAction: closeZoomPage,\n});\n\nexport default connector(ZoomWidget);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { GridSize, useMediaQuery } from \"@mui/material\";\nimport {\n  actionsTray,\n  widgetContainerCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IDashboardPanel } from \"./types\";\nimport { getWidgetsWithValue, panelsConfiguration } from \"./utils\";\nimport { TabPanel } from \"../../../shared/tabs\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport api from \"../../../../common/api\";\n\nimport TabSelector from \"../../Common/TabSelector/TabSelector\";\nimport MergedWidgets from \"./MergedWidgets\";\nimport { componentToUse } from \"./widgetUtils\";\nimport ZoomWidget from \"./ZoomWidget\";\nimport { AppState } from \"../../../../store\";\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\nimport { useTheme } from \"@mui/styles\";\n\ninterface IPrDashboard {\n  classes: any;\n  displayErrorMessage: typeof setErrorSnackMessage;\n  apiPrefix?: string;\n  zoomOpen: boolean;\n  zoomWidget: null | IDashboardPanel;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...widgetContainerCommon,\n    dashboardRow: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      flexWrap: \"wrap\",\n      maxWidth: 1180,\n    },\n  });\n\nconst PrDashboard = ({\n  classes,\n  displayErrorMessage,\n  apiPrefix = \"admin\",\n  zoomOpen,\n  zoomWidget,\n}: IPrDashboard) => {\n  const [timeStart, setTimeStart] = useState<any>(null);\n  const [timeEnd, setTimeEnd] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [panelInformation, setPanelInformation] =\n    useState<IDashboardPanel[]>(panelsConfiguration);\n  const [curTab, setCurTab] = useState<number>(0);\n\n  const theme = useTheme();\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const panels = useCallback(\n    (tabName: string, filterPanels?: number[][] | null) => {\n      return filterPanels?.map((panelLine, indexLine) => {\n        const totalPanelsContained = panelLine.length;\n\n        let perc = Math.floor(12 / totalPanelsContained);\n\n        if (!biggerThanMd && totalPanelsContained >= 4) {\n          perc = 6;\n        } else if (!biggerThanMd && totalPanelsContained >= 3) {\n          perc = 12;\n        }\n\n        if (perc < 1) {\n          perc = 1;\n        } else if (perc > 12) {\n          perc = 12;\n        }\n\n        return (\n          <Grid\n            item\n            xs={12}\n            key={`line-${tabName}-${indexLine}`}\n            className={classes.dashboardRow}\n          >\n            {panelLine.map((panelInline, indexPanel) => {\n              const panelInfo = panelInformation.find(\n                (panel) => panel.id === panelInline\n              );\n\n              return (\n                <Grid\n                  key={`widget-${panelInline}-${indexPanel}`}\n                  className={classes.widgetPanelDelimiter}\n                  item\n                  xs={12}\n                  sm={perc as GridSize}\n                  md={perc as GridSize}\n                  lg={perc as GridSize}\n                >\n                  <Grid item xs={12}>\n                    {panelInfo ? (\n                      <Fragment>\n                        {panelInfo.mergedPanels ? (\n                          <Fragment>\n                            <MergedWidgets\n                              title={panelInfo.title}\n                              leftComponent={componentToUse(\n                                panelInfo.mergedPanels[0],\n                                timeStart,\n                                timeEnd,\n                                loading,\n                                apiPrefix\n                              )}\n                              rightComponent={componentToUse(\n                                panelInfo.mergedPanels[1],\n                                timeStart,\n                                timeEnd,\n                                loading,\n                                apiPrefix\n                              )}\n                            />\n                          </Fragment>\n                        ) : (\n                          componentToUse(\n                            panelInfo,\n                            timeStart,\n                            timeEnd,\n                            loading,\n                            apiPrefix\n                          )\n                        )}\n                      </Fragment>\n                    ) : null}\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        );\n      });\n    },\n    [\n      timeStart,\n      timeEnd,\n      loading,\n      apiPrefix,\n      classes.dashboardRow,\n      classes.widgetPanelDelimiter,\n      panelInformation,\n      biggerThanMd,\n    ]\n  );\n\n  const fetchUsage = useCallback(() => {\n    let stepCalc = 0;\n\n    if (timeStart !== null && timeEnd !== null) {\n      const secondsInPeriod = timeEnd.unix() - timeStart.unix();\n      const periods = Math.floor(secondsInPeriod / 60);\n\n      stepCalc = periods < 1 ? 15 : periods;\n    }\n\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/${apiPrefix}/info?step=${stepCalc}&${\n          timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\n        }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\n          timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\n        }`\n      )\n      .then((res: any) => {\n        if (res.widgets) {\n          const widgetsWithValue = getWidgetsWithValue(res.widgets);\n          setPanelInformation(widgetsWithValue);\n        } else {\n          displayErrorMessage({\n            errorMessage:\n              \"Widget information could not be retrieved at this time. Please try again\",\n            detailedError: \"\",\n          });\n        }\n\n        setLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        displayErrorMessage(err);\n        setLoading(false);\n      });\n  }, [timeStart, timeEnd, displayErrorMessage, apiPrefix]);\n\n  const triggerLoad = () => {\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsage();\n    }\n  }, [loading, fetchUsage]);\n\n  const summaryPanels = [\n    [66, 44, 500, 501],\n    [80, 81, 1],\n    [68, 52],\n    [63, 70],\n  ];\n\n  if (biggerThanMd) {\n    summaryPanels.splice(1, 0, [50, 502]);\n  } else {\n    summaryPanels.splice(1, 0, [50]);\n    summaryPanels.splice(1, 0, [502]);\n  }\n\n  const resourcesPanels = [\n    [76, 77],\n    [11, 8],\n    [82, 74],\n  ];\n  const requestsPanels = [[60], [71, 17], [73]];\n\n  return (\n    <Fragment>\n      {zoomOpen && (\n        <ZoomWidget\n          modalOpen={zoomOpen}\n          timeStart={timeStart}\n          timeEnd={timeEnd}\n          widgetRender={0}\n          value={zoomWidget}\n          apiPrefix={apiPrefix}\n        />\n      )}\n      <DateRangeSelector\n        timeStart={timeStart}\n        setTimeStart={setTimeStart}\n        timeEnd={timeEnd}\n        setTimeEnd={setTimeEnd}\n        triggerSync={triggerLoad}\n      />\n      <Grid item xs={12}>\n        <TabSelector\n          selectedTab={curTab}\n          onChange={(newValue: number) => {\n            setCurTab(newValue);\n          }}\n          tabOptions={[\n            { label: \"Usage\" },\n            { label: \"Traffic\" },\n            { label: \"Resources\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.widgetsContainer}>\n        <TabPanel index={0} value={curTab}>\n          {panels(\"Summary\", summaryPanels)}\n        </TabPanel>\n        <TabPanel index={1} value={curTab}>\n          {panels(\"Traffic\", requestsPanels)}\n        </TabPanel>\n        <TabPanel index={2} value={curTab}>\n          {panels(\"Resources\", resourcesPanels)}\n        </TabPanel>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  zoomOpen: state.dashboard.zoom.openZoom,\n  zoomWidget: state.dashboard.zoom.widgetRender,\n});\n\nconst connector = connect(mapState, {\n  displayErrorMessage: setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PrDashboard));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n"],"names":["tabSubStyles","makeStyles","root","backgroundColor","paddingTop","paddingBottom","fontSize","textTransform","color","selected","fontWeight","indicator","background","height","scroller","maxWidth","position","content","width","display","selectedTab","onChange","tabOptions","subStyles","Fragment","indicatorColor","textColor","variant","scrollButtons","value","e","newValue","classes","map","option","index","label","disabled","id","key","withStyles","theme","createStyles","commonDashboardInfocard","server","networkKeys","Object","keys","get","networkTotal","length","totalDrives","drives","activeNetwork","reduce","acc","currValue","network","activeDisks","filter","element","state","Card","className","cardContainer","CardHeader","cardHeader","title","cardNumber","referenceTitle","health_status","redState","greenState","greyState","serverStatusToClass","endpoint","subheader","Grid","item","xs","stateContainer","infoValue","innerState","yellowState","uptime","niceDays","version","drive","driveStatusToClass","niceBytes","totalSpace","toString","usedSpace","availableSpace","paginatorStyling","ul","bottom","paginatorContainer","margin","flexWrap","paginatorInformation","fontStyle","whiteSpace","paginatorEntity","paginationElement","flexDirection","alignItems","justifyContent","page","itemsPerPage","entity","totalItems","paginatorStyles","currentInitialItem","currentEndItem","displayCurrentEndItem","totalPages","Math","ceil","container","Pagination","count","siblingCount","size","hideNextButton","hidePrevButton","_","newPage","generalStatusTitle","widgetContainerCommon","usage","useState","curTab","setCurTab","serversPageNumber","setServersPageNumber","drivesPageNumber","setDrivesPageNumber","serverArray","servers","sort","a","b","nameA","toLowerCase","nameB","makeServerArray","usageToRepresent","undefined","total","unit","calculateBytes","prettyUsage","allDrivesArray","forEach","drivesInput","splitedServers","slice","splitedDrives","dashboardBG","prometheusNotReady","alignContent","HelpBox","iconComponent","help","spacing","dashboardRow","sm","md","lg","widgetPanelDelimiter","CommonCard","metricValue","representationNumber","buckets","extraMargin","metricUnit","objects","replace","prettyNumber","subMessage","message","TabSelector","widgetsContainer","uuid","href","target","rel","cardSubStyles","padding","widgetCommon","cardRoot","borderRadius","metricText","lineHeight","unitText","subHearderContainer","headerContainer","viewAll","moreLink","rightComponent","SubHeader","leftSide","rightSide","Header","to","widgetType","colorsMain","niceDaysFromNS","seconds","roundNumber","parseInt","panelsConfiguration","data","type","simpleWidget","widgetIcon","labelDisplayFunction","dataOuter","name","widgetConfiguration","outerChart","colorList","innerRadius","outerRadius","startAngle","endAngle","innerChart","pieChart","innerLabel","dataKey","keyLabel","lineColor","fillColor","areaGraph","yAxisFormatter","xAxisFormatter","getTimeFromTimestamp","fill","greatestColor","customStructure","originTag","displayTag","barChart","singleRep","linearGraph","HealIcon","DiagnosticsIcon","disableYAxis","mergedPanels","singleValue","calculateMainValue","elements","metricCalc","sumValues","accumulator","parseFloat","floor","sortResult","value1","value2","widgetDetailsToPanel","payloadData","panelItem","typeOfPayload","valueDisplay","chartSeries","valuesArray","values","totalValues","elementValue","metricKeyItem","metric","metricName","targets","series","plotValues","targetMaster","results","legendFormat","itemVals","labelName","metrics","keysToReplace","expToReplace","RegExp","join","replacedLegend","matchItem","nwMatchItem","countVarsOpen","match","countVarsClose","cleanLegend","constructLabelNames","keyName","push","valInfo","itemIndex","findIndex","itemToPush","seriesWithColors","series1","series2","serialC","textToRGBColor","sortedVals","chartBars","sortFunction","structureItem","metricTake","find","lastValue","valuesForBackground","eachVal","splitSizeMetric","val","splittedText","split","vl","isNaN","units","leftComponent","tooltipCommon","active","payload","barChartConfiguration","customTooltip","timeStampTitle","pl","labelContainer","labelColor","style","itemValue","valueContainer","CustomizedAxisTick","y","textAnchor","transform","dy","connector","connect","displayErrorMessage","setErrorSnackMessage","openZoomPage","loadingAlign","textAlign","timeStart","timeEnd","propLoading","apiPrefix","zoomActivated","loading","setLoading","setData","result","setResult","useEffect","stepCalc","secondsInPeriod","unix","periods","api","then","res","widgetsWithValue","catch","err","greatestIndex","currentValue","dataGraph","useTheme","biggerThanMd","useMediaQuery","breakpoints","up","singleValueContainer","titleContainer","onClick","zoomChartIcon","ZoomOutMap","Z","CircularProgress","zoomChartCont","contentContainer","ResponsiveContainer","BarChart","layout","barCategoryGap","XAxis","hide","YAxis","interval","tick","tickLine","axisLine","bar","Bar","barSize","Cell","Tooltip","cursor","linearConfiguration","containerElements","flexGrow","verticalAlignment","chartCont","legendChart","flex","maxHeight","overflowY","hideYAxis","areaWidget","dataMax","setDataMax","maxVal","dp","intervalCount","CustomizedDot","prop","cx","cy","r","strokeWidth","AreaChart","top","right","left","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","strokeOpacity","stroke","vertical","tickFormatter","tickCount","domain","section","Area","fillOpacity","dot","wrapperStyle","zIndex","singleLegendContainer","colorContainer","legendLabel","pieChartLabel","chartContainer","dataInner","setDataInner","setDataOuter","pieChartConfiguration","middleLabel","innerColors","outerColors","PieChart","Pie","entry","mainWidgetContainer","icon","marginRight","marginLeft","widgetLabel","widgetValue","iconWidget","gradientID","repNumber","resultRep","x","dominantBaseline","titleElement","containerAlignment","componentToUse","onCloseAction","closeZoomPage","modalOpen","ModalWrapper","onClose","wideLimit","noContentPadding","zoomOpen","dashboard","zoom","openZoom","zoomWidget","widgetRender","actionsTray","setTimeStart","setTimeEnd","panelInformation","setPanelInformation","panels","useCallback","tabName","filterPanels","panelLine","indexLine","totalPanelsContained","perc","panelInline","indexPanel","panelInfo","panel","fetchUsage","widgets","panelT","trim","errorMessage","detailedError","summaryPanels","splice","DateRangeSelector","triggerSync","TabPanel","props","children","other","role","hidden","marginTop"],"sourceRoot":""}