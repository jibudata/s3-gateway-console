"use strict";(self.webpackChunkportal_ui=self.webpackChunkportal_ui||[]).push([[6491],{37099:function(e,n,t){var i=t(72791),r=t(29945),o=t(80184),a=function(e){var n=e.icon,t=e.description;return(0,o.jsxs)(r.xuv,{sx:{display:"flex","& .min-icon":{marginRight:"10px",height:"23px",width:"23px",marginBottom:"10px"}},children:[n," ",(0,o.jsx)("div",{style:{fontSize:"14px",fontStyle:"italic",color:"#5E5E5E"},children:t})]})};n.Z=function(e){var n=e.helpText,t=e.docLink,l=e.docText,s=e.contents;return(0,o.jsxs)(r.xuv,{sx:{flex:1,border:"1px solid #eaeaea",borderRadius:"2px",display:"flex",flexFlow:"column",padding:"20px"},children:[(0,o.jsxs)(r.xuv,{sx:{fontSize:"16px",fontWeight:600,display:"flex",alignItems:"center",marginBottom:"16px",paddingBottom:"20px","& .min-icon":{height:"21px",width:"21px",marginRight:"15px"}},children:[(0,o.jsx)(r.M9A,{}),(0,o.jsx)("div",{children:n})]}),(0,o.jsxs)(r.xuv,{sx:{fontSize:"14px",marginBottom:"15px"},children:[s.map((function(e,n){return(0,o.jsxs)(i.Fragment,{children:[e.icon&&(0,o.jsx)(r.xuv,{sx:{paddingBottom:"20px"},children:(0,o.jsx)(a,{icon:e.icon,description:e.iconDescription})}),(0,o.jsx)(r.xuv,{sx:{paddingBottom:"20px"},children:e.text})]},"feature-item-".concat(n))})),(0,o.jsx)(r.xuv,{sx:{paddingBottom:"20px"},children:(0,o.jsx)("a",{href:t,target:"_blank",rel:"noopener",children:l})})]})]})}},51270:function(e,n,t){var i=t(29439),r=t(72791),o=t(29945),a=t(87995),l=t(44690),s=t(9505),c=t(23508),d=t(80184);n.Z=function(e){var n=e.closeDeleteModalAndRefresh,t=e.deleteOpen,u=e.idp,p=e.idpType,f=(0,l.TL)(),h=(0,s.Z)((function(e){n(!0),f((0,a.cN)(!0===e.restart))}),(function(e){return f((0,a.Ih)(e))})),x=(0,i.Z)(h,2),m=x[0],g=x[1];if(!u)return null;var b="_"===u?"Default":u;return(0,d.jsx)(c.Z,{title:"Delete ".concat(b),confirmText:"Delete",isOpen:t,titleIcon:(0,d.jsx)(o.NvT,{}),isLoading:m,onConfirm:function(){g("DELETE","/api/v1/idp/".concat(p,"/").concat(u))},onClose:function(){return n(!1)},confirmButtonProps:{disabled:m},confirmationContent:(0,d.jsxs)(r.Fragment,{children:["Are you sure you want to delete IDP ",(0,d.jsx)("b",{children:b})," ","configuration? ",(0,d.jsx)("br",{})]})})}},6491:function(e,n,t){t.r(n),t.d(n,{default:function(){return I}});var i=t(72791),r=t(56087),o=t(29945),a=t(79979),l=t(4942),s=t(1413),c=t(74165),d=t(15861),u=t(29439),p=t(57689),f=t(23814),h=t(44690),x=t(87995),m=t(81207),g=t(9505),b=t(51270),y=t(47974),v=t(99670),D=t(80184),j=function(e){var n=e.formFields,t=e.endpoint,r=e.backLink,a=e.header,j=e.idpType,C=e.icon,I=e.helpBox,O=(0,h.TL)(),k=(0,p.s0)(),E=(0,p.UO)().idpName,_=(0,i.useState)(!0),S=(0,u.Z)(_,2),Z=S[0],w=S[1],q=(0,i.useState)(!1),N=(0,u.Z)(q,2),B=N[0],A=N[1],L=(0,i.useState)({}),P=(0,u.Z)(L,2),T=P[0],U=P[1],M=(0,i.useState)({}),R=(0,u.Z)(M,2),F=R[0],z=R[1],G=(0,i.useState)({}),Y=(0,u.Z)(G,2),K=Y[0],X=Y[1],H=(0,i.useState)({}),W=(0,u.Z)(H,2),J=W[0],V=W[1],Q=(0,i.useState)(!1),$=(0,u.Z)(Q,2),ee=$[0],ne=$[1],te=(0,i.useState)(!1),ie=(0,u.Z)(te,2),re=ie[0],oe=ie[1],ae=(0,i.useState)(!1),le=(0,u.Z)(ae,2),se=le[0],ce=le[1],de=(0,g.Z)((function(e){O((0,x.cN)(!0===e.restart))}),(function(e){return O((0,x.Ih)(e))})),ue=(0,u.Z)(de,2),pe=ue[0],fe=ue[1],he=(0,g.Z)((function(e){A(!B),O((0,x.cN)(!0===e.restart))}),(function(e){O((0,x.Ih)(e))})),xe=(0,u.Z)(he,2),me=xe[0],ge=xe[1],be=(0,i.useCallback)((function(e){var n={},t={},i=0;e.info&&(e.info.forEach((function(e){"enable"===e.key&&A("on"===e.value),e.isEnv&&(t[e.key]="MINIO_IDENTITY_OPENID_".concat(e.key.toUpperCase()).concat("_"!==E?"_".concat(E):""),i++),n[e.key]=e.value})),i>0&&ce(!0)),U(n),z(t)}),[E]),ye=function(){ee&&be(J),ne(!ee)};(0,i.useEffect)((function(){w(!0)}),[]),(0,i.useEffect)((function(){Z&&m.Z.invoke("GET","".concat(t).concat(E)).then((function(e){e&&(V(e),be(e),function(e){var n={};e.info&&e.info.forEach((function(e){n[e.key]=e.value})),X(n)}(e)),w(!1)})).catch((function(e){O((0,x.Ih)(e)),w(!1)}))}),[O,Z,E,t,be]);var ve=function(){for(var e=0,t=Object.entries(n);e<t.length;e++){var i=(0,u.Z)(t[e],2),r=i[0];if(i[1].required&&(void 0===T[r]||null===T[r]||""===T[r]))return!1}return!0},De=function(){U({})},je=function(){var e=(0,d.Z)((0,c.Z)().mark((function e(n){return(0,c.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:oe(!1),n&&k(r);case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return(0,i.useEffect)((function(){O((0,x.Sc)("idp_config"))}),[O]),(0,D.jsxs)(i.Fragment,{children:[re&&E&&(0,D.jsx)(b.Z,{deleteOpen:re,idp:E,idpType:j,closeDeleteModalAndRefresh:je}),(0,D.jsxs)(o.rjZ,{item:!0,xs:12,children:[(0,D.jsx)(y.Z,{label:(0,D.jsx)(o.hbI,{onClick:function(){return k(r)},label:a}),actions:(0,D.jsx)(v.Z,{})}),(0,D.jsxs)(o.Xgh,{children:[(0,D.jsx)(o.UHn,{icon:C,title:"_"===E?"Default":E||"",subTitle:null,actions:(0,D.jsxs)(i.Fragment,{children:["_"!==E&&(0,D.jsx)(o.ua7,{tooltip:se?"This configuration cannot be deleted using this module as this was set using OpenID environment variables.":"",children:(0,D.jsx)(o.zxk,{id:"delete-idp-config",onClick:function(){oe(!0)},label:"Delete Configuration",icon:(0,D.jsx)(o.XHJ,{}),variant:"secondary",disabled:se})}),!ee&&(0,D.jsx)(o.ua7,{tooltip:se?"Configuration cannot be edited in this module as OpenID environment variables are set for this MinIO instance.":"",children:(0,D.jsx)(o.zxk,{id:"edit",type:"button",variant:"callAction",icon:(0,D.jsx)(o.dY8,{}),onClick:ye,label:"Edit",disabled:se})}),(0,D.jsx)(o.ua7,{tooltip:se?"Configuration cannot be disabled / enabled in this module as OpenID environment variables are set for this MinIO instance.":"",children:(0,D.jsx)(o.zxk,{id:"is-configuration-enabled",onClick:function(){return function(e){var n="enable=".concat(e?"on":"off");ge("PUT","".concat(t).concat(E),{input:n})}(!B)},label:B?"Disable":"Enable",disabled:me||se})}),(0,D.jsx)(o.zxk,{id:"refresh-idp-config",onClick:function(){return w(!0)},label:"Refresh",icon:(0,D.jsx)(o.DuK,{})})]}),sx:{marginBottom:15}}),ee?(0,D.jsx)(o.ltY,{helpBox:I,children:(0,D.jsx)("form",{noValidate:!0,autoComplete:"off",onSubmit:function(e){!function(e){e.preventDefault();for(var i="",r=0,o=Object.keys(n);r<o.length;r++){var a=o[r];(T[a]||T[a]!==K[a])&&(i+="".concat(a,"=").concat(T[a]," "))}fe("PUT","".concat(t).concat(E),{input:i}),ne(!1)}(e)},children:(0,D.jsxs)(o.rjZ,{container:!0,children:[ee?(0,D.jsx)(o.rjZ,{item:!0,xs:12,sx:{marginBottom:15},children:(0,D.jsx)(o.KfX,{title:(0,D.jsx)(o.xuv,{style:{display:"flex",justifyContent:"space-between",alignItems:"center",flexGrow:1},children:"Client Secret must be re-entered to change OpenID configurations"}),iconComponent:(0,D.jsx)(o.e6P,{}),help:null})}):null,(0,D.jsxs)(o.rjZ,{xs:12,item:!0,children:[Object.entries(n).map((function(e){var n=(0,u.Z)(e,2);return function(e,n){return"toggle"===n.type?(0,D.jsx)(o.rsf,{indicatorLabels:["Enabled","Disabled"],checked:"on"===T[e],value:"is-field-enabled",id:"is-field-enabled",name:"is-field-enabled",label:n.label,tooltip:n.tooltip,onChange:function(n){return U((0,s.Z)((0,s.Z)({},T),{},(0,l.Z)({},e,n.target.checked?"on":"off")))},description:"",disabled:!ee}):(0,D.jsx)(o.Wzg,{id:e,required:n.required,name:e,label:n.label,tooltip:n.tooltip,error:n.hasError(T[e],ee),value:T[e]?T[e]:"",onChange:function(n){return U((0,s.Z)((0,s.Z)({},T),{},(0,l.Z)({},e,n.target.value)))},placeholder:n.placeholder,disabled:!ee,type:n.type})}(n[0],n[1])})),(0,D.jsxs)(o.rjZ,{item:!0,xs:12,sx:f.ID.modalButtonBar,children:[ee&&(0,D.jsx)(o.zxk,{id:"clear",type:"button",variant:"regular",onClick:De,label:"Clear"}),ee&&(0,D.jsx)(o.zxk,{id:"cancel",type:"button",variant:"regular",onClick:ye,label:"Cancel"}),ee&&(0,D.jsx)(o.zxk,{id:"save-key",type:"submit",variant:"callAction",color:"primary",disabled:Z||pe||!ve(),label:"Save"})]})]})]})})}):(0,D.jsx)(o.xuv,{withBorders:!0,sx:(0,l.Z)({display:"grid",gridTemplateColumns:"1fr",gridAutoFlow:"dense",gap:3,padding:"15px"},"@media (min-width: ".concat(o.Egj.sm,"px)"),{gridTemplateColumns:"2fr 1fr",gridAutoFlow:"row"}),children:Object.entries(n).map((function(e){var n=(0,u.Z)(e,2),t=n[0],i=n[1];if(!i.editOnly){var r=i.label,a=T[t]?T[t]:"";return"toggle"===i.type&&T[t]&&(a="on"!==a?"Off":"On"),F[t]&&(r=(0,D.jsxs)(o.xuv,{sx:{display:"flex",alignItems:"center",gap:5,"& .min-icon":{height:20,width:20},"& span":{height:20,display:"flex",alignItems:"center"}},children:[(0,D.jsx)("span",{children:i.label}),(0,D.jsx)(o.ua7,{tooltip:"This value is set from the ".concat(F[t]," environment variable"),placement:"right",children:(0,D.jsx)("span",{className:"muted",children:(0,D.jsx)(o.zD0,{})})})]}),a=(0,D.jsx)("i",{children:(0,D.jsx)("span",{className:"muted",children:a})})),(0,D.jsx)(o.kKA,{label:r,value:a},t)}return null}))})]})]})]})},C=t(37099),I=function(){return(0,D.jsx)(j,{backLink:r.gA.IDP_OPENID_CONFIGURATIONS,header:"OpenID Configurations",endpoint:"/api/v1/idp/openid/",idpType:"openid",helpBox:(0,D.jsx)(C.Z,{helpText:"Learn more about OpenID Connect Configurations",contents:a.f4,docLink:"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-oidc",docText:"Learn more about OpenID Connect Configurations"}),formFields:a.DY,icon:(0,D.jsx)(o.mBM,{width:40})})}},79979:function(e,n,t){t.d(n,{DY:function(){return l},Si:function(){return o},f4:function(){return a},iR:function(){return s}});var i=t(29945),r=t(80184),o=[{text:"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:(0,r.jsx)(i.wXn,{}),iconDescription:"Create Configurations"},{text:"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries",icon:null,iconDescription:""},{text:"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.",icon:null,iconDescription:""}],a=[{text:"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.",icon:(0,r.jsx)(i.mBM,{}),iconDescription:"Create Configurations"},{text:"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:null,iconDescription:""}],l={config_url:{required:!0,hasError:function(e,n){return!e&&n?"Config URL is required":""},label:"Config URL",tooltip:"Config URL for identity provider configuration",placeholder:"https://identity-provider-url/.well-known/openid-configuration",type:"text",editOnly:!1},client_id:{required:!0,hasError:function(e,n){return!e&&n?"Client ID is required":""},label:"Client ID",tooltip:"Identity provider Client ID",placeholder:"Enter Client ID",type:"text",editOnly:!1},client_secret:{required:!0,hasError:function(e,n){return!e&&n?"Client Secret is required":""},label:"Client Secret",tooltip:"Identity provider Client Secret",placeholder:"Enter Client Secret",type:"password",editOnly:!0},claim_name:{required:!1,label:"Claim Name",tooltip:"Claim from which MinIO will read the policy or role to use",placeholder:"Enter Claim Name",type:"text",hasError:function(e,n){return""},editOnly:!1},display_name:{required:!1,label:"Display Name",tooltip:"",placeholder:"Enter Display Name",type:"text",hasError:function(e,n){return""},editOnly:!1},claim_prefix:{required:!1,label:"Claim Prefix",tooltip:"",placeholder:"Enter Claim Prefix",type:"text",hasError:function(e,n){return""},editOnly:!1},scopes:{required:!1,label:"Scopes",tooltip:"",placeholder:"openid,profile,email",type:"text",hasError:function(e,n){return""},editOnly:!1},redirect_uri:{required:!1,label:"Redirect URI",tooltip:"",placeholder:"https://console-endpoint-url/oauth_callback",type:"text",hasError:function(e,n){return""},editOnly:!1},role_policy:{required:!1,label:"Role Policy",tooltip:"",placeholder:"readonly",type:"text",hasError:function(e,n){return""},editOnly:!1},claim_userinfo:{required:!1,label:"Claim User Info",tooltip:"",placeholder:"Claim User Info",type:"toggle",hasError:function(e,n){return""},editOnly:!1},redirect_uri_dynamic:{required:!1,label:"Redirect URI Dynamic",tooltip:"",placeholder:"Redirect URI Dynamic",type:"toggle",hasError:function(e,n){return""},editOnly:!1}},s={server_insecure:{required:!0,hasError:function(e,n){return!e&&n?"Server Address is required":""},label:"Server Insecure",tooltip:"Disable SSL certificate verification ",placeholder:"myldapserver.com:636",type:"toggle",editOnly:!1},server_addr:{required:!0,hasError:function(e,n){return!e&&n?"Server Address is required":""},label:"Server Address",tooltip:'AD/LDAP server address e.g. "myldapserver.com:636"',placeholder:"myldapserver.com:636",type:"text",editOnly:!1},lookup_bind_dn:{required:!0,hasError:function(e,n){return!e&&n?"Lookup Bind DN is required":""},label:"Lookup Bind DN",tooltip:"DN (Distinguished Name) for LDAP read-only service account used to perform DN and group lookups",placeholder:"cn=admin,dc=min,dc=io",type:"text",editOnly:!1},lookup_bind_password:{required:!0,hasError:function(e,n){return!e&&n?"Lookup Bind Password is required":""},label:"Lookup Bind Password",tooltip:"Password for LDAP read-only service account used to perform DN and group lookups",placeholder:"admin",type:"password",editOnly:!0},user_dn_search_base_dn:{required:!0,hasError:function(e,n){return!e&&n?"User DN Search Base DN is required":""},label:"User DN Search Base",tooltip:"",placeholder:"DC=example,DC=net",type:"text",editOnly:!1},user_dn_search_filter:{required:!0,hasError:function(e,n){return!e&&n?"User DN Search Filter is required":""},label:"User DN Search Filter",tooltip:"",placeholder:"(sAMAcountName=%s)",type:"text",editOnly:!1},group_search_base_dn:{required:!1,hasError:function(e,n){return""},label:"Group Search Base DN",tooltip:"",placeholder:"ou=swengg,dc=min,dc=io",type:"text",editOnly:!1},group_search_filter:{required:!1,hasError:function(e,n){return""},label:"Group Search Filter",tooltip:"",placeholder:"(&(objectclass=groupofnames)(member=%d))",type:"text",editOnly:!1}}}}]);
//# sourceMappingURL=6491.50e302e9.chunk.js.map