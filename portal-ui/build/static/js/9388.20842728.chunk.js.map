{"version":3,"file":"static/js/9388.20842728.chunk.js","mappings":"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","sources":["screens/Console/Support/RegisterHelpBox.tsx","screens/Console/Support/utils.tsx","screens/Console/Support/GetApiKeyModal.tsx","screens/Console/Support/ApiKeyRegister.tsx","screens/Console/Support/Register.tsx","screens/Console/Support/RegistrationStatusBanner.tsx","screens/shared/tabs.tsx","../node_modules/@mui/icons-material/LockOutlined.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport {\n  CallHomeFeatureIcon,\n  DiagnosticsFeatureIcon,\n  HelpIconFilled,\n  PerformanceFeatureIcon,\n} from \"../../../icons\";\nimport React from \"react\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst RegisterHelpBox = ({ hasMargin = true }: { hasMargin?: boolean }) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginLeft: {\n          xs: \"0px\",\n          sm: \"0px\",\n          md: hasMargin ? \"30px\" : \"\",\n        },\n        marginTop: {\n          xs: \"0px\",\n          sm: hasMargin ? \"30px\" : \"\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Why should I register?</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        Registering this cluster with the MinIO Subscription Network (SUBNET)\n        provides the following benefits in addition to the commercial license\n        and SLA backed support.\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CallHomeFeatureIcon />}\n          description={`Call Home Monitoring`}\n        />\n        <FeatureItem\n          icon={<DiagnosticsFeatureIcon />}\n          description={`Health Diagnostics`}\n        />\n        <FeatureItem\n          icon={<PerformanceFeatureIcon />}\n          description={`Performance Analysis`}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default RegisterHelpBox;\n","import { Box, Grid, Link } from \"@mui/material\";\nimport { Fragment } from \"react\";\nimport RegistrationStatusBanner from \"./RegistrationStatusBanner\";\n\nexport const FormTitle = ({\n  icon = null,\n  title,\n}: {\n  icon?: any;\n  title: any;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      {icon}\n      <div className=\"title-text\">{title}</div>\n    </Box>\n  );\n};\n\nexport const ClusterRegistered = ({\n  email,\n  linkClass,\n}: {\n  email: string;\n  linkClass: string;\n}) => {\n  return (\n    <Fragment>\n      <RegistrationStatusBanner email={email} />\n      <Grid item xs={12} marginTop={\"25px\"}>\n        <Box\n          sx={{\n            padding: \"20px\",\n            \"& a\": {\n              color: \"#2781B0\",\n              cursor: \"pointer\",\n            },\n          }}\n        >\n          Login to{\" \"}\n          <Link\n            href=\"https://subnet.min.io\"\n            target=\"_blank\"\n            className={linkClass}\n          >\n            SUBNET\n          </Link>{\" \"}\n          to avail support for this MinIO cluster\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport {\n  containerForHeader,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport React, { useState } from \"react\";\nimport { InfoIcon, UsersIcon } from \"../../../icons\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageTitle: {\n      fontSize: 18,\n      marginBottom: 20,\n      textAlign: \"center\",\n    },\n    pageSubTitle: {\n      textAlign: \"center\",\n    },\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n    ...spacingUtils,\n  });\n\ninterface IGetApiKeyModalProps {\n  open: boolean;\n  closeModal: () => void;\n  onSet: (apiKey: string) => void;\n  classes: any;\n}\n\nconst GetApiKeyModal = ({\n  open,\n  closeModal,\n  classes,\n  onSet,\n}: IGetApiKeyModalProps) => {\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [mfaToken, setMfaToken] = useState(\"\");\n  const [subnetOTP, setSubnetOTP] = useState(\"\");\n\n  const onError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeModal();\n    setEmail(\"\");\n    setPassword(\"\");\n    setShowPassword(false);\n    setMfaToken(\"\");\n    setSubnetOTP(\"\");\n  };\n\n  const onSuccess = (res: any) => {\n    if (res.mfa_token) {\n      setMfaToken(res.mfa_token);\n    } else if (res.access_token) {\n      invokeApi(\"GET\", `/api/v1/subnet/apikey?token=${res.access_token}`);\n    } else {\n      onSet(res.apiKey);\n      closeModal();\n    }\n  };\n\n  const [isLoading, invokeApi] = useApi(onSuccess, onError);\n\n  const onConfirm = () => {\n    if (mfaToken !== \"\") {\n      invokeApi(\"POST\", \"/api/v1/subnet/login/mfa\", {\n        username: email,\n        otp: subnetOTP,\n        mfa_token: mfaToken,\n      });\n    } else {\n      invokeApi(\"POST\", \"/api/v1/subnet/login\", { username: email, password });\n    }\n  };\n\n  const getDialogContent = () => {\n    if (mfaToken === \"\") {\n      return getCredentialsDialog();\n    }\n    return getMFADialog();\n  };\n\n  const getCredentialsDialog = () => {\n    return (\n      <Box sx={{ width: 500 }}>\n        <InputBoxWrapper\n          className={classes.spacerBottom}\n          classes={{\n            inputLabel: classes.sizedLabel,\n          }}\n          id=\"subnet-email\"\n          name=\"subnet-email\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setEmail(event.target.value)\n          }\n          label=\"Email\"\n          value={email}\n          overlayIcon={<UsersIcon />}\n        />\n        <InputBoxWrapper\n          className={classes.spacerBottom}\n          classes={{\n            inputLabel: classes.sizedLabel,\n          }}\n          id=\"subnet-password\"\n          name=\"subnet-password\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setPassword(event.target.value)\n          }\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          value={password}\n          overlayIcon={\n            showPassword ? <VisibilityOffIcon /> : <RemoveRedEyeIcon />\n          }\n          overlayAction={() => setShowPassword(!showPassword)}\n        />\n      </Box>\n    );\n  };\n\n  const getMFADialog = () => {\n    return (\n      <Box sx={{ display: \"flex\" }}>\n        <Box sx={{ display: \"flex\", flexFlow: \"column\", flex: \"2\" }}>\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Two-Factor Authentication\n          </Box>\n\n          <Box>\n            Please enter the 6-digit verification code that was sent to your\n            email address. This code will be valid for 5 minutes.\n          </Box>\n\n          <Box\n            sx={{\n              flex: \"1\",\n              marginTop: \"30px\",\n            }}\n          >\n            <InputBoxWrapper\n              overlayIcon={<LockOutlinedIcon />}\n              id=\"subnet-otp\"\n              name=\"subnet-otp\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setSubnetOTP(event.target.value)\n              }\n              placeholder=\"\"\n              label=\"\"\n              value={subnetOTP}\n            />\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n          ></Box>\n        </Box>\n      </Box>\n    );\n  };\n\n  return open ? (\n    <ConfirmDialog\n      title={\"Get API Key from SUBNET\"}\n      confirmText={\"Get API Key\"}\n      isOpen={open}\n      titleIcon={<InfoIcon />}\n      isLoading={isLoading}\n      cancelText={\"Cancel\"}\n      onConfirm={onConfirm}\n      onClose={closeModal}\n      confirmButtonProps={{\n        color: \"info\",\n        disabled: !email || !password || isLoading,\n        hidden: true,\n      }}\n      cancelButtonProps={{\n        disabled: isLoading,\n      }}\n      confirmationContent={getDialogContent()}\n    />\n  ) : null;\n};\n\nexport default withStyles(styles)(GetApiKeyModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport { OnlineRegistrationIcon } from \"../../../icons\";\nimport { FormTitle } from \"./utils\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport GetApiKeyModal from \"./GetApiKeyModal\";\n\ninterface IApiKeyRegister {\n  classes: any;\n  apiKey: string;\n  setApiKey: (v: string) => void;\n  onRegister: () => void;\n  loading: boolean;\n}\n\nconst ApiKeyRegister = ({\n  classes,\n  apiKey,\n  setApiKey,\n  loading,\n  onRegister,\n}: IApiKeyRegister) => {\n  const [showApiKeyModal, setShowApiKeyModal] = useState(false);\n\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          \"& .title-text\": {\n            marginLeft: \"27px\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <FormTitle\n          icon={<OnlineRegistrationIcon />}\n          title={`API key activation of MinIO Subscription Network License`}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          flex: \"1\",\n          paddingTop: \"30px\",\n        }}\n      >\n        <InputBoxWrapper\n          className={classes.spacerBottom}\n          classes={{\n            inputLabel: classes.sizedLabel,\n          }}\n          id=\"api-key\"\n          name=\"api-key\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setApiKey(event.target.value)\n          }\n          label=\"API Key\"\n          value={apiKey}\n        />\n\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Button\n            variant=\"outlined\"\n            className={classes.spacerRight}\n            disabled={loading}\n            onClick={() => setShowApiKeyModal(true)}\n          >\n            Get from SUBNET\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading || apiKey.trim().length === 0}\n            onClick={() => onRegister()}\n          >\n            Register\n          </Button>\n          <GetApiKeyModal\n            open={showApiKeyModal}\n            closeModal={() => setShowApiKeyModal(false)}\n            onSet={setApiKey}\n          />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ApiKeyRegister;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Button, Grid, Link } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { CopyIcon, UsersIcon } from \"../../../icons\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport OnlineRegistrationIcon from \"../../../icons/OnlineRegistrationIcon\";\nimport OfflineRegistrationIcon from \"../../../icons/OfflineRegistrationIcon\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport api from \"../../../common/api\";\n\nimport {\n  SubnetInfo,\n  SubnetLoginRequest,\n  SubnetLoginResponse,\n  SubnetLoginWithMFARequest,\n  SubnetOrganization,\n  SubnetRegisterRequest,\n  SubnetRegTokenResponse,\n} from \"../License/types\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { hasPermission } from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PAGES_PERMISSIONS,\n} from \"../../../common/SecureComponent/permissions\";\nimport { useSelector } from \"react-redux\";\n\nimport SettingsIcon from \"../../../icons/SettingsIcon\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\nimport RegisterHelpBox from \"./RegisterHelpBox\";\nimport RegistrationStatusBanner from \"./RegistrationStatusBanner\";\nimport { selOpMode, setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { TabPanel } from \"../../shared/tabs\";\nimport { ClusterRegistered, FormTitle } from \"./utils\";\nimport ApiKeyRegister from \"./ApiKeyRegister\";\ninterface IRegister {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    registerActivationIcon: {\n      color: theme.palette.primary.main,\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      \"& .min-icon\": {\n        width: 32.12,\n        height: 25,\n        marginRight: 10,\n        verticalAlign: \"middle\",\n      },\n    },\n    registerActivationMode: {\n      textAlign: \"right\",\n      \"& a\": {\n        cursor: \"pointer\",\n      },\n    },\n    subnetDescription: {\n      textAlign: \"left\",\n      Font: \"normal normal normal 14px/17px Lato\",\n      letterSpacing: 0,\n      color: \"#000000\",\n      \"& span\": {\n        fontWeight: \"bold\",\n      },\n    },\n    registeredStatus: {\n      border: \"1px solid #E2E2E2\",\n      padding: \"24px 24px 24px 24px\",\n      borderRadius: 2,\n      marginBottom: 25,\n      backgroundColor: \"#FBFAFA\",\n      \"& .min-icon\": {\n        width: 20,\n        height: 20,\n        marginLeft: 48,\n        marginRight: 13,\n        verticalAlign: \"middle\",\n        marginTop: -3,\n      },\n      \"& span\": {\n        fontWeight: \"bold\",\n      },\n    },\n    copyInputBox: {\n      \"& button\": {\n        border: \"1px solid #5E5E5E\",\n        borderRadius: 2,\n      },\n    },\n    link: {\n      color: \"#2781B0\",\n      cursor: \"pointer\",\n    },\n    sizedLabel: {\n      minWidth: \"75px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...spacingUtils,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst Register = ({ classes }: IRegister) => {\n  const dispatch = useAppDispatch();\n  const operatorMode = useSelector(selOpMode);\n  const [license, setLicense] = useState<string>(\"\");\n  const [subnetPassword, setSubnetPassword] = useState<string>(\"\");\n  const [subnetEmail, setSubnetEmail] = useState<string>(\"\");\n  const [subnetMFAToken, setSubnetMFAToken] = useState<string>(\"\");\n  const [subnetOTP, setSubnetOTP] = useState<string>(\"\");\n  const [subnetAccessToken, setSubnetAccessToken] = useState<string>(\"\");\n  const [selectedSubnetOrganization, setSelectedSubnetOrganization] =\n    useState<string>(\"\");\n  const [subnetRegToken, setSubnetRegToken] = useState<string>(\"\");\n  const [subnetOrganizations, setSubnetOrganizations] = useState<\n    SubnetOrganization[]\n  >([]);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(false);\n  const [clusterRegistered, setClusterRegistered] = useState<boolean>(false);\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo | undefined>();\n  const [curTab, setCurTab] = useState<number>(0);\n\n  const [initialLicenseLoading, setInitialLicenseLoading] =\n    useState<boolean>(true);\n  const [displaySubnetProxy, setDisplaySubnetProxy] = useState<boolean>(false);\n  const clearForm = () => {\n    setSubnetAccessToken(\"\");\n    setSelectedSubnetOrganization(\"\");\n    setSubnetRegToken(\"\");\n    setShowPassword(false);\n    setSubnetOrganizations([]);\n    setLicense(\"\");\n    setSubnetPassword(\"\");\n    setSubnetEmail(\"\");\n    setSubnetMFAToken(\"\");\n    setSubnetOTP(\"\");\n  };\n\n  const getSubnetInfo = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    IAM_PAGES_PERMISSIONS[IAM_PAGES.LICENSE],\n    true\n  );\n\n  const fetchLicenseInfo = useCallback(() => {\n    if (loadingLicenseInfo) {\n      return;\n    }\n    if (getSubnetInfo) {\n      setLoadingLicenseInfo(true);\n      api\n        .invoke(\"GET\", `/api/v1/subnet/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setClusterRegistered(true);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          if (err.errorMessage !== \"License not found\") {\n            dispatch(setErrorSnackMessage(err));\n          }\n          setClusterRegistered(false);\n          setLoadingLicenseInfo(false);\n        });\n    } else {\n      setLoadingLicenseInfo(false);\n    }\n  }, [loadingLicenseInfo, getSubnetInfo, dispatch]);\n\n  const fetchSubnetRegToken = () => {\n    if (loading || subnetRegToken) {\n      return;\n    }\n    setLoading(true);\n    api\n      .invoke(\"GET\", \"/api/v1/subnet/registration-token\")\n      .then((resp: SubnetRegTokenResponse) => {\n        setLoading(false);\n        if (resp && resp.regToken) {\n          setSubnetRegToken(resp.regToken);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n      });\n  };\n\n  const callRegister = (token: string, account_id: string) => {\n    const request: SubnetRegisterRequest = {\n      token: token,\n      account_id: account_id,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/register\", request)\n      .then(() => {\n        setLoading(false);\n        clearForm();\n        fetchLicenseInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n      });\n  };\n  const subnetRegister = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    if (subnetAccessToken && selectedSubnetOrganization) {\n      callRegister(subnetAccessToken, selectedSubnetOrganization);\n    }\n  };\n\n  const subnetLoginWithMFA = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    const request: SubnetLoginWithMFARequest = {\n      username: subnetEmail,\n      otp: subnetOTP,\n      mfa_token: subnetMFAToken,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login/mfa\", request)\n      .then((resp: SubnetLoginResponse) => {\n        setLoading(false);\n        if (resp && resp.access_token && resp.organizations.length > 0) {\n          if (resp.organizations.length === 1) {\n            callRegister(\n              resp.access_token,\n              resp.organizations[0].accountId.toString()\n            );\n          } else {\n            setSubnetAccessToken(resp.access_token);\n            setSubnetOrganizations(resp.organizations);\n            setSelectedSubnetOrganization(\n              resp.organizations[0].accountId.toString()\n            );\n          }\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n        setSubnetOTP(\"\");\n      });\n  };\n\n  const subnetLogin = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    let request: SubnetLoginRequest = {\n      username: subnetEmail,\n      password: subnetPassword,\n      apiKey: license,\n    };\n    api\n      .invoke(\"POST\", \"/api/v1/subnet/login\", request)\n      .then((resp: SubnetLoginResponse) => {\n        setLoading(false);\n        if (resp && resp.registered) {\n          clearForm();\n          fetchLicenseInfo();\n        } else if (resp && resp.mfa_token) {\n          setSubnetMFAToken(resp.mfa_token);\n        } else if (resp && resp.access_token && resp.organizations.length > 0) {\n          setSubnetAccessToken(resp.access_token);\n          setSubnetOrganizations(resp.organizations);\n          setSelectedSubnetOrganization(\n            resp.organizations[0].accountId.toString()\n          );\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setLoading(false);\n        clearForm();\n      });\n  };\n\n  useEffect(() => {\n    if (initialLicenseLoading) {\n      fetchLicenseInfo();\n      setInitialLicenseLoading(false);\n    }\n  }, [fetchLicenseInfo, initialLicenseLoading, setInitialLicenseLoading]);\n\n  let clusterRegistrationForm: JSX.Element = <Fragment />;\n\n  if (subnetAccessToken && subnetOrganizations.length > 0) {\n    clusterRegistrationForm = (\n      <Box\n        sx={{\n          display: \"flex\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n          }}\n        >\n          <Box\n            sx={{\n              marginTop: \"15px\",\n              marginBottom: \"15px\",\n              \"& .title-text\": {\n                marginLeft: \"0px\",\n              },\n            }}\n          >\n            <FormTitle title={`Register MinIO cluster`} />\n          </Box>\n          <Box>\n            <SelectWrapper\n              id=\"subnet-organization\"\n              name=\"subnet-organization\"\n              onChange={(e) =>\n                setSelectedSubnetOrganization(e.target.value as string)\n              }\n              label=\"Select an organization\"\n              value={selectedSubnetOrganization}\n              options={subnetOrganizations.map((organization) => ({\n                label: organization.company,\n                value: organization.accountId.toString(),\n              }))}\n            />\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                marginTop: \"15px\",\n              }}\n            >\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                onClick={() => subnetRegister()}\n                disabled={loading || subnetAccessToken.trim().length === 0}\n                variant=\"contained\"\n              >\n                Register\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n        <RegisterHelpBox />\n      </Box>\n    );\n  } else if (subnetMFAToken) {\n    clusterRegistrationForm = (\n      <Box\n        sx={{\n          display: \"flex\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Two-Factor Authentication\n          </Box>\n\n          <Box>\n            Please enter the 6-digit verification code that was sent to your\n            email address. This code will be valid for 5 minutes.\n          </Box>\n\n          <Box\n            sx={{\n              flex: \"1\",\n              marginTop: \"30px\",\n            }}\n          >\n            <InputBoxWrapper\n              overlayIcon={<LockOutlinedIcon />}\n              id=\"subnet-otp\"\n              name=\"subnet-otp\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setSubnetOTP(event.target.value)\n              }\n              placeholder=\"\"\n              label=\"\"\n              value={subnetOTP}\n            />\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              color=\"primary\"\n              onClick={() => subnetLoginWithMFA()}\n              disabled={\n                loading ||\n                subnetOTP.trim().length === 0 ||\n                subnetMFAToken.trim().length === 0\n              }\n              variant=\"contained\"\n            >\n              Verify\n            </Button>\n          </Box>\n        </Box>\n\n        <RegisterHelpBox />\n      </Box>\n    );\n  } else {\n    clusterRegistrationForm = (\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: {\n            xs: \"column\",\n            md: \"row\",\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            flex: \"2\",\n          }}\n        >\n          <Box\n            sx={{\n              fontSize: \"16px\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              marginTop: \"30px\",\n              marginBottom: \"30px\",\n            }}\n          >\n            Use your MinIO Subscription Network login credentials to register\n            this cluster.\n          </Box>\n          <Box\n            sx={{\n              flex: \"1\",\n            }}\n          >\n            <InputBoxWrapper\n              className={classes.spacerBottom}\n              classes={{\n                inputLabel: classes.sizedLabel,\n              }}\n              id=\"subnet-email\"\n              name=\"subnet-email\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setSubnetEmail(event.target.value)\n              }\n              label=\"Email\"\n              value={subnetEmail}\n              overlayIcon={<UsersIcon />}\n            />\n            <InputBoxWrapper\n              className={classes.spacerBottom}\n              classes={{\n                inputLabel: classes.sizedLabel,\n              }}\n              id=\"subnet-password\"\n              name=\"subnet-password\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                setSubnetPassword(event.target.value)\n              }\n              label=\"Password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={subnetPassword}\n              overlayIcon={\n                showPassword ? <VisibilityOffIcon /> : <RemoveRedEyeIcon />\n              }\n              overlayAction={() => setShowPassword(!showPassword)}\n            />\n\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                type=\"submit\"\n                className={classes.spacerRight}\n                variant=\"outlined\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(\n                    `https://min.io/signup?ref=${operatorMode ? \"op\" : \"con\"}`,\n                    \"_blank\"\n                  );\n                }}\n              >\n                Sign up\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={\n                  loading ||\n                  subnetEmail.trim().length === 0 ||\n                  subnetPassword.trim().length === 0\n                }\n                onClick={() => subnetLogin()}\n              >\n                Register\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n        <RegisterHelpBox />\n      </Box>\n    );\n  }\n\n  const apiKeyRegistration = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && licenseInfo ? (\n          <ClusterRegistered\n            email={licenseInfo.email}\n            linkClass={classes.link}\n          />\n        ) : (\n          <ApiKeyRegister\n            classes={classes}\n            setApiKey={setLicense}\n            apiKey={license}\n            loading={loading}\n            onRegister={subnetLogin}\n          />\n        )}\n      </Box>\n    </Fragment>\n  );\n\n  const offlineRegistration = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && licenseInfo ? (\n          <ClusterRegistered\n            email={licenseInfo.email}\n            linkClass={classes.link}\n          />\n        ) : null}\n        <Box\n          sx={{\n            \"& .title-text\": {\n              marginLeft: \"27px\",\n              fontWeight: 600,\n            },\n          }}\n        >\n          <FormTitle\n            icon={<OfflineRegistrationIcon />}\n            title={`Offline activation of MinIO Subscription Network License`}\n          />\n        </Box>\n\n        <Box\n          sx={{\n            display: \"flex\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: \"column\",\n              flex: \"2\",\n              marginTop: \"15px\",\n              \"& .step-number\": {\n                color: \"#ffffff\",\n                height: \"25px\",\n                width: \"25px\",\n                background: \"#081C42\",\n                marginRight: \"10px\",\n                textAlign: \"center\",\n                fontWeight: 600,\n                borderRadius: \"50%\",\n              },\n\n              \"& .step-row\": {\n                fontSize: \"16px\",\n                display: \"flex\",\n                marginTop: \"15px\",\n                marginBottom: \"15px\",\n              },\n            }}\n          >\n            <Box>\n              <Box className=\"step-row\">\n                <div className=\"step-number\">1</div>{\" \"}\n                <div className=\"step-text\">\n                  Copy the following registration token\n                </div>\n              </Box>\n\n              <Box\n                sx={{\n                  flex: \"1\",\n                  marginTop: \"15px\",\n                  marginLeft: \"35px\",\n                  \"& input\": {\n                    color: \"#737373\",\n                  },\n                }}\n              >\n                <InputBoxWrapper\n                  id=\"registration-token\"\n                  name=\"registration-token\"\n                  placeholder=\"\"\n                  label=\"\"\n                  type=\"text\"\n                  onChange={() => {}}\n                  value={subnetRegToken}\n                  overlayIcon={<CopyIcon />}\n                  extraInputProps={{\n                    readOnly: true,\n                  }}\n                  overlayAction={() =>\n                    navigator.clipboard.writeText(subnetRegToken)\n                  }\n                />\n              </Box>\n            </Box>\n\n            <Box>\n              <Box className=\"step-row\">\n                <div className=\"step-number\">2</div>\n                <div className=\"step-text\">\n                  Navigate to SUBNET and register your cluster\n                </div>\n              </Box>\n\n              <Box\n                sx={{\n                  flex: \"1\",\n                  marginLeft: \"35px\",\n                }}\n              >\n                <Link\n                  className={classes.link}\n                  color=\"inherit\"\n                  href=\"https://subnet.min.io/cluster/register\"\n                  target=\"_blank\"\n                >\n                  https://subnet.min.io/cluster/register\n                </Link>\n              </Box>\n            </Box>\n\n            <Box\n              sx={{\n                fontSize: \"16px\",\n                display: \"flex\",\n                flexFlow: \"column\",\n                marginTop: \"15px\",\n                marginBottom: \"15px\",\n              }}\n            >\n              <Box className=\"step-row\">\n                <div className=\"step-number\">3</div>{\" \"}\n                <div className=\"step-text\">\n                  Enter the API key generated by SUBNET\n                </div>\n              </Box>\n\n              <Box\n                sx={{\n                  flex: \"1\",\n                  marginTop: \"15px\",\n                  marginLeft: \"35px\",\n                }}\n              >\n                <InputBoxWrapper\n                  value={license}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                    setLicense(event.target.value)\n                  }\n                  id=\"api-key\"\n                  name=\"api-key\"\n                  placeholder=\"\"\n                  label=\"\"\n                  type=\"text\"\n                />\n              </Box>\n            </Box>\n\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n                marginTop: \"15px\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => subnetLogin()}\n                disabled={loading || license.trim().length === 0}\n              >\n                Register\n              </Button>\n            </Box>\n          </Box>\n          <RegisterHelpBox />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n\n  const proxyConfigurationCommand =\n    \"mc admin config set {alias} subnet proxy={proxy}\";\n\n  const regUi = (\n    <Fragment>\n      <Box\n        sx={{\n          border: \"1px solid #eaeaea\",\n          borderRadius: \"2px\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          padding: \"43px\",\n        }}\n      >\n        {clusterRegistered && (\n          <RegistrationStatusBanner email={licenseInfo?.email} />\n        )}\n        {clusterRegistered ? (\n          <Grid item xs={12} marginTop={\"25px\"}>\n            <Box\n              sx={{\n                padding: \"20px\",\n                \"& a\": {\n                  color: \"#2781B0\",\n                  cursor: \"pointer\",\n                },\n              }}\n            >\n              Login to{\" \"}\n              <Link\n                href=\"https://subnet.min.io\"\n                target=\"_blank\"\n                className={classes.link}\n              >\n                SUBNET\n              </Link>{\" \"}\n              to avail support for this MinIO cluster\n            </Box>\n          </Grid>\n        ) : null}\n\n        {clusterRegistered ? null : (\n          <Box\n            sx={{\n              \"& .title-text\": {\n                marginLeft: \"27px\",\n                fontWeight: 600,\n              },\n            }}\n          >\n            <FormTitle\n              icon={<OnlineRegistrationIcon />}\n              title={`Online activation of MinIO Subscription Network License`}\n            />\n          </Box>\n        )}\n\n        {clusterRegistered ? null : clusterRegistrationForm}\n      </Box>\n\n      {!clusterRegistered && (\n        <Fragment>\n          <Box\n            sx={{\n              border: \"1px solid #eaeaea\",\n              borderRadius: \"2px\",\n              display: \"flex\",\n              padding: \"23px\",\n              marginTop: \"40px\",\n              alignItems: \"start\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  \"& .min-icon\": {\n                    height: \"22px\",\n                    width: \"22px\",\n                  },\n                }}\n              >\n                <SettingsIcon />\n                <div style={{ marginLeft: \"10px\", fontWeight: 600 }}>\n                  Proxy Configuration\n                </div>\n              </Box>\n              <Box\n                sx={{\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                For airgap/firewalled environments it is possible to{\" \"}\n                <Link\n                  className={classes.link}\n                  href=\"https://docs.min.io/docs/minio-server-configuration-guide.html?ref=con\"\n                  target=\"_blank\"\n                >\n                  configure a proxy\n                </Link>{\" \"}\n                to connect to SUBNET .\n              </Box>\n              <Box>\n                {displaySubnetProxy && (\n                  <InputBoxWrapper\n                    disabled\n                    id=\"subnetProxy\"\n                    name=\"subnetProxy\"\n                    placeholder=\"\"\n                    onChange={() => {}}\n                    label=\"\"\n                    value={proxyConfigurationCommand}\n                    overlayIcon={<CopyIcon />}\n                    extraInputProps={{\n                      readOnly: true,\n                    }}\n                    overlayAction={() =>\n                      navigator.clipboard.writeText(proxyConfigurationCommand)\n                    }\n                  />\n                )}\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n              }}\n            >\n              <FormSwitchWrapper\n                value=\"enableProxy\"\n                id=\"enableProxy\"\n                name=\"enableProxy\"\n                checked={displaySubnetProxy}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setDisplaySubnetProxy(event.target.checked);\n                }}\n              />\n            </Box>\n          </Box>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n\n  const loadingUi = <div>Loading..</div>;\n  const uiToShow = loadingLicenseInfo ? loadingUi : regUi;\n\n  return (\n    <Fragment>\n      <PageHeader\n        label=\"Register to MinIO Subscription Network\"\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <Tabs\n          value={curTab}\n          onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n            setCurTab(newValue);\n          }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"cluster-tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab\n            label=\"Online Activation\"\n            id=\"simple-tab-0\"\n            aria-controls=\"simple-tabpanel-0\"\n          />\n          <Tab\n            label=\"API Key Activation\"\n            id=\"simple-tab-1\"\n            aria-controls=\"simple-tabpanel-1\"\n          />\n          <Tab\n            label=\"Offline Activation\"\n            id=\"simple-tab-2\"\n            aria-controls=\"simple-tabpanel-2\"\n            onClick={() => fetchSubnetRegToken()}\n          />\n        </Tabs>\n\n        <TabPanel index={0} value={curTab}>\n          {uiToShow}\n        </TabPanel>\n        <TabPanel index={1} value={curTab}>\n          {apiKeyRegistration}\n        </TabPanel>\n        <TabPanel index={2} value={curTab}>\n          {offlineRegistration}\n        </TabPanel>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Register);\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport VerifiedIcon from \"../../../icons/VerifiedIcon\";\n\nconst RegistrationStatusBanner = ({ email = \"\" }: { email?: string }) => {\n  return (\n    <Box\n      sx={{\n        height: \"67px\",\n        color: \"#ffffff\",\n        display: \"flex\",\n        position: \"relative\",\n        top: \"-30px\",\n        left: \"-32px\",\n        width: \"calc(100% + 64px)\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#2781B0\",\n        padding: \"0 25px 0 25px\",\n        \"& .registered-box, .reg-badge-box\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        },\n\n        \"& .reg-badge-box\": {\n          marginLeft: \"20px\",\n\n          \"& .min-icon\": {\n            fill: \"#2781B0\",\n          },\n        },\n      }}\n    >\n      <Box className=\"registered-box\">\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Register status:</Box>\n        <Box className=\"reg-badge-box\">\n          <VerifiedIcon />\n          <Box\n            sx={{\n              fontWeight: 600,\n            }}\n          >\n            Registered\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        className=\"registered-acc-box\"\n        sx={{\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          display: {\n            sm: \"flex\",\n            xs: \"none\",\n          },\n        }}\n      >\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Registered to:</Box>\n        <Box sx={{ marginLeft: \"8px\", fontWeight: 600 }}>{email}</Box>\n      </Box>\n    </Box>\n  );\n};\nexport default RegistrationStatusBanner;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ marginTop: \"5px\" }}\n      {...other}\n    >\n      {value === index && <Fragment>{children}</Fragment>}\n    </div>\n  );\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;"],"names":["FeatureItem","icon","description","Box","sx","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","hasMargin","flex","border","borderRadius","flexFlow","padding","marginLeft","xs","sm","md","marginTop","fontWeight","alignItems","FormTitle","title","justifyContent","className","ClusterRegistered","email","linkClass","Fragment","RegistrationStatusBanner","Grid","item","cursor","Link","href","target","withStyles","theme","createStyles","pageTitle","textAlign","pageSubTitle","sizedLabel","minWidth","containerForHeader","spacing","spacingUtils","open","closeModal","classes","onSet","dispatch","useAppDispatch","useState","setEmail","password","setPassword","showPassword","setShowPassword","mfaToken","setMfaToken","subnetOTP","setSubnetOTP","useApi","res","mfa_token","access_token","invokeApi","apiKey","err","setErrorSnackMessage","isLoading","getCredentialsDialog","InputBoxWrapper","spacerBottom","inputLabel","id","name","onChange","event","value","label","overlayIcon","type","VisibilityOff","RemoveRedEye","overlayAction","getMFADialog","LockOutlined","placeholder","ConfirmDialog","confirmText","isOpen","titleIcon","cancelText","onConfirm","username","otp","onClose","confirmButtonProps","disabled","hidden","cancelButtonProps","confirmationContent","setApiKey","loading","onRegister","showApiKeyModal","setShowApiKeyModal","paddingTop","Button","variant","spacerRight","onClick","trim","length","registerActivationIcon","palette","primary","main","verticalAlign","registerActivationMode","subnetDescription","Font","letterSpacing","registeredStatus","backgroundColor","copyInputBox","link","actionsTray","searchField","operatorMode","useSelector","selOpMode","license","setLicense","subnetPassword","setSubnetPassword","subnetEmail","setSubnetEmail","subnetMFAToken","setSubnetMFAToken","subnetAccessToken","setSubnetAccessToken","selectedSubnetOrganization","setSelectedSubnetOrganization","subnetRegToken","setSubnetRegToken","subnetOrganizations","setSubnetOrganizations","setLoading","loadingLicenseInfo","setLoadingLicenseInfo","clusterRegistered","setClusterRegistered","licenseInfo","setLicenseInfo","curTab","setCurTab","initialLicenseLoading","setInitialLicenseLoading","displaySubnetProxy","setDisplaySubnetProxy","clearForm","getSubnetInfo","hasPermission","CONSOLE_UI_RESOURCE","IAM_PAGES_PERMISSIONS","IAM_PAGES","fetchLicenseInfo","useCallback","api","then","catch","errorMessage","callRegister","token","account_id","request","subnetLogin","resp","registered","organizations","accountId","toString","useEffect","clusterRegistrationForm","SelectWrapper","e","options","map","organization","company","button","subnetLoginWithMFA","preventDefault","window","apiKeyRegistration","offlineRegistration","OfflineRegistrationIcon","background","extraInputProps","readOnly","navigator","clipboard","writeText","proxyConfigurationCommand","regUi","OnlineRegistrationIcon","SettingsIcon","FormSwitchWrapper","checked","uiToShow","PageHeader","actions","PageLayout","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","regToken","console","error","index","position","top","left","fill","TabPanel","props","children","other","role","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}