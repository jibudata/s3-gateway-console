{"version":3,"file":"static/js/711.a5499cb1.chunk.js","mappings":"qQAwLA,UA/IqB,SAAH,GAOS,IANzBA,EAA0B,EAA1BA,2BACAC,EAAU,EAAVA,WACAC,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBAEAC,EAAU,EAAVA,WAEMC,GAAWC,EAAAA,EAAAA,MAMjB,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASP,GAA2B,EAAM,IACzC,SAACQ,GAAyB,OAC3CH,GAASI,EAAAA,EAAAA,IAAqBD,GAAM,IAGmC,eAAlEE,EAAa,KAAEC,EAAe,KAErC,GAA4CC,EAAAA,EAAAA,WAAkB,GAAM,eAA7DC,EAAc,KAAEC,EAAiB,KACxC,GAAgDF,EAAAA,EAAAA,WAAkB,GAAM,eAAjEG,EAAgB,KAAEC,EAAmB,KAEtCC,GAAkBC,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMC,cAAcH,eAAe,IAGpDI,GACJC,EAAAA,EAAAA,GACE,CAACpB,GACD,CAACqB,EAAAA,GAAAA,kCAC4B,gBAAX,OAAfN,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,MAExB,IAAKrB,EACH,OAAO,KAET,IA6BMsB,EACmB,aAAb,OAAVrB,QAAU,IAAVA,OAAU,EAAVA,EAAYsB,SAA+C,eAAb,OAAVtB,QAAU,IAAVA,OAAU,EAAVA,EAAYsB,QAElD,OACE,SAAC,IAAa,CACZC,MAAK,iBACLC,YAAa,SACbC,OAAQ5B,EACR6B,WAAW,SAAC,MAAiB,IAC7BC,UAAWrB,EACXsB,UAvCoB,WAEtB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAI/B,EAAgBgC,OAAQD,IACtC/B,EAAgB+B,GAAGE,SAAS,KAC9BH,EAAOI,KAAK,CACVC,KAAMnC,EAAgB+B,GACtBK,UAAW,GACXC,WAAW,IAGbP,EAAOI,KAAK,CACVC,KAAMnC,EAAgB+B,GACtBK,UAAW,GACXC,WAAW,IAKbP,GACFtB,EACE,OAAO,mBAAD,OACaT,EAAc,wCAAgCW,GAAc,OAC7EE,EAAmB,eAAiB,IAEtCkB,EAGN,EAaIQ,QA5DY,WAAH,OAASzC,GAA2B,EAAO,EA6DpD0C,qBACE,UAAC,IAAiB,WAAC,gDAC6BvC,EAAgBgC,OAAQ,IAAI,WACjE,IACRV,IACC,UAAC,EAAAkB,SAAQ,YACP,mBACA,mBACA,SAAC,IAAiB,CAChBC,MAAO,sBACPC,gBAAiB,CAAC,MAAO,MACzBC,QAASjC,EACTkC,MAAO,kBACPC,GAAG,kBACHC,KAAK,kBACLC,SAAU,SAACC,GACTrC,GAAmBD,EACrB,EACAuC,YAAY,KAEb/B,GAAaR,IACZ,SAAC,EAAA8B,SAAQ,WACP,gBACEU,MAAO,CACLC,UAAW,IACX,UAEF,SAAC,IAAiB,CAChBV,MAAO,yBACPC,gBAAiB,CAAC,MAAO,MACzBC,QAAS/B,EACTgC,MAAO,oBACPC,GAAG,oBACHC,KAAK,oBACLC,SAAU,SAACC,GACTnC,GAAqBD,EACvB,EACAqC,YAAY,SAKnBvC,IACC,UAAC,EAAA8B,SAAQ,YACP,iBACEU,MAAO,CACLC,UAAW,GACXC,OAAQ,oBACRC,aAAc,EACdC,QAAS,EACTC,gBAAiB,YACjBC,MAAO,WACP,UACH,mEAEW,kBAAM,mCAGlB,kBAAM,+CAUxB,C","sources":["screens/Console/Buckets/ListBuckets/Objects/ListObjects/DeleteMultipleObjects.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport useApi from \"../../../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\nimport { setErrorSnackMessage } from \"../../../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { hasPermission } from \"../../../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../../../common/SecureComponent/permissions\";\nimport { useSelector } from \"react-redux\";\nimport { BucketVersioningInfo } from \"../../../types\";\n\ninterface IDeleteObjectProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedObjects: string[];\n  selectedBucket: string;\n\n  versioning: BucketVersioningInfo;\n}\n\nconst DeleteObject = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n  selectedObjects,\n\n  versioning,\n}: IDeleteObjectProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const [deleteVersions, setDeleteVersions] = useState<boolean>(false);\n  const [bypassGovernance, setBypassGovernance] = useState<boolean>(false);\n\n  const retentionConfig = useSelector(\n    (state: AppState) => state.objectBrowser.retentionConfig\n  );\n\n  const canBypass =\n    hasPermission(\n      [selectedBucket],\n      [IAM_SCOPES.S3_BYPASS_GOVERNANCE_RETENTION]\n    ) && retentionConfig?.mode === \"governance\";\n\n  if (!selectedObjects) {\n    return null;\n  }\n  const onConfirmDelete = () => {\n    let toSend = [];\n    for (let i = 0; i < selectedObjects.length; i++) {\n      if (selectedObjects[i].endsWith(\"/\")) {\n        toSend.push({\n          path: selectedObjects[i],\n          versionID: \"\",\n          recursive: true,\n        });\n      } else {\n        toSend.push({\n          path: selectedObjects[i],\n          versionID: \"\",\n          recursive: false,\n        });\n      }\n    }\n\n    if (toSend) {\n      invokeDeleteApi(\n        \"POST\",\n        `/api/v1/buckets/${selectedBucket}/delete-objects?all_versions=${deleteVersions}${\n          bypassGovernance ? \"&bypass=true\" : \"\"\n        }`,\n        toSend\n      );\n    }\n  };\n\n  const isVersionedDelete =\n    versioning?.Status === \"Enabled\" || versioning?.Status === \"Suspended\";\n\n  return (\n    <ConfirmDialog\n      title={`Delete Objects`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the selected {selectedObjects.length}{\" \"}\n          objects?{\" \"}\n          {isVersionedDelete && (\n            <Fragment>\n              <br />\n              <br />\n              <FormSwitchWrapper\n                label={\"Delete All Versions\"}\n                indicatorLabels={[\"Yes\", \"No\"]}\n                checked={deleteVersions}\n                value={\"delete_versions\"}\n                id=\"delete-versions\"\n                name=\"delete-versions\"\n                onChange={(e) => {\n                  setDeleteVersions(!deleteVersions);\n                }}\n                description=\"\"\n              />\n              {canBypass && deleteVersions && (\n                <Fragment>\n                  <div\n                    style={{\n                      marginTop: 10,\n                    }}\n                  >\n                    <FormSwitchWrapper\n                      label={\"Bypass Governance Mode\"}\n                      indicatorLabels={[\"Yes\", \"No\"]}\n                      checked={bypassGovernance}\n                      value={\"bypass_governance\"}\n                      id=\"bypass_governance\"\n                      name=\"bypass_governance\"\n                      onChange={(e) => {\n                        setBypassGovernance(!bypassGovernance);\n                      }}\n                      description=\"\"\n                    />\n                  </div>\n                </Fragment>\n              )}\n              {deleteVersions && (\n                <Fragment>\n                  <div\n                    style={{\n                      marginTop: 10,\n                      border: \"#c83b51 1px solid\",\n                      borderRadius: 3,\n                      padding: 5,\n                      backgroundColor: \"#c83b5120\",\n                      color: \"#c83b51\",\n                    }}\n                  >\n                    This will remove the objects as well as all of their\n                    versions, <br />\n                    This action is irreversible.\n                  </div>\n                  <br />\n                  Are you sure you want to continue?\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteObject;\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedBucket","selectedObjects","versioning","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","useState","deleteVersions","setDeleteVersions","bypassGovernance","setBypassGovernance","retentionConfig","useSelector","state","objectBrowser","canBypass","hasPermission","IAM_SCOPES","mode","isVersionedDelete","Status","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","toSend","i","length","endsWith","push","path","versionID","recursive","onClose","confirmationContent","Fragment","label","indicatorLabels","checked","value","id","name","onChange","e","description","style","marginTop","border","borderRadius","padding","backgroundColor","color"],"sourceRoot":""}