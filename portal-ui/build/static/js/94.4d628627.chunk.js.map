{"version":3,"sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Groups/AddGroup.tsx"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","inputProps","Fragment","container","className","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","modalErrorContainer","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","get","messageDetails","style","onMouseOver","onMouseLeave","setInterval","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","customSize","paper","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","StyledSwitch","margin","switchBase","palette","common","white","boxShadow","thumb","track","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","item","xs","sm","md","textAlign","component","predefinedList","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","flexDirection","tableBlock","tableStyles","searchBox","flex","actionsTitle","alignSelf","minWidth","noFound","spacing","selectorsCommon","selectedUsers","setSelectedUsers","editMode","records","setRecords","loading","isLoading","filter","setFilter","fetchUsers","api","invoke","then","res","users","sort","usersSort","catch","err","selUsers","filteredRecords","elementItem","accessKey","includes","adornmentPosition","columns","elementKey","onSelect","e","targetD","target","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable","buttonContainer","userSelector","formFieldStyles","spacingUtils","modalStyleUtils","selectedGroup","closeModalAndRefresh","groupName","setGroupName","groupEnabled","setGroupEnabled","saving","isSaving","loadingGroup","isLoadingGroup","validGroup","setValidGroup","trim","encodeURI","group","members","status","floatingEnabled","noValidate","onSubmit","preventDefault","modalFormScrollable","formFieldRow","variant","spacerRight"],"mappings":"2OAsFMA,EAAcC,aAAW,SAACC,GAAD,OAC7BC,YAAa,eACRC,SAIP,SAASC,EAAWC,GAClB,IAAMC,EAAUP,IAEhB,OACE,cAAC,IAAD,aACEQ,WAAY,CAAED,YACVD,IAoIKG,iBAtKA,SAACP,GAAD,OACbC,YAAa,uCACRO,KACAC,KAFO,IAGVC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,cAAe,CACbD,SAAU,WACVE,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,SAqJER,EA/HS,SAAC,GAyBH,IAxBpBW,EAwBmB,EAxBnBA,MACAC,EAuBmB,EAvBnBA,SACAC,EAsBmB,EAtBnBA,MACAC,EAqBmB,EArBnBA,GACAC,EAoBmB,EApBnBA,KAoBmB,IAnBnBC,YAmBmB,MAnBZ,OAmBY,MAlBnBC,oBAkBmB,MAlBJ,MAkBI,MAjBnBC,gBAiBmB,aAhBnBC,iBAgBmB,aAfnBC,eAemB,MAfT,GAeS,MAdnBC,aAcmB,MAdX,EAcW,MAbnBC,aAamB,MAbX,GAaW,MAZnBC,gBAYmB,aAXnBC,mBAWmB,MAXL,GAWK,EAVnBC,EAUmB,EAVnBA,IACAC,EASmB,EATnBA,IASmB,IARnBC,mBAQmB,MARL,KAQK,MAPnBC,qBAOmB,MAPH,KAOG,MANnBC,uBAMmB,MAND,GAMC,EALnBvB,EAKmB,EALnBA,cAKmB,IAJnBwB,uBAImB,aAHnBC,eAGmB,MAHT,GAGS,MAFnBC,iBAEmB,SADnBlC,EACmB,EADnBA,QAEImC,EAAe,aAAK,aAAcZ,GAAUQ,GAchD,MAZa,WAATb,GAAqBS,IACvBQ,EAAU,IAAUR,GAGT,WAATT,GAAqBU,IACvBO,EAAU,IAAUP,GAGN,KAAZK,IACFE,EAAU,QAAcF,GAIxB,cAAC,IAAMG,SAAP,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,UAAS,WACG,KAAVd,EAAexB,EAAQuC,aAAevC,EAAQwC,mBAHlD,UAMa,KAAV3B,GACC,eAAC,IAAD,CACE4B,QAASzB,EACTsB,UACEN,EAAkBhC,EAAQ0C,gBAAkB1C,EAAQ2C,WAHxD,UAME,iCACG9B,EACAY,EAAW,IAAM,MAEP,KAAZH,GACC,qBAAKgB,UAAWtC,EAAQ4C,iBAAxB,SACE,cAAC,IAAD,CAASC,MAAOvB,EAASwB,UAAU,YAAnC,SACE,qBAAKR,UAAWtC,EAAQsB,QAAxB,SACE,cAAC,IAAD,aAQZ,sBAAKgB,UAAWtC,EAAQK,iBAAxB,UACE,cAACP,EAAD,CACEkB,GAAIA,EACJC,KAAMA,EACN8B,WAAS,EACThC,MAAOA,EACPmB,UAAWA,EACXd,SAAUA,EACVN,SAAUA,EACVI,KAAMA,EACNG,UAAWA,EACXF,aAAcA,EACdgB,WAAYA,EACZX,MAAiB,KAAVA,EACPwB,WAAYxB,EACZE,YAAaA,EACbY,UAAWtC,EAAQiD,cAEpBpB,GACC,qBACES,UAAS,UAAKtC,EAAQQ,cAAb,YACG,KAAVK,EAAe,YAAc,IAFjC,SAKE,cAAC,IAAD,CACEqC,QACE1C,EACI,WACEA,KAEF,kBAAM,MAEZ2C,KAAM,QACNC,oBAAoB,EACpBC,eAAe,EACfC,oBAAoB,EAXtB,SAaGzB,MAINC,GACC,qBACEQ,UAAS,UAAKtC,EAAQQ,cAAb,YACG,KAAVK,EAAe,YAAc,IAFjC,SAKGiB,gB,qCCvFXyB,E,4LAMEC,EAAgB,WACpBC,cAAcF,IA+FVG,EAAqB,CACzBC,oBAAqBC,KAKRC,EAFGC,aARD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAOER,EAErBG,CAAU3D,aA3LV,SAACP,GAAD,OACbC,YAAa,CACXuE,oBAAqB,CACnB5D,SAAU,WACV6D,UAAW,GACXC,MAAO,MACPC,gBAAiB,OACjBC,OAAQ,oBACRC,gBAAiB,GACjBC,aAAc,EACdC,OAAQ,IACRC,QAAS,YACTC,KAAM,MACNC,UAAW,mBACXC,QAAS,EACTC,mBAAoB,QAEtBC,eAAgB,CACdF,QAAS,GAEXG,YAAa,CACX1E,SAAU,WACVE,MAAO,EACPyE,SAAU,QACVX,OAAQ,EACRD,gBAAiB,OACjBa,OAAQ,WAEVC,WAAY,CACVC,QAAS,OACTC,WAAY,UAEdC,WAAY,CACVC,MAAO,OACPN,SAAU,GACVO,WAAY,IACZC,WAAY,EACZC,YAAa,IAEfC,YAAa,CACXJ,MAAO,UACPH,QAAS,OACT,QAAS,CACPhB,MAAO,GACPwB,OAAQ,KAGZC,cAAe,CACbN,MAAO,UACPH,QAAS,OACTC,WAAY,SACZf,OAAQ,EACRD,gBAAiB,cACjByB,YAAa,EACbb,SAAU,GACVc,kBAAmB,OACnBb,OAAQ,WAEVc,sBAAuB,CACrBC,UAAW,SACXV,MAAO,UACPW,WAAY,EACZxB,QAAS,SACTyB,WAAY,sBACZC,SAAU,UAEZC,iBAAkB,CAChBH,WAAY,EACZxB,QAAS,YAEX4B,aAAc,CACZb,YAAa,GAEfc,UAAW,CACT3B,UAAW,iBACXmB,kBAAmB,YAgHA9F,EAlGN,SAAC,GAKK,IAJvBF,EAIsB,EAJtBA,QACAgE,EAGsB,EAHtBA,kBACAL,EAEsB,EAFtBA,oBACA8C,EACsB,EADtBA,YAEA,EAAsCC,oBAAkB,GAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,oBAAkB,GAAhE,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAoBC,uBAAY,WACpCF,GAAmB,KAClB,IAEHG,qBAAU,WACHJ,IACHlD,EAAoB,CAAEuD,cAAe,GAAIC,aAAc,KACvDP,GAAe,MAGhB,CAACjD,EAAqBkD,IAEzBI,qBAAU,WAEwB,KAA9BjD,EAAkBoD,SACS,UAA3BpD,EAAkB9C,MAGlB4F,GAAmB,KAGpB,CAACC,EAAmB/C,EAAkBoD,QAASpD,EAAkB9C,OAEpE,IAIMkG,EAAUC,IAAIrD,EAAmB,UAAW,IAC5CsD,EAAiBD,IAAIrD,EAAmB,mBAAoB,IAElE,MAA+B,UAA3BA,EAAkB9C,MAAgC,KAAZkG,EACjC,KAIP,cAAC,WAAD,UACE,sBACE9E,UAAS,UAAKtC,EAAQmE,oBAAb,YACP0C,EAAkB7G,EAAQgF,eAAiB,IAE7CuC,MAAOd,EACPe,YAAahE,EACbiE,aAAc,WA1DpBlE,EAASmE,YA0DgCX,EA1DF,MAoDnC,UAQE,wBAAQzE,UAAWtC,EAAQiF,YAAa/B,QAAS6D,EAAjD,SACE,cAAC,IAAD,MAEF,sBAAKzE,UAAWtC,EAAQoF,WAAxB,UACE,sBAAM9C,UAAWtC,EAAQ4F,YAAzB,SACE,cAAC,IAAD,MAEF,sBAAMtD,UAAWtC,EAAQuF,WAAzB,SAAsC6B,OAEpB,KAAnBE,GACC,eAAC,WAAD,WACE,qBAAKhF,UAAWtC,EAAQ2H,qBAAxB,SACE,yBAAQrF,UAAWtC,EAAQ8F,cAAe5C,QAjChC,WACpB0D,GAAgBD,IAgCN,oBAEE,cAAC,IAAD,CACErE,UAAS,UAAKtC,EAAQuG,aAAb,YACPI,EAAc3G,EAAQwG,UAAY,WAK1C,qBACElE,UAAS,UAAKtC,EAAQiG,sBAAb,YACPU,EAAc3G,EAAQsG,iBAAmB,IAF7C,SAKGgB,gBC1CTzD,EAAYC,aAJD,SAACC,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClC0D,2BAGa1H,iBA3IA,SAACP,GAAD,OACbC,YAAa,2BACRiI,KADO,IAEVC,KAAM,CACJ,mBAAoB,CAClBnD,QAAS,wBAGboD,QAAS,CACPpD,QAAS,GACTqD,cAAe,GAEjBC,iBAAkB,CAChB5D,MAAO,OACP1D,SAAU,MAETuH,QA2HQhI,CAAmB2D,GAxHb,SAAC,GAWF,IAVlBsE,EAUiB,EAVjBA,QACAC,EASiB,EATjBA,UACAvF,EAQiB,EARjBA,MACAwF,EAOiB,EAPjBA,SACArI,EAMiB,EANjBA,QAMiB,IALjBsI,iBAKiB,SAJjBtE,EAIiB,EAJjBA,kBACAuE,EAGiB,EAHjBA,iBACAX,EAEiB,EAFjBA,qBAEiB,IADjBY,iBACiB,MADL,KACK,EACjB,EAAwC9B,oBAAkB,GAA1D,mBAAO+B,EAAP,KAAqBC,EAArB,KAEAzB,qBAAU,WACRW,EAAqB,MACpB,CAACA,IAEJX,qBAAU,WACR,GAAIjD,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBoD,QAEpB,YADAsB,GAAgB,GAIa,UAA3B1E,EAAkB9C,MACpBwH,GAAgB,MAGnB,CAAC1E,IAEJ,IAKM2E,EAAaL,EACf,CACEtI,QAAS,CACP4I,MAAO5I,EAAQiI,mBAGnB,CAAEtH,SAAU,KAAeoC,WAAW,GAEtCqE,EAAU,GAYd,OAVIpD,IACFoD,EAAUpD,EAAkB6E,kBAEa,KAAvC7E,EAAkB6E,kBAClB7E,EAAkB6E,iBAAiBC,OAAS,KAE5C1B,EAAUpD,EAAkBoD,UAK9B,eAAC2B,EAAA,EAAD,yBACEC,KAAMZ,EACNpI,QAASA,GACL2I,GAHN,IAIEM,OAAQ,QACRd,QAAS,SAACe,EAAOC,GACA,kBAAXA,GACFhB,KAGJ7F,UAAWtC,EAAQ8H,KAVrB,UAYE,eAACsB,EAAA,EAAD,CAAa9G,UAAWtC,EAAQ6C,MAAhC,UACE,sBAAKP,UAAWtC,EAAQqJ,UAAxB,UACGb,EADH,IACe3F,KAEf,qBAAKP,UAAWtC,EAAQsJ,eAAxB,SACE,cAACC,EAAA,EAAD,CACE,aAAW,QACXjH,UAAWtC,EAAQiF,YACnB/B,QAASiF,EACT9E,eAAa,EACbF,KAAK,QALP,SAOE,cAAC,IAAD,WAKN,cAAC,EAAD,IACA,cAACqG,EAAA,EAAD,CACER,KAAMP,EACNnG,UAAWtC,EAAQyJ,cACnBtB,QAAS,WA1DbO,GAAgB,GAChBd,EAAqB,KA4DjBR,QAASA,EACTsC,aAAc,CACZpH,UAAU,GAAD,OAAKtC,EAAQ2J,SAAb,YACP3F,GAAgD,UAA3BA,EAAkB9C,KACnClB,EAAQ4J,cACR,KAGRC,iBACE7F,GAAgD,UAA3BA,EAAkB9C,KAAmB,IAAQ,MAGtE,cAAC4I,EAAA,EAAD,CAAexH,UAAWiG,EAAmB,GAAKvI,EAAQ+H,QAA1D,SACGM,a,iKCxGH0B,EAAe7J,aAAW,SAACP,GAAD,MAAY,CAC1CmI,KAAM,CACJzD,MAAO,GACPwB,OAAQ,GACRlB,QAAS,EACTqF,OAAQ,GAEVC,WAAY,CACVtF,QAAS,EACT,YAAa,CACXE,UAAW,mBACXW,MAAO7F,EAAMuK,QAAQC,OAAOC,MAC5B,aAAc,CACZ9F,gBAAiB,UACjB+F,UAAW,oCACXvF,QAAS,EACTP,OAAQ,SAGZ,wBAAyB,CACvBiB,MAAO,UACPjB,OAAQ,mBAGZ+F,MAAO,CACLjG,MAAO,GACPwB,OAAQ,GACRvB,gBAAiB,UACjBC,OAAQ,oBACRmB,WAAY,GAEd6E,MAAO,CACL9F,aAAc,GACdH,gBAAiB,UACjB+F,UAAW,oCACXvF,QAAS,EACTsB,WAAYzG,EAAM6K,YAAYC,OAAO,CAAC,mBAAoB,YAE5DC,QAAS,GACTC,aAAc,GACdC,gBAAiB,CACfvF,QAAS,OACTC,WAAY,SACZuF,eAAgB,eA3CC3K,CA6CjB4K,KAsGW5K,iBA5KA,SAACP,GAAD,OACbC,YAAa,yBACXmL,aAAc,CACZC,aAAc,IAEhBC,iBAAkB,CAChBxF,WAAY,OACZD,MAAO,sBAET0F,eAAgB,CACdhG,SAAU,GACVM,MAAO,UACPwE,OAAQ,gBAEVmB,iBAAkB,CAChB/G,UAAW,EACXoB,MAAO,WAETlE,QAAS,CACP4D,SAAU,KAETkG,KACAjL,QAsJQD,EApGW,SAAC,GAaP,IAAD,IAZjBW,aAYiB,MAZT,GAYS,EAXjBC,EAWiB,EAXjBA,SACAC,EAUiB,EAVjBA,MACAC,EASiB,EATjBA,GACAC,EAQiB,EARjBA,KAQiB,IAPjByJ,eAOiB,aANjBtJ,gBAMiB,aALjBiK,kBAKiB,aAJjB/J,eAIiB,MAJP,GAIO,MAHjBgK,mBAGiB,MAHH,GAGG,EAFjBtL,EAEiB,EAFjBA,QACAuL,EACiB,EADjBA,gBAEMC,EACJ,eAAC,IAAMpJ,SAAP,YACIiJ,GACA,sBACE/I,UAAWmJ,YAAKzL,EAAQkL,eAAT,eACZlL,EAAQiL,kBAAoBP,IAFjC,SAKGa,GAAmBA,EAAgBzC,OAAS,EACzCyC,EAAgB,GAChB,QAGR,cAACxB,EAAD,CACEW,QAASA,EACT5J,SAAUA,EACV0E,MAAM,UACNvE,KAAMA,EACNkB,WAAY,CAAE,aAAc,oBAC5Bf,SAAUA,EACViC,eAAa,EACbD,oBAAkB,EAClBE,oBAAkB,EAClBvC,MAAOA,KAEPsK,GACA,sBACE/I,UAAWmJ,YAAKzL,EAAQkL,eAAT,eACZlL,EAAQiL,iBAAmBP,IAFhC,SAKGa,EAAkBA,EAAgB,GAAK,UAMhD,OAAIF,EACKG,EAIP,qBAAKlJ,UAAWtC,EAAQ+K,aAAxB,SACE,eAAC,IAAD,CAAM1I,WAAS,EAACiD,WAAY,SAA5B,UACE,cAAC,IAAD,CAAMoG,MAAI,EAACC,IAAE,EAAb,SACE,eAAC,IAAD,CAAMtJ,WAAS,EAAf,UACE,cAAC,IAAD,CAAMqJ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACa,KAAVhL,GACC,eAAC,IAAD,CAAY4B,QAASzB,EAAIsB,UAAWtC,EAAQ2C,WAA5C,UACE,+BAAO9B,IACM,KAAZS,GACC,qBAAKgB,UAAWtC,EAAQ4C,iBAAxB,SACE,cAAC,IAAD,CAASC,MAAOvB,EAASwB,UAAU,YAAnC,SACE,qBAAKR,UAAWtC,EAAQsB,QAAxB,SACE,cAAC,IAAD,eAQd,cAAC,IAAD,CAAMoK,MAAI,EAACC,GAAI,GAAIC,IAAE,EAACE,UAAW,OAAjC,SACmB,KAAhBR,GACC,cAAC,IAAD,CAAYS,UAAU,IAAIzJ,UAAWtC,EAAQmL,iBAA7C,SACGG,WAOX,cAAC,IAAD,CACEI,MAAI,EACJC,GAAI,GACJC,GAAI,EACJE,UAAW,QACXxJ,UAAWtC,EAAQ4K,gBALrB,SAOGY,a,8FC9JItL,iBAnCA,SAACP,GAAD,OACbC,YAAa,eACRoM,QAiCQ9L,EA9BQ,SAAC,GAKA,IAJtBF,EAIqB,EAJrBA,QAIqB,IAHrBa,aAGqB,MAHb,GAGa,EAFrBkH,EAEqB,EAFrBA,QAEqB,IADrBkE,iBACqB,SACrB,OACE,cAAC,WAAD,UACE,eAAC,IAAD,CAAM3J,UAAWtC,EAAQkM,kBAAzB,UACa,KAAVrL,GACC,cAAC,IAAD,CAAM6K,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQmM,gBAAtC,SACGtL,IAGL,cAAC,IAAD,CAAM6K,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQgM,eAAtC,SACE,cAAC,IAAD,CACEN,MAAI,EACJC,GAAI,GACJrJ,UACE2J,EAAYjM,EAAQoM,sBAAwBpM,EAAQqM,aAJxD,SAOGtE,e,6MCmJPrE,EAAqB,CACzBE,+BAGIC,EAAYC,YAAQ,KAAMJ,GAEjBxD,iBApJA,SAACP,GAAD,OACbC,YAAa,yBACXgJ,MAAO,CACLvD,QAAS,OACTgB,SAAU,OACViG,cAAe,SAEfjC,UAAW,OACX9F,OAAQ,GAGVgI,WAAW,eACNC,IAAYD,YAEjBE,UAAW,CACTC,KAAM,IAELtB,KAhBO,IAiBVuB,aAAc,CACZzH,SAAU,GACV0H,UAAW,SACXC,SAAU,IACVlH,YAAa,IAEfmH,QAAS,CACPhB,UAAW,SACXnH,QAAShF,EAAMoN,QAAQ,GACvBxI,OAAQ,oBACRW,SAAU,UAET8H,QAsHQ9M,CAAmB2D,GAnHX,SAAC,GAMH,IALnB7D,EAKkB,EALlBA,QACAiN,EAIkB,EAJlBA,cACAC,EAGkB,EAHlBA,iBAGkB,IAFlBC,gBAEkB,SADlBvJ,EACkB,EADlBA,0BAGA,EAA8B8C,mBAAgB,IAA9C,mBAAO0G,EAAP,KAAgBC,EAAhB,KACA,EAA6B3G,oBAAkB,GAA/C,mBAAO4G,EAAP,KAAgBC,EAAhB,KACA,EAA4B7G,mBAAiB,IAA7C,mBAAO8G,EAAP,KAAeC,EAAf,KAEMC,EAAa1G,uBAAY,WAC7B2G,IACGC,OAAO,MADV,iBAEGC,MAAK,SAACC,GACL,IAAIC,EAAQ1G,IAAIyG,EAAK,QAAS,IAEzBC,IACHA,EAAQ,IAGVV,EAAWU,EAAMC,KAAKC,MACtBV,GAAU,MAEXW,OAAM,SAACC,GACNvK,EAA0BuK,GAC1BZ,GAAU,QAEb,CAAC3J,IAGJqD,qBAAU,WACRsG,GAAU,KACT,IAEHtG,qBAAU,WACJqG,GACFI,MAED,CAACJ,EAASI,IAEb,IAAMU,EAAYnB,GAAgB,GAsB5BoB,EAAkBjB,EAAQI,QAAO,SAACc,GAAD,OACrCA,EAAYC,UAAUC,SAAShB,MAGjC,OACE,cAAC,IAAMpL,SAAP,UACE,cAAC,IAAD,CAAMsJ,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,CAAOrJ,UAAWtC,EAAQ4I,MAA1B,UACG0E,GAAW,cAAC,IAAD,IACC,OAAZF,GAAoBA,EAAQtE,OAAS,EACpC,eAAC,IAAM1G,SAAP,WACE,eAAC,IAAD,CAAMsJ,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQoL,YAAtC,UACE,uBAAO9I,UAAWtC,EAAQ2M,aAA1B,SACGQ,EAAW,eAAiB,iBAE/B,qBAAK7K,UAAWtC,EAAQyM,UAAxB,SACE,cAAC,IAAD,CACE/K,YAAY,eACZ+M,kBAAkB,MAClB3N,SAAU2M,SAIhB,cAAC,IAAD,CAAM/B,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQuM,WAAtC,SACE,cAAC,IAAD,CACEmC,QAAS,CAAC,CAAE7N,MAAO,aAAc8N,WAAY,cAC7CC,SA7CS,SAACC,GACxB,IAAMC,EAAUD,EAAEE,OACZhO,EAAQ+N,EAAQ/N,MAChB2J,EAAUoE,EAAQpE,QAEpBsE,EAAkB,YAAOZ,GAW7B,OATI1D,EAEFsE,EAASC,KAAKlO,GAGdiO,EAAWA,EAASxB,QAAO,SAAC0B,GAAD,OAAaA,IAAYnO,KAEtDmM,EAAiB8B,GAEVA,GA8BOG,cAAef,EACfb,UAAWD,EACXF,QAASiB,EACTe,WAAW,QACXC,QAAQ,YACRC,kBAAmBtP,EAAQuP,wBAKjC,qBAAKjN,UAAWtC,EAAQ8M,QAAxB,6C,4MC+ENpJ,EAAqB,CACzBE,+BAGIC,EAAYC,YAAQ,KAAMJ,GAEjBxD,uBArNA,SAACP,GAAD,OACbC,YAAa,qCACX4P,gBAAiB,CACf1D,UAAW,SAEb2D,aAAc,CACZ,mBAAoB,CAClB9K,QAAS,EACTqG,aAAc,MAGf0E,KACAC,KACAC,QAwMQ1P,CAAmB2D,GArMjB,SAAC,GAME,IALlBmF,EAKiB,EALjBA,KACA6G,EAIiB,EAJjBA,cACAC,EAGiB,EAHjBA,qBACA9P,EAEiB,EAFjBA,QACA4D,EACiB,EADjBA,0BAGA,EAAkC8C,mBAAiB,IAAnD,mBAAOqJ,EAAP,KAAkBC,EAAlB,KACA,EAAwCtJ,oBAAkB,GAA1D,mBAAOuJ,EAAP,KAAqBC,EAArB,KACA,EAA2BxJ,oBAAkB,GAA7C,mBAAOyJ,EAAP,KAAeC,EAAf,KACA,EAA0C1J,mBAAmB,IAA7D,mBAAOuG,EAAP,KAAsBC,EAAtB,KACA,EAAuCxG,oBAAkB,GAAzD,mBAAO2J,EAAP,KAAqBC,EAArB,KACA,EAAoC5J,oBAAkB,GAAtD,mBAAO6J,EAAP,KAAmBC,EAAnB,KAGAvJ,qBAAU,WACc,OAAlB4I,EACFS,GAAe,IAEfN,EAAa,IACb9C,EAAiB,OAElB,CAAC2C,IAEJ5I,qBAAU,WACRuJ,EAAmC,KAArBT,EAAUU,UACvB,CAACV,EAAW9C,IAEfhG,qBAAU,WACR,GAAIkJ,EAAQ,CAEc,OAAlBN,EACFlC,IACGC,OAAO,MADV,6BACuC8C,UAAUX,IAAc,CAC3DY,MAAOZ,EACPa,QAAS3D,EACT4D,OAAQZ,EAAe,UAAY,aAEpCpC,MAAK,SAACC,GACLsC,GAAS,GACTN,OAED5B,OAAM,SAACC,GACNiC,GAAS,GACTxM,EAA0BuK,MAG9BR,IACGC,OAAO,OAAQ,iBAAkB,CAChC+C,MAAOZ,EACPa,QAAS3D,IAEVY,MAAK,SAACC,GACLsC,GAAS,GACTN,OAED5B,OAAM,SAACC,GACNiC,GAAS,GACTxM,EAA0BuK,SAMnC,CACDgC,EACAJ,EACA9C,EACAgD,EACAJ,EACAC,EACAlM,IAGFqD,qBAAU,WACR,GAAI4I,GAAiBQ,EAAc,CAE/B1C,IACGC,OAAO,MADV,6BACuC8C,UAAUb,KAC9ChC,MAAK,SAACC,GACLoC,EAA+B,YAAfpC,EAAI+C,QACpBb,EAAalC,EAAI7M,MACjBiM,EAAiBY,EAAI8C,YAEtB1C,OAAM,SAACC,GACNvK,EAA0BuK,GAC1BmC,GAAe,SAKtB,CAACD,EAAcR,EAAejM,IAiBjC,OACE,eAAC,IAAD,CACEwE,UAAWY,EACXb,QAAS2H,EACTjN,MAAyB,OAAlBgN,EAAA,aAAwC,eAC/CrH,UAAW,cAAC,IAAD,IAJb,UAMqB,OAAlBqH,GACC,qBAAKvN,UAAWtC,EAAQ8Q,gBAAxB,SACE,cAAC,IAAD,CACEvF,gBAAiB,CAAC,UAAW,YAC7Bb,QAASuF,EACTlP,MAAO,gBACPC,GAAG,eACHC,KAAK,eACLH,SAAU,SAAC+N,GACTqB,EAAgBrB,EAAEE,OAAOrE,UAE3BW,YAAU,MAIhB,sBAAM0F,YAAU,EAAC5P,aAAa,MAAM6P,SApCtB,SAAC9H,GACjBA,EAAM+H,iBAENb,GAAS,IAiCP,SACE,eAAC,IAAD,CAAM/N,WAAS,EAAf,UACE,eAAC,IAAD,CAAMqJ,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQkR,oBAAtC,UACqB,OAAlBrB,EACC,cAAC,IAAD,CAAMnE,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQmR,aAAtC,SACE,cAAC,IAAD,CACEnQ,GAAG,aACHC,KAAK,aACLJ,MAAM,aACNqB,WAAW,EACXnB,MAAOgP,EACPjP,SAAU,SAAC+N,GACTmB,EAAanB,EAAEE,OAAOhO,YAK5B,cAAC,IAAD,CAAM2K,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQmR,aAAtC,SACE,cAAC,IAAD,CAAgBtQ,MAAO,aAAckH,QAAS8H,MAGlD,cAAC,IAAD,CAAMnE,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQyP,aAAtC,SACE,cAAC,IAAD,CACExC,cAAeA,EACfC,iBAAkBA,EAClBC,SAA4B,OAAlB0C,SAIhB,eAAC,IAAD,CAAMnE,MAAI,EAACC,GAAI,GAAIrJ,UAAWtC,EAAQwP,gBAAtC,UACE,cAAC,IAAD,CACEtO,KAAK,SACLkQ,QAAQ,WACR5L,MAAM,UACNlD,UAAWtC,EAAQqR,YACnBnO,QAjEM,WACM,OAAlB2M,GACFG,EAAa,IAGf9C,EAAiB,KAuDT,mBAUA,cAAC,IAAD,CACEhM,KAAK,SACLkQ,QAAQ,YACR5L,MAAM,UACNpE,SAAU+O,IAAWI,EAJvB,qBASDJ,GACC,cAAC,IAAD,CAAMzE,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD","file":"static/js/94.4d628627.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UsersSelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { CreateGroupIcon } from \"../../../icons\";\n\ninterface IGroupProps {\n  open: boolean;\n  selectedGroup: any;\n  closeModalAndRefresh: any;\n  classes: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\ninterface MainGroupProps {\n  members: string[];\n  name: string;\n  status: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...formFieldStyles,\n    ...spacingUtils,\n    ...modalStyleUtils,\n  });\n\nconst AddGroup = ({\n  open,\n  selectedGroup,\n  closeModalAndRefresh,\n  classes,\n  setModalErrorSnackMessage,\n}: IGroupProps) => {\n  //Local States\n  const [groupName, setGroupName] = useState<string>(\"\");\n  const [groupEnabled, setGroupEnabled] = useState<boolean>(false);\n  const [saving, isSaving] = useState<boolean>(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [loadingGroup, isLoadingGroup] = useState<boolean>(false);\n  const [validGroup, setValidGroup] = useState<boolean>(false);\n\n  //Effects\n  useEffect(() => {\n    if (selectedGroup !== null) {\n      isLoadingGroup(true);\n    } else {\n      setGroupName(\"\");\n      setSelectedUsers([]);\n    }\n  }, [selectedGroup]);\n\n  useEffect(() => {\n    setValidGroup(groupName.trim() !== \"\");\n  }, [groupName, selectedUsers]);\n\n  useEffect(() => {\n    if (saving) {\n      const saveRecord = () => {\n        if (selectedGroup !== null) {\n          api\n            .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(groupName)}`, {\n              group: groupName,\n              members: selectedUsers,\n              status: groupEnabled ? \"enabled\" : \"disabled\",\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        } else {\n          api\n            .invoke(\"POST\", \"/api/v1/groups\", {\n              group: groupName,\n              members: selectedUsers,\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        }\n      };\n      saveRecord();\n    }\n  }, [\n    saving,\n    groupName,\n    selectedUsers,\n    groupEnabled,\n    selectedGroup,\n    closeModalAndRefresh,\n    setModalErrorSnackMessage,\n  ]);\n\n  useEffect(() => {\n    if (selectedGroup && loadingGroup) {\n      const fetchGroupInfo = () => {\n        api\n          .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n          .then((res: MainGroupProps) => {\n            setGroupEnabled(res.status === \"enabled\");\n            setGroupName(res.name);\n            setSelectedUsers(res.members);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setModalErrorSnackMessage(err);\n            isLoadingGroup(false);\n          });\n      };\n      fetchGroupInfo();\n    }\n  }, [loadingGroup, selectedGroup, setModalErrorSnackMessage]);\n\n  //Fetch Actions\n  const setSaving = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    isSaving(true);\n  };\n\n  const resetForm = () => {\n    if (selectedGroup === null) {\n      setGroupName(\"\");\n    }\n\n    setSelectedUsers([]);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={closeModalAndRefresh}\n      title={selectedGroup !== null ? `Edit Group` : \"Create Group\"}\n      titleIcon={<CreateGroupIcon />}\n    >\n      {selectedGroup !== null && (\n        <div className={classes.floatingEnabled}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={groupEnabled}\n            value={\"group_enabled\"}\n            id=\"group-status\"\n            name=\"group-status\"\n            onChange={(e) => {\n              setGroupEnabled(e.target.checked);\n            }}\n            switchOnly\n          />\n        </div>\n      )}\n      <form noValidate autoComplete=\"off\" onSubmit={setSaving}>\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            {selectedGroup === null ? (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"group-name\"\n                  name=\"group-name\"\n                  label=\"Group Name\"\n                  autoFocus={true}\n                  value={groupName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setGroupName(e.target.value);\n                  }}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <PredefinedList label={\"Group Name\"} content={selectedGroup} />\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.userSelector}>\n              <UsersSelectors\n                selectedUsers={selectedUsers}\n                setSelectedUsers={setSelectedUsers}\n                editMode={selectedGroup !== null}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.spacerRight}\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saving || !validGroup}\n            >\n              Save\n            </Button>\n          </Grid>\n          {saving && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddGroup));\n"],"sourceRoot":""}