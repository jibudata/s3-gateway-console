{"version":3,"file":"static/js/191.b50b4104.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Groups/Groups.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  Button,\n  DeleteIcon,\n  GroupsIcon,\n  HelpBox,\n  IAMPoliciesIcon,\n  UsersIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\n\nimport { GroupsList } from \"./types\";\nimport { stringSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport AButton from \"../Common/AButton/AButton\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  applyPolicyPermissions,\n  CONSOLE_UI_RESOURCE,\n  createGroupPermissions,\n  deleteGroupPermissions,\n  displayGroupsPermissions,\n  getGroupPermissions,\n  IAM_PAGES,\n  permissionTooltipHelper,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nimport { encodeURLString } from \"../../../common/utils\";\n\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst DeleteGroup = withSuspense(React.lazy(() => import(\"./DeleteGroup\")));\nconst SetPolicy = withSuspense(\n  React.lazy(() => import(\"../Policies/SetPolicy\"))\n);\n\ninterface IGroupsProps {\n  classes: any;\n  openGroupModal: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    ...actionsTray,\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n    ...containerForHeader,\n  });\n\nconst Groups = ({ classes }: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [checkedGroups, setCheckedGroups] = useState<string[]>([]);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  const displayGroups = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    displayGroupsPermissions\n  );\n\n  const deleteGroup = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    deleteGroupPermissions\n  );\n\n  const getGroup = hasPermission(CONSOLE_UI_RESOURCE, getGroupPermissions);\n\n  const applyPolicy = hasPermission(\n    CONSOLE_UI_RESOURCE,\n    applyPolicyPermissions,\n    true\n  );\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target: { value = \"\", checked = false } = {} } = e;\n\n    let elements: string[] = [...checkedGroups]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n\n    setCheckedGroups(elements);\n\n    return elements;\n  };\n\n  useEffect(() => {\n    if (loading) {\n      if (displayGroups) {\n        const fetchRecords = () => {\n          api\n            .invoke(\"GET\", `/api/v1/groups`)\n            .then((res: GroupsList) => {\n              let resGroups: string[] = [];\n              if (res.groups !== null) {\n                resGroups = res.groups.sort(stringSort);\n              }\n              setRecords(resGroups);\n              isLoading(false);\n            })\n            .catch((err: ErrorResponseHandler) => {\n              dispatch(setErrorSnackMessage(err));\n              isLoading(false);\n            });\n        };\n        fetchRecords();\n      } else {\n        isLoading(false);\n      }\n    }\n  }, [loading, dispatch, displayGroups]);\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    setCheckedGroups([]);\n    if (refresh) {\n      isLoading(true);\n    }\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.includes(filter)\n  );\n\n  const viewAction = (group: any) => {\n    navigate(`${IAM_PAGES.GROUPS}/${encodeURLString(group)}`);\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n    {\n      type: \"edit\",\n      onClick: viewAction,\n      disableButtonFunction: () => !getGroup,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroups={checkedGroups}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      {policyOpen && (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroups={checkedGroups}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n          }}\n        />\n      )}\n      <PageHeaderWrapper label={\"Groups\"} />\n\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SecureComponent\n            resource={CONSOLE_UI_RESOURCE}\n            scopes={displayGroupsPermissions}\n            errorProps={{ disabled: true }}\n          >\n            <SearchBox\n              placeholder={\"Search Groups\"}\n              onChange={setFilter}\n              overrideClass={classes.searchField}\n              value={filter}\n            />\n          </SecureComponent>\n          <Box\n            sx={{\n              display: \"flex\",\n            }}\n          >\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={applyPolicyPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper\n                tooltip={\n                  checkedGroups.length < 1\n                    ? \"Please select Groups on which you want to apply Policies\"\n                    : applyPolicy\n                    ? \"Select Policy\"\n                    : permissionTooltipHelper(\n                        applyPolicyPermissions,\n                        \"apply policies to Groups\"\n                      )\n                }\n              >\n                <Button\n                  id={\"assign-policy\"}\n                  onClick={() => {\n                    setPolicyOpen(true);\n                  }}\n                  label={\"Assign Policy\"}\n                  icon={<IAMPoliciesIcon />}\n                  disabled={checkedGroups.length < 1 || !applyPolicy}\n                  variant={\"regular\"}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={deleteGroupPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper\n                tooltip={\n                  checkedGroups.length === 0\n                    ? \"Select Groups to delete\"\n                    : getGroup\n                    ? \"Delete Selected\"\n                    : permissionTooltipHelper(\n                        getGroupPermissions,\n                        \"delete Groups\"\n                      )\n                }\n              >\n                <Button\n                  id=\"delete-selected-groups\"\n                  onClick={() => {\n                    setDeleteOpen(true);\n                  }}\n                  label={\"Delete Selected\"}\n                  icon={<DeleteIcon />}\n                  variant=\"secondary\"\n                  disabled={checkedGroups.length === 0 || !getGroup}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              resource={CONSOLE_UI_RESOURCE}\n              scopes={createGroupPermissions}\n              matchAll\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Create Group\"}>\n                <Button\n                  id={\"create-group\"}\n                  label={\"Create Group\"}\n                  variant=\"callAction\"\n                  icon={<AddIcon />}\n                  onClick={() => {\n                    navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                  }}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Box>\n        </Grid>\n        {loading && <LinearProgress />}\n        {!loading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    getGroup\n                      ? \"\"\n                      : permissionTooltipHelper(\n                          getGroupPermissions,\n                          \"view Group details\"\n                        )\n                  }\n                >\n                  <Grid item xs={12} className={classes.tableBlock}>\n                    <SecureComponent\n                      resource={CONSOLE_UI_RESOURCE}\n                      scopes={displayGroupsPermissions}\n                      errorProps={{ disabled: true }}\n                    >\n                      <TableWrapper\n                        itemActions={tableActions}\n                        columns={[{ label: \"Name\", elementKey: \"\" }]}\n                        isLoading={loading}\n                        selectedItems={checkedGroups}\n                        onSelect={\n                          deleteGroup || getGroup ? selectionChanged : undefined\n                        }\n                        records={filteredRecords}\n                        entityName=\"Groups\"\n                        idField=\"\"\n                      />\n                    </SecureComponent>\n                  </Grid>\n                </TooltipWrapper>\n                <Grid item xs={12} marginTop={\"25px\"}>\n                  <HelpBox\n                    title={\"Groups\"}\n                    iconComponent={<GroupsIcon />}\n                    help={\n                      <Fragment>\n                        A group can have one attached IAM policy, where all\n                        users with membership in that group inherit that policy.\n                        Groups support more simplified management of user\n                        permissions on the MinIO Tenant.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/linux/administration/identity-access-management/minio-group-management.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Groups\"}\n                    iconComponent={<UsersIcon />}\n                    help={\n                      <Fragment>\n                        A group can have one attached IAM policy, where all\n                        users with membership in that group inherit that policy.\n                        Groups support more simplified management of user\n                        permissions on the MinIO Tenant.\n                        <SecureComponent\n                          resource={CONSOLE_UI_RESOURCE}\n                          scopes={createGroupPermissions}\n                          matchAll\n                        >\n                          <br />\n                          <br />\n                          To get started,{\" \"}\n                          <AButton\n                            onClick={() => {\n                              navigate(`${IAM_PAGES.GROUPS_ADD}`);\n                            }}\n                          >\n                            Create a Group\n                          </AButton>\n                          .\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Groups);\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","_objectSpread","DeleteGroup","withSuspense","React","SetPolicy","withStyles","theme","createStyles","tableBlock","tableStyles","marginTop","actionsTray","searchField","maxWidth","containerForHeader","_ref","classes","dispatch","useAppDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","deleteOpen","setDeleteOpen","_useState3","_useState4","loading","isLoading","_useState5","_useState6","records","setRecords","_useState7","_useState8","filter","setFilter","_useState9","_useState10","policyOpen","setPolicyOpen","_useState11","_useState12","checkedGroups","setCheckedGroups","useEffect","displayGroups","hasPermission","CONSOLE_UI_RESOURCE","displayGroupsPermissions","deleteGroup","deleteGroupPermissions","getGroup","getGroupPermissions","applyPolicy","applyPolicyPermissions","api","then","res","resGroups","groups","sort","stringSort","catch","err","setErrorSnackMessage","filteredRecords","elementItem","includes","viewAction","group","concat","IAM_PAGES","encodeURLString","tableActions","type","onClick","disableButtonFunction","_jsxs","Fragment","selectedGroups","closeDeleteModalAndRefresh","refresh","open","selectedUser","closeModalAndRefresh","PageHeaderWrapper","label","PageLayout","Grid","item","xs","className","SecureComponent","resource","scopes","errorProps","disabled","SearchBox","placeholder","onChange","overrideClass","value","Box","sx","display","matchAll","TooltipWrapper","tooltip","permissionTooltipHelper","Button","id","icon","IAMPoliciesIcon","variant","DeleteIcon","createGroupPermissions","AddIcon","LinearProgress","TableWrapper","itemActions","columns","elementKey","selectedItems","onSelect","e","_e$target","target","_e$target2","_e$target2$value","_e$target2$checked","checked","elements","_toConsumableArray","push","element","entityName","idField","HelpBox","title","iconComponent","GroupsIcon","help","href","rel","container","justifyContent","alignContent","alignItems","UsersIcon","AButton"],"sourceRoot":""}