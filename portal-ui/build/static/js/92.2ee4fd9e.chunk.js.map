{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Buckets/BucketDetails/EnableQuota.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","simpleError","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","baseCloseLine","content","borderLeft","setModalSnackMessage","dialogContainer","closeContainer","textAlign","modalCloseIcon","closeIcon","borderColor","titleClass","whiteSpace","textOverflow","modalContent","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","IconButton","disableRipple","size","DialogTitle","id","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","textBoxWithIcon","paddingRight","errorState","top","overlayAction","maxHeight","label","onChange","value","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","StyledSwitch","root","margin","switchBase","palette","common","white","boxShadow","thumb","track","transitions","create","checked","focusVisible","Switch","seeMore","spacing","flexDirection","paddingTop","addSideBar","tableToolbar","wrapCell","wordWrap","minTableHeader","noFound","tableContainer","stickyHeader","actionsTitle","alignSelf","tableBlock","filterField","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","item","xs","sm","md","component","switchContainer","SelectStyled","input","InputBase","options","fieldContainer","map","option","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","radioBoxContainer","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","radioOptionsLayout","row","selectorOption","control","buttonContainer","multiContainer","justifyContent","modalBasic","enabled","cfg","selectedBucket","closeModalAndRefresh","loading","setLoading","quotaEnabled","setQuotaEnabled","quotaType","setQuotaType","quotaSize","setQuotaSize","quotaUnit","setQuotaUnit","quota","maxUnit","maxQuota","i","units","Math","pow","noValidate","onSubmit","e","event","preventDefault","req","amount","parseInt","getBytes","quota_type","api","invoke","then","catch","err","enableBucketEncryption","formScrollable","target","factorForDropdown","variant"],"mappings":"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","file":"static/js/92.2ee4fd9e.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    simpleError: {\n      marginTop: 5,\n      padding: \"2px 5px\",\n      fontSize: 16,\n      color: \"#000\",\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { snackBarCommon } from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst baseCloseLine = {\n  content: '\" \"',\n  borderLeft: \"2px solid #9C9C9C\",\n  height: 33,\n  width: 1,\n  position: \"absolute\",\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dialogContainer: {\n      padding: \"8px 15px 22px\",\n    },\n    closeContainer: {\n      textAlign: \"right\",\n    },\n    closeButton: {\n      height: 16,\n      width: 16,\n      padding: 0,\n      backgroundColor: \"initial\",\n      \"&:hover\": {\n        backgroundColor: \"initial\",\n      },\n      \"&:active\": {\n        backgroundColor: \"initial\",\n      },\n    },\n    modalCloseIcon: {\n      fontSize: 35,\n      color: \"#9C9C9C\",\n      fontWeight: 300,\n      \"&:hover\": {\n        color: \"#9C9C9C\",\n      },\n    },\n    closeIcon: {\n      \"&::before\": {\n        ...baseCloseLine,\n        transform: \"rotate(45deg)\",\n        height: 12,\n      },\n      \"&::after\": {\n        ...baseCloseLine,\n        transform: \"rotate(-45deg)\",\n        height: 12,\n      },\n      \"&:hover::before, &:hover::after\": {\n        borderColor: \"#9C9C9C\",\n      },\n      display: \"block\",\n      position: \"relative\",\n      height: 12,\n      width: 12,\n    },\n    titleClass: {\n      padding: \"0px 50px 12px\",\n      fontSize: \"1.2rem\",\n      fontWeight: 600,\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n    },\n    modalContent: {\n      padding: \"0 50px\",\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...customSize}\n    >\n      <div className={classes.dialogContainer}>\n        <ModalError />\n        <Snackbar\n          open={openSnackbar}\n          className={classes.snackBarModal}\n          onClose={() => {\n            closeSnackBar();\n          }}\n          message={message}\n          ContentProps={{\n            className: `${classes.snackBar} ${\n              modalSnackMessage && modalSnackMessage.type === \"error\"\n                ? classes.errorSnackBar\n                : \"\"\n            }`,\n          }}\n          autoHideDuration={\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? 10000\n              : 5000\n          }\n        />\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"large\"\n          >\n            <span className={classes.closeIcon} />\n          </IconButton>\n        </div>\n        <DialogTitle id=\"alert-dialog-title\" className={classes.titleClass}>\n          {title}\n        </DialogTitle>\n        <DialogContent className={noContentPadding ? \"\" : classes.modalContent}>\n          {children}\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      paddingTop: 15,\n      boxShadow: \"none\",\n    },\n    addSideBar: {\n      width: \"320px\",\n      padding: \"20px\",\n    },\n    tableToolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(0),\n    },\n    wrapCell: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    tableContainer: {\n      maxHeight: 200,\n    },\n    stickyHeader: {\n      backgroundColor: \"#fff\",\n    },\n    actionsTitle: {\n      fontWeight: 600,\n      color: \"#081C42\",\n      fontSize: 16,\n      alignSelf: \"center\",\n    },\n    tableBlock: {\n      marginTop: 15,\n    },\n    filterField: {\n      width: 375,\n      fontWeight: 600,\n      \"& .input\": {\n        \"&::placeholder\": {\n          fontWeight: 600,\n          color: \"#081C42\",\n        },\n      },\n    },\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    radioBoxContainer: {},\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { factorForDropdown, getBytes, units } from \"../../../../common/utils\";\nimport { BucketQuota } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport api from \"../../../../common/api\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\" as const,\n      justifyContent: \"flex-start\" as const,\n    },\n    ...modalBasic,\n  });\n\ninterface IEnableQuotaProps {\n  classes: any;\n  open: boolean;\n  enabled: boolean;\n  cfg: BucketQuota | null;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst EnableQuota = ({\n  classes,\n  open,\n  enabled,\n  cfg,\n  selectedBucket,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IEnableQuotaProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quotaType, setQuotaType] = useState<string>(\"hard\");\n  const [quotaSize, setQuotaSize] = useState<string>(\"1\");\n  const [quotaUnit, setQuotaUnit] = useState<string>(\"TiB\");\n\n  useEffect(() => {\n    if (enabled) {\n      setQuotaEnabled(true);\n      if (cfg) {\n        setQuotaType(cfg.type);\n        setQuotaSize(`${cfg.quota}`);\n        setQuotaUnit(`B`);\n\n        let maxUnit = \"B\";\n        let maxQuota = cfg.quota;\n\n        for (let i = 0; i < units.length; i++) {\n          if (cfg.quota % Math.pow(1024, i) === 0) {\n            maxQuota = cfg.quota / Math.pow(1024, i);\n            maxUnit = units[i];\n          } else {\n            break;\n          }\n        }\n        setQuotaSize(`${maxQuota}`);\n        setQuotaUnit(maxUnit);\n      }\n    }\n  }, [enabled, cfg]);\n\n  const enableBucketEncryption = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (loading) {\n      return;\n    }\n    let req = {\n      enabled: quotaEnabled,\n      amount: parseInt(getBytes(quotaSize, quotaUnit, false)),\n      quota_type: quotaType,\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/quota`, req)\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Enable Bucket Quota\"\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          enableBucketEncryption(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"bucket_quota\"\n                id=\"bucket_quota\"\n                name=\"bucket_quota\"\n                checked={quotaEnabled}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setQuotaEnabled(event.target.checked);\n                }}\n                label={\"Quota\"}\n              />\n            </Grid>\n            {quotaEnabled && (\n              <React.Fragment>\n                <Grid item xs={12}>\n                  <RadioGroupSelector\n                    currentSelection={quotaType}\n                    id=\"quota_type\"\n                    name=\"quota_type\"\n                    label=\"Quota Type\"\n                    onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                      setQuotaType(e.target.value as string);\n                    }}\n                    selectorOptions={[\n                      { value: \"hard\", label: \"Hard\" },\n                      { value: \"fifo\", label: \"FIFO\" },\n                    ]}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Grid container>\n                    <Grid item xs={10}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"quota_size\"\n                        name=\"quota_size\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setQuotaSize(e.target.value);\n                        }}\n                        label=\"Quota\"\n                        value={quotaSize}\n                        required\n                        min=\"1\"\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <div style={{ width: 100 }}>\n                        <SelectWrapper\n                          label=\"\"\n                          id=\"quota_unit\"\n                          name=\"quota_unit\"\n                          value={quotaUnit}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setQuotaUnit(e.target.value as string);\n                          }}\n                          options={factorForDropdown()}\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n            <Grid item xs={12}>\n              <br />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Save\n            </Button>\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(EnableQuota));\n"],"sourceRoot":""}