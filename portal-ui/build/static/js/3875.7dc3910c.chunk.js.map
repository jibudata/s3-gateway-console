{"version":3,"file":"static/js/3875.7dc3910c.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string | React.ReactNode;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { Button } from \"mds\";\nimport { AddIcon, RemoveIcon } from \"../../../../icons\";\nimport { SiteInputRow } from \"./Types\";\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"name\"),\n          }}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"endpoint\"),\n          }}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} alignItems={\"center\"} display={\"flex\"}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { ClustersIcon } from \"../../../../icons\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../../common/BackLink\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport SectionTitle from \"../../Common/SectionTitle\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          fontSize: \"14px\",\n          marginLeft: \"5px\",\n        }}\n      >\n        Site Name\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Endpoint {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Access Key {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Secret Key {\"*\"}</Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    }\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    []\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          })\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      []\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index ? { ...item, [fieldName]: filedValue } : item\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index)\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <BackLink\n            to={IAM_PAGES.SITE_REPLICATION}\n            label={\"Add Replication Site\"}\n          />\n        }\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <LinearProgress /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& .step-number\": {\n                      color: \"#ffffff\",\n                      height: \"25px\",\n                      width: \"25px\",\n                      background: \"#081C42\",\n                      marginRight: \"10px\",\n                      textAlign: \"center\",\n                      fontWeight: 600,\n                      borderRadius: \"50%\",\n                    },\n\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                      \"&:before\": {\n                        content: \"' '\",\n                        height: \"7px\",\n                        width: \"7px\",\n                        backgroundColor: \"#2781B0\",\n                        marginRight: \"10px\",\n                        marginTop: \"12px\",\n                        flexShrink: 0,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","rowData","index","rowId","onFieldChange","onAddClick","onRemoveClick","canAdd","canRemove","showRowActions","disabledFields","fieldErrors","endpoint","accessKey","secretKey","name","Fragment","Box","InputBoxWrapper","id","placeholder","label","extraInputProps","readOnly","includes","value","onChange","e","error","required","disabled","type","Grid","sx","justifyContent","alignSelf","marginTop","borderColor","color","TooltipWrapper","tooltip","variant","icon","onClick","preventDefault","style","padding","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","SiteTypeHeader","dispatch","useAppDispatch","navigate","useNavigate","useSelector","selSession","serverEndPoint","useState","currentSite","setCurrentSite","existingSites","setExistingSites","setDefaultNewRows","useApi","res","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","success","setSnackBarMessage","status","resetForm","IAM_PAGES","setErrorSnackMessage","errorMessage","detailedError","isAdding","invokeSiteAddApi","prevItems","ix","PageHeader","BackLink","to","PageLayout","gap","gridTemplateColumns","SectionTitle","LinearProgress","fontStyle","noValidate","autoComplete","onSubmit","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","concat","addSiteReplication","maxHeight","overflowY","cs","accessKeyError","secretKeyError","fieldName","filedValue","target","ps","endPointError","newRows","_","HelpBox","fill","flexFlow","flex","background","textAlign","content","flexShrink"],"sourceRoot":""}