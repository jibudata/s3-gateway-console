{"version":3,"file":"static/js/889.961090a3.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AddReplicationModal.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Box,\n  BucketReplicationIcon,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketReplicationRule } from \"../types\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: () => any;\n  bucketName: string;\n\n  setReplicationRules: BucketReplicationRule[];\n}\n\nconst AddReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n  setReplicationRules,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [priority, setPriority] = useState<string>(\"1\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [targetStorageClass, setTargetStorageClass] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [targetBucket, setTargetBucket] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [repDeleteMarker, setRepDeleteMarker] = useState<boolean>(true);\n  const [repDelete, setRepDelete] = useState<boolean>(true);\n  const [metadataSync, setMetadataSync] = useState<boolean>(true);\n  const [tags, setTags] = useState<string>(\"\");\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n\n  useEffect(() => {\n    if (setReplicationRules.length === 0) {\n      setPriority(\"1\");\n      return;\n    }\n\n    const greatestValue = setReplicationRules.reduce((prevAcc, currValue) => {\n      if (currValue.priority > prevAcc) {\n        return currValue.priority;\n      }\n      return prevAcc;\n    }, 0);\n\n    const nextPriority = greatestValue + 1;\n    setPriority(nextPriority.toString());\n  }, [setReplicationRules]);\n\n  const addRecord = () => {\n    const replicate = [\n      {\n        originBucket: bucketName,\n        destinationBucket: targetBucket,\n      },\n    ];\n\n    const hc = parseInt(healthCheck);\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n      prefix: prefix,\n      tags: tags,\n      replicateDeleteMarkers: repDeleteMarker,\n      replicateDeletes: repDelete,\n      priority: parseInt(priority),\n      storageClass: targetStorageClass,\n      replicateMetadata: metadataSync,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((res) => {\n        setAddLoading(false);\n\n        const states = get(res.data, \"replicationState\", []);\n\n        if (states.length > 0) {\n          const itemVal = states[0];\n\n          setAddLoading(false);\n\n          if (itemVal.errorString && itemVal.errorString !== \"\") {\n            dispatch(\n              setModalErrorSnackMessage({\n                errorMessage: itemVal.errorString,\n                detailedError: \"\",\n              }),\n            );\n            return;\n          }\n\n          closeModalAndRefresh();\n\n          return;\n        }\n        dispatch(\n          setModalErrorSnackMessage({\n            errorMessage: \"No changes applied\",\n            detailedError: \"\",\n          }),\n        );\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Set Bucket Replication\"\n      titleIcon={<BucketReplicationIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddLoading(true);\n          addRecord();\n        }}\n      >\n        <FormLayout withBorders={false} containerPadding={false}>\n          <InputBox\n            id=\"priority\"\n            name=\"priority\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              if (e.target.validity.valid) {\n                setPriority(e.target.value);\n              }\n            }}\n            label=\"Priority\"\n            value={priority}\n            pattern={\"[0-9]*\"}\n          />\n\n          <InputBox\n            id=\"targetURL\"\n            name=\"targetURL\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setTargetURL(e.target.value);\n            }}\n            placeholder=\"play.min.io\"\n            label=\"Target URL\"\n            value={targetURL}\n          />\n\n          <Switch\n            checked={useTLS}\n            id=\"useTLS\"\n            name=\"useTLS\"\n            label=\"Use TLS\"\n            onChange={(e) => {\n              setUseTLS(e.target.checked);\n            }}\n            value=\"yes\"\n          />\n\n          <InputBox\n            id=\"accessKey\"\n            name=\"accessKey\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setAccessKey(e.target.value);\n            }}\n            label=\"Access Key\"\n            value={accessKey}\n          />\n\n          <InputBox\n            id=\"secretKey\"\n            name=\"secretKey\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setSecretKey(e.target.value);\n            }}\n            label=\"Secret Key\"\n            value={secretKey}\n          />\n\n          <InputBox\n            id=\"targetBucket\"\n            name=\"targetBucket\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setTargetBucket(e.target.value);\n            }}\n            label=\"Target Bucket\"\n            value={targetBucket}\n          />\n\n          <InputBox\n            id=\"region\"\n            name=\"region\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setRegion(e.target.value);\n            }}\n            label=\"Region\"\n            value={region}\n          />\n\n          <Select\n            id=\"replication_mode\"\n            name=\"replication_mode\"\n            onChange={(value) => {\n              setReplicationMode(value as \"async\" | \"sync\");\n            }}\n            label=\"Replication Mode\"\n            value={replicationMode}\n            options={[\n              { label: \"Asynchronous\", value: \"async\" },\n              { label: \"Synchronous\", value: \"sync\" },\n            ]}\n          />\n\n          {replicationMode === \"async\" && (\n            <Box className={\"inputItem\"}>\n              <InputBox\n                type=\"number\"\n                id=\"bandwidth_scalar\"\n                name=\"bandwidth_scalar\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  if (e.target.validity.valid) {\n                    setBandwidthScalar(e.target.value as string);\n                  }\n                }}\n                label=\"Bandwidth\"\n                value={bandwidthScalar}\n                min=\"0\"\n                pattern={\"[0-9]*\"}\n                overlayObject={\n                  <InputUnitMenu\n                    id={\"quota_unit\"}\n                    onUnitChange={(newValue) => {\n                      setBandwidthUnit(newValue);\n                    }}\n                    unitSelected={bandwidthUnit}\n                    unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                    disabled={false}\n                  />\n                }\n              />\n            </Box>\n          )}\n\n          <InputBox\n            id=\"healthCheck\"\n            name=\"healthCheck\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setHealthCheck(e.target.value as string);\n            }}\n            label=\"Health Check Duration\"\n            value={healthCheck}\n          />\n\n          <InputBox\n            id=\"storageClass\"\n            name=\"storageClass\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setTargetStorageClass(e.target.value);\n            }}\n            placeholder=\"STANDARD_IA,REDUCED_REDUNDANCY etc\"\n            label=\"Storage Class\"\n            value={targetStorageClass}\n          />\n\n          <fieldset className={\"inputItem\"}>\n            <legend>Object Filters</legend>\n            <InputBox\n              id=\"prefix\"\n              name=\"prefix\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setPrefix(e.target.value);\n              }}\n              placeholder=\"prefix\"\n              label=\"Prefix\"\n              value={prefix}\n            />\n            <QueryMultiSelector\n              name=\"tags\"\n              label=\"Tags\"\n              elements={\"\"}\n              onChange={(vl: string) => {\n                setTags(vl);\n              }}\n              keyPlaceholder=\"Tag Key\"\n              valuePlaceholder=\"Tag Value\"\n              withBorder\n            />\n          </fieldset>\n          <fieldset className={\"inputItem\"}>\n            <legend>Replication Options</legend>\n            <Switch\n              checked={metadataSync}\n              id=\"metadatataSync\"\n              name=\"metadatataSync\"\n              label=\"Metadata Sync\"\n              onChange={(e) => {\n                setMetadataSync(e.target.checked);\n              }}\n              description={\"Metadata Sync\"}\n            />\n            <Switch\n              checked={repDeleteMarker}\n              id=\"deleteMarker\"\n              name=\"deleteMarker\"\n              label=\"Delete Marker\"\n              onChange={(e) => {\n                setRepDeleteMarker(e.target.checked);\n              }}\n              description={\"Replicate soft deletes\"}\n            />\n            <Switch\n              checked={repDelete}\n              id=\"repDelete\"\n              name=\"repDelete\"\n              label=\"Deletes\"\n              onChange={(e) => {\n                setRepDelete(e.target.checked);\n              }}\n              description={\"Replicate versioned deletes\"}\n            />\n          </fieldset>\n          <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"submit\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading}\n              label={\"Save\"}\n            />\n          </Grid>\n        </FormLayout>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default AddReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectorType } from \"mds\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","open","closeModalAndRefresh","bucketName","setReplicationRules","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","addLoading","setAddLoading","_useState3","_useState4","priority","setPriority","_useState5","_useState6","accessKey","setAccessKey","_useState7","_useState8","secretKey","setSecretKey","_useState9","_useState10","targetURL","setTargetURL","_useState11","_useState12","targetStorageClass","setTargetStorageClass","_useState13","_useState14","prefix","setPrefix","_useState15","_useState16","targetBucket","setTargetBucket","_useState17","_useState18","region","setRegion","_useState19","_useState20","useTLS","setUseTLS","_useState21","_useState22","repDeleteMarker","setRepDeleteMarker","_useState23","_useState24","repDelete","setRepDelete","_useState25","_useState26","metadataSync","setMetadataSync","_useState27","_useState28","tags","setTags","_useState29","_useState30","replicationMode","setReplicationMode","_useState31","_useState32","bandwidthScalar","setBandwidthScalar","_useState33","_useState34","bandwidthUnit","setBandwidthUnit","_useState35","_useState36","healthCheck","setHealthCheck","useEffect","length","greatestValue","reduce","prevAcc","currValue","toString","_jsx","ModalWrapper","modalOpen","onClose","title","titleIcon","BucketReplicationIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","replicate","originBucket","destinationBucket","hc","parseInt","endURL","concat","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","replicateDeleteMarkers","replicateDeletes","storageClass","replicateMetadata","api","bucketsReplication","setMultiBucketReplication","then","res","states","get","data","itemVal","errorString","setModalErrorSnackMessage","errorMessage","detailedError","catch","err","errorToHandler","error","addRecord","_jsxs","FormLayout","withBorders","containerPadding","InputBox","id","name","onChange","target","validity","valid","value","label","pattern","placeholder","Switch","checked","Select","options","Box","className","type","min","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","description","Grid","item","xs","sx","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","withStyles","theme","createStyles","buttonTrigger","border","borderRadius","backgroundColor","fontSize","classes","_ref$disabled","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","Fragment","undefined","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","map","unit","MenuItem","_ref$tooltip","tooltip","_ref$keyPlaceholder","_ref$valuePlaceholder","_ref$withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","_toConsumableArray","index","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","AddIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","display","alignSelf","margin","fontWeight","InputLabel","marginLeft","alignItems","width","Tooltip","placement","HelpIcon","style","height","padding","overflowY","position","marginTop","ref"],"sourceRoot":""}