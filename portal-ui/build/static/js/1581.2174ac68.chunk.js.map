{"version":3,"file":"static/js/1581.2174ac68.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EnableQuota.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  BucketQuotaIcon,\n  Button,\n  FormLayout,\n  InputBox,\n  Switch,\n  Grid,\n  ProgressBar,\n} from \"mds\";\nimport {\n  calculateBytes,\n  getBytes,\n  k8sScalarUnitsExcluding,\n} from \"../../../../common/utils\";\n\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { BucketQuota } from \"api/consoleApi\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IEnableQuotaProps {\n  open: boolean;\n  enabled: boolean;\n  cfg: BucketQuota | null;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst EnableQuota = ({\n  open,\n  enabled,\n  cfg,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IEnableQuotaProps) => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quotaSize, setQuotaSize] = useState<string>(\"1\");\n  const [quotaUnit, setQuotaUnit] = useState<string>(\"Ti\");\n  const [validInput, setValidInput] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (enabled) {\n      setQuotaEnabled(true);\n      if (cfg) {\n        const unitCalc = calculateBytes(cfg.quota || 0, true, false, true);\n\n        setQuotaSize(unitCalc.total.toString());\n        setQuotaUnit(unitCalc.unit);\n        setValidInput(true);\n      }\n    }\n  }, [enabled, cfg]);\n\n  useEffect(() => {\n    const valRegExp = /^\\d*(?:\\.\\d{1,2})?$/;\n\n    if (!quotaEnabled) {\n      setValidInput(true);\n      return;\n    }\n\n    setValidInput(valRegExp.test(quotaSize));\n  }, [quotaEnabled, quotaSize]);\n\n  const enableBucketEncryption = () => {\n    if (loading || !validInput) {\n      return;\n    }\n\n    api.buckets\n      .setBucketQuota(selectedBucket, {\n        enabled: quotaEnabled,\n        amount: parseInt(getBytes(quotaSize, quotaUnit, true)),\n        quota_type: \"hard\",\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Enable Bucket Quota\"\n      titleIcon={<BucketQuotaIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          enableBucketEncryption();\n        }}\n      >\n        <FormLayout withBorders={false} containerPadding={false}>\n          <Switch\n            value=\"bucket_quota\"\n            id=\"bucket_quota\"\n            name=\"bucket_quota\"\n            checked={quotaEnabled}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setQuotaEnabled(event.target.checked);\n            }}\n            label={\"Enabled\"}\n          />\n          {quotaEnabled && (\n            <InputBox\n              id=\"quota_size\"\n              name=\"quota_size\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setQuotaSize(e.target.value);\n                if (!e.target.validity.valid) {\n                  setValidInput(false);\n                } else {\n                  setValidInput(true);\n                }\n              }}\n              label=\"Quota\"\n              value={quotaSize}\n              required\n              min=\"1\"\n              overlayObject={\n                <InputUnitMenu\n                  id={\"quota_unit\"}\n                  onUnitChange={(newValue) => {\n                    setQuotaUnit(newValue);\n                  }}\n                  unitSelected={quotaUnit}\n                  unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                  disabled={false}\n                />\n              }\n              error={!validInput ? \"Please enter a valid quota\" : \"\"}\n            />\n          )}\n          <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={loading || !validInput}\n              label={\"Save\"}\n            />\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          )}\n        </FormLayout>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default EnableQuota;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n"],"names":["_ref","open","enabled","cfg","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","quotaEnabled","setQuotaEnabled","_useState5","_useState6","quotaSize","setQuotaSize","_useState7","_useState8","quotaUnit","setQuotaUnit","_useState9","_useState10","validInput","setValidInput","useEffect","unitCalc","calculateBytes","quota","total","toString","unit","test","_jsx","ModalWrapper","modalOpen","onClose","title","titleIcon","BucketQuotaIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","api","buckets","setBucketQuota","amount","parseInt","getBytes","quota_type","then","catch","err","setModalErrorSnackMessage","errorToHandler","error","_jsxs","FormLayout","withBorders","containerPadding","Switch","value","id","name","checked","onChange","event","target","label","InputBox","validity","valid","required","min","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","Grid","item","xs","sx","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","ProgressBar","UnitMenuButton","styled","button","theme","border","concat","get","borderRadius","color","backgroundColor","fontSize","_ref2","_ref2$disabled","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","Fragment","undefined","currentTarget","DropdownSelector","options","selectedOption","onSelect","hideTriggerAction","anchorOrigin"],"sourceRoot":""}