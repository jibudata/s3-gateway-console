{"version":3,"file":"static/js/8782.e031dc6a.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","color","concat","capitalize","_ref","_ref2","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checked","defaultChecked","disabledProp","_props$disableFocusRi","disableFocusRipple","_props$edge","id","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","input","_jsxs","component","centerRipple","focusRipple","role","undefined","event","children","nativeEvent","defaultPrevented","newChecked","target","componentWillMount","this","constructor","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","_lastMeasuredIndex","index","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","i","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}