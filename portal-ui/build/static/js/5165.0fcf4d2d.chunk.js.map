{"version":3,"file":"static/js/5165.0fcf4d2d.chunk.js","mappings":"sRAkDAA,EAAAA,EAAAA,IAAa,kBACRC,EAAAA,IACAC,EAAAA,KAWL,IA4FMC,GAAYC,EAAAA,EAAAA,IAAQ,KAAM,CAC9BC,0BAAAA,EAAAA,KAGF,KAAeC,EAAAA,EAAAA,IA5HA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,wBACXQ,oBAAqB,CACnBC,aAAc,GACd,UAAW,CACTA,aAAc,SAEhB,gBAAiB,CACfC,QAAS,UAGVC,EAAAA,IACAV,EAAAA,IACAC,EAAAA,OA+GP,CAAkCC,GAhGL,SAAC,GAMK,IALjCS,EAKgC,EALhCA,QACAC,EAIgC,EAJhCA,KACAC,EAGgC,EAHhCA,kBACAC,EAEgC,EAFhCA,qBACAV,EACgC,EADhCA,0BAEA,GAA8BW,EAAAA,EAAAA,WAAkB,GAAhD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,UAAiB,IAAjE,eAAOG,EAAP,KAAyBC,EAAzB,MACAC,EAAAA,EAAAA,YAAU,WACJJ,GACFK,EAAAA,EAAAA,OACU,MADV,mCAC6CR,EAD7C,YAEGS,MAAK,SAACC,GACLN,GAAW,GACXE,EAAoBI,MAErBC,OAAM,SAACC,GACNR,GAAW,GACXb,EAA0BqB,QAG/B,CAACT,EAASC,EAAYb,EAA2BS,IAgBpD,OACE,SAAC,IAAD,CACEa,MAAM,yBACNC,UAAWf,EACXgB,QAAS,WACPd,KAEFe,WAAW,SAAC,KAAD,IANb,UAQE,iBACEC,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,GA1BC,IAAyBC,EAAAA,EA2BtBhB,EAAHe,EA1BVE,iBACNd,EAAAA,EAAAA,OACU,MADV,mCAC6CR,EAD7C,WACyE,CACrEuB,OAAQF,IAETZ,MAAK,SAACC,GACLT,OAEDU,OAAM,SAACC,GACNrB,EAA0BqB,OAa5B,UAOE,UAAC,KAAD,CAAMY,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAW7B,EAAQJ,oBAAtC,UACE,SAAC,IAAD,CACEkC,MAAK,yBACLC,MAAOxB,EACPyB,eAAgB,SAACC,EAAQC,EAAMH,GAC7BvB,EAAoBuB,IAEtBI,aAAc,aAGlB,UAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAIC,UAAW7B,EAAQoC,eAAtC,WACE,SAAC,IAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,MAAM,UACNC,QAAS,WACPrC,KAEFsC,SAAUpC,EAPZ,qBAWA,SAAC,IAAD,CACEgC,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNE,SAAUpC,EAJZ,gC,wJCzGNqC,GAAYC,EAAAA,EAAAA,IAAW,SAAChD,GAiB5B,MAAO,CACLiD,KAAM,CACJC,QAAS,MACTN,MAAO,SAACO,GAAD,OAnBY,SAACA,GACtB,IAAQR,EAAmBQ,EAAnBR,QAASC,EAAUO,EAAVP,MAEbQ,EAAWpD,EAAMqD,QAAQC,QAAQC,KAUrC,MARc,YAAVX,GAAmC,cAAZD,EACzBS,EAAWpD,EAAMqD,QAAQC,QAAQE,aACd,YAAVZ,GAAmC,aAAZD,EAChCS,EAAWpD,EAAMqD,QAAQC,QAAQC,KACd,cAAVX,IACTQ,EAAWpD,EAAMqD,QAAQI,UAAUF,MAG9BH,EAM0BM,CAAeP,IAC9CQ,YAAa,SAACR,GAAD,MACK,cAAhBA,EAAMP,MACF5C,EAAMqD,QAAQI,UAAUF,KACxBvD,EAAMqD,QAAQC,QAAQC,MAC5B,iBAAkB,CAChBK,MAAO,GACPC,WAAY,SAACV,GAAD,OAAyBA,EAAMW,KAAO,MAAQ,OAC1D,4BAA6B,CAC3BF,MAAO,GACPC,WAAY,wBA6CtB,IAtCqB,SAACV,GACpB,IAAM9C,EAAU0C,EAAUI,GAGxBN,EAOEM,EAPFN,QADF,EAQIM,EANFW,KAAAA,OAFF,MAES,GAFT,IAQIX,EALFL,SAAAA,OAHF,SAIEiB,EAIEZ,EAJFY,QAJF,EAQIZ,EAHFa,KAAAA,OALF,MAKS,KALT,IAQIb,EAFFjB,UAAAA,OANF,MAMc,GANd,EAOK+B,GAPL,OAQId,EARJ,GAUA,OACE,UAAC,KAAD,gBACEjB,UAAWA,EACX7B,QAASA,EACT0D,QAASA,GAAWD,EACpBnB,QAAQ,WACRE,QAASA,EACTC,SAAUA,EACVF,MAAM,YACNsB,KAAK,SACLC,GAAI,CACFC,OAAQ,oBACR,SAAU,CACRC,SAAU,GACV,4BAA6B,CAC3BlE,QAAS,WAIX8D,GAlBN,eAoBE,0BAAOH,IApBT,IAoBuBE,Q,mLCP3B,KAAejE,EAAAA,EAAAA,IA5EA,SAACC,GAAD,OACbP,EAAAA,EAAAA,GAAa,CACXwD,KAAM,CACJC,QAAS,EACTW,WAAY,EACZS,YAAa,EACbX,YAAa,UACbf,MAAO,UACP2B,YAAa,QACbC,aAAc,EACd,cAAe,CAEbZ,MAAO,IAET,8BAA+B,CAC7Ba,gBAAiBzE,EAAMqD,QAAQC,QAAQC,KACvCiB,aAAc,EACdE,QAAS,IAEX,aAAc,CACZ9B,MAAO,UACPe,YAAa,YAGjBgB,UAAW,CACThB,YAAa3D,EAAMqD,QAAQC,QAAQC,KACnCqB,WAAY5E,EAAMqD,QAAQC,QAAQC,KAClCX,MAAO,QACP,8BAA+B,CAC7B6B,gBAAiBzE,EAAMqD,QAAQC,QAAQuB,KACvCL,aAAc,EACdE,QAAS,IAEX,UAAW,CACTD,gBAAiBzE,EAAMqD,QAAQC,QAAQwB,MACvClC,MAAO,aAyCf,EA7BsB,SAAC,GAMA,IALrBvC,EAKoB,EALpBA,QACA0E,EAIoB,EAJpBA,SAIoB,IAHpBpC,QAAAA,OAGoB,MAHV,WAGU,EAFpBoB,EAEoB,EAFpBA,QACGiB,GACiB,YACdC,GACJ,SAAC,KAAD,kBACMD,GADN,IAEE9C,WAAWgD,EAAAA,EAAAA,GAAK7E,EAAQ4C,MAAT,UACZ5C,EAAQsE,UAAwB,cAAZhC,IAHzB,SAMGoC,KAIL,OAAIhB,GAAuB,KAAZA,GAEX,SAAC,IAAD,CAAS3C,MAAO2C,EAAhB,UACE,0BAAOkB,MAKNA,M,kRC1CHE,EAAqC,CACzCC,KAAAA,EAAAA,GACAC,KAAM,kBAAMC,EAAAA,EAAAA,OAAsBD,EAAAA,KAG9BE,EAAaC,EAAAA,GAAAA,MACjB,CACE,IAAK,CACHf,gBAAiB,WAEnB,cAAe,CACbgB,WAAY,WAEd,0BAA2B,CACzBC,gBAAiB,WAEnB,cAAe,CACbjB,gBAAiB,UACjB7B,MAAO,UACPwB,OAAQ,QAEV,2BAA4B,CAC1BuB,YAAa,qBAEf,oBAAqB,CACnBtB,SAAU,QAEZ,WAAY,CACVA,SAAU,OACVzB,MAAO,UACP,aAAS,CACPA,MAAO,YAGX,aAAS,CACPA,MAAO,WAET,iBAAkB,CAChB6B,gBAAiB,WAEnB,sBAAuB,CACrBA,gBAAiB,UACjB7B,MAAO,WAET,qBAAsB,CACpB6B,gBAAiB,WAEnB,qBAAsB,CACpBmB,WAAY,KAEd,2BAA4B,CAC1BnB,gBAAiB,UACjB7B,MAAO,YAGX,CACEiC,MAAM,IAIJgB,EAAYL,EAAAA,GAAAA,MAChB,CACE,IAAK,CACHf,gBAAiB,UACjB7B,MAAO,WAGT,2BAA4B,CAC1B+C,YAAa,qBAEf,oBAAqB,CACnBtB,SAAU,QAEZ,WAAY,CACVA,SAAU,OACV,yBAAgB,CACdzB,MAAO,YAGX,aAAS,CACPA,MAAO,WAET,iBAAkB,CAChB6B,gBAAiB,WAEnB,sBAAuB,CACrBA,gBAAiB,UACjB7B,MAAO,WAET,6CAA8C,CAC5C6B,gBAAiB,UAGrB,CACEI,MAAM,IAqHV,KAAe9E,EAAAA,EAAAA,IAxNA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,UACRqG,EAAAA,OAsNP,EAjH0B,SAAC,GASN,IARnB1D,EAQkB,EARlBA,MAQkB,IAPlBD,MAAAA,OAOkB,MAPV,GAOU,MANlB4B,QAAAA,OAMkB,MANR,GAMQ,MALlBgC,KAAAA,OAKkB,MALX,OAKW,EAJlB1F,EAIkB,EAJlBA,QACAgC,EAGkB,EAHlBA,eAGkB,IAFlB2D,SAAAA,OAEkB,aADlBxD,aAAAA,OACkB,MADH,QACG,EAClB,GAAsC/B,EAAAA,EAAAA,WAAkB,GAAxD,eAAOwF,EAAP,KAAoBC,EAApB,KAGIC,EAA6B,GAKjC,OAJIhB,EAAcY,KAChBI,EAAa,kBAAOA,GAAP,CAAsBhB,EAAcY,SAIjD,UAAC,WAAD,YACE,UAAC,IAAD,CAAY7D,UAAW7B,EAAQ+F,WAA/B,WACE,0BAAOjE,IACM,KAAZ4B,IACC,gBAAK7B,UAAW7B,EAAQgG,iBAAxB,UACE,SAAC,IAAD,CAASjF,MAAO2C,EAASuC,UAAU,YAAnC,UACE,gBAAKpE,UAAW7B,EAAQ0D,QAAxB,UACE,SAAC,IAAD,cAMV,SAAC,KAAD,CAAM/B,MAAI,EAACC,GAAI,GAAf,UACE,qBAGF,UAAC,KAAD,CACED,MAAI,EACJC,GAAI,GACJkC,GAAI,CACFC,OAAQ,qBAJZ,WAOE,SAAC,KAAD,CAAMpC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,KAAD,CACEG,MAAOA,EACPpC,MAAOiG,EAAcJ,EAAYN,EACjCgB,WAAYJ,EACZK,UAAWR,EACXS,YAAY,EACZC,OAAQlE,EACRmE,SAAU,SAACC,EAAWC,GACpBxE,EAAe,KAAM,KAAMuE,SAIjC,SAAC,KAAD,CACE5E,MAAI,EACJC,GAAI,GACJkC,GAAI,CACF2C,UAAW,oBACXlC,WAAYqB,EAAc,UAAY,WAL1C,UAQE,UAAC,IAAD,CACE/D,UAAW+D,EAAc,aAAe,GACxC9B,GAAI,CACFhE,QAAS,OACT4G,WAAY,SACZ7D,QAAS,MACT8D,aAAc,MACdC,eAAgB,WAChB,WAAY,CACVP,OAAQ,OACR9C,MAAO,OACPV,QAAS,MACT,aAAc,CACZW,WAAY,MAIhB,sBAAuB,CACrBe,WAAY,YAlBlB,WAsBE,SAAC,IAAD,CACEb,QAAS,eACTlB,QAAS,WACPqD,GAAgBD,IAElBnC,KAAM,GACNE,MAAM,SAAC,KAAD,IACNpB,MAAO,UACPD,QAAS,cAEX,SAAC,IAAD,CAAiBmB,KAAM1B,EAAvB,UACE,SAAC,IAAD,CACE2B,QAAS,oBACTlB,QAAS,aACTiB,KAAM,GACNE,MAAM,SAAC,KAAD,IACNpB,MAAO,UACPD,QAAS,8B,0DChOzB,IAvBe,SACbuE,EACAC,GAEA,OAAkC1G,EAAAA,EAAAA,WAAkB,GAApD,eAAO2G,EAAP,KAAkBC,EAAlB,KAgBA,MAAO,CAACD,EAdQ,SAACE,EAAgBC,EAAahF,GAC5C8E,GAAa,GACbtG,EAAAA,EAAAA,OACUuG,EAAQC,EAAKhF,GACpBvB,MAAK,SAACC,GACLoG,GAAa,GACbH,EAAUjG,MAEXC,OAAM,SAACC,GACNkG,GAAa,GACbF,EAAQhG,U,kLCmGhB,KAAepB,EAAAA,EAAAA,IA1GA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,UACR+H,EAAAA,OAwGP,EArFsB,SAAC,GAcI,IAAD,IAbxBC,OAAAA,OAawB,SAZxBnG,EAYwB,EAZxBA,QACAoG,EAWwB,EAXxBA,SACAC,EAUwB,EAVxBA,UAUwB,IATxBtH,QAAAA,OASwB,MATd,GASc,MARxBe,MAAAA,OAQwB,MARhB,GAQgB,EAPxBgG,EAOwB,EAPxBA,UACAQ,EAMwB,EANxBA,oBAMwB,IALxBC,WAAAA,OAKwB,MALX,SAKW,MAJxBC,YAAAA,OAIwB,MAJV,UAIU,MAHxBC,mBAAAA,OAGwB,MAHH,GAGG,MAFxBC,kBAAAA,OAEwB,MAFJ,GAEI,MADxBzG,UAAAA,OACwB,MADZ,KACY,EACxB,OACE,UAAC,IAAD,CACEjB,KAAMmH,EACNnG,QAAS,SAAC2G,EAAOC,GACA,kBAAXA,GACF5G,KAGJY,UAAW7B,EAAQ4C,KACnBkB,GAAI,CACF,mBAAoB,CAClBjB,QAAS,wBAVf,WAcE,UAAC,IAAD,CAAahB,UAAW7B,EAAQe,MAAhC,WACE,iBAAKc,UAAW7B,EAAQ8H,UAAxB,UACG5G,EADH,IACeH,MAEf,gBAAKc,UAAW7B,EAAQ+H,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXlG,UAAW7B,EAAQgI,YACnBxF,QAASvB,EACTgH,eAAa,EACbpE,KAAK,QALP,UAOE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAehC,UAAW7B,EAAQkI,QAAlC,SACGX,KAEH,UAAC,IAAD,CAAe1F,UAAW7B,EAAQmI,QAAlC,WACE,SAAC,KAAD,gBACEtG,UAAW7B,EAAQoI,aACnB5F,QAAS6E,GAAYpG,EACrBwB,SAAUsE,EACV1E,KAAK,UACDsF,GALN,IAMErF,QAAQ,WACRC,MAAM,UACN8F,GAAI,iBARN,SAUGb,MAGH,SAAC,KAAD,gBACE3F,UAAW7B,EAAQsI,cACnBjG,KAAK,SACLG,QAAS8E,EACTjH,QAAS0G,EACTtE,SAAUsE,EACVzE,QAAQ,WACRC,MAAM,YACNgG,gBAAgB,QAChBC,WAAW,SAAC,WAAD,IACXC,WAAS,EACTJ,GAAI,cACAX,GAZN,aAcGD,e,wMC6DLlI,GAAYC,EAAAA,EAAAA,KAJD,SAACkJ,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClCC,qBAAAA,EAAAA,KAGF,KAAepJ,EAAAA,EAAAA,IAvIA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,kBACR+H,EAAAA,IADO,IAEVe,QAAS,CACPrF,QAAS,GACTkG,cAAe,GAEjBC,iBAAkB,CAChBzF,MAAO,OACP0F,SAAU,MAETC,EAAAA,OA4HP,CAAkC3J,GAzHb,SAAC,GAWF,IAVlB0B,EAUiB,EAVjBA,QACAD,EASiB,EATjBA,UACAD,EAQiB,EARjBA,MACA2D,EAOiB,EAPjBA,SACA1E,EAMiB,EANjBA,QAMiB,IALjBmJ,UAAAA,OAKiB,SAJjBR,EAIiB,EAJjBA,kBACAS,EAGiB,EAHjBA,iBACAN,EAEiB,EAFjBA,qBAEiB,IADjB5H,UAAAA,OACiB,MADL,KACK,EACjB,GAAwCd,EAAAA,EAAAA,WAAkB,GAA1D,eAAOiJ,EAAP,KAAqBC,EAArB,MAEA7I,EAAAA,EAAAA,YAAU,WACRqI,EAAqB,MACpB,CAACA,KAEJrI,EAAAA,EAAAA,YAAU,WACR,GAAIkI,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBY,QAEpB,YADAD,GAAgB,GAIa,UAA3BX,EAAkBtG,MACpBiH,GAAgB,MAGnB,CAACX,IAEJ,IAKMa,EAAaL,EACf,CACEnJ,QAAS,CACPyJ,MAAOzJ,EAAQgJ,mBAGnB,CAAEC,SAAU,KAAeS,WAAW,GAEtCH,EAAU,GAYd,OAVIZ,IACFY,EAAUZ,EAAkBgB,kBAEa,KAAvChB,EAAkBgB,kBAClBhB,EAAkBgB,iBAAiBC,OAAS,KAE5CL,EAAUZ,EAAkBY,WAK9B,UAAC,KAAD,gBACEtJ,KAAMe,EACNhB,QAASA,GACLwJ,GAHN,IAIEK,OAAQ,QACR5I,QAAS,SAAC2G,EAAOC,GACA,kBAAXA,GACF5G,KAGJY,UAAW7B,EAAQ4C,KAVrB,WAYE,UAAC,IAAD,CAAaf,UAAW7B,EAAQe,MAAhC,WACE,iBAAKc,UAAW7B,EAAQ8H,UAAxB,UACG5G,EADH,IACeH,MAEf,gBAAKc,UAAW7B,EAAQ+H,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXM,GAAI,QACJxG,UAAW7B,EAAQgI,YACnBxF,QAASvB,EACTgH,eAAa,EACbpE,KAAK,QANP,UAQE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAWiG,SAAS,KACpB,SAAC,IAAD,CACE7J,KAAMoJ,EACNxH,UAAW7B,EAAQ+J,cACnB9I,QAAS,WA3DbqI,GAAgB,GAChBR,EAAqB,KA6DjBS,QAASA,EACTS,aAAc,CACZnI,UAAU,GAAD,OAAK7B,EAAQiK,SAAb,YACPtB,GAAgD,UAA3BA,EAAkBtG,KACnCrC,EAAQkK,cACR,KAGRC,iBACExB,GAAgD,UAA3BA,EAAkBtG,KAAmB,IAAQ,OAGtE,SAAC,IAAD,CAAeR,UAAWuH,EAAmB,GAAKpJ,EAAQkI,QAA1D,SACGxD,a,sIC1FT,KAAehF,EAAAA,EAAAA,IApDA,SAACC,GAAD,OACbP,EAAAA,EAAAA,GAAa,CACXgL,aAAY,UACPA,EAAAA,GAAAA,aAELC,UAAW,OA+Cf,EAnCkB,SAAC,GAOI,IAAD,IANpBC,YAAAA,OAMoB,MANN,GAMM,EALpBtK,EAKoB,EALpBA,QACAsG,EAIoB,EAJpBA,SAIoB,IAHpBiE,kBAAAA,OAGoB,MAHA,MAGA,EAFpBC,EAEoB,EAFpBA,cACAzI,EACoB,EADpBA,MAEM0I,GAAU,QACdC,kBAAkB,GADJ,UAEVH,EAFU,cAGZ,SAAC,IAAD,CACEI,SAAUJ,EACV1I,UAAW7B,EAAQqK,UAFrB,UAIE,SAAC,IAAD,OAIN,OACE,SAAC,IAAD,CACEC,YAAaA,EACbzI,UAAW2I,GAAgCxK,EAAQoK,YACnD/B,GAAG,kBACHvG,MAAM,GACN8I,WAAYH,EACZnE,SAAU,SAAChF,GACTgF,EAAShF,EAAEuJ,OAAO9I,QAEpBO,QAAQ,WACRP,MAAOA,Q,4HCLP+I,EAAqB,CACzBC,qBAAAA,EAAAA,IAEIxL,GAAYC,EAAAA,EAAAA,IAAQ,KAAMsL,GAEhC,IAAevL,GA3CW,SAAC,GAKE,IAJ3ByL,EAI0B,EAJ1BA,2BACAC,EAG0B,EAH1BA,WACAC,EAE0B,EAF1BA,YACAH,EAC0B,EAD1BA,qBAKA,GAAyCI,EAAAA,EAAAA,IAHpB,kBAAMH,GAA2B,MACnC,SAAClK,GAAD,OAA+BiK,EAAqBjK,MAEvE,eAAOsK,EAAP,KAAsBC,EAAtB,KACA,IAAKH,EACH,OAAO,KAST,OACE,SAAC,IAAD,CACEnK,MAAK,0BACL0G,YAAa,SACbL,OAAQ6D,EACR/J,WAAW,SAAC,KAAD,IACX6F,UAAWqE,EACX9D,UAdoB,WACtB+D,EACE,SADa,wCAGbH,IAWAjK,QApBY,kBAAM+J,GAA2B,IAqB7CzD,qBACE,UAAC,IAAD,2DACgD2D,EAAYtB,OAAQ,IADpE,oBAEoB,a,uGCrCrB,IAAM0B,EAAY,SAACC,EAAkBC,GAC1C,OAAID,EAAEE,UAAYD,EAAEC,UACX,EAELF,EAAEE,UAAYD,EAAEC,WACV,EAGH,GAGIC,EAAa,SAACH,EAAoBC,GAC7C,OAAID,EAAEI,KAAOH,EAAEG,KACN,EAELJ,EAAEI,KAAOH,EAAEG,MACL,EAGH,GAGIC,EAAa,SAACL,EAAWC,GACpC,OAAID,EAAIC,EACC,EAELD,EAAIC,GACE,EAGH,I,0BCpDLK,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQ,EAAUG","sources":["screens/Console/Account/ServiceAccountPolicy.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Users/DeleteMultipleServiceAccounts.tsx","utils/sortFunctions.ts","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { ChangeAccessPolicyIcon } from \"../../../icons\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    codeMirrorContainer: {\n      marginBottom: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\ncreateStyles({\n  ...modalStyleUtils,\n  ...spacingUtils,\n});\n\ninterface IServiceAccountPolicyProps {\n  classes: any;\n  open: boolean;\n  selectedAccessKey: string | null;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst ServiceAccountPolicy = ({\n  classes,\n  open,\n  selectedAccessKey,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IServiceAccountPolicyProps) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/service-accounts/${selectedAccessKey}/policy`)\n        .then((res) => {\n          setLoading(false);\n          setPolicyDefinition(res);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  }, [loading, setLoading, setModalErrorSnackMessage, selectedAccessKey]);\n\n  const setPolicy = (event: React.FormEvent, newPolicy: string) => {\n    event.preventDefault();\n    api\n      .invoke(\"PUT\", `/api/v1/service-accounts/${selectedAccessKey}/policy`, {\n        policy: newPolicy,\n      })\n      .then((res) => {\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title=\"Service Account Policy\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      titleIcon={<ChangeAccessPolicyIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          setPolicy(e, policyDefinition);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.codeMirrorContainer}>\n            <CodeMirrorWrapper\n              label={`Service Account Policy`}\n              value={policyDefinition}\n              onBeforeChange={(editor, data, value) => {\n                setPolicyDefinition(value);\n              }}\n              editorHeight={\"350px\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Set\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ServiceAccountPolicy));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    className = \"\",\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      className={className}\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            className={isDarkTheme ? \"dark-theme\" : \"\"}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n\n              \"&.dark-theme button\": {\n                background: \"#FFFFFF\",\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../../../screens/Console/Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../../screens/Console/Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\ninterface IDeleteMultiSAsProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedSAs: string[];\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\nconst DeleteMultipleSAs = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedSAs,\n  setErrorSnackMessage,\n}: IDeleteMultiSAsProps) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n  if (!selectedSAs) {\n    return null;\n  }\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/service-accounts/delete-multi`,\n      selectedSAs\n    );\n  };\n  return (\n    <ConfirmDialog\n      title={`Delete Service Accounts`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the selected {selectedSAs.length}{\" \"}\n          service accounts?{\" \"}\n        </DialogContentText>\n      }\n    />\n  );\n};\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteMultipleSAs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\ninterface userInterface {\n  accessKey: string;\n}\n\ninterface policyInterface {\n  name: string;\n}\n\nexport const usersSort = (a: userInterface, b: userInterface) => {\n  if (a.accessKey > b.accessKey) {\n    return 1;\n  }\n  if (a.accessKey < b.accessKey) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: policyInterface, b: policyInterface) => {\n  if (a.name > b.name) {\n    return 1;\n  }\n  if (a.name < b.name) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"names":["createStyles","modalStyleUtils","spacingUtils","connector","connect","setModalErrorSnackMessage","withStyles","theme","codeMirrorContainer","marginBottom","display","formFieldStyles","classes","open","selectedAccessKey","closeModalAndRefresh","useState","loading","setLoading","policyDefinition","setPolicyDefinition","useEffect","api","then","res","catch","err","title","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","newPolicy","preventDefault","policy","container","item","xs","className","label","value","onBeforeChange","editor","data","editorHeight","modalButtonBar","type","variant","color","onClick","disabled","useStyles","makeStyles","root","padding","props","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","tooltip","icon","restProps","size","sx","border","fontSize","borderWidth","borderStyle","borderRadius","backgroundColor","opacity","contained","background","dark","light","children","rest","button","clsx","langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","caretColor","borderLeftColor","borderRight","fontWeight","darkTheme","fieldBasic","mode","readOnly","isDarkTheme","setIsDarkTheme","extensionList","inputLabel","tooltipContainer","placement","extensions","editable","basicSetup","height","onChange","v","vu","borderTop","alignItems","paddingRight","justifyContent","onSuccess","onError","isLoading","setIsLoading","method","url","deleteDialogStyles","isOpen","onCancel","onConfirm","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","event","reason","titleText","closeContainer","closeButton","disableRipple","content","actions","cancelButton","id","confirmButton","loadingPosition","startIcon","autoFocus","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","paddingBottom","customDialogSize","maxWidth","snackBarCommon","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","searchField","adornment","placeholder","adornmentPosition","overrideClass","inputProps","disableUnderline","position","InputProps","target","mapDispatchToProps","setErrorSnackMessage","closeDeleteModalAndRefresh","deleteOpen","selectedSAs","useApi","deleteLoading","invokeDeleteApi","usersSort","a","b","accessKey","policySort","name","stringSort","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}