{"version":3,"file":"static/js/9561.440983d7.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, ClustersIcon, RemoveIcon } from \"../../../../icons\";\nimport { ReplicationSite } from \"./SiteReplication\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button, LinearProgress } from \"@mui/material\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage, setSnackBarMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../../common/BackLink\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport history from \"../../../../history\";\n\ntype SiteInputRow = {\n  name: string;\n  endpoint: string;\n};\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl || ep === \"\") {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\nconst AddReplicationSites = ({\n  setErrorSnackMessage,\n  setSnackBarMessage,\n}: {\n  existingSites: ReplicationSite[];\n  onClose: () => void;\n  setErrorSnackMessage: (err: ErrorResponseHandler) => void;\n  setSnackBarMessage: (msg: string) => void;\n}) => {\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [siteConfig, setSiteConfig] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = existingSites?.length\n      ? [{ endpoint: \"\", name: \"\" }]\n      : [\n          { endpoint: \"\", name: \"\" },\n          { endpoint: \"\", name: \"\" },\n        ];\n    setSiteConfig(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n        };\n        siteList.splice(foundIdx, 1, curSite);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n      setExistingSites(siteList);\n    },\n    (err: any) => {\n      setExistingSites([]);\n    }\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setDefaultNewRows();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [existingSites]);\n\n  const isAllEndpointsValid =\n    siteConfig.reduce((acc: string[], cv, i) => {\n      const epValue = siteConfig[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    }, []).length === siteConfig.length;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        setSnackBarMessage(res.status);\n        resetForm();\n        getSites();\n        history.push(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        setErrorSnackMessage({\n          errorMessage: \"Error\",\n          detailedError: res.status,\n        });\n      }\n    },\n    (err: any) => {\n      setErrorSnackMessage(err);\n    }\n  );\n\n  const resetForm = () => {\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setDefaultNewRows();\n  };\n\n  const addSiteReplication = () => {\n    const existingSitesToAdd = existingSites?.map((es, idx) => {\n      return {\n        accessKey: accessKey,\n        secretKey: secretKey,\n        name: es.name,\n        endpoint: es.endpoint,\n      };\n    });\n\n    const newSitesToAdd = siteConfig.reduce((acc: any, ns, idx) => {\n      if (ns.endpoint) {\n        acc.push({\n          accessKey: accessKey,\n          secretKey: secretKey,\n          name: ns.name || `dr-site-${idx}`,\n          endpoint: ns.endpoint,\n        });\n      }\n      return acc;\n    }, []);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, [\n      ...(existingSitesToAdd || []),\n      ...(newSitesToAdd || []),\n    ]);\n  };\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <BackLink\n            to={IAM_PAGES.SITE_REPLICATION}\n            label={\"Add Replication Site\"}\n          />\n        }\n      />\n      <PageLayout>\n        <ScreenTitle title={\"Add Sites for Replication\"} icon={ClustersIcon} />\n\n        {isSiteInfoLoading || isAdding ? <LinearProgress /> : null}\n\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: {\n              md: \"2fr 1.2fr\",\n              xs: \"1fr\",\n            },\n          }}\n        >\n          <Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              <Grid item xs={12} marginBottom={\"15px\"}>\n                <Box\n                  sx={{\n                    fontStyle: \"italic\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    fontSize: \"12px\",\n                  }}\n                >\n                  <Box sx={{ fontWeight: 600 }}>Note:</Box>{\" \"}\n                  <Box sx={{ marginLeft: \"8px\" }}>\n                    Access Key and Secret Key should be same on all sites.\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                marginBottom={\"15px\"}\n                sx={{\n                  \"& label span\": {\n                    fontWeight: \"normal\",\n                  },\n                }}\n              >\n                <InputBoxWrapper\n                  id=\"add-rep-peer-accKey\"\n                  name=\"add-rep-peer-accKey\"\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setAccessKey(event.target.value);\n                  }}\n                  label=\"Access Key\"\n                  required={true}\n                  value={accessKey}\n                  error={accessKey === \"\" ? \"Access Key is required.\" : \"\"}\n                  data-test-id={\"add-site-rep-acc-key\"}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                marginBottom={\"30px\"}\n                sx={{\n                  \"& label span\": {\n                    fontWeight: \"normal\",\n                  },\n                }}\n              >\n                <InputBoxWrapper\n                  id=\"add-rep-peer-secKey\"\n                  name=\"add-rep-peer-secKey\"\n                  type={\"password\"}\n                  required={true}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setSecretKey(event.target.value);\n                  }}\n                  error={secretKey === \"\" ? \"Secret Key is required.\" : \"\"}\n                  label=\"Secret Key\"\n                  value={secretKey}\n                  data-test-id={\"add-site-rep-sec-key\"}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    marginBottom: \"15px\",\n                    fontSize: \"14px\",\n                    fontWeight: 600,\n                  }}\n                >\n                  Peer Sites\n                </Box>\n              </Grid>\n\n              <Box\n                sx={{\n                  display: \"grid\",\n                  gridTemplateColumns: \".8fr 1.2fr .2fr\",\n                  border: \"1px solid #eaeaea\",\n                  padding: \"15px\",\n                  gap: \"10px\",\n                  maxHeight: \"430px\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <Box\n                  sx={{\n                    fontSize: \"14px\",\n                    marginLeft: \"5px\",\n                  }}\n                >\n                  Site Name\n                </Box>\n                <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>\n                  Endpoint {\"*\"}\n                </Box>\n                <Box> </Box>\n                {existingSites?.map((si, index) => {\n                  return (\n                    <Fragment key={si.name}>\n                      <Box>\n                        <InputBoxWrapper\n                          id={`add-rep-ex-peer-site-${index}`}\n                          name={`add-rep-ex-peer-site-${index}`}\n                          extraInputProps={{\n                            readOnly: true,\n                          }}\n                          label=\"\"\n                          value={si.name}\n                          onChange={() => {}}\n                        />\n                      </Box>\n                      <Box>\n                        <InputBoxWrapper\n                          id={`add-rep-ex-peer-site-ep-${index}`}\n                          name={`add-rep-ex-peer-site-ep-${index}`}\n                          extraInputProps={{\n                            readOnly: true,\n                          }}\n                          label=\"\"\n                          value={si.endpoint}\n                          onChange={() => {}}\n                        />\n                      </Box>\n                      <Grid item xs={12}>\n                        {\" \"}\n                      </Grid>\n                    </Fragment>\n                  );\n                })}\n\n                {siteConfig.map((sci, index) => {\n                  let isDelDisabled = false;\n\n                  if (existingSites?.length && index === 0) {\n                    isDelDisabled = true;\n                  } else if (!existingSites?.length && index < 2) {\n                    isDelDisabled = true;\n                  }\n\n                  return (\n                    <Fragment key={`${index}`}>\n                      <Box>\n                        <InputBoxWrapper\n                          id={`add-rep-peer-site-${index}`}\n                          name={`add-rep-peer-site-${index}`}\n                          placeholder={`dr-site-${index}`}\n                          label=\"\"\n                          value={`${sci.name}`}\n                          onChange={(e) => {\n                            const nameTxt = e.target.value;\n                            setSiteConfig((prevItems) => {\n                              return prevItems.map((item, ix) =>\n                                ix === index ? { ...item, name: nameTxt } : item\n                              );\n                            });\n                          }}\n                          data-test-id={`add-site-rep-peer-site-${index}`}\n                        />\n                      </Box>\n                      <Box>\n                        <InputBoxWrapper\n                          id={`add-rep-peer-site-ep-${index}`}\n                          name={`add-rep-peer-site-ep-${index}`}\n                          placeholder={`https://dr.minio-storage:900${index}`}\n                          label=\"\"\n                          error={isValidEndPoint(siteConfig[index].endpoint)}\n                          value={`${sci.endpoint}`}\n                          onChange={(e) => {\n                            const epTxt = e.target.value;\n                            setSiteConfig((prevItems) => {\n                              return prevItems.map((item, ix) =>\n                                ix === index\n                                  ? { ...item, endpoint: epTxt }\n                                  : item\n                              );\n                            });\n                          }}\n                          data-test-id={`add-site-rep-peer-ep-${index}`}\n                        />\n                      </Box>\n                      <Grid item xs={12} alignItems={\"center\"} display={\"flex\"}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            alignSelf: \"baseline\",\n                            marginTop: \"4px\",\n\n                            \"& button\": {\n                              borderColor: \"#696969\",\n                              color: \"#696969\",\n                              borderRadius: \"50%\",\n                            },\n                          }}\n                        >\n                          <RBIconButton\n                            tooltip={\"Add a Row\"}\n                            text={\"\"}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            icon={<AddIcon />}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              const newRows = [...siteConfig];\n                              //add at the next index\n                              newRows.splice(index + 1, 0, {\n                                name: \"\",\n                                endpoint: \"\",\n                              });\n\n                              setSiteConfig(newRows);\n                            }}\n                          />\n                          <RBIconButton\n                            tooltip={\"Remove Row\"}\n                            text={\"\"}\n                            variant=\"outlined\"\n                            disabled={isDelDisabled}\n                            color=\"primary\"\n                            icon={<RemoveIcon />}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              setSiteConfig(\n                                siteConfig.filter((_, idx) => idx !== index)\n                              );\n                            }}\n                          />\n                        </Box>\n                      </Grid>\n                    </Fragment>\n                  );\n                })}\n              </Box>\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                  >\n                    Clear\n                  </Button>\n\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={\n                      isAdding ||\n                      !accessKey ||\n                      !secretKey ||\n                      !isAllEndpointsValid\n                    }\n                  >\n                    Save\n                  </Button>\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& .step-number\": {\n                      color: \"#ffffff\",\n                      height: \"25px\",\n                      width: \"25px\",\n                      background: \"#081C42\",\n                      marginRight: \"10px\",\n                      textAlign: \"center\",\n                      fontWeight: 600,\n                      borderRadius: \"50%\",\n                    },\n\n                    \"& .step-row\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                      \"&:before\": {\n                        content: \"' '\",\n                        height: \"7px\",\n                        width: \"7px\",\n                        backgroundColor: \"#2781B0\",\n                        marginRight: \"10px\",\n                        marginTop: \"12px\",\n                        flexShrink: 0,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      Creation and deletion of buckets and objects\n                    </div>\n                  </Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </div>\n                  </Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">Creation of STS credentials</div>\n                  </Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </div>\n                  </Box>\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      Changes to Bucket features such as\n                      <ul>\n                        <li>Bucket Policies</li>\n                        <li>Bucket Tags</li>\n                        <li>Bucket Object-Lock configurations</li>\n                        <li>Bucket Encryption configuration</li>\n                      </ul>\n                    </div>\n                  </Box>\n\n                  <Box className=\"step-row\">\n                    <div className=\"step-text\">\n                      The following Bucket features will NOT be replicated\n                      <ul>\n                        <li>Bucket notification configuration</li>\n                        <li>Bucket lifecycle (ILM) configuration</li>\n                      </ul>\n                    </div>\n                  </Box>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n});\nexport default connector(AddReplicationSites);\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","api","then","res","catch","err","isValidEndPoint","ep","isValidEndPointUrl","URL","connector","connect","setErrorSnackMessage","setSnackBarMessage","existingSites","setExistingSites","accessKey","setAccessKey","secretKey","setSecretKey","siteConfig","setSiteConfig","setDefaultNewRows","defaultNewSites","length","endpoint","name","useApi","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","splice","sort","x","y","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","isAllEndpointsValid","reduce","acc","cv","i","epValue","isEpValid","push","success","status","resetForm","history","IAM_PAGES","errorMessage","detailedError","isAdding","invokeSiteAddApi","Fragment","label","to","icon","ClustersIcon","sx","padding","gap","gridTemplateColumns","md","noValidate","autoComplete","onSubmit","e","preventDefault","existingSitesToAdd","map","es","idx","newSitesToAdd","ns","addSiteReplication","fontStyle","marginLeft","id","onChange","event","target","value","required","error","type","maxHeight","overflowY","si","index","extraInputProps","readOnly","sci","isDelDisabled","placeholder","nameTxt","prevItems","ix","epTxt","justifyContent","alignSelf","marginTop","borderColor","color","tooltip","text","variant","onClick","newRows","disabled","filter","_","fill","flexFlow","flex","background","textAlign","content","flexShrink"],"sourceRoot":""}