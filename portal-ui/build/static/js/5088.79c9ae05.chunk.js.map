{"version":3,"file":"static/js/5088.79c9ae05.chunk.js","mappings":"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","sources":["screens/Console/HealthInfo/types.ts","screens/Console/Common/TestWrapper/TestWrapper.tsx","screens/Console/HealthInfo/HealthInfo.tsx","screens/Console/Support/RegisterCluster.tsx","utils/wsUtils.ts","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const DiagStatError = \"error\";\nexport const DiagStatSuccess = \"success\";\nexport const DiagStatInProgress = \"inProgress\";\n\nexport interface HealthInfoMessage {\n  timestamp: Date;\n  error: string;\n  perf: perfInfo;\n  minio: minioHealthInfo;\n  sys: sysHealthInfo;\n}\n\nexport interface ReportMessage {\n  encoded: string;\n  serverHealthInfo: HealthInfoMessage;\n}\n\nexport interface perfInfo {\n  drives: serverDrivesInfo[];\n  net: serverNetHealthInfo[];\n  net_parallel: serverNetHealthInfo;\n  error: string;\n}\n\nexport interface serverDrivesInfo {\n  addr: string;\n  serial: drivePerfInfo[];\n  parallel: drivePerfInfo[];\n  error: string;\n}\n\nexport interface drivePerfInfo {\n  endpoint: string;\n  latency: diskLatency;\n  throughput: diskThroughput;\n  error: string;\n}\n\nexport interface diskLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface diskThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface serverNetHealthInfo {\n  addr: string;\n  net: netPerfInfo[];\n  error: string;\n}\n\nexport interface netPerfInfo {\n  remote: string;\n  latency: netLatency;\n  throughput: netThroughput;\n  error: string;\n}\n\nexport interface netLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface netThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface minioHealthInfo {\n  info: infoMessage;\n  config: any;\n  error: string;\n}\n\nexport interface infoMessage {\n  mode: string;\n  domain: string[];\n  region: string;\n  sqsARN: string[];\n  deploymentID: string;\n  buckets: buckets;\n  objects: objects;\n  usage: usage;\n  services: services;\n  backend: any;\n  servers: serverProperties[];\n}\n\nexport interface buckets {\n  count: number;\n}\n\nexport interface objects {\n  count: number;\n}\n\nexport interface usage {\n  size: number;\n}\n\nexport interface services {\n  vault: vault;\n  ldap: ldap;\n  logger: Map<string, status[]>[];\n  audit: Map<string, status[]>[];\n  notifications: Map<string, Map<string, status[]>[]>;\n}\n\nexport interface vault {\n  status: string;\n  encrypt: string;\n  decrypt: string;\n}\n\nexport interface ldap {\n  status: string;\n}\n\nexport interface status {\n  status: string;\n}\n\nexport interface serverProperties {\n  state: string;\n  endpoint: string;\n  uptime: number;\n  version: string;\n  commitID: string;\n  network: Map<string, string>;\n  drives: disk[];\n}\n\nexport interface disk {\n  endpoint: string;\n  rootDisk: boolean;\n  path: string;\n  healing: boolean;\n  state: string;\n  uuid: string;\n  model: string;\n  totalspace: number;\n  usedspace: number;\n  availspace: number;\n  readthroughput: number;\n  writethroughput: number;\n  readlatency: number;\n  writelatency: number;\n  utilization: number;\n}\n\nexport interface sysHealthInfo {\n  cpus: serverCpuInfo[];\n  drives: serverDiskHwInfo[];\n  osinfos: serverOsInfo[];\n  meminfos: serverMemInfo[];\n  procinfos: serverProcInfo[];\n  error: string;\n}\n\nexport interface serverCpuInfo {\n  addr: string;\n  cpu: cpuInfoStat[];\n  time: cpuTimeStat[];\n  error: string;\n}\n\nexport interface cpuInfoStat {\n  cpu: number;\n  vendorId: string;\n  family: string;\n  model: string;\n  stepping: number;\n  physicalId: string;\n  coreId: string;\n  cores: number;\n  modelName: string;\n  mhz: number;\n  cacheSize: number;\n  flags: string[];\n  microcode: string;\n}\n\nexport interface cpuTimeStat {\n  cpu: string;\n  user: number;\n  system: number;\n  idle: number;\n  nice: number;\n  iowait: number;\n  irq: number;\n  softirq: number;\n  steal: number;\n  guest: number;\n  guestNice: number;\n}\n\nexport interface serverDiskHwInfo {\n  addr: string;\n  usages: diskUsageStat[];\n  partitions: partitionStat[];\n  counters: Map<string, diskIOCountersStat>;\n  error: string;\n}\n\nexport interface diskUsageStat {\n  path: string;\n  fstype: string;\n  total: number;\n  free: number;\n  used: number;\n  usedPercent: number;\n  inodesTotal: number;\n  inodesUsed: number;\n  inodesFree: number;\n  inodesUsedPercent: number;\n}\n\nexport interface partitionStat {\n  device: string;\n  mountpoint: string;\n  fstype: string;\n  opts: string;\n  smartInfo: smartInfo;\n}\n\nexport interface smartInfo {\n  device: string;\n  scsi: scsiInfo;\n  nvme: nvmeInfo;\n  ata: ataInfo;\n  error: string;\n}\n\nexport interface scsiInfo {\n  scsiCapacityBytes: number;\n  scsiModeSenseBuf: string;\n  scsirespLen: number;\n  scsiBdLen: number;\n  scsiOffset: number;\n  sciRpm: number;\n}\n\nexport interface nvmeInfo {\n  serialNum: string;\n  vendorId: string;\n  firmwareVersion: string;\n  modelNum: string;\n  spareAvailable: string;\n  spareThreshold: string;\n  temperature: string;\n  criticalWarning: string;\n  maxDataTransferPages: number;\n  controllerBusyTime: number;\n  powerOnHours: number;\n  powerCycles: number;\n  unsafeShutdowns: number;\n  mediaAndDataIntgerityErrors: number;\n  dataUnitsReadBytes: number;\n  dataUnitsWrittenBytes: number;\n  hostReadCommands: number;\n  hostWriteCommands: number;\n}\n\nexport interface ataInfo {\n  scsiLuWWNDeviceID: string;\n  serialNum: string;\n  modelNum: string;\n  firmwareRevision: string;\n  RotationRate: string;\n  MajorVersion: string;\n  MinorVersion: string;\n  smartSupportAvailable: boolean;\n  smartSupportEnabled: boolean;\n  smartErrorLog: string;\n  transport: string;\n}\n\nexport interface diskIOCountersStat {\n  readCount: number;\n  mergedReadCount: number;\n  DriteCount: number;\n  mergedWriteCount: number;\n  readBytes: number;\n  writeBytes: number;\n  readTime: number;\n  writeTime: number;\n  iopsInProgress: number;\n  ioTime: number;\n  weightedIO: number;\n  name: string;\n  serialNumber: string;\n  label: string;\n}\n\nexport interface serverOsInfo {\n  addr: string;\n  info: infoStat;\n  sensors: temperatureStat[];\n  users: userStat[];\n  error: string;\n}\n\nexport interface infoStat {\n  hostname: string;\n  uptime: number;\n  bootTime: number;\n  procs: number;\n  os: string;\n  platform: string;\n  platformFamily: string;\n  platformVersion: string;\n  kernelVersion: string;\n  kernelArch: string;\n  virtualizationSystem: string;\n  virtualizationRole: string;\n  hostid: string;\n}\n\nexport interface temperatureStat {\n  sensorKey: string;\n  sensorTemperature: number;\n}\n\nexport interface userStat {\n  user: string;\n  terminal: string;\n  host: string;\n  started: number;\n}\n\nexport interface serverMemInfo {\n  addr: string;\n  swap: swapMemoryStat;\n  virtualmem: virtualMemoryStat;\n  error: string;\n}\n\nexport interface swapMemoryStat {\n  total: number;\n  used: number;\n  free: number;\n  usedPercent: number;\n  sin: number;\n  sout: number;\n  pgin: number;\n  pgout: number;\n  pgfault: number;\n  pgmajfault: number;\n}\n\nexport interface virtualMemoryStat {\n  total: number;\n  available: number;\n  used: number;\n  usedPercent: number;\n  free: number;\n  active: number;\n  inactive: number;\n  wired: number;\n  laundry: number;\n  buffers: number;\n  cached: number;\n  writeback: number;\n  dirty: number;\n  writebacktmp: number;\n  shared: number;\n  slab: number;\n  sreclaimable: number;\n  sunreclaim: number;\n  pagetables: number;\n  swapcached: number;\n  commitlimit: number;\n  committedas: number;\n  hightotal: number;\n  highfree: number;\n  lowtotal: number;\n  lowfree: number;\n  swaptotal: number;\n  swapfree: number;\n  mapped: number;\n  vmalloctotal: number;\n  vmallocused: number;\n  vmallocchunk: number;\n  hugepagestotal: number;\n  hugepagesfree: number;\n  hugepagesize: number;\n}\n\nexport interface serverProcInfo {\n  addr: string;\n  processes: sysProcess[];\n  error: string;\n}\n\nexport interface sysProcess {\n  pid: number;\n  background: boolean;\n  cpupercent: number;\n  children: number[];\n  cmd: string;\n  connections: nethwConnectionStat[];\n  createtime: number;\n  cwd: string;\n  exe: string;\n  gids: number[];\n  iocounters: processIOCountersStat;\n  isrunning: boolean;\n  meminfo: memoryInfoStat;\n  memmaps: any[];\n  mempercent: number;\n  name: string;\n  netiocounters: nethwIOCounterStat[];\n  nice: number;\n  numctxswitches: processNmCtxSwitchesStat;\n  numfds: number;\n  numthreads: number;\n  pagefaults: processPageFaultsStat;\n  parent: number;\n  ppid: number;\n  rlimit: processRLimitStat[];\n  status: string;\n  tgid: number;\n  cputimes: cpuTimeStat;\n  uids: number[];\n  username: string;\n}\n\nexport interface nethwConnectionStat {\n  fd: number;\n  family: number;\n  type: number;\n  localaddr: netAddr;\n  remoteaddr: netAddr;\n  status: string;\n  uids: number[];\n  pid: number;\n}\n\nexport interface netAddr {\n  ip: string;\n  port: number;\n}\n\nexport interface processIOCountersStat {\n  readCount: number;\n  writeCount: number;\n  readBytes: number;\n  writeBytes: number;\n}\n\nexport interface memoryInfoStat {\n  rss: number;\n  vms: number;\n  hwm: number;\n  data: number;\n  stack: number;\n  locked: number;\n  swap: number;\n}\n\nexport interface nethwIOCounterStat {\n  name: string;\n  bytesSent: number;\n  bytesRecv: number;\n  packetsSent: number;\n  packetsRecv: number;\n  errin: number;\n  errout: number;\n  dropin: number;\n  dropout: number;\n  fifoin: number;\n  fifoout: number;\n}\n\nexport interface processNmCtxSwitchesStat {\n  voluntary: number;\n  involuntary: number;\n}\n\nexport interface processPageFaultsStat {\n  minorFaults: number;\n  majorFaults: number;\n  childMinorFaults: number;\n  childMajorFaults: number;\n}\n\nexport interface processRLimitStat {\n  resource: number;\n  soft: number;\n  hard: number;\n  used: number;\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { DrivesIcon, Loader, VersionIcon } from \"mds\";\nimport { ServerInfo, Usage } from \"../../Dashboard/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\n\ninterface ITestWrapper {\n  title: any;\n  children: any;\n  classes: any;\n  advancedVisible: boolean;\n  advancedContent?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    titleBar: {\n      borderBottom: \"#E5E5E5 1px solid\",\n      padding: \"30px 25px\",\n      fontSize: 20,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      borderRadius: \"10px 10px 0px 0px\",\n      paddingTop: 0,\n    },\n    divisorContainer: {\n      padding: 25,\n    },\n    serversData: {\n      color: \"#07193E\",\n      fontSize: 18,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        marginRight: 10,\n      },\n    },\n    minioVersionContainer: {\n      fontSize: 12,\n      color: \"#07193E\",\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n    },\n    versionIcon: {\n      color: \"#07193E\",\n      marginRight: 20,\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    advancedContainer: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n    },\n    optionsContainer: {\n      padding: 0,\n      marginBottom: 25,\n    },\n    advancedConfiguration: {\n      color: \"#2781B0\",\n      fontSize: 10,\n      textDecoration: \"underline\",\n      border: \"none\",\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      alignItems: \"center\",\n      display: \"flex\",\n\n      \"&:hover\": {\n        color: \"#07193E\",\n      },\n\n      \"& svg\": {\n        width: 10,\n        alignSelf: \"center\",\n        marginLeft: 5,\n      },\n    },\n    advancedOpen: {\n      transform: \"rotateZ(-90deg) translateX(-4px) translateY(2px)\",\n    },\n    advancedClosed: {\n      transform: \"rotateZ(90deg)\",\n    },\n    advancedContent: {\n      backgroundColor: \"#F5F7F9\",\n      maxHeight: 0,\n      transitionDuration: \"0.3s\",\n      overflow: \"hidden\",\n      padding: \"0 15px\",\n      \"&.open\": {\n        maxHeight: 400,\n        padding: 15,\n      },\n    },\n  });\n\nconst TestWrapper = ({\n  title,\n  children,\n  classes,\n  advancedVisible,\n  advancedContent,\n}: ITestWrapper) => {\n  const [version, setVersion] = useState<string>(\"N/A\");\n  const [totalNodes, setTotalNodes] = useState<number>(0);\n  const [totalDrives, setTotalDrives] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [advancedOpen, setAdvancedOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/info?defaultOnly=true`)\n        .then((res: Usage) => {\n          const totalServers = res.servers?.length;\n          setTotalNodes(totalServers);\n\n          if (res.servers.length > 0) {\n            setVersion(res.servers[0].version);\n\n            const totalServers = res.servers.reduce(\n              (prevTotal: number, currentElement: ServerInfo) => {\n                return prevTotal + currentElement.drives.length;\n              },\n              0\n            );\n            setTotalDrives(totalServers);\n          }\n\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  return (\n    <Grid item xs={12}>\n      <Grid item xs={12} className={classes.titleBar}>\n        {title}\n      </Grid>\n      <Grid item xs={12}>\n        <Grid item xs={12} className={classes.optionsContainer}>\n          <Grid container className={classes.divisorContainer}>\n            {!loading ? (\n              <Fragment>\n                <Grid item xs={12} md={4} className={classes.serversData}>\n                  <DrivesIcon /> <strong>{totalNodes}</strong>\n                  &nbsp;nodes,&nbsp;\n                  <strong>{totalDrives}</strong>&nbsp; drives\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  md={4}\n                  className={classes.minioVersionContainer}\n                >\n                  <span className={classes.versionIcon}>\n                    <VersionIcon />\n                  </span>{\" \"}\n                  MinIO VERSION&nbsp;<strong>{version}</strong>\n                </Grid>\n                <Grid item xs={12} md={4} className={classes.advancedContainer}>\n                  {advancedVisible && (\n                    <button\n                      onClick={() => {\n                        setAdvancedOpen(!advancedOpen);\n                      }}\n                      className={classes.advancedConfiguration}\n                    >\n                      Advanced configurations{\" \"}\n                      <span\n                        className={\n                          advancedOpen\n                            ? classes.advancedOpen\n                            : classes.advancedClosed\n                        }\n                      >\n                        <ArrowForwardIosIcon />\n                      </span>\n                    </button>\n                  )}\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.loaderAlign}>\n                  <Loader style={{ width: 25, height: 25 }} />\n                </Grid>\n              </Fragment>\n            )}\n          </Grid>\n          {advancedContent && (\n            <Grid\n              xs={12}\n              className={`${classes.advancedContent} ${\n                advancedOpen ? \"open\" : \"\"\n              }`}\n            >\n              {advancedContent}\n            </Grid>\n          )}\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TestWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  ICloseEvent,\n  IMessageEvent,\n  w3cwebsocket as W3CWebSocket,\n} from \"websocket\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, HelpBox, Loader, PageHeader, WarnIcon } from \"mds\";\nimport {\n  DiagStatError,\n  DiagStatInProgress,\n  DiagStatSuccess,\n  HealthInfoMessage,\n  ReportMessage,\n} from \"./types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  WSCloseAbnormalClosure,\n  WSCloseInternalServerErr,\n  WSClosePolicyViolation,\n  wsProtocol,\n} from \"../../../utils/wsUtils\";\nimport {\n  actionsTray,\n  containerForHeader,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { Grid } from \"@mui/material\";\n\nimport TestWrapper from \"../Common/TestWrapper/TestWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { setServerDiagStat } from \"../../../systemSlice\";\nimport {\n  healthInfoMessageReceived,\n  healthInfoResetMessage,\n} from \"./healthInfoSlice\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\nimport { registeredCluster } from \"../../../config\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    loading: {\n      paddingTop: 8,\n      paddingLeft: 40,\n    },\n    buttons: {\n      justifyContent: \"flex-start\",\n      gap: 20,\n    },\n    localMessage: {\n      fontSize: 24,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    progressResult: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    startDiagnostic: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      margin: 25,\n      marginBottom: 0,\n    },\n    startDiagnosticCenter: {\n      textAlign: \"center\",\n      marginTop: 0,\n    },\n    ...actionsTray,\n    ...containerForHeader,\n  });\n\ninterface IHealthInfo {\n  classes: any;\n  namespace: string;\n  tenant: string;\n}\n\nconst HealthInfo = ({ classes }: IHealthInfo) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const message = useSelector((state: AppState) => state.healthInfo.message);\n\n  const clusterRegistered = registeredCluster();\n\n  const serverDiagnosticStatus = useSelector(\n    (state: AppState) => state.system.serverDiagnosticStatus\n  );\n  const [startDiagnostic, setStartDiagnostic] = useState(false);\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  const [localMessage, setMessage] = useState<string>(\"\");\n  const [buttonStartText, setButtonStartText] =\n    useState<string>(\"Start Diagnostic\");\n  const [title, setTitle] = useState<string>(\"New Diagnostic\");\n  const [diagFileContent, setDiagFileContent] = useState<string>(\"\");\n\n  const isDiagnosticComplete =\n    serverDiagnosticStatus === DiagStatSuccess ||\n    serverDiagnosticStatus === DiagStatError;\n\n  const download = () => {\n    let element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:application/gzip;base64,${diagFileContent}`\n    );\n    element.setAttribute(\"download\", \"diagnostic.json.gz\");\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  useEffect(() => {\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      setTitle(\"Diagnostic in progress...\");\n      setMessage(\n        \"Diagnostic started. Please do not refresh page during diagnosis.\"\n      );\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatSuccess) {\n      setTitle(\"Diagnostic complete\");\n      setMessage(\"Diagnostic file is ready to be downloaded.\");\n      setButtonStartText(\"Start New Diagnostic\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatError) {\n      setTitle(\"Error\");\n      setMessage(\"An error occurred while getting the Diagnostic file.\");\n      setButtonStartText(\"Retry Diagnostic\");\n      return;\n    }\n  }, [serverDiagnosticStatus, startDiagnostic]);\n\n  useEffect(() => {\n    if (\n      serverDiagnosticStatus === DiagStatSuccess &&\n      message !== ({} as HealthInfoMessage)\n    ) {\n      // Allow download of diagnostics file only when\n      // it succeded fetching all the results and info is not empty.\n      setDownloadDisabled(false);\n    }\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      // Disable Start Diagnotic and Disable Download buttons\n      // if a Diagnosis is in progress.\n      setDownloadDisabled(true);\n    }\n    setStartDiagnostic(false);\n  }, [serverDiagnosticStatus, message]);\n\n  useEffect(() => {\n    if (startDiagnostic) {\n      dispatch(healthInfoResetMessage());\n      setDiagFileContent(\"\");\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      const wsProt = wsProtocol(url.protocol);\n\n      // check if we are using base path, if not this always is `/`\n      const baseLocation = new URL(document.baseURI);\n      const baseUrl = baseLocation.pathname;\n\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/health-info?deadline=1h`\n      );\n\n      let interval: any | null = null;\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n          interval = setInterval(() => {\n            c.send(\"ok\");\n          }, 10 * 1000);\n          setMessage(\n            \"Diagnostic started. Please do not refresh page during diagnosis.\"\n          );\n          dispatch(setServerDiagStat(DiagStatInProgress));\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: ReportMessage = JSON.parse(message.data.toString());\n          if (m.serverHealthInfo) {\n            m.serverHealthInfo.timestamp = new Date(\n              m.serverHealthInfo.timestamp.toString()\n            );\n            dispatch(healthInfoMessageReceived(m.serverHealthInfo));\n          }\n          if (m.encoded !== \"\") {\n            setDiagFileContent(m.encoded);\n          }\n        };\n        c.onerror = (error: Error) => {\n          console.log(\"error closing websocket:\", error.message);\n          c.close(1000);\n          clearInterval(interval);\n          dispatch(setServerDiagStat(DiagStatError));\n        };\n        c.onclose = (event: ICloseEvent) => {\n          clearInterval(interval);\n          if (\n            event.code === WSCloseInternalServerErr ||\n            event.code === WSClosePolicyViolation ||\n            event.code === WSCloseAbnormalClosure\n          ) {\n            // handle close with error\n            console.log(\"connection closed by server with code:\", event.code);\n            setMessage(\"An error occurred while getting the Diagnostic file.\");\n            dispatch(setServerDiagStat(DiagStatError));\n          } else {\n            console.log(\"connection closed by server\");\n\n            setMessage(\"Diagnostic file is ready to be downloaded.\");\n            dispatch(setServerDiagStat(DiagStatSuccess));\n          }\n        };\n      }\n    } else {\n      // reset start status\n      setStartDiagnostic(false);\n    }\n  }, [startDiagnostic, dispatch]);\n\n  const startDiagnosticAction = () => {\n    if (!clusterRegistered) {\n      navigate(\"/support/register\");\n      return;\n    }\n    setStartDiagnostic(true);\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Health\" />\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        <Grid item xs={12} className={classes.boxy}>\n          <TestWrapper title={title} advancedVisible={false}>\n            <Grid container className={classes.buttons}>\n              <Grid\n                key=\"start-download\"\n                item\n                xs={12}\n                className={classes.progressResult}\n              >\n                <div className={classes.localMessage}>{localMessage}</div>\n                {serverDiagnosticStatus === DiagStatInProgress ? (\n                  <div className={classes.loading}>\n                    <Loader style={{ width: 25, height: 25 }} />\n                  </div>\n                ) : (\n                  <Fragment>\n                    {serverDiagnosticStatus !== DiagStatError &&\n                      !downloadDisabled && (\n                        <Button\n                          id={\"download\"}\n                          type=\"submit\"\n                          variant=\"callAction\"\n                          onClick={() => download()}\n                          disabled={downloadDisabled}\n                          label={\"Download\"}\n                        />\n                      )}\n                    <Grid\n                      item\n                      xs={12}\n                      className={clsx(classes.startDiagnostic, {\n                        [classes.startDiagnosticCenter]: !isDiagnosticComplete,\n                      })}\n                    >\n                      <Button\n                        id=\"start-new-diagnostic\"\n                        type=\"submit\"\n                        variant={!clusterRegistered ? \"regular\" : \"callAction\"}\n                        disabled={startDiagnostic}\n                        onClick={startDiagnosticAction}\n                        label={buttonStartText}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              </Grid>\n            </Grid>\n          </TestWrapper>\n        </Grid>\n        {!startDiagnostic && clusterRegistered && (\n          <Fragment>\n            <br />\n            <HelpBox\n              title={\n                \"During the health diagnostics run, all production traffic will be suspended.\"\n              }\n              iconComponent={<WarnIcon />}\n              help={<Fragment />}\n            />\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(HealthInfo);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HelpBox, WarnIcon } from \"mds\";\n\ninterface IRegisterCluster {\n  compactMode?: boolean;\n}\n\nconst RegisterCluster = ({ compactMode = false }: IRegisterCluster) => {\n  const navigate = useNavigate();\n\n  const redirectButton = (\n    <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => navigate(\"/support/register\")}\n    >\n      Register your Cluster\n    </Button>\n  );\n\n  const registerMessage =\n    \"Use your MinIO Subscription Network login credentials to register this cluster.\";\n\n  if (compactMode) {\n    return (\n      <Fragment>\n        <HelpBox\n          title={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexGrow: 1,\n              }}\n            >\n              <span>{registerMessage}</span> {redirectButton}\n            </div>\n          }\n          iconComponent={<WarnIcon />}\n          help={<Fragment />}\n        />\n        <br />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        padding: \"25px\",\n        border: \"1px solid #eaeaea\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n        marginBottom: \"15px\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              marginRight: \"8px\",\n              fontSize: \"16px\",\n              fontWeight: 600,\n              display: \"flex\",\n              alignItems: \"center\",\n\n              \"& .min-icon\": {\n                width: \"83px\",\n                height: \"14px\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n              },\n            }}\n          >\n            Register your cluster\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexFlow: {\n                xs: \"column\",\n                md: \"row\",\n              },\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                flex: \"2\",\n              }}\n            >\n              <Box\n                sx={{\n                  fontSize: \"16px\",\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {registerMessage}\n              </Box>\n              <Box\n                sx={{\n                  flex: \"1\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  {redirectButton}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegisterCluster;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\nexports.default = _default;","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["DiagStatError","DiagStatSuccess","DiagStatInProgress","withStyles","theme","createStyles","titleBar","borderBottom","padding","fontSize","color","fontWeight","borderRadius","paddingTop","divisorContainer","serversData","display","alignItems","marginRight","minioVersionContainer","justifyContent","alignSelf","versionIcon","loaderAlign","textAlign","advancedContainer","optionsContainer","marginBottom","advancedConfiguration","textDecoration","border","backgroundColor","cursor","width","marginLeft","advancedOpen","transform","advancedClosed","advancedContent","maxHeight","transitionDuration","overflow","title","children","classes","advancedVisible","useState","version","setVersion","totalNodes","setTotalNodes","totalDrives","setTotalDrives","loading","setLoading","setAdvancedOpen","useEffect","api","then","res","totalServers","servers","length","reduce","prevTotal","currentElement","drives","catch","err","Grid","item","xs","className","container","Fragment","style","height","md","onClick","ArrowForwardIos","paddingLeft","buttons","gap","localMessage","progressResult","startDiagnostic","margin","startDiagnosticCenter","marginTop","actionsTray","containerForHeader","dispatch","useAppDispatch","navigate","useNavigate","message","useSelector","state","healthInfo","clusterRegistered","registeredCluster","serverDiagnosticStatus","system","setStartDiagnostic","downloadDisabled","setDownloadDisabled","setMessage","buttonStartText","setButtonStartText","setTitle","diagFileContent","setDiagFileContent","isDiagnosticComplete","healthInfoResetMessage","url","URL","window","location","toString","port","wsProt","wsProtocol","protocol","baseUrl","document","baseURI","pathname","c","W3CWebSocket","hostname","interval","onopen","console","log","send","setInterval","setServerDiagStat","onmessage","m","JSON","parse","data","serverHealthInfo","timestamp","Date","healthInfoMessageReceived","encoded","onerror","error","close","clearInterval","onclose","event","code","WSCloseInternalServerErr","WSClosePolicyViolation","WSCloseAbnormalClosure","label","PageLayout","RegisterCluster","compactMode","boxy","id","type","variant","element","createElement","setAttribute","body","appendChild","click","removeChild","download","disabled","clsx","iconComponent","help","redirectButton","registerMessage","flexGrow","sx","flexFlow","sm","flex","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","naiveFallback","self","Error","module","this","globalThis","Object","defineProperty","prototype","get","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}