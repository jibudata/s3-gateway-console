{"version":3,"file":"static/js/7494.613c2628.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AccessRulePanel.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport { AddIcon, Button } from \"mds\";\nimport { Paper } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport api from \"../../../../common/api\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  actionsTray,\n  containerForHeader,\n  objectBrowserCommon,\n  searchField,\n  tableStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst AddAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./AddAccessRule\"))\n);\nconst DeleteAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./DeleteAccessRule\"))\n);\nconst EditAccessRuleModal = withSuspense(\n  React.lazy(() => import(\"./EditAccessRule\"))\n);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    \"@global\": {\n      \".rowLine:hover  .iconFileElm\": {\n        backgroundImage: \"url(/images/ob_file_filled.svg)\",\n      },\n      \".rowLine:hover  .iconFolderElm\": {\n        backgroundImage: \"url(/images/ob_folder_filled.svg)\",\n      },\n    },\n    ...tableStyles,\n    ...actionsTray,\n    ...searchField,\n    ...objectBrowserCommon,\n    ...containerForHeader,\n  })\n);\n\nconst AccessRule = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n\n  const [loadingAccessRules, setLoadingAccessRules] = useState<boolean>(true);\n  const [accessRules, setAccessRules] = useState([]);\n  const [addAccessRuleOpen, setAddAccessRuleOpen] = useState<boolean>(false);\n  const [deleteAccessRuleOpen, setDeleteAccessRuleOpen] =\n    useState<boolean>(false);\n  const [accessRuleToDelete, setAccessRuleToDelete] = useState<string>(\"\");\n  const [editAccessRuleOpen, setEditAccessRuleOpen] = useState<boolean>(false);\n  const [accessRuleToEdit, setAccessRuleToEdit] = useState<string>(\"\");\n  const [initialAccess, setInitialAccess] = useState<string>(\"\");\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const deleteAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_DELETE_BUCKET_POLICY,\n  ]);\n\n  const editAccessRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n    IAM_SCOPES.S3_PUT_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingAccessRules(true);\n    }\n  }, [loadingBucket, setLoadingAccessRules]);\n\n  const AccessRuleActions = [\n    {\n      type: \"delete\",\n      disableButtonFunction: () => !deleteAccessRules,\n      onClick: (accessRule: any) => {\n        setDeleteAccessRuleOpen(true);\n        setAccessRuleToDelete(accessRule.prefix);\n      },\n    },\n    {\n      type: \"view\",\n      disableButtonFunction: () => !editAccessRules,\n      onClick: (accessRule: any) => {\n        setAccessRuleToEdit(accessRule.prefix);\n        setInitialAccess(accessRule.access);\n        setEditAccessRuleOpen(true);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    if (loadingAccessRules) {\n      if (displayAccessRules) {\n        api\n          .invoke(\"GET\", `/api/v1/bucket/${bucketName}/access-rules`)\n          .then((res: any) => {\n            setAccessRules(res.accessRules);\n            setLoadingAccessRules(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(setErrorSnackMessage(err));\n            setLoadingAccessRules(false);\n          });\n      } else {\n        setLoadingAccessRules(false);\n      }\n    }\n  }, [loadingAccessRules, dispatch, displayAccessRules, bucketName]);\n\n  const closeAddAccessRuleModal = () => {\n    setAddAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeDeleteAccessRuleModal = () => {\n    setDeleteAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  const closeEditAccessRuleModal = () => {\n    setEditAccessRuleOpen(false);\n    setLoadingAccessRules(true);\n  };\n\n  return (\n    <Fragment>\n      {addAccessRuleOpen && (\n        <AddAccessRuleModal\n          modalOpen={addAccessRuleOpen}\n          onClose={closeAddAccessRuleModal}\n          bucket={bucketName}\n        />\n      )}\n      {deleteAccessRuleOpen && (\n        <DeleteAccessRuleModal\n          modalOpen={deleteAccessRuleOpen}\n          onClose={closeDeleteAccessRuleModal}\n          bucket={bucketName}\n          toDelete={accessRuleToDelete}\n        />\n      )}\n      {editAccessRuleOpen && (\n        <EditAccessRuleModal\n          modalOpen={editAccessRuleOpen}\n          onClose={closeEditAccessRuleModal}\n          bucket={bucketName}\n          toEdit={accessRuleToEdit}\n          initial={initialAccess}\n        />\n      )}\n      <Grid item xs={12} className={classes.actionsTray}>\n        <PanelTitle>Anonymous Access</PanelTitle>\n        <SecureComponent\n          scopes={[\n            IAM_SCOPES.S3_GET_BUCKET_POLICY,\n            IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n            IAM_SCOPES.S3_GET_ACTIONS,\n            IAM_SCOPES.S3_PUT_ACTIONS,\n          ]}\n          resource={bucketName}\n          matchAll\n          errorProps={{ disabled: true }}\n        >\n          <TooltipWrapper tooltip={\"Add Access Rule\"}>\n            <Button\n              id={\"add-bucket-access-rule\"}\n              onClick={() => {\n                setAddAccessRuleOpen(true);\n              }}\n              label={\"Add Access Rule\"}\n              icon={<AddIcon />}\n              variant={\"callAction\"}\n            />\n          </TooltipWrapper>\n        </SecureComponent>\n      </Grid>\n      <Paper className={classes.tableBlock}>\n        <SecureComponent\n          scopes={[IAM_SCOPES.S3_GET_BUCKET_POLICY, IAM_SCOPES.S3_GET_ACTIONS]}\n          resource={bucketName}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            noBackground={true}\n            itemActions={AccessRuleActions}\n            columns={[\n              { label: \"Prefix\", elementKey: \"prefix\" },\n              { label: \"Access\", elementKey: \"access\" },\n            ]}\n            isLoading={loadingAccessRules}\n            records={accessRules}\n            entityName=\"Access Rules\"\n            idField=\"prefix\"\n          />\n        </SecureComponent>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default AccessRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["AddAccessRuleModal","withSuspense","React","DeleteAccessRuleModal","EditAccessRuleModal","useStyles","makeStyles","theme","createStyles","backgroundImage","tableStyles","actionsTray","searchField","objectBrowserCommon","containerForHeader","dispatch","useAppDispatch","classes","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","useState","loadingAccessRules","setLoadingAccessRules","accessRules","setAccessRules","addAccessRuleOpen","setAddAccessRuleOpen","deleteAccessRuleOpen","setDeleteAccessRuleOpen","accessRuleToDelete","setAccessRuleToDelete","editAccessRuleOpen","setEditAccessRuleOpen","accessRuleToEdit","setAccessRuleToEdit","initialAccess","setInitialAccess","bucketName","displayAccessRules","hasPermission","IAM_SCOPES","deleteAccessRules","editAccessRules","useEffect","AccessRuleActions","type","disableButtonFunction","onClick","accessRule","prefix","access","api","then","res","catch","err","setErrorSnackMessage","Fragment","modalOpen","onClose","bucket","toDelete","toEdit","initial","item","xs","className","scopes","resource","matchAll","errorProps","disabled","tooltip","id","label","icon","variant","tableBlock","noBackground","itemActions","columns","elementKey","isLoading","records","entityName","idField","withStyles","root","padding","margin","fontSize","children"],"sourceRoot":""}