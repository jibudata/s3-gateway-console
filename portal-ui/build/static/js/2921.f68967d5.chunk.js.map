{"version":3,"file":"static/js/2921.f68967d5.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","screens/Console/Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper.tsx","screens/Console/Buckets/BucketDetails/AddEvent.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInputProps,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (returnedValue: string) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst AutocompleteWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  const [internalValue, setInternalValue] = useState<selectorTypes>(options[0]);\n\n  const executeOnSelect = (_: any, selectedValue: any) => {\n    if (selectedValue) {\n      onChange(selectedValue.value);\n      setInternalValue(selectedValue);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Autocomplete\n            id={id}\n            options={options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option) => option.value === value}\n            disabled={disabled}\n            renderInput={(params) => <InputField {...params} name={name} />}\n            value={internalValue}\n            onChange={executeOnSelect}\n            autoHighlight\n          />\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AutocompleteWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { Button, EventSubscriptionIcon } from \"mds\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Table from \"@mui/material/Table\";\nimport { ArnList } from \"../types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AutocompleteWrapper from \"../../Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    arnField: {\n      \"& div div .MuiOutlinedInput-root\": {\n        padding: 0,\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddEventProps {\n  classes: any;\n  open: boolean;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst AddEvent = ({\n  classes,\n  open,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IAddEventProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [suffix, setSuffix] = useState<string>(\"\");\n  const [arn, setArn] = useState<string>(\"\");\n  const [selectedEvents, setSelectedEvents] = useState<string[]>([]);\n  const [arnList, setArnList] = useState<string[]>([]);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/events`, {\n        configuration: {\n          arn: arn,\n          events: selectedEvents,\n          prefix: prefix,\n          suffix: suffix,\n        },\n        ignoreExisting: true,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchArnList = useCallback(() => {\n    setAddLoading(true);\n    api\n      .invoke(\"GET\", `/api/v1/admin/arns`)\n      .then((res: ArnList) => {\n        let arns: string[] = [];\n        if (res.arns !== null) {\n          arns = res.arns;\n        }\n        setAddLoading(false);\n        setArnList(arns);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchArnList();\n  }, [fetchArnList]);\n\n  const events = [\n    { label: \"PUT - Object Uploaded\", value: \"put\" },\n    { label: \"GET - Object accessed\", value: \"get\" },\n    { label: \"DELETE - Object Deleted\", value: \"delete\" },\n  ];\n\n  const handleClick = (\n    event: React.MouseEvent<unknown> | ChangeEvent<unknown>,\n    name: string\n  ) => {\n    const selectedIndex = selectedEvents.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedEvents, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedEvents.slice(1));\n    } else if (selectedIndex === selectedEvents.length - 1) {\n      newSelected = newSelected.concat(selectedEvents.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedEvents.slice(0, selectedIndex),\n        selectedEvents.slice(selectedIndex + 1)\n      );\n    }\n    setSelectedEvents(newSelected);\n  };\n\n  const arnValues = arnList.map((arnConstant) => ({\n    label: arnConstant,\n    value: arnConstant,\n  }));\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Subscribe To Bucket Events\"\n      titleIcon={<EventSubscriptionIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.arnField} ${classes.formFieldRow}`}\n            >\n              <AutocompleteWrapper\n                onChange={(value: string) => {\n                  setArn(value);\n                }}\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                label={\"ARN\"}\n                value={arn}\n                options={arnValues}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"prefix-input\"\n                name=\"prefix-input\"\n                label=\"Prefix\"\n                value={prefix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"suffix-input\"\n                name=\"suffix-input\"\n                label=\"Suffix\"\n                value={suffix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSuffix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <Table size=\"medium\">\n                <TableHead className={classes.minTableHeader}>\n                  <TableRow>\n                    <TableCell>Select</TableCell>\n                    <TableCell>Event</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {events.map((row) => (\n                    <TableRow\n                      key={`group-${row.value}`}\n                      onClick={(event) => handleClick(event, row.value)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          value={row.value}\n                          color=\"primary\"\n                          inputProps={{\n                            \"aria-label\": \"secondary checkbox\",\n                          }}\n                          onChange={(event) => handleClick(event, row.value)}\n                          checked={selectedEvents.includes(row.value)}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.wrapCell}>\n                        {row.label}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel-add-event\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save-event\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={addLoading}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddEvent);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n"],"names":["getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","value","children","as","clsx","role","inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","id","onChange","options","label","tooltip","disabled","useState","internalValue","setInternalValue","Grid","item","xs","fieldContainer","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","FormControl","fullWidth","Autocomplete","getOptionLabel","option","isOptionEqualToValue","renderInput","params","_","selectedValue","autoHighlight","arnField","padding","formFieldStyles","modalStyleUtils","open","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","addLoading","setAddLoading","prefix","setPrefix","suffix","setSuffix","arn","setArn","selectedEvents","setSelectedEvents","arnList","setArnList","fetchArnList","useCallback","api","then","res","arns","catch","err","setModalErrorSnackMessage","useEffect","handleClick","event","selectedIndex","indexOf","newSelected","concat","slice","length","arnValues","map","arnConstant","ModalWrapper","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","configuration","events","ignoreExisting","container","formScrollable","formFieldRow","InputBoxWrapper","target","Table","size","minTableHeader","TableRow","TableCell","TableBody","row","onClick","Checkbox","color","inputProps","checked","includes","wrapCell","modalButtonBar","type","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","errorInField","inputBoxContainer","noMinWidthLabel","helperText","inputRebase","disableFocusRipple","disableRipple","disableTouchRipple"],"sourceRoot":""}