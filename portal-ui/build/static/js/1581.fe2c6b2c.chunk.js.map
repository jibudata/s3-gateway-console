{"version":3,"file":"static/js/1581.fe2c6b2c.chunk.js","mappings":"4TA6NA,WAAeA,EAAAA,EAAAA,IAjLA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACAC,EAAAA,IACF,GA6KL,EAlKoB,SAAHC,GAOS,IANxBC,EAAOD,EAAPC,QACAC,EAAIF,EAAJE,KACAC,EAAOH,EAAPG,QACAC,EAAGJ,EAAHI,IACAC,EAAcL,EAAdK,eACAC,EAAoBN,EAApBM,qBAEMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAwCL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCT,EAAAA,EAAAA,UAAiB,KAAIU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAkCb,EAAAA,EAAAA,UAAiB,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAoCjB,EAAAA,EAAAA,WAAkB,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WACR,GAAI5B,IACFe,GAAgB,GACZd,GAAK,CACP,IAAM4B,GAAWC,EAAAA,EAAAA,IAAe7B,EAAI8B,OAAO,GAAM,GAAO,GAExDZ,EAAaU,EAASG,MAAMC,YAC5BV,EAAaM,EAASK,MACtBP,GAAc,EAChB,CAEJ,GAAG,CAAC3B,EAASC,KAEb2B,EAAAA,EAAAA,YAAU,WAQRD,GALKb,GAFa,sBAOMqB,KAAKjB,GAC/B,GAAG,CAACJ,EAAcI,IAwBlB,OACEkB,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXC,UAAWvC,EACXwC,QAAS,WACPpC,GACF,EACAqC,MAAM,sBACNC,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAe,IAAIC,UAE/BP,EAAAA,EAAAA,KAAA,QACEQ,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,GACTA,EAAEC,iBAnCqB,WAC7B,IAAItC,GAAYgB,EAAhB,CAGA,IAAIuB,EAAM,CACRjD,QAASc,EACToC,OAAQC,UAASC,EAAAA,EAAAA,IAASlC,EAAWI,GAAW,IAChD+B,WAAY,QAGdC,EAAAA,EAAAA,OACU,MAAM,mBAADC,OAAqBrD,EAAc,UAAU+C,GACzDO,MAAK,WACJ7C,GAAW,GACXR,GACF,IACCsD,OAAM,SAACC,GACN/C,GAAW,GACXP,GAASuD,EAAAA,EAAAA,IAA0BD,GACrC,GAhBF,CAiBF,CAgBQE,EACF,EAAEjB,UAEFkB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAApB,SAAA,EACbkB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,UAAWpE,EAAQqE,eAAexB,SAAA,EACnDP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,UAAWpE,EAAQsE,aAAazB,UACjDP,EAAAA,EAAAA,KAACiC,EAAAA,EAAiB,CAChBC,MAAM,eACNC,GAAG,eACHC,KAAK,eACLC,QAAS3D,EACT4D,SAAU,SAACC,GACT5D,EAAgB4D,EAAMC,OAAOH,QAC/B,EACAI,MAAO,cAGV/D,IACCsB,EAAAA,EAAAA,KAAC0C,EAAAA,SAAc,CAAAnC,UACbP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,UAAWpE,EAAQsE,aAAazB,UACjDP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,WAAS,EAAApB,UACbP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAGtB,UAChBP,EAAAA,EAAAA,KAAC2C,EAAAA,EAAe,CACdR,GAAG,aACHC,KAAK,aACLE,SAAU,SAAC3B,GACT5B,EAAa4B,EAAE6B,OAAON,OACjBvB,EAAE6B,OAAOI,SAASC,MAGrBtD,GAAc,GAFdA,GAAc,EAIlB,EACAkD,MAAM,QACNP,MAAOpD,EACPgE,UAAQ,EACRC,IAAI,IACJC,eACEhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CACZd,GAAI,aACJe,aAAc,SAACC,GACbhE,EAAagE,EACf,EACAC,aAAclE,EACdmE,WAAWC,EAAAA,EAAAA,IAAwB,CAAC,OACpCC,UAAU,IAGdC,MAAQlE,EAA4C,GAA/B,2CAQnCmC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIC,UAAWpE,EAAQ+F,eAAelD,SAAA,EACnDP,EAAAA,EAAAA,KAAC0D,EAAAA,IAAM,CACLvB,GAAI,SACJwB,KAAK,SACLC,QAAQ,UACRL,SAAUjF,EACVuF,QAAS,WACP9F,GACF,EACA0E,MAAO,YAGTzC,EAAAA,EAAAA,KAAC0D,EAAAA,IAAM,CACLvB,GAAI,OACJwB,KAAK,SACLC,QAAQ,aACRL,SAAUjF,IAAYgB,EACtBmD,MAAO,YAGVnE,IACC0B,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAGtB,UAChBP,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,YAO7B,G,mLCzJMC,GAAe5G,EAAAA,EAAAA,IAAW,SAACC,GAAK,MAAM,CAC1C4G,KAAM,CACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,OAAQ,GAEVC,WAAY,CACVF,QAAS,EACT,YAAa,CACXG,UAAW,mBACXC,MAAOnH,EAAMoH,QAAQC,OAAOC,MAC5B,aAAc,CACZC,gBAAiB,UACjBC,UAAW,oCACXC,QAAS,EACTC,OAAQ,SAGZ,wBAAyB,CACvBP,MAAO,UACPO,OAAQ,mBAGZC,MAAO,CACLd,MAAO,GACPC,OAAQ,GACRS,gBAAiB,UACjBG,OAAQ,oBACRE,WAAY,GAEdC,MAAO,CACLC,aAAc,GACdP,gBAAiB,UACjBC,UAAW,oCACXC,QAAS,EACTM,WAAY/H,EAAMgI,YAAYC,OAAO,CAAC,mBAAoB,YAE5DhD,QAAS,CAAC,EACViD,aAAc,CAAC,EACfC,gBAAiB,CACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,YAEnB,GA7CoBvI,CA6CjBwI,EAAAA,GAqGJ,KAAexI,EAAAA,EAAAA,IAxKA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXsI,iBAAkB,CAChBC,WAAY,OACZtB,MAAO,sBAETuB,eAAgB,CACdC,SAAU,GACVxB,MAAO,UACPH,OAAQ,gBAEV4B,iBAAkB,CAChBC,UAAW,EACX1B,MAAO,WAET2B,QAAS,CACPH,SAAU,KAETI,EAAAA,IACAC,EAAAA,IACF,GAoJL,EAnG0B,SAAH3I,GAcH,IAAD4I,EAAA5I,EAbjBgF,MAAAA,OAAK,IAAA4D,EAAG,GAAEA,EACV/D,EAAQ7E,EAAR6E,SACAJ,EAAKzE,EAALyE,MACAC,EAAE1E,EAAF0E,GACAC,EAAI3E,EAAJ2E,KAAIkE,EAAA7I,EACJ4E,QAAAA,OAAO,IAAAiE,GAAQA,EAAAC,EAAA9I,EACf8F,SAAAA,OAAQ,IAAAgD,GAAQA,EAAAC,EAAA/I,EAChBgJ,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAAjJ,EAClByI,QAAAA,OAAO,IAAAQ,EAAG,GAAEA,EAAAC,EAAAlJ,EACZmJ,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBjJ,EAAOD,EAAPC,QACAmJ,EAAepJ,EAAfoJ,gBAAeC,EAAArJ,EACfsJ,gBAAAA,OAAe,IAAAD,EAAG,CAAC,EAACA,EAEdE,GACJvF,EAAAA,EAAAA,MAACiB,EAAAA,SAAc,CAAAnC,SAAA,EACXkG,IACAzG,EAAAA,EAAAA,KAAA,QACE8B,WAAWmF,EAAAA,EAAAA,GAAKvJ,EAAQoI,gBAAcoB,EAAAA,EAAAA,GAAA,GACnCxJ,EAAQkI,kBAAoBvD,IAC5B9B,SAEFsG,GAAmBA,EAAgBM,OAAS,EACzCN,EAAgB,GAChB,SAGR7G,EAAAA,EAAAA,KAAC+D,EAAY,CACX1B,QAASA,EACTC,SAAUA,EACViC,MAAM,UACNnC,KAAMA,EACNgF,YAAU9J,EAAAA,EAAAA,GAAA,CAAI,aAAc,oBAAuByJ,GACnDxD,SAAUA,EACV8D,eAAa,EACbC,oBAAkB,EAClBC,oBAAkB,EAClBrF,MAAOA,EACPC,GAAIA,KAEJsE,IACAzG,EAAAA,EAAAA,KAAA,QACE8B,WAAWmF,EAAAA,EAAAA,GAAKvJ,EAAQoI,gBAAcoB,EAAAA,EAAAA,GAAA,GACnCxJ,EAAQkI,iBAAmBvD,IAC3B9B,SAEFsG,EAAkBA,EAAgB,GAAK,UAMhD,OAAIJ,EACKO,GAIPhH,EAAAA,EAAAA,KAAA,OAAAO,UACEkB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAC8D,WAAY,SAASlF,SAAA,EACnCP,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAI2F,GAAI,EAAGC,GAAI,EAAElH,SACnB,KAAVkC,IACChB,EAAAA,EAAAA,MAACiG,EAAAA,EAAU,CAACC,QAASxF,EAAIL,UAAWpE,EAAQkK,WAAWrH,SAAA,EACrDP,EAAAA,EAAAA,KAAA,QAAAO,SAAOkC,IACM,KAAZyD,IACClG,EAAAA,EAAAA,KAAA,OAAK8B,UAAWpE,EAAQmK,iBAAiBtH,UACvCP,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAAC1H,MAAO8F,EAAS6B,UAAU,YAAWxH,UAC5CP,EAAAA,EAAAA,KAAA,OAAK8B,UAAWpE,EAAQwI,QAAQ3F,UAC9BP,EAAAA,EAAAA,KAACgI,EAAAA,IAAQ,gBAQvBhI,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CACHE,MAAI,EACJC,GAAI,GACJ2F,GAAc,KAAV/E,EAAe,EAAI,GACvBgF,GAAc,KAAVhF,EAAe,EAAI,GACvBwF,UAAW,QACXvC,eAAgB,MAChB5D,UAAWpE,EAAQ6H,gBAAgBhF,SAElCyG,IAEc,KAAhBJ,IACC5G,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,GAAIoG,UAAW,OAAO1H,UACnCP,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACC,UAAU,IAAIrG,UAAWpE,EAAQsI,iBAAiBzF,SAC3DqG,UAOf,G,qNCpHMwB,GAAcC,EAAAA,EAAAA,IAAW,SAACjL,GAAY,OAC1CC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAC,CAAC,EACTgL,EAAAA,IACH,IAGJ,SAASC,EAAWC,GAClB,IAAM9K,EAAU0K,IAEhB,OACEpI,EAAAA,EAAAA,KAACyI,EAAAA,GAASnL,EAAAA,EAAAA,GAAA,CACRoL,WAAY,CAAEhL,QAAAA,IACV8K,GAGV,CAwJA,KAAerL,EAAAA,EAAAA,IA7LA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACT8I,EAAAA,IACAuC,EAAAA,IAAa,IAChBC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,cAAe,CACbD,SAAU,WACVE,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,MAGR,GAyKL,EAtJwB,SAAHxL,GA8BC,IA7BpBgF,EAAKhF,EAALgF,MACAH,EAAQ7E,EAAR6E,SACAJ,EAAKzE,EAALyE,MACAC,EAAE1E,EAAF0E,GACAC,EAAI3E,EAAJ2E,KAAIgH,EAAA3L,EACJkG,KAAAA,OAAI,IAAAyF,EAAG,OAAMA,EAAAC,EAAA5L,EACbgD,aAAAA,OAAY,IAAA4I,EAAG,MAAKA,EAAA9C,EAAA9I,EACpB8F,SAAAA,OAAQ,IAAAgD,GAAQA,EAAA+C,EAAA7L,EAChB8L,UAAAA,OAAS,IAAAD,GAAQA,EAAA5C,EAAAjJ,EACjByI,QAAAA,OAAO,IAAAQ,EAAG,GAAEA,EAAA8C,EAAA/L,EACZgM,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAAjM,EACT+F,MAAAA,OAAK,IAAAkG,EAAG,GAAEA,EAAAC,EAAAlM,EACVqF,SAAAA,OAAQ,IAAA6G,GAAQA,EAAAC,EAAAnM,EAChBoM,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChB7G,EAAGtF,EAAHsF,IACA+G,EAAGrM,EAAHqM,IACAC,EAAStM,EAATsM,UAASC,EAAAvM,EACTwM,YAAAA,OAAW,IAAAD,EAAG,KAAIA,EAAAE,EAAAzM,EAClBuF,cAAAA,OAAa,IAAAkH,EAAG,KAAIA,EAAApD,EAAArJ,EACpBsJ,gBAAAA,OAAe,IAAAD,EAAG,CAAC,EAACA,EACpBiC,EAAatL,EAAbsL,cAAaoB,EAAA1M,EACb2M,gBAAAA,OAAe,IAAAD,GAAQA,EAAAE,EAAA5M,EACvB6M,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAAA9M,EACZ+M,UAAAA,OAAS,IAAAD,GAAQA,EACjB7M,EAAOD,EAAPC,QAAO+M,GAAAhN,EACPqE,UAAAA,QAAS,IAAA2I,GAAG,GAAEA,GACdC,GAAUjN,EAAViN,WACAC,GAAOlN,EAAPkN,QACAC,GAAOnN,EAAPmN,QAEIxD,IAAe9J,EAAAA,EAAAA,GAAA,CAAK,aAAcmM,GAAU1C,GAChD7I,IAA8CC,EAAAA,EAAAA,WAAkB,GAAMC,IAAAC,EAAAA,EAAAA,GAAAH,GAAA,GAA/D2M,GAAezM,GAAA,GAAE0M,GAAkB1M,GAAA,GAE7B,WAATuF,GAAqBZ,IACvBqE,GAAgB,IAAIrE,GAGT,WAATY,GAAqBmG,IACvB1C,GAAgB,IAAI0C,GAGN,KAAZQ,IACFlD,GAAoB,QAAIkD,GAG1B,IAAIS,GAAsBd,EACtBe,GAAsBrH,EAW1B,MATa,aAATA,GAAuC,OAAhBsG,IACzBc,GAAsBF,IACpB7K,EAAAA,EAAAA,KAACiL,EAAAA,EAAiB,KAElBjL,EAAAA,EAAAA,KAACkL,EAAAA,EAAgB,IAEnBF,GAAsBH,GAAkB,OAAS,aAIjD7K,EAAAA,EAAAA,KAAC0C,EAAAA,SAAc,CAAAnC,UACbkB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACTG,WAAWmF,EAAAA,EAAAA,GACK,KAAdnF,GAAmBA,GAAY,GACrB,KAAV0B,EAAe9F,EAAQyN,aAAezN,EAAQ0N,mBAC9C7K,SAAA,CAES,KAAVkC,IACChB,EAAAA,EAAAA,MAACiG,EAAAA,EAAU,CACTC,QAASxF,EACTL,UACEsI,EAAkB1M,EAAQ2N,gBAAkB3N,EAAQkK,WACrDrH,SAAA,EAEDkB,EAAAA,EAAAA,MAAA,QAAAlB,SAAA,CACGkC,EACAK,EAAW,IAAM,MAEP,KAAZoD,IACClG,EAAAA,EAAAA,KAAA,OAAK8B,UAAWpE,EAAQmK,iBAAiBtH,UACvCP,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAAC1H,MAAO8F,EAAS6B,UAAU,YAAWxH,UAC5CP,EAAAA,EAAAA,KAAA,OAAK8B,UAAWpE,EAAQwI,QAAQ3F,UAC9BP,EAAAA,EAAAA,KAACgI,EAAAA,IAAQ,cAQrBvG,EAAAA,EAAAA,MAAA,OAAKK,UAAWpE,EAAQkL,iBAAiBrI,SAAA,EACvCP,EAAAA,EAAAA,KAACuI,EAAU,CACTpG,GAAIA,EACJC,KAAMA,EACNkJ,WAAS,EACTpJ,MAAOA,EACPsI,UAAWA,EACXjH,SAAUA,EACVjB,SAAUA,EACVqB,KAAMqH,GACNzB,UAAWA,EACX9I,aAAcA,EACd2G,WAAYA,GACZ5D,MAAiB,KAAVA,EACP+H,WAAY/H,EACZqG,YAAaA,EACb/H,UAAWpE,EAAQ8N,YACnBd,WAAYA,GACZC,QAASA,GACTC,QAASA,KAEVG,KACC/K,EAAAA,EAAAA,KAAA,OACE8B,UAAS,GAAAX,OAAKzD,EAAQqL,cAAa,KAAA5H,OACvB,KAAVsB,EAAe,YAAc,IAC5BlC,UAEHP,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CACT5H,QACEkF,EACI,WACEA,GACF,EACA,kBAAM+B,IAAoBD,GAAgB,EAEhD1I,GAAI4H,EACJ2B,KAAM,QACNpE,oBAAoB,EACpBD,eAAe,EACfE,oBAAoB,EAAMhH,SAEzBwK,OAIN/H,IACChD,EAAAA,EAAAA,KAAA,OACE8B,UAAS,GAAAX,OAAKzD,EAAQqL,cAAa,KAAA5H,OACvB,KAAVsB,EAAe,YAAc,IAC5BlC,SAEFyC,WAOf,G,yGCxJA,KAAe7F,EAAAA,EAAAA,IA3EA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,GAAa,CACXsO,cAAe,CACb7G,OAAQ,oBACRI,aAAc,EACdX,MAAO,UACPI,gBAAiB,OACjBoB,SAAU,KAEX,GAkEL,EAhEsB,SAAHtI,GAOG,IANpBC,EAAOD,EAAPC,QACAyE,EAAE1E,EAAF0E,GACAiB,EAAY3F,EAAZ2F,aACAC,EAAS5F,EAAT4F,UAASkD,EAAA9I,EACT8F,SAAAA,OAAQ,IAAAgD,GAAQA,EAChBrD,EAAYzF,EAAZyF,aAEA0I,EAAgClJ,EAAAA,SAAmC,MAAKmJ,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAjEE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBlO,EAAOqO,QAAQF,GAIfG,EAAc,SAACC,GACnBH,EAAY,MACI,KAAZG,GAAkBhJ,GACpBA,EAAagJ,EAEjB,EAEA,OACEzK,EAAAA,EAAAA,MAAC0K,EAAAA,SAAQ,CAAA5L,SAAA,EACPP,EAAAA,EAAAA,KAAA,UACEmC,GAAE,GAAAhB,OAAKgB,EAAE,WACT,mBAAAhB,OAAkBgB,EAAE,SACpB,gBAAc,OACd,gBAAexE,EAAO,YAASyO,EAC/BvI,QAjBc,SAACtB,GACnBwJ,EAAYxJ,EAAM8J,cACpB,EAgBMvK,UAAWpE,EAAQiO,cACnBpI,SAAUA,EACVI,KAAM,SAASpD,SAEd6C,KAEHpD,EAAAA,EAAAA,KAACsM,EAAAA,EAAI,CACHnK,GAAE,GAAAhB,OAAKgB,EAAE,SACT,qBAAAhB,OAAoBgB,EAAE,WACtB2J,SAAUA,EACVnO,KAAMA,EACNwC,QAAS,WACP8L,EAAY,GACd,EACAM,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UACZlM,SAED8C,EAAUsJ,KAAI,SAAC7M,GAAI,OAClBE,EAAAA,EAAAA,KAAC4M,EAAAA,EAAQ,CACP/I,QAAS,kBAAMoI,EAAYnM,EAAKoC,MAAM,EAAC3B,SAGtCT,EAAK2C,OAAK,YAAAtB,OAFMrB,EAAKoC,MAAK,KAAAf,OAAIrB,EAAK2C,OAG3B,QAKrB,G","sources":["screens/Console/Buckets/BucketDetails/EnableQuota.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BucketQuotaIcon, Button } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  calculateBytes,\n  getBytes,\n  k8sScalarUnitsExcluding,\n} from \"../../../../common/utils\";\nimport { BucketQuota } from \"../types\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IEnableQuotaProps {\n  classes: any;\n  open: boolean;\n  enabled: boolean;\n  cfg: BucketQuota | null;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst EnableQuota = ({\n  classes,\n  open,\n  enabled,\n  cfg,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IEnableQuotaProps) => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quotaSize, setQuotaSize] = useState<string>(\"1\");\n  const [quotaUnit, setQuotaUnit] = useState<string>(\"Ti\");\n  const [validInput, setValidInput] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (enabled) {\n      setQuotaEnabled(true);\n      if (cfg) {\n        const unitCalc = calculateBytes(cfg.quota, true, false, true);\n\n        setQuotaSize(unitCalc.total.toString());\n        setQuotaUnit(unitCalc.unit);\n        setValidInput(true);\n      }\n    }\n  }, [enabled, cfg]);\n\n  useEffect(() => {\n    const valRegExp = /^\\d*(?:\\.\\d{1,2})?$/;\n\n    if (!quotaEnabled) {\n      setValidInput(true);\n      return;\n    }\n\n    setValidInput(valRegExp.test(quotaSize));\n  }, [quotaEnabled, quotaSize]);\n\n  const enableBucketEncryption = () => {\n    if (loading || !validInput) {\n      return;\n    }\n    let req = {\n      enabled: quotaEnabled,\n      amount: parseInt(getBytes(quotaSize, quotaUnit, true)),\n      quota_type: \"hard\",\n    };\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/quota`, req)\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Enable Bucket Quota\"\n      titleIcon={<BucketQuotaIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          enableBucketEncryption();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                value=\"bucket_quota\"\n                id=\"bucket_quota\"\n                name=\"bucket_quota\"\n                checked={quotaEnabled}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setQuotaEnabled(event.target.checked);\n                }}\n                label={\"Enabled\"}\n              />\n            </Grid>\n            {quotaEnabled && (\n              <React.Fragment>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"quota_size\"\n                        name=\"quota_size\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setQuotaSize(e.target.value);\n                          if (!e.target.validity.valid) {\n                            setValidInput(false);\n                          } else {\n                            setValidInput(true);\n                          }\n                        }}\n                        label=\"Quota\"\n                        value={quotaSize}\n                        required\n                        min=\"1\"\n                        overlayObject={\n                          <InputUnitMenu\n                            id={\"quota_unit\"}\n                            onUnitChange={(newValue) => {\n                              setQuotaUnit(newValue);\n                            }}\n                            unitSelected={quotaUnit}\n                            unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                            disabled={false}\n                          />\n                        }\n                        error={!validInput ? \"Please enter a valid quota\" : \"\"}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={loading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              label={\"Cancel\"}\n            />\n\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={loading || !validInput}\n              label={\"Save\"}\n            />\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EnableQuota);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n"],"names":["withStyles","theme","createStyles","_objectSpread","formFieldStyles","modalStyleUtils","_ref","classes","open","enabled","cfg","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","quotaEnabled","setQuotaEnabled","_useState5","_useState6","quotaSize","setQuotaSize","_useState7","_useState8","quotaUnit","setQuotaUnit","_useState9","_useState10","validInput","setValidInput","useEffect","unitCalc","calculateBytes","quota","total","toString","unit","test","_jsx","ModalWrapper","modalOpen","onClose","title","titleIcon","BucketQuotaIcon","children","noValidate","autoComplete","onSubmit","e","preventDefault","req","amount","parseInt","getBytes","quota_type","api","concat","then","catch","err","setModalErrorSnackMessage","enableBucketEncryption","_jsxs","Grid","container","item","xs","className","formScrollable","formFieldRow","FormSwitchWrapper","value","id","name","checked","onChange","event","target","label","React","InputBoxWrapper","validity","valid","required","min","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","error","modalButtonBar","Button","type","variant","onClick","LinearProgress","StyledSwitch","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref$label","_ref$checked","_ref$disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","placement","HelpIcon","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","_ref$autoComplete","_ref$multiline","multiline","_ref$index","index","_ref$error","_ref$required","_ref$placeholder","placeholder","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","IconButton","size","buttonTrigger","_React$useState","_React$useState2","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","Fragment","undefined","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","map","MenuItem"],"sourceRoot":""}