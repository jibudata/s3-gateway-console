{"version":3,"file":"static/js/3875.5db2c08f.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Button, RemoveIcon } from \"mds\";\nimport { SiteInputRow } from \"./Types\";\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"name\"),\n          }}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          extraInputProps={{\n            readOnly: disabledFields.includes(\"endpoint\"),\n          }}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBoxWrapper\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} alignItems={\"center\"} display={\"flex\"}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BackLink, Button, ClustersIcon, HelpBox } from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport SectionTitle from \"../../Common/SectionTitle\";\nimport {\n  setErrorSnackMessage,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          fontSize: \"14px\",\n          marginLeft: \"5px\",\n        }}\n      >\n        Site Name\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Endpoint {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Access Key {\"*\"}</Box>\n      <Box sx={{ fontSize: \"14px\", marginLeft: \"5px\" }}>Secret Key {\"*\"}</Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    }\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    []\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          })\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    }\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      []\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            border: \"1px solid #eaeaea\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index ? { ...item, [fieldName]: filedValue } : item\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index)\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Replication Site\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <LinearProgress /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& .step-number\": {\n                      color: \"#ffffff\",\n                      height: \"25px\",\n                      width: \"25px\",\n                      background: \"#081C42\",\n                      marginRight: \"10px\",\n                      textAlign: \"center\",\n                      fontWeight: 600,\n                      borderRadius: \"50%\",\n                    },\n\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                      \"&:before\": {\n                        content: \"' '\",\n                        height: \"7px\",\n                        width: \"7px\",\n                        backgroundColor: \"#2781B0\",\n                        marginRight: \"10px\",\n                        marginTop: \"12px\",\n                        flexShrink: 0,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","InputProps","withStyles","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","label","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","className","onKeyPress","onFocus","onPaste","inputProps","useState","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","rowData","rowId","onFieldChange","onAddClick","onRemoveClick","canAdd","canRemove","showRowActions","disabledFields","fieldErrors","endpoint","accessKey","secretKey","Fragment","Box","InputBoxWrapper","readOnly","includes","e","Grid","item","xs","alignItems","display","sx","justifyContent","alignSelf","marginTop","borderColor","color","borderRadius","TooltipWrapper","variant","icon","preventDefault","style","width","height","padding","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","fontSize","SiteTypeHeader","marginBottom","fontWeight","dispatch","useAppDispatch","navigate","useNavigate","useSelector","selSession","serverEndPoint","currentSite","setCurrentSite","existingSites","setExistingSites","setDefaultNewRows","useApi","res","siteList","sites","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","isSiteInfoLoading","invokeSiteInfoApi","getSites","useEffect","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","success","setSnackBarMessage","status","resetForm","IAM_PAGES","setErrorSnackMessage","errorMessage","detailedError","isAdding","invokeSiteAddApi","prevItems","ix","PageHeaderWrapper","PageLayout","gap","gridTemplateColumns","border","SectionTitle","LinearProgress","fontStyle","noValidate","onSubmit","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","concat","addSiteReplication","overflowY","cs","accessKeyError","secretKeyError","fieldName","filedValue","target","ps","endPointError","newRows","_","iconComponent","help","backgroundColor","marginRight","paddingLeft","fill","flexFlow","flex","background","textAlign","content","flexShrink","paddingTop","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}