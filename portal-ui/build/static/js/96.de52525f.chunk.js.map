{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/Layout/PageLayout.tsx","common/BackLink.tsx","utils/wsUtils.ts","screens/Console/HealthInfo/types.ts","screens/Console/Common/TestWrapper/TestWrapper.tsx","screens/Console/HealthInfo/HealthInfo.tsx"],"names":["mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","length","component","onClick","size","pageContentStyles","children","contentSpacer","link","textDecoration","maxWidth","padding","light","icon","marginRight","to","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr","wsProtocol","protocol","DiagStatError","DiagStatSuccess","DiagStatInProgress","titleBar","borderBottom","borderRadius","paddingTop","divisorContainer","serversData","minioVersionContainer","alignSelf","versionIcon","loaderAlign","advancedContainer","optionsContainer","marginBottom","advancedConfiguration","border","cursor","advancedOpen","transform","advancedClosed","advancedContent","maxHeight","transitionDuration","overflow","title","advancedVisible","useState","version","setVersion","totalNodes","setTotalNodes","totalDrives","setTotalDrives","loading","setLoading","setAdvancedOpen","useEffect","api","invoke","then","res","totalServers","servers","reduce","prevTotal","currentElement","drives","catch","err","Grid","CircularProgress","message","healthInfo","serverDiagnosticStatus","healthInfoMessageReceived","healthInfoResetMessage","setSnackBarMessage","setServerDiagStat","paddingLeft","buttons","gap","localMessage","startDiagnostic","progressResult","diagNew","margin","actionsTray","containerForHeader","spacing","setStartDiagnostic","diagStarted","setDiagStarted","downloadDisabled","setDownloadDisabled","setMessage","setTitle","url","URL","window","location","toString","port","wsProt","c","W3CWebSocket","hostname","interval","onopen","console","log","send","setInterval","onmessage","m","JSON","parse","data","timestamp","Date","onerror","error","close","clearInterval","onclose","event","code","PageHeader","BackLink","PageLayout","boxy","Button","type","disabled","filename","text","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","stringify"],"mappings":"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","file":"static/js/96.de52525f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const DiagStatError = \"error\";\nexport const DiagStatSuccess = \"success\";\nexport const DiagStatInProgress = \"inProgress\";\nexport interface HealthInfoMessage {\n  timestamp: Date;\n  error: string;\n  perf: perfInfo;\n  minio: minioHealthInfo;\n  sys: sysHealthInfo;\n}\n\nexport interface perfInfo {\n  drives: serverDrivesInfo[];\n  net: serverNetHealthInfo[];\n  net_parallel: serverNetHealthInfo;\n  error: string;\n}\n\nexport interface serverDrivesInfo {\n  addr: string;\n  serial: drivePerfInfo[];\n  parallel: drivePerfInfo[];\n  error: string;\n}\n\nexport interface drivePerfInfo {\n  endpoint: string;\n  latency: diskLatency;\n  throughput: diskThroughput;\n  error: string;\n}\nexport interface diskLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface diskThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface serverNetHealthInfo {\n  addr: string;\n  net: netPerfInfo[];\n  error: string;\n}\n\nexport interface netPerfInfo {\n  remote: string;\n  latency: netLatency;\n  throughput: netThroughput;\n  error: string;\n}\n\nexport interface netLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\nexport interface netThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface minioHealthInfo {\n  info: infoMessage;\n  config: any;\n  error: string;\n}\n\nexport interface infoMessage {\n  mode: string;\n  domain: string[];\n  region: string;\n  sqsARN: string[];\n  deploymentID: string;\n  buckets: buckets;\n  objects: objects;\n  usage: usage;\n  services: services;\n  backend: any;\n  servers: serverProperties[];\n}\n\nexport interface buckets {\n  count: number;\n}\n\nexport interface objects {\n  count: number;\n}\n\nexport interface usage {\n  size: number;\n}\n\nexport interface services {\n  vault: vault;\n  ldap: ldap;\n  logger: Map<string, status[]>[];\n  audit: Map<string, status[]>[];\n  notifications: Map<string, Map<string, status[]>[]>;\n}\n\nexport interface vault {\n  status: string;\n  encrypt: string;\n  decrypt: string;\n}\n\nexport interface ldap {\n  status: string;\n}\n\nexport interface status {\n  status: string;\n}\n\nexport interface serverProperties {\n  state: string;\n  endpoint: string;\n  uptime: number;\n  version: string;\n  commitID: string;\n  network: Map<string, string>;\n  drives: disk[];\n}\n\nexport interface disk {\n  endpoint: string;\n  rootDisk: boolean;\n  path: string;\n  healing: boolean;\n  state: string;\n  uuid: string;\n  model: string;\n  totalspace: number;\n  usedspace: number;\n  availspace: number;\n  readthroughput: number;\n  writethroughput: number;\n  readlatency: number;\n  writelatency: number;\n  utilization: number;\n}\n\nexport interface sysHealthInfo {\n  cpus: serverCpuInfo[];\n  drives: serverDiskHwInfo[];\n  osinfos: serverOsInfo[];\n  meminfos: serverMemInfo[];\n  procinfos: serverProcInfo[];\n  error: string;\n}\n\nexport interface serverCpuInfo {\n  addr: string;\n  cpu: cpuInfoStat[];\n  time: cpuTimeStat[];\n  error: string;\n}\n\nexport interface cpuInfoStat {\n  cpu: number;\n  vendorId: string;\n  family: string;\n  model: string;\n  stepping: number;\n  physicalId: string;\n  coreId: string;\n  cores: number;\n  modelName: string;\n  mhz: number;\n  cacheSize: number;\n  flags: string[];\n  microcode: string;\n}\n\nexport interface cpuTimeStat {\n  cpu: string;\n  user: number;\n  system: number;\n  idle: number;\n  nice: number;\n  iowait: number;\n  irq: number;\n  softirq: number;\n  steal: number;\n  guest: number;\n  guestNice: number;\n}\n\nexport interface serverDiskHwInfo {\n  addr: string;\n  usages: diskUsageStat[];\n  partitions: partitionStat[];\n  counters: Map<string, diskIOCountersStat>;\n  error: string;\n}\n\nexport interface diskUsageStat {\n  path: string;\n  fstype: string;\n  total: number;\n  free: number;\n  used: number;\n  usedPercent: number;\n  inodesTotal: number;\n  inodesUsed: number;\n  inodesFree: number;\n  inodesUsedPercent: number;\n}\n\nexport interface partitionStat {\n  device: string;\n  mountpoint: string;\n  fstype: string;\n  opts: string;\n  smartInfo: smartInfo;\n}\n\nexport interface smartInfo {\n  device: string;\n  scsi: scsiInfo;\n  nvme: nvmeInfo;\n  ata: ataInfo;\n  error: string;\n}\n\nexport interface scsiInfo {\n  scsiCapacityBytes: number;\n  scsiModeSenseBuf: string;\n  scsirespLen: number;\n  scsiBdLen: number;\n  scsiOffset: number;\n  sciRpm: number;\n}\n\nexport interface nvmeInfo {\n  serialNum: string;\n  vendorId: string;\n  firmwareVersion: string;\n  modelNum: string;\n  spareAvailable: string;\n  spareThreshold: string;\n  temperature: string;\n  criticalWarning: string;\n  maxDataTransferPages: number;\n  controllerBusyTime: number;\n  powerOnHours: number;\n  powerCycles: number;\n  unsafeShutdowns: number;\n  mediaAndDataIntgerityErrors: number;\n  dataUnitsReadBytes: number;\n  dataUnitsWrittenBytes: number;\n  hostReadCommands: number;\n  hostWriteCommands: number;\n}\n\nexport interface ataInfo {\n  scsiLuWWNDeviceID: string;\n  serialNum: string;\n  modelNum: string;\n  firmwareRevision: string;\n  RotationRate: string;\n  MajorVersion: string;\n  MinorVersion: string;\n  smartSupportAvailable: boolean;\n  smartSupportEnabled: boolean;\n  smartErrorLog: string;\n  transport: string;\n}\n\nexport interface diskIOCountersStat {\n  readCount: number;\n  mergedReadCount: number;\n  DriteCount: number;\n  mergedWriteCount: number;\n  readBytes: number;\n  writeBytes: number;\n  readTime: number;\n  writeTime: number;\n  iopsInProgress: number;\n  ioTime: number;\n  weightedIO: number;\n  name: string;\n  serialNumber: string;\n  label: string;\n}\n\nexport interface serverOsInfo {\n  addr: string;\n  info: infoStat;\n  sensors: temperatureStat[];\n  users: userStat[];\n  error: string;\n}\n\nexport interface infoStat {\n  hostname: string;\n  uptime: number;\n  bootTime: number;\n  procs: number;\n  os: string;\n  platform: string;\n  platformFamily: string;\n  platformVersion: string;\n  kernelVersion: string;\n  kernelArch: string;\n  virtualizationSystem: string;\n  virtualizationRole: string;\n  hostid: string;\n}\n\nexport interface temperatureStat {\n  sensorKey: string;\n  sensorTemperature: number;\n}\n\nexport interface userStat {\n  user: string;\n  terminal: string;\n  host: string;\n  started: number;\n}\n\nexport interface serverMemInfo {\n  addr: string;\n  swap: swapMemoryStat;\n  virtualmem: virtualMemoryStat;\n  error: string;\n}\n\nexport interface swapMemoryStat {\n  total: number;\n  used: number;\n  free: number;\n  usedPercent: number;\n  sin: number;\n  sout: number;\n  pgin: number;\n  pgout: number;\n  pgfault: number;\n  pgmajfault: number;\n}\n\nexport interface virtualMemoryStat {\n  total: number;\n  available: number;\n  used: number;\n  usedPercent: number;\n  free: number;\n  active: number;\n  inactive: number;\n  wired: number;\n  laundry: number;\n  buffers: number;\n  cached: number;\n  writeback: number;\n  dirty: number;\n  writebacktmp: number;\n  shared: number;\n  slab: number;\n  sreclaimable: number;\n  sunreclaim: number;\n  pagetables: number;\n  swapcached: number;\n  commitlimit: number;\n  committedas: number;\n  hightotal: number;\n  highfree: number;\n  lowtotal: number;\n  lowfree: number;\n  swaptotal: number;\n  swapfree: number;\n  mapped: number;\n  vmalloctotal: number;\n  vmallocused: number;\n  vmallocchunk: number;\n  hugepagestotal: number;\n  hugepagesfree: number;\n  hugepagesize: number;\n}\n\nexport interface serverProcInfo {\n  addr: string;\n  processes: sysProcess[];\n  error: string;\n}\n\nexport interface sysProcess {\n  pid: number;\n  background: boolean;\n  cpupercent: number;\n  children: number[];\n  cmd: string;\n  connections: nethwConnectionStat[];\n  createtime: number;\n  cwd: string;\n  exe: string;\n  gids: number[];\n  iocounters: processIOCountersStat;\n  isrunning: boolean;\n  meminfo: memoryInfoStat;\n  memmaps: any[];\n  mempercent: number;\n  name: string;\n  netiocounters: nethwIOCounterStat[];\n  nice: number;\n  numctxswitches: processNmCtxSwitchesStat;\n  numfds: number;\n  numthreads: number;\n  pagefaults: processPageFaultsStat;\n  parent: number;\n  ppid: number;\n  rlimit: processRLimitStat[];\n  status: string;\n  tgid: number;\n  cputimes: cpuTimeStat;\n  uids: number[];\n  username: string;\n}\n\nexport interface nethwConnectionStat {\n  fd: number;\n  family: number;\n  type: number;\n  localaddr: netAddr;\n  remoteaddr: netAddr;\n  status: string;\n  uids: number[];\n  pid: number;\n}\n\nexport interface netAddr {\n  ip: string;\n  port: number;\n}\n\nexport interface processIOCountersStat {\n  readCount: number;\n  writeCount: number;\n  readBytes: number;\n  writeBytes: number;\n}\n\nexport interface memoryInfoStat {\n  rss: number;\n  vms: number;\n  hwm: number;\n  data: number;\n  stack: number;\n  locked: number;\n  swap: number;\n}\n\nexport interface nethwIOCounterStat {\n  name: string;\n  bytesSent: number;\n  bytesRecv: number;\n  packetsSent: number;\n  packetsRecv: number;\n  errin: number;\n  errout: number;\n  dropin: number;\n  dropout: number;\n  fifoin: number;\n  fifoout: number;\n}\n\nexport interface processNmCtxSwitchesStat {\n  voluntary: number;\n  involuntary: number;\n}\n\nexport interface processPageFaultsStat {\n  minorFaults: number;\n  majorFaults: number;\n  childMinorFaults: number;\n  childMajorFaults: number;\n}\n\nexport interface processRLimitStat {\n  resource: number;\n  soft: number;\n  hard: number;\n  used: number;\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { CircularProgress, Grid } from \"@mui/material\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { DrivesIcon, VersionIcon } from \"../../../../icons\";\nimport { ServerInfo, Usage } from \"../../Dashboard/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\n\ninterface ITestWrapper {\n  title: any;\n  children: any;\n  classes: any;\n  advancedVisible: boolean;\n  advancedContent?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    titleBar: {\n      borderBottom: \"#E5E5E5 1px solid\",\n      padding: \"30px 25px\",\n      fontSize: 20,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      borderRadius: \"10px 10px 0px 0px\",\n      paddingTop: 0,\n    },\n    divisorContainer: {\n      padding: 25,\n    },\n    serversData: {\n      color: \"#07193E\",\n      fontSize: 18,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        marginRight: 10,\n      },\n    },\n    minioVersionContainer: {\n      fontSize: 12,\n      color: \"#07193E\",\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n    },\n    versionIcon: {\n      color: \"#07193E\",\n      marginRight: 20,\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    advancedContainer: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n    },\n    optionsContainer: {\n      padding: 0,\n      marginBottom: 25,\n    },\n    advancedConfiguration: {\n      color: \"#2781B0\",\n      fontSize: 10,\n      textDecoration: \"underline\",\n      border: \"none\",\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      alignItems: \"center\",\n      display: \"flex\",\n\n      \"&:hover\": {\n        color: \"#07193E\",\n      },\n\n      \"& svg\": {\n        width: 10,\n        alignSelf: \"center\",\n        marginLeft: 5,\n      },\n    },\n    advancedOpen: {\n      transform: \"rotateZ(-90deg) translateX(-4px) translateY(2px)\",\n    },\n    advancedClosed: {\n      transform: \"rotateZ(90deg)\",\n    },\n    advancedContent: {\n      backgroundColor: \"#F5F7F9\",\n      maxHeight: 0,\n      transitionDuration: \"0.3s\",\n      overflow: \"hidden\",\n      padding: \"0 15px\",\n      \"&.open\": {\n        maxHeight: 400,\n        padding: 15,\n      },\n    },\n  });\n\nconst TestWrapper = ({\n  title,\n  children,\n  classes,\n  advancedVisible,\n  advancedContent,\n}: ITestWrapper) => {\n  const [version, setVersion] = useState<string>(\"N/A\");\n  const [totalNodes, setTotalNodes] = useState<number>(0);\n  const [totalDrives, setTotalDrives] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [advancedOpen, setAdvancedOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/info?defaultOnly=true`)\n        .then((res: Usage) => {\n          const totalServers = res.servers?.length;\n          setTotalNodes(totalServers);\n\n          if (res.servers.length > 0) {\n            setVersion(res.servers[0].version);\n\n            const totalServers = res.servers.reduce(\n              (prevTotal: number, currentElement: ServerInfo) => {\n                return prevTotal + currentElement.drives.length;\n              },\n              0\n            );\n            setTotalDrives(totalServers);\n          }\n\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  return (\n    <Grid item xs={12}>\n      <Grid item xs={12} className={classes.titleBar}>\n        {title}\n      </Grid>\n      <Grid item xs={12}>\n        <Grid item xs={12} className={classes.optionsContainer}>\n          <Grid container className={classes.divisorContainer}>\n            {!loading ? (\n              <Fragment>\n                <Grid item xs={12} md={4} className={classes.serversData}>\n                  <DrivesIcon /> <strong>{totalNodes}</strong>\n                  &nbsp;nodes,&nbsp;\n                  <strong>{totalDrives}</strong>&nbsp; drives\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  md={4}\n                  className={classes.minioVersionContainer}\n                >\n                  <span className={classes.versionIcon}>\n                    <VersionIcon />\n                  </span>{\" \"}\n                  MinIO VERSION&nbsp;<strong>{version}</strong>\n                </Grid>\n                <Grid item xs={12} md={4} className={classes.advancedContainer}>\n                  {advancedVisible && (\n                    <button\n                      onClick={() => {\n                        setAdvancedOpen(!advancedOpen);\n                      }}\n                      className={classes.advancedConfiguration}\n                    >\n                      Advanced configurations{\" \"}\n                      <span\n                        className={\n                          advancedOpen\n                            ? classes.advancedOpen\n                            : classes.advancedClosed\n                        }\n                      >\n                        <ArrowForwardIosIcon />\n                      </span>\n                    </button>\n                  )}\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.loaderAlign}>\n                  <CircularProgress size={25} />\n                </Grid>\n              </Fragment>\n            )}\n          </Grid>\n          {advancedContent && (\n            <Grid\n              xs={12}\n              className={`${classes.advancedContent} ${\n                advancedOpen ? \"open\" : \"\"\n              }`}\n            >\n              {advancedContent}\n            </Grid>\n          )}\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TestWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  ICloseEvent,\n  IMessageEvent,\n  w3cwebsocket as W3CWebSocket,\n} from \"websocket\";\nimport { AppState } from \"../../../store\";\nimport { connect } from \"react-redux\";\nimport { healthInfoMessageReceived, healthInfoResetMessage } from \"./actions\";\nimport {\n  DiagStatError,\n  DiagStatInProgress,\n  DiagStatSuccess,\n  HealthInfoMessage,\n} from \"./types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  WSCloseAbnormalClosure,\n  WSCloseInternalServerErr,\n  WSClosePolicyViolation,\n  wsProtocol,\n} from \"../../../utils/wsUtils\";\nimport {\n  actionsTray,\n  containerForHeader,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { Button, Grid } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { setServerDiagStat, setSnackBarMessage } from \"../../../actions\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport BackLink from \"../../../common/BackLink\";\nimport TestWrapper from \"../Common/TestWrapper/TestWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    loading: {\n      paddingTop: 8,\n      paddingLeft: 40,\n    },\n    buttons: {\n      justifyContent: \"flex-start\",\n      gap: 20,\n    },\n    localMessage: {\n      fontSize: 24,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    startDiagnostic: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    progressResult: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    diagNew: {\n      textAlign: \"right\",\n      margin: 25,\n      marginBottom: 0,\n    },\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\ninterface IHealthInfo {\n  classes: any;\n  healthInfoMessageReceived: typeof healthInfoMessageReceived;\n  healthInfoResetMessage: typeof healthInfoResetMessage;\n  message: HealthInfoMessage;\n  namespace: string;\n  tenant: string;\n  setSnackBarMessage: typeof setSnackBarMessage;\n  setServerDiagStat: typeof setServerDiagStat;\n  serverDiagnosticStatus: string;\n}\n\nconst HealthInfo = ({\n  classes,\n  healthInfoMessageReceived,\n  healthInfoResetMessage,\n  message,\n  setSnackBarMessage,\n  setServerDiagStat,\n  serverDiagnosticStatus,\n}: IHealthInfo) => {\n  const [startDiagnostic, setStartDiagnostic] = useState(false);\n  const [diagStarted, setDiagStarted] = useState<boolean>(false);\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  const [localMessage, setMessage] = useState<string>(\"\");\n  const [title, setTitle] = useState<string>(\"New Diagnostic\");\n\n  useEffect(() => {\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      setTitle(\"Diagnostic in progress...\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatSuccess && diagStarted) {\n      setTitle(\"Diagnostic complete\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatError) {\n      setTitle(\"Error\");\n      return;\n    }\n  }, [serverDiagnosticStatus, startDiagnostic, diagStarted]);\n\n  useEffect(() => {\n    if (\n      serverDiagnosticStatus === DiagStatSuccess &&\n      message !== ({} as HealthInfoMessage)\n    ) {\n      // Allow download of diagnostics file only when\n      // it succeded fetching all the results and info is not empty.\n      setDownloadDisabled(false);\n    }\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      // Disable Start Diagnotic and Disable Download buttons\n      // if a Diagnosis is in progress.\n      setDownloadDisabled(true);\n    }\n    setStartDiagnostic(false);\n  }, [serverDiagnosticStatus, message]);\n\n  useEffect(() => {\n    if (startDiagnostic) {\n      healthInfoResetMessage();\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      const wsProt = wsProtocol(url.protocol);\n\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}/ws/health-info?deadline=1h`\n      );\n\n      let interval: any | null = null;\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n          interval = setInterval(() => {\n            c.send(\"ok\");\n          }, 10 * 1000);\n          setDiagStarted(true);\n          setMessage(\n            \"Diagnostic started. Please do not refresh page during diagnosis.\"\n          );\n          setServerDiagStat(DiagStatInProgress);\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: HealthInfoMessage = JSON.parse(message.data.toString());\n          m.timestamp = new Date(m.timestamp.toString());\n\n          healthInfoMessageReceived(m);\n        };\n        c.onerror = (error: Error) => {\n          console.log(\"error closing websocket:\", error.message);\n          c.close(1000);\n          clearInterval(interval);\n          setServerDiagStat(DiagStatError);\n        };\n        c.onclose = (event: ICloseEvent) => {\n          clearInterval(interval);\n          if (\n            event.code === WSCloseInternalServerErr ||\n            event.code === WSClosePolicyViolation ||\n            event.code === WSCloseAbnormalClosure\n          ) {\n            // handle close with error\n            console.log(\"connection closed by server with code:\", event.code);\n            setMessage(\"An error occurred while getting Diagnostic file.\");\n            setServerDiagStat(DiagStatError);\n          } else {\n            console.log(\"connection closed by server\");\n\n            setMessage(\"Diagnostic file is ready to be downloaded.\");\n            setServerDiagStat(DiagStatSuccess);\n          }\n        };\n      }\n    } else {\n      // reset start status\n      setStartDiagnostic(false);\n    }\n  }, [\n    healthInfoMessageReceived,\n    healthInfoResetMessage,\n    startDiagnostic,\n    setSnackBarMessage,\n    setServerDiagStat,\n  ]);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Diagnostic\" />\n      <BackLink to=\"/tools\" label=\"Return to Tools\" />\n\n      <PageLayout>\n        <Grid item xs={12} className={classes.boxy}>\n          <TestWrapper title={title} advancedVisible={false}>\n            <Grid container className={classes.buttons}>\n              {!diagStarted && (\n                <Grid\n                  key=\"start-diag\"\n                  item\n                  xs={12}\n                  className={classes.startDiagnostic}\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={startDiagnostic}\n                    onClick={() => setStartDiagnostic(true)}\n                  >\n                    Start Diagnostic\n                  </Button>\n                </Grid>\n              )}\n              {diagStarted && (\n                <Grid\n                  key=\"start-download\"\n                  item\n                  xs={12}\n                  className={classes.progressResult}\n                >\n                  <div className={classes.localMessage}>{localMessage}</div>\n                  {serverDiagnosticStatus === DiagStatInProgress ? (\n                    <div className={classes.loading}>\n                      <CircularProgress size={25} />\n                    </div>\n                  ) : (\n                    <Fragment>\n                      {serverDiagnosticStatus !== DiagStatError && (\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            download(\n                              \"diagnostic.json\",\n                              JSON.stringify(message, null, 2)\n                            );\n                          }}\n                          disabled={downloadDisabled}\n                        >\n                          Download\n                        </Button>\n                      )}\n                      <Grid item xs={12} className={classes.diagNew}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={startDiagnostic}\n                          onClick={() => setStartDiagnostic(true)}\n                        >\n                          Start New Diagnostic\n                        </Button>\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              )}\n            </Grid>\n          </TestWrapper>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  message: state.healthInfo.message,\n  serverDiagnosticStatus: state.system.serverDiagnosticStatus,\n});\n\nconst connector = connect(mapState, {\n  healthInfoMessageReceived: healthInfoMessageReceived,\n  healthInfoResetMessage: healthInfoResetMessage,\n  setSnackBarMessage,\n  setServerDiagStat,\n});\n\nexport default connector(withStyles(styles)(HealthInfo));\n"],"sourceRoot":""}