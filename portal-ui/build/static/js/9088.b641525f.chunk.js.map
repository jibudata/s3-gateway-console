{"version":3,"file":"static/js/9088.b641525f.chunk.js","mappings":"+MA6HA,UA1F8B,SAAHA,GASK,IAR9BC,EAA0BD,EAA1BC,2BACAC,EAAUF,EAAVE,WACAC,EAAcH,EAAdG,eACAC,EAAYJ,EAAZI,aACAC,EAAaL,EAAbK,cACAC,EAAcN,EAAdM,eACAC,EAAWP,EAAXO,YAAWC,EAAAR,EACXS,oBAAAA,OAAmB,IAAAD,GAAQA,EAErBE,GAAWC,EAAAA,EAAAA,MACjBC,GAAgDC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7DI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAO5CI,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASlB,GAA2B,EAAM,IACzC,SAACmB,GAAyB,OAC3CV,GAASW,EAAAA,EAAAA,IAAqBD,GAAM,IAGmCE,GAAAP,EAAAA,EAAAA,GAAAG,EAAA,GAAlEK,EAAaD,EAAA,GAAEE,EAAeF,EAAA,GAErC,IAAKnB,EACH,OAAO,KAqBT,OACEsB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MACElB,EACI,oCACA,0BAENmB,YAAa,SACbC,OAAQ3B,EACR4B,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BC,UAAWT,EACXU,UA7BoB,WACtB,IAAIC,EAAG,mBAAAC,OAAsBhC,EAAc,iBAAAgC,OAAgB/B,GAE3D,GAAIK,EAAqB,CACvB,IAAIF,EAKF,OAFA2B,EAAG,mBAAAC,OAAsBhC,EAAc,2CACvCqB,EAAgB,SAAUU,EAAK,CAAEE,MAAO/B,IAHxC6B,EAAG,mBAAAC,OAAsBhC,EAAc,gCAM3C,MAA8B,IAAnBG,IACT4B,EAAG,mBAAAC,OAAsBhC,EAAc,kCAGzCqB,EAAgB,SAAUU,EAC5B,EAcIG,QAtCY,WAAH,OAASpC,GAA2B,EAAO,EAuCpDqC,mBAAoB,CAClBC,SAAU9B,GAA4C,mBAArBO,GAEnCwB,qBACEf,EAAAA,EAAAA,KAACgB,EAAAA,SAAQ,CAAAC,SACNjC,GACCkC,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,8EAEDjB,EAAAA,EAAAA,KAAA,KAAAiB,SAAIvC,IAAmB,KAACsB,EAAAA,EAAAA,KAAA,UAC/BA,EAAAA,EAAAA,KAAA,SAAM,4BACkBA,EAAAA,EAAAA,KAAA,KAAAiB,SAAG,mBAAkB,gBAC7CjB,EAAAA,EAAAA,KAACmB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGJ,UAChBjB,EAAAA,EAAAA,KAACsB,EAAAA,IAAQ,CACPC,GAAG,gBACHC,KAAK,gBACLC,SAAU,SAACC,GACTlC,EAAoBkC,EAAMC,OAAOC,MACnC,EACAC,MAAM,GACND,MAAOrC,UAKb2B,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,mDACyC,KACjDjB,EAAAA,EAAAA,KAAA,KAAAiB,SAAItC,IAAiB,UAOnC,C","sources":["screens/Console/Buckets/BucketDetails/DeleteReplicationRule.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { ConfirmDeleteIcon, Grid, InputBox } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteReplicationProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedBucket: string;\n  ruleToDelete?: string;\n  rulesToDelete?: string[];\n  remainingRules: number;\n  allSelected: boolean;\n  deleteSelectedRules?: boolean;\n}\n\nconst DeleteReplicationRule = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n  ruleToDelete,\n  rulesToDelete,\n  remainingRules,\n  allSelected,\n  deleteSelectedRules = false,\n}: IDeleteReplicationProps) => {\n  const dispatch = useAppDispatch();\n  const [confirmationText, setConfirmationText] = useState<string>(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedBucket) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    let url = `/api/v1/buckets/${selectedBucket}/replication/${ruleToDelete}`;\n\n    if (deleteSelectedRules) {\n      if (allSelected) {\n        url = `/api/v1/buckets/${selectedBucket}/delete-all-replication-rules`;\n      } else {\n        url = `/api/v1/buckets/${selectedBucket}/delete-selected-replication-rules`;\n        invokeDeleteApi(\"DELETE\", url, { rules: rulesToDelete });\n        return;\n      }\n    } else if (remainingRules === 1) {\n      url = `/api/v1/buckets/${selectedBucket}/delete-all-replication-rules`;\n    }\n\n    invokeDeleteApi(\"DELETE\", url);\n  };\n\n  return (\n    <ConfirmDialog\n      title={\n        deleteSelectedRules\n          ? \"Delete Selected Replication Rules\"\n          : \"Delete Replication Rule\"\n      }\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteSelectedRules && confirmationText !== \"Yes, I am sure\",\n      }}\n      confirmationContent={\n        <Fragment>\n          {deleteSelectedRules ? (\n            <Fragment>\n              Are you sure you want to remove the selected replication rules for\n              bucket <b>{selectedBucket}</b>?<br />\n              <br />\n              To continue please type <b>Yes, I am sure</b> in the box.\n              <Grid item xs={12}>\n                <InputBox\n                  id=\"retype-tenant\"\n                  name=\"retype-tenant\"\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setConfirmationText(event.target.value);\n                  }}\n                  label=\"\"\n                  value={confirmationText}\n                />\n              </Grid>\n            </Fragment>\n          ) : (\n            <Fragment>\n              Are you sure you want to delete replication rule{\" \"}\n              <b>{ruleToDelete}</b>?\n            </Fragment>\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteReplicationRule;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedBucket","ruleToDelete","rulesToDelete","remainingRules","allSelected","_ref$deleteSelectedRu","deleteSelectedRules","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","confirmationText","setConfirmationText","_useApi","useApi","err","setErrorSnackMessage","_useApi2","deleteLoading","invokeDeleteApi","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","url","concat","rules","onClose","confirmButtonProps","disabled","confirmationContent","Fragment","children","_jsxs","Grid","item","xs","InputBox","id","name","onChange","event","target","value","label"],"sourceRoot":""}