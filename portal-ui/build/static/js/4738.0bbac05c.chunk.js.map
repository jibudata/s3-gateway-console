{"version":3,"file":"static/js/4738.0bbac05c.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/AccessDetailsPanel.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DataTable, SectionTitle, Tabs } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { encodeURLString } from \"../../../../common/utils\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { Policy } from \"../../../../api/consoleApi\";\n\nconst AccessDetails = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n\n  const [curTab, setCurTab] = useState<string>(\"simple-tab-0\");\n  const [loadingPolicies, setLoadingPolicies] = useState<boolean>(true);\n  const [bucketPolicy, setBucketPolicy] = useState<Policy[] | undefined>([]);\n  const [loadingUsers, setLoadingUsers] = useState<boolean>(true);\n  const [bucketUsers, setBucketUsers] = useState<string[]>([]);\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayPoliciesList = hasPermission(bucketName, [\n    IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n  ]);\n\n  const displayUsersList = hasPermission(\n    bucketName,\n    [\n      IAM_SCOPES.ADMIN_GET_POLICY,\n      IAM_SCOPES.ADMIN_LIST_USERS,\n      IAM_SCOPES.ADMIN_LIST_GROUPS,\n    ],\n    true,\n  );\n\n  const viewUser = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_USER,\n  ]);\n  const viewPolicy = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_POLICY,\n    IAM_SCOPES.ADMIN_LIST_USERS,\n    IAM_SCOPES.ADMIN_LIST_GROUPS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingUsers(true);\n      setLoadingPolicies(true);\n    }\n  }, [loadingBucket, setLoadingUsers, setLoadingPolicies]);\n\n  const PolicyActions = [\n    {\n      type: \"view\",\n      disableButtonFunction: () => !viewPolicy,\n      onClick: (policy: any) => {\n        navigate(`${IAM_PAGES.POLICIES}/${encodeURLString(policy.name)}`);\n      },\n    },\n  ];\n\n  const userTableActions = [\n    {\n      type: \"view\",\n      disableButtonFunction: () => !viewUser,\n      onClick: (user: any) => {\n        navigate(`${IAM_PAGES.USERS}/${encodeURLString(user)}`);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    if (loadingUsers) {\n      if (displayUsersList) {\n        api.bucketUsers\n          .listUsersWithAccessToBucket(bucketName)\n          .then((res) => {\n            setBucketUsers(res.data);\n            setLoadingUsers(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err)));\n            setLoadingUsers(false);\n          });\n      } else {\n        setLoadingUsers(false);\n      }\n    }\n  }, [loadingUsers, dispatch, bucketName, displayUsersList]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_access\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingPolicies) {\n      if (displayPoliciesList) {\n        api.bucketPolicy\n          .listPoliciesWithBucket(bucketName)\n          .then((res) => {\n            setBucketPolicy(res.data.policies);\n            setLoadingPolicies(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err)));\n            setLoadingPolicies(false);\n          });\n      } else {\n        setLoadingPolicies(false);\n      }\n    }\n  }, [loadingPolicies, dispatch, bucketName, displayPoliciesList]);\n\n  return (\n    <Fragment>\n      <SectionTitle separator>Access Audit</SectionTitle>\n      <Tabs\n        currentTabOrPath={curTab}\n        onTabClick={(newValue: string) => {\n          setCurTab(newValue);\n        }}\n        horizontal\n        options={[\n          {\n            tabConfig: { label: \"Policies\", id: \"simple-tab-0\" },\n            content: (\n              <SecureComponent\n                scopes={[IAM_SCOPES.ADMIN_LIST_USER_POLICIES]}\n                resource={bucketName}\n                errorProps={{ disabled: true }}\n              >\n                {bucketPolicy && (\n                  <DataTable\n                    noBackground={true}\n                    itemActions={PolicyActions}\n                    columns={[{ label: \"Name\", elementKey: \"name\" }]}\n                    isLoading={loadingPolicies}\n                    records={bucketPolicy}\n                    entityName=\"Policies\"\n                    idField=\"name\"\n                  />\n                )}\n              </SecureComponent>\n            ),\n          },\n          {\n            tabConfig: { label: \"Users\", id: \"simple-tab-1\" },\n            content: (\n              <SecureComponent\n                scopes={[\n                  IAM_SCOPES.ADMIN_GET_POLICY,\n                  IAM_SCOPES.ADMIN_LIST_USERS,\n                  IAM_SCOPES.ADMIN_LIST_GROUPS,\n                ]}\n                resource={bucketName}\n                matchAll\n                errorProps={{ disabled: true }}\n              >\n                <DataTable\n                  noBackground={true}\n                  itemActions={userTableActions}\n                  columns={[{ label: \"User\", elementKey: \"accessKey\" }]}\n                  isLoading={loadingUsers}\n                  records={bucketUsers}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                />\n              </SecureComponent>\n            ),\n          },\n        ]}\n      />\n    </Fragment>\n  );\n};\n\nexport default AccessDetails;\n"],"names":["dispatch","useAppDispatch","navigate","useNavigate","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","_useState","useState","_useState2","_slicedToArray","curTab","setCurTab","_useState3","_useState4","loadingPolicies","setLoadingPolicies","_useState5","_useState6","bucketPolicy","setBucketPolicy","_useState7","_useState8","loadingUsers","setLoadingUsers","_useState9","_useState10","bucketUsers","setBucketUsers","bucketName","displayPoliciesList","hasPermission","IAM_SCOPES","ADMIN_LIST_USER_POLICIES","displayUsersList","ADMIN_GET_POLICY","ADMIN_LIST_USERS","ADMIN_LIST_GROUPS","viewUser","CONSOLE_UI_RESOURCE","ADMIN_GET_USER","viewPolicy","useEffect","PolicyActions","type","disableButtonFunction","onClick","policy","concat","IAM_PAGES","POLICIES","encodeURLString","name","userTableActions","user","USERS","api","listUsersWithAccessToBucket","then","res","data","catch","err","setErrorSnackMessage","errorToHandler","setHelpName","listPoliciesWithBucket","policies","_jsxs","Fragment","children","_jsx","SectionTitle","separator","Tabs","currentTabOrPath","onTabClick","newValue","horizontal","options","tabConfig","label","id","content","SecureComponent","scopes","resource","errorProps","disabled","DataTable","noBackground","itemActions","columns","elementKey","isLoading","records","entityName","idField","matchAll"],"sourceRoot":""}