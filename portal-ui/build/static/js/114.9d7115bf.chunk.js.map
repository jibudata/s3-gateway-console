{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Buckets/BucketDetails/EnableBucketEncryption.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","id","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","SelectStyled","spacing","input","borderColor","InputBase","options","item","xs","fieldContainer","map","option","modalStyleUtils","formFieldStyles","encryptionCfg","selectedBucket","closeModalAndRefresh","loading","setLoading","kmsKeyID","setKmsKeyID","encryptionType","setEncryptionType","algorithm","kmsMasterKeyID","noValidate","onSubmit","e","preventDefault","api","invoke","then","catch","err","encType","modalFormScrollable","formFieldRow","target","modalButtonBar","variant"],"mappings":"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","file":"static/js/114.9d7115bf.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern=\"\",\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if(pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { BucketEncryptionInfo } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalStyleUtils,\n    ...formFieldStyles,\n  });\n\ninterface IEnableBucketEncryptionProps {\n  classes: any;\n  open: boolean;\n  encryptionEnabled: boolean;\n  encryptionCfg: BucketEncryptionInfo | null;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst EnableBucketEncryption = ({\n  classes,\n  open,\n  encryptionCfg,\n  selectedBucket,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IEnableBucketEncryptionProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [kmsKeyID, setKmsKeyID] = useState<string>(\"\");\n  const [encryptionType, setEncryptionType] = useState<string>(\"disabled\");\n\n  useEffect(() => {\n    if (encryptionCfg) {\n      if (encryptionCfg.algorithm === \"AES256\") {\n        setEncryptionType(\"sse-s3\");\n      } else {\n        setEncryptionType(\"sse-kms\");\n        setKmsKeyID(encryptionCfg.kmsMasterKeyID);\n      }\n    }\n  }, [encryptionCfg]);\n\n  const enableBucketEncryption = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (loading) {\n      return;\n    }\n    if (encryptionType === \"disabled\") {\n      api\n        .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/encryption/disable`)\n        .then(() => {\n          setLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    } else {\n      api\n        .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/encryption/enable`, {\n          encType: encryptionType,\n          kmsKeyID: kmsKeyID,\n        })\n        .then(() => {\n          setLoading(false);\n          closeModalAndRefresh();\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Enable Bucket Encryption\"\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          enableBucketEncryption(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setEncryptionType(e.target.value as string);\n                }}\n                id=\"select-encryption-type\"\n                name=\"select-encryption-type\"\n                label={\"Encryption Type\"}\n                value={encryptionType}\n                options={[\n                  {\n                    label: \"Disabled\",\n                    value: \"disabled\",\n                  },\n                  {\n                    label: \"SSE-S3\",\n                    value: \"sse-s3\",\n                  },\n                  {\n                    label: \"SSE-KMS\",\n                    value: \"sse-kms\",\n                  },\n                ]}\n              />\n            </Grid>\n\n            {encryptionType === \"sse-kms\" && (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"kms-key-id\"\n                  name=\"kms-key-id\"\n                  label=\"KMS Key ID\"\n                  value={kmsKeyID}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setKmsKeyID(e.target.value);\n                  }}\n                />\n              </Grid>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Save\n            </Button>\n          </Grid>\n          {loading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(EnableBucketEncryption));\n"],"sourceRoot":""}