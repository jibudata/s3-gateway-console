{"version":3,"file":"static/js/4414.ff5f95b9.chunk.js","mappings":"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","sources":["screens/shared/ErrorBlock.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Configurations/TiersConfiguration/UpdateTierCredentialsModal.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Button, LockIcon } from \"mds\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport { ITierElement } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface ITierCredentialsModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  tierData: ITierElement;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    ...modalBasic,\n    ...formFieldStyles,\n  });\n\nconst UpdateTierCredentialsModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  tierData,\n}: ITierCredentialsModal) => {\n  const dispatch = useAppDispatch();\n  const [savingTiers, setSavingTiers] = useState<boolean>(false);\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n\n  const type = get(tierData, \"type\", \"\");\n  const name = get(tierData, `${type}.name`, \"\");\n\n  useEffect(() => {\n    let valid = true;\n\n    if (type === \"s3\" || type === \"azure\" || type === \"minio\") {\n      if (accountName === \"\" || accountKey === \"\") {\n        valid = false;\n      }\n    } else if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [accountKey, accountName, encodedCreds, type]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (type === \"s3\" || type === \"azure\" || type === \"minio\") {\n      rules = {\n        access_key: accountName,\n        secret_key: accountKey,\n      };\n    } else if (type === \"gcs\") {\n      rules = {\n        creds: encodedCreds,\n      };\n    }\n    if (name !== \"\") {\n      api\n        .invoke(\"PUT\", `/api/v1/admin/tiers/${type}/${name}/credentials`, rules)\n        .then(() => {\n          setSavingTiers(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSavingTiers(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    } else {\n      setModalErrorSnackMessage({\n        errorMessage: \"There was an error retrieving tier information\",\n        detailedError: \"\",\n      });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      titleIcon={<LockIcon />}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`Update Credentials - ${type} / ${name}`}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setSavingTiers(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12}>\n            {(type === \"s3\" || type === \"minio\") && (\n              <Fragment>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    label=\"Access Key\"\n                    placeholder=\"Enter Access Key\"\n                    value={accountName}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccountName(e.target.value);\n                    }}\n                  />\n                </div>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    label=\"Secret Key\"\n                    placeholder=\"Enter Secret Key\"\n                    value={accountKey}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccountKey(e.target.value);\n                    }}\n                  />\n                </div>\n              </Fragment>\n            )}\n            {type === \"gcs\" && (\n              <Fragment>\n                <FileSelector\n                  accept=\".json\"\n                  id=\"creds\"\n                  label=\"Credentials\"\n                  name=\"creds\"\n                  onChange={(encodedValue, fileName) => {\n                    setEncodedCreds(encodedValue);\n                    setCreds(fileName);\n                  }}\n                  value={creds}\n                />\n              </Fragment>\n            )}\n            {type === \"azure\" && (\n              <Fragment>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"accountName\"\n                    name=\"accountName\"\n                    label=\"Account Name\"\n                    placeholder=\"Enter Account Name\"\n                    value={accountName}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccountName(e.target.value);\n                    }}\n                  />\n                </div>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"accountKey\"\n                    name=\"accountKey\"\n                    label=\"Account Key\"\n                    placeholder=\"Enter Account Key\"\n                    value={accountKey}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccountKey(e.target.value);\n                    }}\n                  />\n                </div>\n              </Fragment>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              id={\"save-credentials\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={savingTiers || !isFormValid}\n              label={\"Save\"}\n            />\n          </Grid>\n          {savingTiers && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(UpdateTierCredentialsModal);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["withStyles","theme","createStyles","errorBlock","color","palette","error","main","classes","errorMessage","withBreak","Typography","component","variant","className","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","onChange","id","name","disabled","tooltip","required","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","onClick","disableRipple","disableFocusRipple","size","Cancel","fileReselect","AttachFile","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","flexGrow","position","overlayAction","right","top","maxHeight","autoComplete","multiline","index","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","container","clsx","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","disableTouchRipple","buttonContainer","display","justifyContent","modalBasic","formFieldStyles","open","closeModalAndRefresh","tierData","dispatch","useAppDispatch","savingTiers","setSavingTiers","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","isFormValid","setIsFormValid","useEffect","valid","modalOpen","titleIcon","onClose","noValidate","onSubmit","preventDefault","rules","access_key","secret_key","api","then","catch","err","setModalErrorSnackMessage","detailedError","addRecord","Fragment","formFieldRow","encodedValue","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}