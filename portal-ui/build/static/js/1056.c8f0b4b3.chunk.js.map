{"version":3,"file":"static/js/1056.c8f0b4b3.chunk.js","mappings":"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","sources":["common/BackLink.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/GenericWizard/WizardPage.tsx","screens/Console/Common/GenericWizard/GenericWizard.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/utils.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantSizeResources.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantSize.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantSizeMK.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Tenants/TenantDetails/utils.ts","screens/Console/Tenants/actions.ts","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n}\n\nconst BackLink = ({ to, label, classes, className }: IBackLink) => {\n  return (\n    <Link to={to} className={`${classes.link} ${className ? className : \"\"}`}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      fontSize: \".8rem\",\n      fontWeight: 600,\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport { Button } from \"@mui/material\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n    promptIcon: {\n      marginRight: \".1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"2rem\",\n      width: \"2rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          <Button\n            variant=\"outlined\"\n            className={classes.buttonSpacer}\n            onClick={() => {\n              closeModal();\n            }}\n            color=\"primary\"\n          >\n            Done\n          </Button>\n\n          {!idp && (\n            <Button\n              onClick={() => {\n                let consoleExtras = {};\n\n                if (consoleCreds) {\n                  if (!Array.isArray(consoleCreds)) {\n                    consoleExtras = {\n                      console: [\n                        {\n                          access_key: consoleCreds.accessKey,\n                          secret_key: consoleCreds.secretKey,\n                        },\n                      ],\n                    };\n                  } else {\n                    const cCreds = consoleCreds.map((itemMap) => {\n                      return {\n                        access_key: itemMap.accessKey,\n                        secret_key: itemMap.secretKey,\n                      };\n                    });\n\n                    consoleExtras = {\n                      console: [...cCreds],\n                    };\n                  }\n                }\n\n                download(\n                  \"credentials.json\",\n                  JSON.stringify({\n                    ...consoleExtras,\n                  })\n                );\n              }}\n              endIcon={<DownloadIcon />}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Download\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardButton, IWizardPage } from \"./types\";\nimport { Button, LinearProgress } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizardStepContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 1,\n    },\n    wizardComponent: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 100px - 80px)\",\n      minHeight: 400,\n      flex: 1,\n      width: \"100%\",\n    },\n    wizardModal: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 515px)\",\n    },\n    buttonsContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\" as const,\n      padding: \"10px 0\",\n      borderTop: \"#EAEAEA 1px solid\",\n      \"& button\": {\n        marginLeft: 10,\n      },\n      \"&.forModal\": {\n        paddingBottom: 0,\n      },\n    },\n    buttonInnerContainer: {\n      width: \"100%\",\n      textAlign: \"right\" as const,\n      marginRight: 15,\n    },\n  });\n\nconst WizardPage = ({\n  classes,\n  page,\n  pageChange,\n  loadingStep,\n  forModal,\n}: IWizardPage) => {\n  const buttonAction = (btn: IWizardButton) => {\n    switch (btn.type) {\n      case \"next\":\n        pageChange(\"++\");\n        break;\n      case \"back\":\n        pageChange(\"--\");\n        break;\n      case \"to\":\n        pageChange(btn.toPage || 0);\n        break;\n      case \"custom\":\n      default:\n    }\n\n    if (btn.action) {\n      btn.action(pageChange);\n    }\n  };\n\n  return (\n    <div className={classes.wizardStepContainer}>\n      <div className={forModal ? classes.wizardModal : classes.wizardComponent}>\n        {page.componentRender}\n      </div>\n      {loadingStep && (\n        <div>\n          <LinearProgress />\n        </div>\n      )}\n      <div\n        className={`${classes.buttonsContainer} ${forModal ? \"forModal\" : \"\"}`}\n      >\n        <div className={classes.buttonInnerContainer}>\n          {page.buttons.map((btn) => {\n            return (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  buttonAction(btn);\n                }}\n                disabled={!btn.enabled}\n                key={`button-${page.label}-${btn.label}`}\n              >\n                {btn.label}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WizardPage);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardMain } from \"./types\";\nimport WizardPage from \"./WizardPage\";\nimport { Grid, List } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizFromContainer: {},\n    wizFromModal: {\n      position: \"relative\",\n    },\n    modalWizardSteps: {\n      padding: 5,\n      borderBottom: \"#eaeaea 1px solid\",\n      \"& ul\": {\n        padding: 0,\n        marginTop: 0,\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n\n        \"& li\": {\n          listStyle: \"lower-roman\",\n          \"&::marker\": {\n            paddingLeft: 15,\n          },\n        },\n      },\n    },\n    buttonList: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      cursor: \"pointer\",\n      \"&:not(:disabled):hover\": {\n        textDecoration: \"underline\",\n      },\n      \"&:selected, &:active, &:focus, &:focus:active\": {\n        border: \"none\",\n        outline: 0,\n        boxShadow: \"none\",\n      },\n    },\n    paddedContentGrid: {\n      marginTop: 8,\n      padding: \"0 10px\",\n      minHeight: 400,\n    },\n    stepsLabel: {\n      fontSize: 20,\n      color: \"#393939\",\n      fontWeight: 600,\n      margin: \"15px 12px\",\n      \"&.stepsModalTitle\": {\n        textAlign: \"center\",\n        width: \"100%\",\n        marginTop: 0,\n        marginBottom: 10,\n      },\n    },\n    stepsMasterContainer: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#FFFFFF\",\n      width: \"100%\",\n      maxHeight: 90,\n    },\n    verticalSteps: {\n      borderRight: \"1px solid #E5E5E5\",\n      background: \"#F8F8F8\",\n    },\n    stepsContainer: {\n      paddingTop: 0,\n      \"& .MuiButtonBase-root.Mui-selected\": {\n        background: \"#E5E5E5\",\n      },\n    },\n    stepItem: {\n      minHeight: 60,\n      borderBottom: \"1px solid #E5E5E5\",\n      \"&:hover\": {\n        background: \"rgba(247,247,247,0.7)\",\n      },\n    },\n  });\n\nconst GenericWizard = ({\n  classes,\n  wizardSteps,\n  loadingStep,\n  forModal,\n}: IWizardMain) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  const pageChange = (toElement: string | number) => {\n    const lastPage = wizardSteps.length - 1;\n\n    if (toElement === \"++\") {\n      let nextPage = currentStep + 1;\n\n      if (nextPage > lastPage) {\n        nextPage = lastPage;\n      }\n\n      setCurrentStep(nextPage);\n    }\n\n    if (toElement === \"--\") {\n      let prevPage = currentStep - 1;\n\n      if (prevPage < 0) {\n        prevPage = 0;\n      }\n\n      setCurrentStep(prevPage);\n    }\n\n    if (typeof toElement === \"number\") {\n      let pg = toElement;\n      if (toElement < 0) {\n        pg = 0;\n      }\n\n      if (toElement > lastPage) {\n        pg = lastPage;\n      }\n\n      setCurrentStep(pg);\n    }\n  };\n\n  if (wizardSteps.length === 0) {\n    return null;\n  }\n\n  const stepsList = () => {\n    return (\n      <Fragment>\n        <List\n          component=\"nav\"\n          dense={true}\n          classes={{\n            root: classes.stepsContainer,\n          }}\n        >\n          {wizardSteps.map((step, index) => {\n            return (\n              <ListItem\n                button\n                disableRipple\n                onClick={() => pageChange(index)}\n                key={`wizard-${index.toString()}`}\n                selected={currentStep === index}\n                classes={{\n                  root: classes.stepItem,\n                }}\n              >\n                <ListItemText primary={step.label} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Fragment>\n    );\n  };\n  const stepsListModal = () => {\n    return (\n      <ul>\n        {wizardSteps.map((step, index) => {\n          return (\n            <li key={`wizard-${index.toString()}`}>\n              <button\n                onClick={() => pageChange(index)}\n                disabled={index > currentStep}\n                className={classes.buttonList}\n              >\n                {step.label}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Grid\n      container\n      className={forModal ? classes.wizFromModal : classes.wizFromContainer}\n    >\n      {forModal ? (\n        <Fragment>\n          <div className={classes.stepsMasterContainer}>\n            <div className={`${classes.stepsLabel} stepsModalTitle`}>Steps</div>\n            <div className={classes.modalWizardSteps}>{stepsListModal()}</div>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Grid\n            item\n            xs={12}\n            sm={2}\n            md={2}\n            lg={2}\n            xl={2}\n            className={classes.verticalSteps}\n          >\n            {stepsList()}\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        item\n        xs={12}\n        sm={forModal ? 12 : 10}\n        md={forModal ? 12 : 10}\n        lg={forModal ? 12 : 10}\n        xl={forModal ? 12 : 10}\n        className={forModal ? \"\" : classes.paddedContentGrid}\n      >\n        <WizardPage\n          page={wizardSteps[currentStep]}\n          pageChange={pageChange}\n          loadingStep={loadingStep}\n          forModal={forModal}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(GenericWizard);\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Opts } from \"../../../ListTenants/utils\";\nimport TenantSizeMK from \"./TenantSizeMK\";\n\nexport enum IMkEnvs {\n  \"aws\",\n  \"azure\",\n  \"gcp\",\n  \"default\",\n  undefined,\n}\n\nexport interface IDriveSizing {\n  driveSize: string;\n  sizeUnit: string;\n}\n\nexport interface IntegrationConfiguration {\n  typeSelection: string;\n  storageClass: string;\n  CPU: number;\n  memory: number;\n  drivesPerServer: number;\n  driveSize: IDriveSizing;\n}\n\nexport const AWSStorageTypes: Opts[] = [\n  { label: \"NVME\", value: \"nvme\" },\n  { label: \"HDD\", value: \"hdd\" },\n];\n\nexport const AzureStorageTypes: Opts[] = [\n  { label: \"Standard_L32s_v2\", value: \"Standard_L32s_v2\" },\n  { label: \"Standard_L48s_v2\", value: \"Standard_L48s_v2\" },\n  { label: \"Standard_L64s_v2\", value: \"Standard_L64s_v2\" },\n];\n\nexport const resourcesConfigurations = {\n  \"mp-mode-aws\": IMkEnvs.aws,\n  \"mp-mode-azure\": IMkEnvs.azure,\n  \"mp-mode-gcp\": IMkEnvs.gcp,\n};\n\nexport const AWSConfigurations: IntegrationConfiguration[] = [\n  {\n    typeSelection: \"nvme\",\n    storageClass: \"nvme-i3en-12xlarge\",\n    CPU: 48,\n    memory: 384,\n    driveSize: { driveSize: \"7500\", sizeUnit: \"Gi\" },\n    drivesPerServer: 4,\n  },\n  {\n    typeSelection: \"hdd\",\n    storageClass: \"hdd-d3en-12xlarge\",\n    CPU: 8,\n    memory: 32,\n    driveSize: { driveSize: \"12.7\", sizeUnit: \"Ti\" },\n    drivesPerServer: 4,\n  },\n];\n\nexport const AzureConfigurations: IntegrationConfiguration[] = [\n  {\n    typeSelection: \"Standard_L8s_v2\",\n    storageClass: \"local-nvme\",\n    CPU: 8,\n    memory: 64,\n    driveSize: { driveSize: \"1787\", sizeUnit: \"Gi\" },\n    drivesPerServer: 1,\n  },\n  {\n    typeSelection: \"Standard_L16s_v2\",\n    storageClass: \"local-nvme\",\n    CPU: 16,\n    memory: 128,\n    driveSize: { driveSize: \"1787\", sizeUnit: \"Gi\" },\n    drivesPerServer: 2,\n  },\n  {\n    typeSelection: \"Standard_L32s_v2\",\n    storageClass: \"local-nvme\",\n    CPU: 32,\n    memory: 256,\n    driveSize: { driveSize: \"1787\", sizeUnit: \"Gi\" },\n    drivesPerServer: 4,\n  },\n  {\n    typeSelection: \"Standard_L48s_v2\",\n    storageClass: \"local-nvme\",\n    CPU: 48,\n    memory: 384,\n    driveSize: { driveSize: \"1787\", sizeUnit: \"Gi\" },\n    drivesPerServer: 6,\n  },\n  {\n    typeSelection: \"Standard_L64s_v2\",\n    storageClass: \"local-nvme\",\n    CPU: 64,\n    memory: 512,\n    driveSize: { driveSize: \"1787\", sizeUnit: \"Gi\" },\n    drivesPerServer: 8,\n  },\n];\n\nexport const GCPStorageTypes: Opts[] = [{ label: \"SSD\", value: \"ssd\" }];\n\nexport const GCPConfigurations: IntegrationConfiguration[] = [\n  {\n    typeSelection: \"ssd\",\n    storageClass: \"local-ssd\",\n    CPU: 32,\n    memory: 128,\n    driveSize: { driveSize: \"368\", sizeUnit: \"Gi\" },\n    drivesPerServer: 24,\n  },\n];\n\nexport const mkPanelConfigurations = {\n  [IMkEnvs.aws]: {\n    variantSelectorLabel: \"Storage Type\",\n    variantSelectorValues: AWSStorageTypes,\n    configurations: AWSConfigurations,\n    sizingComponent: <TenantSizeMK formToRender={IMkEnvs.aws} />,\n  },\n  [IMkEnvs.azure]: {\n    variantSelectorLabel: \"VM Size\",\n    variantSelectorValues: AzureStorageTypes,\n    configurations: AzureConfigurations,\n    sizingComponent: <TenantSizeMK formToRender={IMkEnvs.azure} />,\n  },\n  [IMkEnvs.gcp]: {\n    variantSelectorLabel: \"Storage Type\",\n    variantSelectorValues: GCPStorageTypes,\n    configurations: GCPConfigurations,\n    sizingComponent: <TenantSizeMK formToRender={IMkEnvs.gcp} />,\n  },\n  [IMkEnvs.default]: {},\n  [IMkEnvs.undefined]: {},\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IConfigureProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n  tenantSecurityContext: ISecurityContext;\n  logSearchSecurityContext: ISecurityContext;\n  logSearchPostgresSecurityContext: ISecurityContext;\n  prometheusSecurityContext: ISecurityContext;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchCustomFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusCustomFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Configure = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n  tenantSecurityContext,\n  logSearchSecurityContext,\n  logSearchPostgresSecurityContext,\n  prometheusSecurityContext,\n}: IConfigureProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Expose Services</h3>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MiniO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Configurations</h3>\n        <span className={classes.descriptionText}>\n          Configure SecurityContext, Storage Classes & Storage size for Log\n          Search, Prometheus add-ons and your Tenant\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Override Tenant defaults\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"logSearchConfig\"\n          id=\"log_search_configuration\"\n          name=\"log_search_configuration\"\n          checked={logSearchCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"logSearchCustom\", checked);\n          }}\n          label={\"Override Log Search defaults\"}\n        />\n      </Grid>\n      {logSearchCustom && (\n        <Grid xs={12} className={classes.logSearchCustomFields}>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"log_search_storage_class\"\n              name=\"log_search_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"logSearchSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Log Search Storage Class\"\n              value={logSearchSelectedStorageClass}\n              options={configureSTClasses}\n              disabled={configureSTClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"log_search_volume_size\"\n                name=\"log_search_volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"logSearchVolumeSize\", e.target.value);\n                  cleanValidation(\"log_search_volume_size\");\n                }}\n                label=\"Storage Size [Gi]\"\n                value={logSearchVolumeSize}\n                required\n                error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                min=\"0\"\n              />\n            </div>\n          </Grid>\n\n          <fieldset\n            className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n          >\n            <legend className={classes.descriptionText}>\n              SecurityContext for LogSearch\n            </legend>\n\n            <Grid item xs={12}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsUser\"\n                    name=\"logSearch_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsGroup\"\n                    name=\"logSearch_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"logSearch_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_fsGroup\"\n                    name=\"logSearch_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"logSearchSecurityContextRunAsNonRoot\"\n                  id=\"logSearch_securityContext_runAsNonRoot\"\n                  name=\"logSearch_securityContext_runAsNonRoot\"\n                  checked={logSearchSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchSecurityContext\", {\n                      ...logSearchSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for PostgreSQL\n            </legend>\n\n            <Grid item xs={12}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsUser\"\n                    name=\"postgres_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchPostgresSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsGroup\"\n                    name=\"postgres_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchPostgresSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_fsGroup\"\n                    name=\"postgres_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchPostgresSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"postgresSecurityContextRunAsNonRoot\"\n                  id=\"postgres_securityContext_runAsNonRoot\"\n                  name=\"postgres_securityContext_runAsNonRoot\"\n                  checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchPostgresSecurityContext\", {\n                      ...logSearchPostgresSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"prometheusConfig\"\n          id=\"prometheus_configuration\"\n          name=\"prometheus_configuration\"\n          checked={prometheusCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"prometheusCustom\", checked);\n          }}\n          label={\"Override Prometheus defaults\"}\n        />\n      </Grid>\n      {prometheusCustom && (\n        <Grid xs={12} className={classes.prometheusCustomFields}>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"prometheus_storage_class\"\n              name=\"prometheus_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"prometheusSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Prometheus Storage Class\"\n              value={prometheusSelectedStorageClass}\n              options={configureSTClasses}\n              disabled={configureSTClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"prometheus_volume_size\"\n                name=\"prometheus_volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"prometheusVolumeSize\", e.target.value);\n                  cleanValidation(\"prometheus_volume_size\");\n                }}\n                label=\"Storage Size [Gi]\"\n                value={prometheusVolumeSize}\n                required\n                error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                min=\"0\"\n              />\n            </div>\n          </Grid>\n          <fieldset\n            className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n          >\n            <legend className={classes.descriptionText}>\n              SecurityContext for Prometheus\n            </legend>\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsUser\"\n                    name=\"prometheus_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={prometheusSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsUser\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsGroup\"\n                    name=\"prometheus_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={prometheusSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.configSectionItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_fsGroup\"\n                    name=\"prometheus_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={prometheusSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"prometheus_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div\n                className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n              >\n                <FormSwitchWrapper\n                  value=\"prometheusSecurityContextRunAsNonRoot\"\n                  id=\"prometheus_securityContext_runAsNonRoot\"\n                  name=\"prometheus_securityContext_runAsNonRoot\"\n                  checked={prometheusSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"prometheusSecurityContext\", {\n                      ...prometheusSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  tenantSecurityContext:\n    state.tenants.createTenant.fields.configure.tenantSecurityContext,\n  logSearchSecurityContext:\n    state.tenants.createTenant.fields.configure.logSearchSecurityContext,\n  logSearchPostgresSecurityContext:\n    state.tenants.createTenant.fields.configure\n      .logSearchPostgresSecurityContext,\n  prometheusSecurityContext:\n    state.tenants.createTenant.fields.configure.prometheusSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Configure));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, Tooltip, Typography } from \"@mui/material\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError, getRandomString } from \"../../utils\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\n\ninterface IIdentityProviderProps {\n  classes: any;\n  idpSelection: string;\n  accessKeys: string[];\n  secretKeys: string[];\n  openIDConfigurationURL: string;\n  openIDClientID: string;\n  openIDSecretID: string;\n  openIDCallbackURL: string;\n  openIDClaimName: string;\n  openIDScopes: string;\n  ADURL: string;\n  ADSkipTLS: boolean;\n  ADServerInsecure: boolean;\n  ADUserNameSearchFilter: string;\n  ADGroupSearchBaseDN: string;\n  ADGroupSearchFilter: string;\n  ADGroupNameAttribute: string;\n  ADUserDNs: string[];\n  ADUserNameFormat: string;\n  ADLookupBindDN: string;\n  ADLookupBindPassword: string;\n  ADUserDNSearchBaseDN: string;\n  ADUserDNSearchFilter: string;\n  ADServerStartTLS: boolean;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 14,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n      },\n    },\n    adUserDnRows: {\n      display: \"flex\",\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst IdentityProvider = ({\n  classes,\n  idpSelection,\n  accessKeys,\n  secretKeys,\n  openIDConfigurationURL,\n  openIDClientID,\n  openIDSecretID,\n  openIDCallbackURL,\n  openIDClaimName,\n  openIDScopes,\n  ADURL,\n  ADSkipTLS,\n  ADServerInsecure,\n  ADUserNameSearchFilter,\n  ADGroupSearchBaseDN,\n  ADGroupSearchFilter,\n  ADGroupNameAttribute,\n  ADUserDNs,\n  ADUserNameFormat,\n  ADLookupBindDN,\n  ADLookupBindPassword,\n  ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter,\n  ADServerStartTLS,\n  updateAddField,\n  isPageValid,\n}: IIdentityProviderProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"identityProvider\", field, value);\n    },\n    [updateAddField]\n  );\n  const updateUserField = (index: number, value: string) => {\n    const newUserField = [...accessKeys];\n    newUserField[index] = value;\n    updateField(\"accessKeys\", newUserField);\n  };\n  const updatePwordField = (index: number, value: string) => {\n    const newUserField = [...secretKeys];\n    newUserField[index] = value;\n    updateField(\"secretKeys\", newUserField);\n  };\n  const updateADUserField = (index: number, value: string) => {\n    const newADUserDNsField = [...ADUserDNs];\n    newADUserDNsField[index] = value;\n    updateField(\"ADUserDNs\", newADUserDNsField);\n  };\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n      ];\n      // validate user DNs\n      for (let i = 0; i < ADUserDNs.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `ad-userdn-${i.toString()}`,\n          required: true,\n          value: ADUserDNs[i],\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    isPageValid(\"identityProvider\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    accessKeys,\n    secretKeys,\n    openIDClientID,\n    openIDSecretID,\n    ADURL,\n    ADUserNameSearchFilter,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADGroupNameAttribute,\n    ADUserDNs,\n    isPageValid,\n    openIDConfigurationURL,\n    openIDClaimName,\n  ]);\n  let inputs = null;\n  if (idpSelection === \"Built-in\") {\n    inputs = accessKeys.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`accesskey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Access Key\"}\n              name={`accesskey-${index.toString()}`}\n              value={accessKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateUserField(index, e.target.value);\n                cleanValidation(`accesskey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-accesskey-${index.toString()}`}\n              error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n            />\n            <InputBoxWrapper\n              id={`secretkey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Secret Key\"}\n              name={`secretkey-${index.toString()}`}\n              value={secretKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updatePwordField(index, e.target.value);\n                cleanValidation(`secretkey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-secretkey-${index.toString()}`}\n              error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      accessKeys.push(\"\");\n                      secretKeys.push(\"\");\n                      updateUserField(accessKeys.length - 1, \"\");\n                      updatePwordField(secretKeys.length - 1, \"\");\n                    }}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      if (accessKeys.length > 1) {\n                        accessKeys.splice(index, 1);\n                        secretKeys.splice(index, 1);\n                        updateUserField(\n                          accessKeys.length - 1,\n                          accessKeys[accessKeys.length - 1]\n                        );\n                      }\n                    }}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n              <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    onClick={() => {\n                      updateUserField(index, getRandomString(16));\n                      updatePwordField(index, getRandomString(32));\n                    }}\n                    size={\"small\"}\n                  >\n                    <CasinoIcon />\n                  </IconButton>\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  if (idpSelection === \"AD\") {\n    inputs = ADUserDNs.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.adUserDnRows}>\n            <InputBoxWrapper\n              id={`ad-userdn-${index.toString()}`}\n              label={\"\"}\n              placeholder=\"\"\n              name={`ad-userdn-${index.toString()}`}\n              value={ADUserDNs[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateADUserField(index, e.target.value);\n                cleanValidation(`ad-userdn-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-ad-userdn-${index.toString()}`}\n              error={validationErrors[`ad-userdn-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    ADUserDNs.push(\"\");\n                    updateADUserField(ADUserDNs.length - 1, \"\");\n                  }}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  style={{ marginLeft: 16 }}\n                  onClick={() => {\n                    if (ADUserDNs.length > 1) {\n                      ADUserDNs.splice(index, 1);\n                      updateUserField(\n                        ADUserDNs.length - 1,\n                        ADUserDNs[ADUserDNs.length - 1]\n                      );\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.protocolRadioOptions}>\n        <label>Protocol</label>\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\" \"\n          onChange={(e) => {\n            updateField(\"idpSelection\", e.target.value);\n          }}\n          selectorOptions={[\n            { label: \"Built-in\", value: \"Built-in\" },\n            { label: \"OpenID\", value: \"OpenID\" },\n            { label: \"Active Directory\", value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && (\n        <Fragment>\n          Add additional users\n          {inputs}\n        </Fragment>\n      )}\n      {idpSelection === \"OpenID\" && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_CONFIGURATION_URL\"\n              name=\"openID_CONFIGURATION_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDConfigurationURL\", e.target.value);\n                cleanValidation(\"openID_CONFIGURATION_URL\");\n              }}\n              label=\"Configuration URL\"\n              value={openIDConfigurationURL}\n              placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n              error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_clientID\"\n              name=\"openID_clientID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClientID\", e.target.value);\n                cleanValidation(\"openID_clientID\");\n              }}\n              label=\"Client ID\"\n              value={openIDClientID}\n              error={validationErrors[\"openID_clientID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_secretID\"\n              name=\"openID_secretID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDSecretID\", e.target.value);\n                cleanValidation(\"openID_secretID\");\n              }}\n              label=\"Secret ID\"\n              value={openIDSecretID}\n              error={validationErrors[\"openID_secretID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_callbackURL\"\n              name=\"openID_callbackURL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDCallbackURL\", e.target.value);\n                cleanValidation(\"openID_callbackURL\");\n              }}\n              label=\"Callback URL\"\n              value={openIDCallbackURL}\n              placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n              error={validationErrors[\"openID_callbackURL\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_claimName\"\n              name=\"openID_claimName\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClaimName\", e.target.value);\n                cleanValidation(\"openID_claimName\");\n              }}\n              label=\"Claim Name\"\n              value={openIDClaimName}\n              error={validationErrors[\"openID_claimName\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"openID_scopes\"\n              name=\"openID_scopes\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDScopes\", e.target.value);\n                cleanValidation(\"openID_scopes\");\n              }}\n              label=\"Scopes\"\n              value={openIDScopes}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {idpSelection === \"AD\" && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"AD_URL\"\n              name=\"AD_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADURL\", e.target.value);\n                cleanValidation(\"AD_URL\");\n              }}\n              label=\"LDAP Server Address\"\n              value={ADURL}\n              placeholder=\"ldap-server:636\"\n              error={validationErrors[\"AD_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_skipTLS\"\n              id=\"ad_skipTLS\"\n              name=\"ad_skipTLS\"\n              checked={ADSkipTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADSkipTLS\", checked);\n              }}\n              label={\"Skip TLS Verification\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_serverInsecure\"\n              id=\"ad_serverInsecure\"\n              name=\"ad_serverInsecure\"\n              checked={ADServerInsecure}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerInsecure\", checked);\n              }}\n              label={\"Server Insecure\"}\n            />\n          </Grid>\n          {ADServerInsecure ? (\n            <Grid item xs={12}>\n              <Typography\n                className={classes.error}\n                variant=\"caption\"\n                display=\"block\"\n                gutterBottom\n              >\n                Warning: All traffic with Active Directory will be unencrypted\n              </Typography>\n              <br />\n            </Grid>\n          ) : null}\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"ad_serverStartTLS\"\n              id=\"ad_serverStartTLS\"\n              name=\"ad_serverStartTLS\"\n              checked={ADServerStartTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerStartTLS\", checked);\n              }}\n              label={\"Start TLS connection to AD/LDAP server\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userNameFormat\"\n              name=\"ad_userNameFormat\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameFormat\", e.target.value);\n              }}\n              label=\"Username Format\"\n              value={ADUserNameFormat}\n              placeholder=\"uid=%s,cn=accounts,dc=myldapserver,dc=com\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userNameFilter\"\n              name=\"ad_userNameFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameSearchFilter\", e.target.value);\n              }}\n              label=\"Username Search Filter\"\n              value={ADUserNameSearchFilter}\n              placeholder=\"(|(objectclass=posixAccount)(uid=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchBaseDN\"\n              name=\"ad_groupSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchBaseDN\", e.target.value);\n              }}\n              label=\"Group Search Base DN\"\n              value={ADGroupSearchBaseDN}\n              placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchFilter\"\n              name=\"ad_groupSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchFilter\", e.target.value);\n              }}\n              label=\"Group Search Filter\"\n              value={ADGroupSearchFilter}\n              placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_groupNameAttribute\"\n              name=\"ad_groupNameAttribute\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupNameAttribute\", e.target.value);\n              }}\n              label=\"Group Name Attribute\"\n              value={ADGroupNameAttribute}\n              placeholder=\"cn\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindDN\"\n              name=\"ad_lookupBindDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindDN\", e.target.value);\n              }}\n              label=\"Lookup Bind DN\"\n              value={ADLookupBindDN}\n              placeholder=\"cn=admin,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindPassword\"\n              name=\"ad_lookupBindPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindPassword\", e.target.value);\n              }}\n              label=\"Lookup Bind Password\"\n              value={ADLookupBindPassword}\n              placeholder=\"admin\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchBaseDN\"\n              name=\"ad_userDNSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n              }}\n              label=\"User DN Search Base DN\"\n              value={ADUserDNSearchBaseDN}\n              placeholder=\"dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchFilter\"\n              name=\"ad_userDNSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchFilter\", e.target.value);\n              }}\n              label=\"User DN Search Filter\"\n              value={ADUserDNSearchFilter}\n              placeholder=\"(uid=%s)\"\n            />\n          </Grid>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              List of user DNs (Distinguished Names) to be Tenant Administrators\n            </legend>\n            <Grid item xs={12}>\n              {inputs}\n            </Grid>\n          </fieldset>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  idpSelection: state.tenants.createTenant.fields.identityProvider.idpSelection,\n  accessKeys: state.tenants.createTenant.fields.identityProvider.accessKeys,\n  secretKeys: state.tenants.createTenant.fields.identityProvider.secretKeys,\n  openIDConfigurationURL:\n    state.tenants.createTenant.fields.identityProvider.openIDConfigurationURL,\n  openIDClientID:\n    state.tenants.createTenant.fields.identityProvider.openIDClientID,\n  openIDSecretID:\n    state.tenants.createTenant.fields.identityProvider.openIDSecretID,\n  openIDCallbackURL:\n    state.tenants.createTenant.fields.identityProvider.openIDCallbackURL,\n  openIDClaimName:\n    state.tenants.createTenant.fields.identityProvider.openIDClaimName,\n  openIDScopes: state.tenants.createTenant.fields.identityProvider.openIDScopes,\n  ADURL: state.tenants.createTenant.fields.identityProvider.ADURL,\n  ADSkipTLS: state.tenants.createTenant.fields.identityProvider.ADSkipTLS,\n  ADServerInsecure:\n    state.tenants.createTenant.fields.identityProvider.ADServerInsecure,\n  ADUserNameSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameSearchFilter,\n  ADGroupSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchBaseDN,\n  ADGroupSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchFilter,\n  ADGroupNameAttribute:\n    state.tenants.createTenant.fields.identityProvider.ADGroupNameAttribute,\n  ADUserDNs: state.tenants.createTenant.fields.identityProvider.ADUserDNs,\n  ADUserNameFormat:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameFormat,\n  ADLookupBindDN:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindDN,\n  ADLookupBindPassword:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindPassword,\n  ADUserDNSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchFilter,\n  ADServerStartTLS:\n    state.tenants.createTenant.fields.identityProvider.ADServerStartTLS,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(IdentityProvider));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, Typography } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\n\ninterface ISecurityProps {\n  classes: any;\n  enableTLS: boolean;\n  enableAutoCert: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  caCertificates: KeyPair[];\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileToCaCertificates: typeof addFileToCaCertificates;\n  deleteCaCertificate: typeof deleteCaCertificate;\n  addCaCertificate: typeof addCaCertificate;\n  addKeyPair: typeof addKeyPair;\n  addFileToKeyPair: typeof addFileToKeyPair;\n  deleteKeyPair: typeof deleteKeyPair;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({\n  classes,\n  enableTLS,\n  enableAutoCert,\n  enableCustomCerts,\n  minioCertificates,\n  caCertificates,\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n}: ISecurityProps) => {\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"security\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableAutoCert) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableCustomCerts) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    isPageValid(\"security\", false);\n  }, [enableTLS, enableAutoCert, enableCustomCerts, isPageValid]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableTLS\"\n          id=\"enableTLS\"\n          name=\"enableTLS\"\n          checked={enableTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableTLS\", checked);\n          }}\n          label={\"Enable TLS\"}\n        />\n        Enable TLS for the tenant, this is required for Encryption Configuration\n        {enableTLS && (\n          <Fragment>\n            <br />\n            <br />\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              AutoCert: MinIO Operator will generate all TLS certificates\n              automatically\n            </Typography>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Custom certificates: Allow user to provide your own certificates\n            </Typography>\n            <br />\n          </Fragment>\n        )}\n      </Grid>\n      {enableTLS && (\n        <Fragment>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"enableAutoCert\"\n              id=\"enableAutoCert\"\n              name=\"enableAutoCert\"\n              checked={enableAutoCert}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableAutoCert\", checked);\n              }}\n              label={\"Enable AutoCert\"}\n            />\n            <FormSwitchWrapper\n              value=\"enableCustomCerts\"\n              id=\"enableCustomCerts\"\n              name=\"enableCustomCerts\"\n              checked={enableCustomCerts}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableCustomCerts\", checked);\n              }}\n              label={\"Custom Certificates\"}\n            />\n          </Grid>\n          {enableCustomCerts && (\n            <Fragment>\n              <Grid container>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      MinIO Certificates\n                    </legend>\n                    {minioCertificates.map((keyPair: KeyPair) => (\n                      <Grid\n                        item\n                        xs={12}\n                        key={keyPair.id}\n                        className={classes.minioCertificateRows}\n                      >\n                        <Grid item xs={10} className={classes.fileItem}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToKeyPair(\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToKeyPair(\n                                keyPair.id,\n                                \"key\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".key,.pem\"\n                            id=\"tlsKey\"\n                            name=\"tlsKey\"\n                            label=\"Key\"\n                            value={keyPair.key}\n                          />\n                        </Grid>\n\n                        <Grid item xs={2} className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton size={\"small\"} onClick={addKeyPair}>\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                deleteKeyPair(keyPair.id);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    ))}\n                  </fieldset>\n                </Grid>\n              </Grid>\n\n              <Grid container>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      MinIO CA Certificates\n                    </legend>\n\n                    {caCertificates.map((keyPair: KeyPair) => (\n                      <Grid\n                        item\n                        xs={12}\n                        key={keyPair.id}\n                        className={classes.minioCACertsRow}\n                      >\n                        <Grid item xs={6}>\n                          <FileSelector\n                            onChange={(encodedValue, fileName) => {\n                              addFileToCaCertificates(\n                                keyPair.id,\n                                \"cert\",\n                                fileName,\n                                encodedValue\n                              );\n                            }}\n                            accept=\".cer,.crt,.cert,.pem\"\n                            id=\"tlsCert\"\n                            name=\"tlsCert\"\n                            label=\"Cert\"\n                            value={keyPair.cert}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <div className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={addCaCertificate}\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => {\n                                  deleteCaCertificate(keyPair.id);\n                                }}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    ))}\n                  </fieldset>\n                </Grid>\n              </Grid>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  caCertificates: state.tenants.createTenant.certificates.caCertificates,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n});\n\nexport default withStyles(styles)(connector(Security));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  addFileClientCert,\n  addFileGemaltoCa,\n  addFileServerCert,\n  addFileVaultCa,\n  addFileVaultCert,\n  isPageValid,\n  updateAddField,\n} from \"../../actions\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IEncryptionProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileServerCert: typeof addFileServerCert;\n  addFileClientCert: typeof addFileClientCert;\n  addFileVaultCert: typeof addFileVaultCert;\n  addFileVaultCa: typeof addFileVaultCa;\n  addFileGemaltoCa: typeof addFileGemaltoCa;\n  enableEncryption: boolean;\n  encryptionType: string;\n  gemaltoEndpoint: string;\n  gemaltoToken: string;\n  gemaltoDomain: string;\n  gemaltoRetry: string;\n  awsEndpoint: string;\n  awsRegion: string;\n  awsKMSKey: string;\n  awsAccessKey: string;\n  awsSecretKey: string;\n  awsToken: string;\n  vaultEndpoint: string;\n  vaultEngine: string;\n  vaultNamespace: string;\n  vaultPrefix: string;\n  vaultAppRoleEngine: string;\n  vaultId: string;\n  vaultSecret: string;\n  vaultRetry: string;\n  vaultPing: string;\n  azureEndpoint: string;\n  azureTenantID: string;\n  azureClientID: string;\n  azureClientSecret: string;\n  gcpProjectID: string;\n  gcpEndpoint: string;\n  gcpClientEmail: string;\n  gcpClientID: string;\n  gcpPrivateKeyID: string;\n  gcpPrivateKey: string;\n  enableCustomCertsForKES: boolean;\n  enableAutoCert: boolean;\n  enableTLS: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  serverCertificate: KeyPair;\n  clientCertificate: KeyPair;\n  vaultCertificate: KeyPair;\n  vaultCA: KeyPair;\n  gemaltoCA: KeyPair;\n  kesSecurityContext: ISecurityContext;\n  replicas: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n  enableEncryption,\n  enableCustomCerts,\n  encryptionType,\n  gemaltoEndpoint,\n  gemaltoToken,\n  gemaltoDomain,\n  gemaltoRetry,\n  awsEndpoint,\n  awsRegion,\n  awsKMSKey,\n  awsAccessKey,\n  awsSecretKey,\n  awsToken,\n  vaultEndpoint,\n  vaultEngine,\n  vaultNamespace,\n  vaultPrefix,\n  vaultAppRoleEngine,\n  vaultId,\n  vaultSecret,\n  vaultRetry,\n  vaultPing,\n  azureEndpoint,\n  azureTenantID,\n  azureClientID,\n  azureClientSecret,\n  gcpProjectID,\n  gcpEndpoint,\n  gcpClientEmail,\n  gcpClientID,\n  gcpPrivateKeyID,\n  gcpPrivateKey,\n  enableCustomCertsForKES,\n  enableAutoCert,\n  enableTLS,\n  minioCertificates,\n  serverCertificate,\n  clientCertificate,\n  vaultCertificate,\n  vaultCA,\n  gemaltoCA,\n  kesSecurityContext,\n  replicas,\n}: IEncryptionProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioCertificates &&\n        minioCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"encryption\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n\n      if (encryptionType === \"vault\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"vault_endpoint\",\n            required: true,\n            value: vaultEndpoint,\n          },\n          {\n            fieldKey: \"vault_id\",\n            required: true,\n            value: vaultId,\n          },\n          {\n            fieldKey: \"vault_secret\",\n            required: true,\n            value: vaultSecret,\n          },\n          {\n            fieldKey: \"vault_ping\",\n            required: false,\n            value: vaultPing,\n            customValidation: parseInt(vaultPing) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n          {\n            fieldKey: \"vault_retry\",\n            required: false,\n            value: vaultRetry,\n            customValidation: parseInt(vaultRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"aws\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"aws_endpoint\",\n            required: true,\n            value: awsEndpoint,\n          },\n          {\n            fieldKey: \"aws_region\",\n            required: true,\n            value: awsRegion,\n          },\n          {\n            fieldKey: \"aws_accessKey\",\n            required: true,\n            value: awsAccessKey,\n          },\n          {\n            fieldKey: \"aws_secretKey\",\n            required: true,\n            value: awsSecretKey,\n          },\n        ];\n      }\n\n      if (encryptionType === \"gemalto\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"gemalto_endpoint\",\n            required: true,\n            value: gemaltoEndpoint,\n          },\n          {\n            fieldKey: \"gemalto_token\",\n            required: true,\n            value: gemaltoToken,\n          },\n          {\n            fieldKey: \"gemalto_domain\",\n            required: true,\n            value: gemaltoDomain,\n          },\n          {\n            fieldKey: \"gemalto_retry\",\n            required: false,\n            value: gemaltoRetry,\n            customValidation: parseInt(gemaltoRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"azure\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"azure_endpoint\",\n            required: true,\n            value: azureEndpoint,\n          },\n          {\n            fieldKey: \"azure_tenant_id\",\n            required: true,\n            value: azureTenantID,\n          },\n          {\n            fieldKey: \"azure_client_id\",\n            required: true,\n            value: azureClientID,\n          },\n          {\n            fieldKey: \"azure_client_secret\",\n            required: true,\n            value: azureClientSecret,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    isPageValid(\"encryption\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    enableEncryption,\n    encryptionType,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    isPageValid,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Encryption</h3>\n        <span className={classes.descriptionText}>\n          How would you like to encrypt the information at rest.\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableEncryption\"\n          id=\"enableEncryption\"\n          name=\"enableEncryption\"\n          checked={enableEncryption}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableEncryption\", checked);\n          }}\n          label={\"Enable Server Side Encryption\"}\n          disabled={!encryptionAvailable}\n        />\n      </Grid>\n      {enableEncryption && (\n        <Fragment>\n          <Grid item xs={12} className={classes.encryptionTypeOptions}>\n            <RadioGroupSelector\n              currentSelection={encryptionType}\n              id=\"encryptionType\"\n              name=\"encryptionType\"\n              label=\"Encryption Options\"\n              onChange={(e) => {\n                updateField(\"encryptionType\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"Vault\", value: \"vault\" },\n                { label: \"AWS\", value: \"aws\" },\n                { label: \"Gemalto\", value: \"gemalto\" },\n                { label: \"GCP\", value: \"gcp\" },\n                { label: \"Azure\", value: \"azure\" },\n              ]}\n            />\n          </Grid>\n          {encryptionType === \"vault\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <FormSwitchWrapper\n                  value=\"enableCustomCertsForKES\"\n                  id=\"enableCustomCertsForKES\"\n                  name=\"enableCustomCertsForKES\"\n                  checked={enableCustomCertsForKES || !enableAutoCert}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n\n                    updateField(\"enableCustomCertsForKES\", checked);\n                  }}\n                  label={\"Custom Certificates\"}\n                  disabled={!enableAutoCert}\n                />\n              </Grid>\n              {(enableCustomCertsForKES || !enableAutoCert) && (\n                <Fragment>\n                  <Grid container>\n                    <Grid item xs={12} style={{ marginBottom: 15 }}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Encryption Service Certificates\n                        </legend>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileServerCert(\"key\", fileName, encodedValue);\n                            cleanValidation(\"serverKey\");\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"serverKey\"\n                          name=\"serverKey\"\n                          label=\"Key\"\n                          error={validationErrors[\"serverKey\"] || \"\"}\n                          value={serverCertificate.key}\n                          required={!enableAutoCert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileServerCert(\"cert\", fileName, encodedValue);\n                            cleanValidation(\"serverCert\");\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"serverCert\"\n                          name=\"serverCert\"\n                          label=\"Cert\"\n                          error={validationErrors[\"serverCert\"] || \"\"}\n                          value={serverCertificate.cert}\n                          required={!enableAutoCert}\n                        />\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container style={{ marginBottom: 15 }}>\n                    <Grid item xs={12}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Mutual TLS authentication\n                        </legend>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileClientCert(\"key\", fileName, encodedValue);\n                            cleanValidation(\"clientKey\");\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"clientKey\"\n                          name=\"clientKey\"\n                          label=\"Key\"\n                          error={validationErrors[\"clientKey\"] || \"\"}\n                          value={clientCertificate.key}\n                          required={!enableAutoCert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            addFileClientCert(\"cert\", fileName, encodedValue);\n                            cleanValidation(\"clientCert\");\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"clientCert\"\n                          name=\"clientCert\"\n                          label=\"Cert\"\n                          error={validationErrors[\"clientCert\"] || \"\"}\n                          value={clientCertificate.cert}\n                          required={!enableAutoCert}\n                        />\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              )}\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_endpoint\"\n                  name=\"vault_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEndpoint\", e.target.value);\n                    cleanValidation(\"vault_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={vaultEndpoint}\n                  error={validationErrors[\"vault_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_engine\"\n                  name=\"vault_engine\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEngine\", e.target.value);\n                    cleanValidation(\"vault_engine\");\n                  }}\n                  label=\"Engine\"\n                  value={vaultEngine}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_namespace\"\n                  name=\"vault_namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultNamespace\", e.target.value);\n                  }}\n                  label=\"Namespace\"\n                  value={vaultNamespace}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"vault_prefix\"\n                  name=\"vault_prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultPrefix\", e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={vaultPrefix}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>App Role</legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_approle_engine\"\n                      name=\"vault_approle_engine\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultAppRoleEngine\", e.target.value);\n                      }}\n                      label=\"Engine\"\n                      value={vaultAppRoleEngine}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_id\"\n                      name=\"vault_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultId\", e.target.value);\n                        cleanValidation(\"vault_id\");\n                      }}\n                      label=\"AppRole ID\"\n                      value={vaultId}\n                      error={validationErrors[\"vault_id\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"vault_secret\"\n                      name=\"vault_secret\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultSecret\", e.target.value);\n                        cleanValidation(\"vault_secret\");\n                      }}\n                      label=\"AppRole Secret\"\n                      value={vaultSecret}\n                      error={validationErrors[\"vault_secret\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      min=\"0\"\n                      id=\"vault_retry\"\n                      name=\"vault_retry\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"vaultRetry\", e.target.value);\n                        cleanValidation(\"vault_retry\");\n                      }}\n                      label=\"Retry (Seconds)\"\n                      value={vaultRetry}\n                      error={validationErrors[\"vault_retry\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n\n              <Grid container className={classes.mutualTlsConfig}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Mutual TLS authentication (optional)\n                  </legend>\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"key\", fileName, encodedValue);\n                      cleanValidation(\"vault_key\");\n                    }}\n                    accept=\".key,.pem\"\n                    id=\"vault_key\"\n                    name=\"vault_key\"\n                    label=\"Key\"\n                    value={vaultCertificate.key}\n                  />\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"cert\", fileName, encodedValue);\n                      cleanValidation(\"vault_cert\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"vault_cert\"\n                    name=\"vault_cert\"\n                    label=\"Cert\"\n                    value={vaultCertificate.cert}\n                  />\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCa(fileName, encodedValue);\n                      cleanValidation(\"vault_ca\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"vault_ca\"\n                    name=\"vault_ca\"\n                    label=\"CA\"\n                    value={vaultCA.cert}\n                  />\n                </fieldset>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                className={classes.formFieldRow}\n                style={{ marginTop: 15 }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>Status</legend>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    min=\"0\"\n                    id=\"vault_ping\"\n                    name=\"vault_ping\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"vaultPing\", e.target.value);\n                      cleanValidation(\"vault_ping\");\n                    }}\n                    label=\"Ping (Seconds)\"\n                    value={vaultPing}\n                    error={validationErrors[\"vault_ping\"] || \"\"}\n                  />\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"azure\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"azure_endpoint\"\n                  name=\"azure_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureEndpoint\", e.target.value);\n                    cleanValidation(\"azure_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={azureEndpoint}\n                  error={validationErrors[\"azure_endpoint\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_tenant_id\"\n                      name=\"azure_tenant_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureTenantID\", e.target.value);\n                        cleanValidation(\"azure_tenant_id\");\n                      }}\n                      label=\"Tenant ID\"\n                      value={azureTenantID}\n                      error={validationErrors[\"azure_tenant_id\"] || \"\"}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_client_id\"\n                      name=\"azure_client_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureClientID\", e.target.value);\n                        cleanValidation(\"azure_client_id\");\n                      }}\n                      label=\"Client ID\"\n                      value={azureClientID}\n                      error={validationErrors[\"azure_client_id\"] || \"\"}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"azure_client_secret\"\n                      name=\"azure_client_secret\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"azureClientSecret\", e.target.value);\n                        cleanValidation(\"azure_client_secret\");\n                      }}\n                      label=\"Client Secret\"\n                      value={azureClientSecret}\n                      error={validationErrors[\"azure_client_secret\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gcp\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gcp_project_id\"\n                  name=\"gcp_project_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpProjectID\", e.target.value);\n                  }}\n                  label=\"Project ID\"\n                  value={gcpProjectID}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gcp_endpoint\"\n                  name=\"gcp_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpEndpoint\", e.target.value);\n                  }}\n                  label=\"Endpoint\"\n                  value={gcpEndpoint}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_client_email\"\n                      name=\"gcp_client_email\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpClientEmail\", e.target.value);\n                      }}\n                      label=\"Client Email\"\n                      value={gcpClientEmail}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_client_id\"\n                      name=\"gcp_client_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpClientID\", e.target.value);\n                      }}\n                      label=\"Client ID\"\n                      value={gcpClientID}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_private_key_id\"\n                      name=\"gcp_private_key_id\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpPrivateKeyID\", e.target.value);\n                      }}\n                      label=\"Private Key ID\"\n                      value={gcpPrivateKeyID}\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gcp_private_key\"\n                      name=\"gcp_private_key\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gcpPrivateKey\", e.target.value);\n                      }}\n                      label=\"Private Key\"\n                      value={gcpPrivateKey}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"aws\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_endpoint\"\n                  name=\"aws_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsEndpoint\", e.target.value);\n                    cleanValidation(\"aws_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={awsEndpoint}\n                  error={validationErrors[\"aws_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_region\"\n                  name=\"aws_region\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsRegion\", e.target.value);\n                    cleanValidation(\"aws_region\");\n                  }}\n                  label=\"Region\"\n                  value={awsRegion}\n                  error={validationErrors[\"aws_region\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"aws_kmsKey\"\n                  name=\"aws_kmsKey\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsKMSKey\", e.target.value);\n                  }}\n                  label=\"KMS Key\"\n                  value={awsKMSKey}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_accessKey\"\n                      name=\"aws_accessKey\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsAccessKey\", e.target.value);\n                        cleanValidation(\"aws_accessKey\");\n                      }}\n                      label=\"Access Key\"\n                      value={awsAccessKey}\n                      error={validationErrors[\"aws_accessKey\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_secretKey\"\n                      name=\"aws_secretKey\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsSecretKey\", e.target.value);\n                        cleanValidation(\"aws_secretKey\");\n                      }}\n                      label=\"Secret Key\"\n                      value={awsSecretKey}\n                      error={validationErrors[\"aws_secretKey\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"aws_token\"\n                      name=\"aws_token\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"awsToken\", e.target.value);\n                      }}\n                      label=\"Token\"\n                      value={awsToken}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gemalto\" && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"gemalto_endpoint\"\n                  name=\"gemalto_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoEndpoint\", e.target.value);\n                    cleanValidation(\"gemalto_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={gemaltoEndpoint}\n                  error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  marginBottom: 15,\n                }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Credentials\n                  </legend>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gemalto_token\"\n                      name=\"gemalto_token\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoToken\", e.target.value);\n                        cleanValidation(\"gemalto_token\");\n                      }}\n                      label=\"Token\"\n                      value={gemaltoToken}\n                      error={validationErrors[\"gemalto_token\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      id=\"gemalto_domain\"\n                      name=\"gemalto_domain\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoDomain\", e.target.value);\n                        cleanValidation(\"gemalto_domain\");\n                      }}\n                      label=\"Domain\"\n                      value={gemaltoDomain}\n                      error={validationErrors[\"gemalto_domain\"] || \"\"}\n                      required\n                    />\n                  </Grid>\n                  <Grid item xs={12} className={classes.formFieldRow}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      min=\"0\"\n                      id=\"gemalto_retry\"\n                      name=\"gemalto_retry\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"gemaltoRetry\", e.target.value);\n                        cleanValidation(\"gemalto_retry\");\n                      }}\n                      label=\"Retry (seconds)\"\n                      value={gemaltoRetry}\n                      error={validationErrors[\"gemalto_retry\"] || \"\"}\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  marginBottom: 15,\n                }}\n              >\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>\n                    Custom CA Root certificate verification\n                  </legend>\n\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileGemaltoCa(fileName, encodedValue);\n                      cleanValidation(\"gemalto_ca\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"gemalto_ca\"\n                    name=\"gemalto_ca\"\n                    label=\"CA\"\n                    value={gemaltoCA.cert}\n                  />\n                </fieldset>\n              </Grid>\n            </Fragment>\n          )}\n          <div className={classes.headerElement}>\n            <h4 className={classes.h3Section}>Additional Configurations</h4>\n          </div>\n          <Grid item xs={12}>\n            <Grid item xs={12} classes={classes.formFieldRow}>\n              <InputBoxWrapper\n                type=\"number\"\n                min=\"1\"\n                id=\"replicas\"\n                name=\"replicas\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"replicas\", e.target.value);\n                  cleanValidation(\"replicas\");\n                }}\n                label=\"Replicas\"\n                value={replicas}\n                required\n                error={validationErrors[\"replicas\"] || \"\"}\n              />\n            </Grid>\n\n            <fieldset className={classes.fieldGroup} style={{ marginTop: 15 }}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for KES pods\n              </legend>\n              <Grid item xs={12} className={classes.kesSecurityContext}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                >\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsUser\"\n                      name=\"kes_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={kesSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsUser\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsGroup\"\n                      name=\"kes_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={kesSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div\n                    className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                  >\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_fsGroup\"\n                      name=\"kes_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={kesSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"kesSecurityContextRunAsNonRoot\"\n                    id=\"kes_securityContext_runAsNonRoot\"\n                    name=\"kes_securityContext_runAsNonRoot\"\n                    checked={kesSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"kesSecurityContext\", {\n                        ...kesSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  replicas: state.tenants.createTenant.fields.encryption.replicas,\n  enableEncryption:\n    state.tenants.createTenant.fields.encryption.enableEncryption,\n  encryptionType: state.tenants.createTenant.fields.encryption.encryptionType,\n  gemaltoEndpoint: state.tenants.createTenant.fields.encryption.gemaltoEndpoint,\n  gemaltoToken: state.tenants.createTenant.fields.encryption.gemaltoToken,\n  gemaltoDomain: state.tenants.createTenant.fields.encryption.gemaltoDomain,\n  gemaltoRetry: state.tenants.createTenant.fields.encryption.gemaltoRetry,\n  awsEndpoint: state.tenants.createTenant.fields.encryption.awsEndpoint,\n  awsRegion: state.tenants.createTenant.fields.encryption.awsRegion,\n  awsKMSKey: state.tenants.createTenant.fields.encryption.awsKMSKey,\n  awsAccessKey: state.tenants.createTenant.fields.encryption.awsAccessKey,\n  awsSecretKey: state.tenants.createTenant.fields.encryption.awsSecretKey,\n  awsToken: state.tenants.createTenant.fields.encryption.awsToken,\n  vaultEndpoint: state.tenants.createTenant.fields.encryption.vaultEndpoint,\n  vaultEngine: state.tenants.createTenant.fields.encryption.vaultEngine,\n  vaultNamespace: state.tenants.createTenant.fields.encryption.vaultNamespace,\n  vaultPrefix: state.tenants.createTenant.fields.encryption.vaultPrefix,\n  vaultAppRoleEngine:\n    state.tenants.createTenant.fields.encryption.vaultAppRoleEngine,\n  vaultId: state.tenants.createTenant.fields.encryption.vaultId,\n  vaultSecret: state.tenants.createTenant.fields.encryption.vaultSecret,\n  vaultRetry: state.tenants.createTenant.fields.encryption.vaultRetry,\n  vaultPing: state.tenants.createTenant.fields.encryption.vaultPing,\n  azureEndpoint: state.tenants.createTenant.fields.encryption.azureEndpoint,\n  azureTenantID: state.tenants.createTenant.fields.encryption.azureTenantID,\n  azureClientID: state.tenants.createTenant.fields.encryption.azureClientID,\n  azureClientSecret:\n    state.tenants.createTenant.fields.encryption.azureClientSecret,\n  gcpProjectID: state.tenants.createTenant.fields.encryption.gcpProjectID,\n  gcpEndpoint: state.tenants.createTenant.fields.encryption.gcpEndpoint,\n  gcpClientEmail: state.tenants.createTenant.fields.encryption.gcpClientEmail,\n  gcpClientID: state.tenants.createTenant.fields.encryption.gcpClientID,\n  gcpPrivateKeyID: state.tenants.createTenant.fields.encryption.gcpPrivateKeyID,\n  gcpPrivateKey: state.tenants.createTenant.fields.encryption.gcpPrivateKey,\n  enableCustomCertsForKES:\n    state.tenants.createTenant.fields.encryption.enableCustomCertsForKES,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  serverCertificate: state.tenants.createTenant.certificates.serverCertificate,\n  clientCertificate: state.tenants.createTenant.certificates.clientCertificate,\n  vaultCertificate: state.tenants.createTenant.certificates.vaultCertificate,\n  vaultCA: state.tenants.createTenant.certificates.vaultCA,\n  gemaltoCA: state.tenants.createTenant.certificates.gemaltoCA,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  kesSecurityContext:\n    state.tenants.createTenant.fields.encryption.kesSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n});\n\nexport default withStyles(styles)(connector(Encryption));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IAffinityProps {\n  classes: any;\n  podAffinity: string;\n  nodeSelectorLabels: string;\n  withPodAntiAffinity: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    fieldContainer: {\n      marginBottom: 0,\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface LabelKeyPair {\n  key: string;\n  value: string;\n}\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({\n  classes,\n  podAffinity,\n  nodeSelectorLabels,\n  withPodAntiAffinity,\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n}: IAffinityProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyValuePairs, setKeyValuePairs] = useState<LabelKeyPair[]>([\n    { key: \"\", value: \"\" },\n  ]);\n\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"affinity\", field, value);\n    },\n    [updateAddField]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n          setKeyValuePairs([{ key: keys[0].value, value: keys[0].value }]);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n          setKeyValueMap({});\n        });\n    }\n  }, [setModalErrorSnackMessage, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"affinity\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [isPageValid, podAffinity, nodeSelectorLabels]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinnity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid item xs={12} className={classes.affinityRow}>\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n\n                              arrCp[i].key = e.target.value as string;\n                              arrCp[i].value = keyValueMap[newKey][0];\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].key = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value as string;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                            classes={classes.fieldContainer}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = Object.assign([], keyValuePairs);\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              setKeyValuePairs(arrCp);\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                setKeyValuePairs(arrCp);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  podAffinity: state.tenants.createTenant.fields.affinity.podAffinity,\n  nodeSelectorLabels:\n    state.tenants.createTenant.fields.affinity.nodeSelectorLabels,\n  withPodAntiAffinity:\n    state.tenants.createTenant.fields.affinity.withPodAntiAffinity,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Affinity));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\ninterface IImagesProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n}: IImagesProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Images used by the Tenant Deployment\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO's Image\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"E.g. minio/minio:RELEASE.2022-01-08T03-11-54Z\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"Log Search API's Image\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"E.g. minio/logsearchapi:v4.1.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES Image\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"E.g. minio/kes:v0.14.0\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"Log Search Postgres's Image\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"E.g. library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"Log Search Postgres's Init Image\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"E.g. library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus Image\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar Image\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init Image\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Set/Update Image Registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"E.g. https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Images));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport api from \"../../../../../../common/api\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  });\n\ninterface IAddNamespace {\n  classes: any;\n  namespace: string;\n  addNamespaceOpen: boolean;\n  closeAddNamespaceModalAndRefresh: (reloadNamespaceData: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst AddNamespaceModal = ({\n  classes,\n  namespace,\n  addNamespaceOpen,\n  closeAddNamespaceModalAndRefresh,\n  setErrorSnackMessage,\n}: IAddNamespace) => {\n  const [addNamespaceLoading, setAddNamespaceLoading] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    if (addNamespaceLoading) {\n      api\n        .invoke(\"POST\", \"/api/v1/namespace\", {\n          name: namespace,\n        })\n        .then((res) => {\n          setAddNamespaceLoading(false);\n          closeAddNamespaceModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddNamespaceLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    addNamespaceLoading,\n    closeAddNamespaceModalAndRefresh,\n    namespace,\n    setErrorSnackMessage,\n  ]);\n\n  const addNamespace = () => {\n    setAddNamespaceLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={addNamespace}\n      onClose={() => {\n        closeAddNamespaceModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddNamespaceModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\nimport { Opts } from \"../../ListTenants/utils\";\nimport { IResourcesSize } from \"../../ListTenants/types\";\nimport { IErasureCodeCalc } from \"../../../../../common/types\";\n\nimport { Divider } from \"@mui/material\";\nimport { IntegrationConfiguration } from \"./TenantResources/utils\";\n\ninterface ISizePreviewProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  resourcesSize: IResourcesSize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n  cpuToUse: string;\n  integrationSelection: IntegrationConfiguration;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  resourcesSize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n  cpuToUse,\n  integrationSelection,\n}: ISizePreviewProps) => {\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n  resourcesSize: state.tenants.createTenant.fields.tenantSize.resourcesSize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.fields.tenantSize.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  cpuToUse: state.tenants.createTenant.fields.tenantSize.cpuToUse,\n  integrationSelection:\n    state.tenants.createTenant.fields.tenantSize.integrationSelection,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(SizePreview));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport { AppState } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../../actions\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { IResourcesSize } from \"../../../ListTenants/types\";\nimport { AllocableResourcesResponse } from \"../../../types\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { floor } from \"lodash\";\n\ninterface ITenantSizeResourcesProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  nodes: string;\n  resourcesSize: IResourcesSize;\n  selectedStorageClass: string;\n  maxAllocatableResources: AllocableResourcesResponse;\n  maxCPUsUse: string;\n  maxMemorySize: string;\n\n  resourcesSpecifyLimit: boolean;\n  resourcesCPURequestError: string;\n  resourcesCPURequest: string;\n  resourcesCPULimitError: string;\n  resourcesCPULimit: string;\n  resourcesMemoryRequestError: string;\n  resourcesMemoryRequest: string;\n  resourcesMemoryLimitError: string;\n  resourcesMemoryLimit: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    compositeFieldContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    compositeAddOn: {\n      marginLeft: 10,\n      \"& div\": {\n        marginBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        \"& div\": {\n          marginTop: 5,\n        },\n      },\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSizeResources = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  nodes,\n\n  resourcesSize,\n  selectedStorageClass,\n  maxAllocatableResources,\n  maxCPUsUse,\n  maxMemorySize,\n  resourcesSpecifyLimit,\n  resourcesCPURequestError,\n  resourcesCPURequest,\n  resourcesCPULimitError,\n  resourcesCPULimit,\n  resourcesMemoryRequestError,\n  resourcesMemoryRequest,\n  resourcesMemoryLimitError,\n  resourcesMemoryLimit,\n}: ITenantSizeResourcesProps) => {\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  /*Debounce functions*/\n\n  useEffect(() => {\n    isPageValid(\n      \"tenantSize\",\n      resourcesMemoryRequestError === \"\" &&\n        resourcesMemoryLimitError === \"\" &&\n        resourcesCPURequestError === \"\" &&\n        resourcesCPULimitError === \"\"\n    );\n  }, [\n    isPageValid,\n    resourcesMemoryRequestError,\n    resourcesMemoryLimitError,\n    resourcesCPURequestError,\n    resourcesCPULimitError,\n  ]);\n\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    // Get allocatable Resources\n    api\n      .invoke(\"GET\", `api/v1/cluster/allocatable-resources?num_nodes=${nodes}`)\n      .then((res: AllocableResourcesResponse) => {\n        updateField(\"maxAllocatableResources\", res);\n\n        const maxAllocatableResources = res;\n\n        const memoryExists = get(\n          maxAllocatableResources,\n          \"min_allocatable_mem\",\n          false\n        );\n\n        const cpuExists = get(\n          maxAllocatableResources,\n          \"min_allocatable_cpu\",\n          false\n        );\n\n        if (memoryExists === false || cpuExists === false) {\n          updateField(\"cpuToUse\", 0);\n\n          updateField(\"maxMemorySize\", \"\");\n          updateField(\"maxCPUsUse\", \"\");\n\n          return;\n        }\n\n        const maxMemory = floor(\n          res.mem_priority.max_allocatable_mem / 1024 / 1024 / 1024\n        );\n        // We default to Best CPU Configuration\n        updateField(\"maxMemorySize\", maxMemory.toString());\n        updateField(\n          \"maxCPUsUse\",\n          res.cpu_priority.max_allocatable_cpu.toString()\n        );\n\n        const maxAllocatableCPU = get(\n          maxAllocatableResources,\n          \"cpu_priority.max_allocatable_cpu\",\n          0\n        );\n\n        const baseCpuUse = Math.max(1, floor(maxAllocatableCPU / 2));\n        updateField(\"resourcesCPURequest\", baseCpuUse);\n\n        const baseMemoryUse = Math.max(2, floor(maxMemory / 2));\n        updateField(\"resourcesMemoryRequest\", baseMemoryUse);\n      })\n      .catch((err: any) => {\n        updateField(\"maxMemorySize\", 0);\n        updateField(\"resourcesCPURequest\", \"\");\n\n        console.error(err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, updateField]);\n\n  /*Calculate Allocation End*/\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <div className={classes.headerElement}>\n          <h3 className={classes.h3Section}>Resources</h3>\n          <span className={classes.descriptionText}>\n            You may specify the amount of CPU and Memory that MinIO servers\n            should reserve on each node.\n          </span>\n        </div>\n      </Grid>\n      {resourcesSize.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{resourcesSize.error}</div>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          label={\"CPU Request\"}\n          id={\"resourcesCPURequest\"}\n          name={\"resourcesCPURequest\"}\n          onChange={(e) => {\n            let value = parseInt(e.target.value);\n            if (e.target.value === \"\") {\n              updateField(\"resourcesCPURequestError\", \"\");\n            } else if (isNaN(value)) {\n              updateField(\"resourcesCPURequestError\", \"Invalid number\");\n            } else if (value > parseInt(maxCPUsUse)) {\n              updateField(\n                \"resourcesCPURequestError\",\n                `Request exceeds available cores (${maxCPUsUse})`\n              );\n            } else if (e.target.validity.valid) {\n              updateField(\"resourcesCPURequestError\", \"\");\n            } else {\n              updateField(\"resourcesCPURequestError\", \"Invalid configuration\");\n            }\n            updateField(\"resourcesCPURequest\", e.target.value);\n          }}\n          value={resourcesCPURequest}\n          disabled={selectedStorageClass === \"\"}\n          max={maxCPUsUse}\n          error={resourcesCPURequestError}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"resourcesMemoryRequest\"\n          name=\"resourcesMemoryRequest\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            let value = parseInt(e.target.value);\n            if (e.target.value === \"\") {\n              updateField(\"resourcesMemoryRequestError\", \"\");\n            } else if (isNaN(value)) {\n              updateField(\"resourcesMemoryRequestError\", \"Invalid number\");\n            } else if (value > parseInt(maxMemorySize)) {\n              updateField(\n                \"resourcesMemoryRequestError\",\n                `Request exceeds available memory across ${nodes} nodes (${maxMemorySize}Gi)`\n              );\n            } else if (value < 2) {\n              updateField(\n                \"resourcesMemoryRequestError\",\n                \"At least 2Gi must be requested\"\n              );\n            } else if (e.target.validity.valid) {\n              updateField(\"resourcesMemoryRequestError\", \"\");\n            } else {\n              updateField(\n                \"resourcesMemoryRequestError\",\n                \"Invalid configuration\"\n              );\n            }\n            updateField(\"resourcesMemoryRequest\", e.target.value);\n          }}\n          label=\"Memory Request [Gi]\"\n          value={resourcesMemoryRequest}\n          disabled={selectedStorageClass === \"\"}\n          error={resourcesMemoryRequestError}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"resourcesSpecifyLimit\"\n          id=\"resourcesSpecifyLimit\"\n          name=\"resourcesSpecifyLimit\"\n          checked={resourcesSpecifyLimit}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"resourcesSpecifyLimit\", checked);\n          }}\n          label={\"Specify Limit\"}\n        />\n      </Grid>\n\n      {resourcesSpecifyLimit && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              label={\"CPU Limit\"}\n              id={\"resourcesCPULimit\"}\n              name={\"resourcesCPULimit\"}\n              onChange={(e) => {\n                let value = parseInt(e.target.value);\n                if (e.target.value === \"\") {\n                  updateField(\"resourcesCPULimitError\", \"\");\n                } else if (isNaN(value)) {\n                  updateField(\"resourcesCPULimitError\", \"Invalid number\");\n                } else if (e.target.validity.valid) {\n                  updateField(\"resourcesCPULimitError\", \"\");\n                } else {\n                  updateField(\n                    \"resourcesCPULimitError\",\n                    \"Invalid configuration\"\n                  );\n                }\n                updateField(\"resourcesCPULimit\", e.target.value);\n              }}\n              value={resourcesCPULimit}\n              disabled={selectedStorageClass === \"\"}\n              max={maxCPUsUse}\n              error={resourcesCPULimitError}\n              pattern={\"[0-9]*\"}\n            />\n          </Grid>\n\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"resourcesMemoryLimit\"\n              name=\"resourcesMemoryLimit\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                let value = parseInt(e.target.value);\n                console.log(\"value\", value);\n                if (e.target.value === \"\") {\n                  updateField(\"resourcesMemoryLimitError\", \"\");\n                } else if (isNaN(value)) {\n                  updateField(\"resourcesMemoryLimitError\", \"Invalid number\");\n                } else if (e.target.validity.valid) {\n                  updateField(\"resourcesMemoryLimitError\", \"\");\n                } else {\n                  updateField(\n                    \"resourcesMemoryLimitError\",\n                    \"Invalid configuration\"\n                  );\n                }\n                updateField(\"resourcesMemoryLimit\", e.target.value);\n              }}\n              label=\"Memory Limit [Gi]\"\n              value={resourcesMemoryLimit}\n              disabled={selectedStorageClass === \"\"}\n              error={resourcesMemoryLimitError}\n              pattern={\"[0-9]*\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n\n  resourcesSize: state.tenants.createTenant.fields.tenantSize.resourcesSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  maxAllocatableResources:\n    state.tenants.createTenant.fields.tenantSize.maxAllocatableResources,\n  maxCPUsUse: state.tenants.createTenant.fields.tenantSize.maxCPUsUse,\n  maxMemorySize: state.tenants.createTenant.fields.tenantSize.maxMemorySize,\n\n  resourcesSpecifyLimit:\n    state.tenants.createTenant.fields.tenantSize.resourcesSpecifyLimit,\n\n  resourcesCPURequestError:\n    state.tenants.createTenant.fields.tenantSize.resourcesCPURequestError,\n  resourcesCPURequest:\n    state.tenants.createTenant.fields.tenantSize.resourcesCPURequest,\n  resourcesCPULimitError:\n    state.tenants.createTenant.fields.tenantSize.resourcesCPULimitError,\n  resourcesCPULimit:\n    state.tenants.createTenant.fields.tenantSize.resourcesCPULimit,\n\n  resourcesMemoryRequestError:\n    state.tenants.createTenant.fields.tenantSize.resourcesMemoryRequestError,\n  resourcesMemoryRequest:\n    state.tenants.createTenant.fields.tenantSize.resourcesMemoryRequest,\n  resourcesMemoryLimitError:\n    state.tenants.createTenant.fields.tenantSize.resourcesMemoryLimitError,\n  resourcesMemoryLimit:\n    state.tenants.createTenant.fields.tenantSize.resourcesMemoryLimit,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(TenantSizeResources));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../../actions\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  calculateDistribution,\n  erasureCodeCalc,\n  getBytes,\n  k8sfactorForDropdown,\n  niceBytes,\n} from \"../../../../../../common/utils\";\nimport { clearValidationError } from \"../../../utils\";\nimport { ecListTransform, Opts } from \"../../../ListTenants/utils\";\nimport { IResourcesSize } from \"../../../ListTenants/types\";\nimport { ICapacity, IErasureCodeCalc } from \"../../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../../utils/validationFunctions\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TenantSizeResources from \"./TenantSizeResources\";\n\ninterface ITenantSizeProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  resourcesSize: IResourcesSize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    compositeFieldContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    compositeAddOn: {\n      marginLeft: 10,\n      \"& div\": {\n        marginBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        \"& div\": {\n          marginTop: 5,\n        },\n      },\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSize = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  resourcesSize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n}: ITenantSizeProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  const [nodeError, setNodeError] = useState<string>(\"\");\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n      if (!cleanECChoices.includes(ecParity) || ecParity === \"\") {\n        updateField(\"ecParity\", ecCodeValidated.defaultEC);\n      }\n    }\n  }, [\n    ecParity,\n    ecParityChoices.length,\n    distribution,\n    cleanECChoices,\n    updateField,\n  ]);\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    //Validate Cluster Size\n    const size = volumeSize;\n    const factor = sizeFactor;\n    const limitSize = getBytes(\"12\", \"Ti\", true);\n\n    const clusterCapacity: ICapacity = {\n      unit: factor,\n      value: size.toString(),\n    };\n\n    const distrCalculate = calculateDistribution(\n      clusterCapacity,\n      parseInt(nodes),\n      parseInt(limitSize),\n      parseInt(drivesPerServer)\n    );\n\n    updateField(\"distribution\", distrCalculate);\n    setErrorFlag(false);\n    setNodeError(\"\");\n  }, [nodes, volumeSize, sizeFactor, updateField, drivesPerServer]);\n\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const parsedSize = getBytes(volumeSize, sizeFactor, true);\n\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: errorFlag,\n        customValidationMessage: nodeError,\n      },\n      {\n        fieldKey: \"volume_size\",\n        required: true,\n        value: volumeSize,\n        customValidation:\n          parseInt(parsedSize) < 1073741824 ||\n          parseInt(parsedSize) > limitSize[selectedStorageClass],\n        customValidationMessage: `Volume size must be greater than 1Gi and less than ${niceBytes(\n          limitSize[selectedStorageClass],\n          true\n        )}`,\n      },\n      {\n        fieldKey: \"drivesps\",\n        required: true,\n        value: drivesPerServer,\n        customValidation: parseInt(drivesPerServer) < 1,\n        customValidationMessage: \"There must be at least one drive\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        !(\"volume_size\" in commonValidation) &&\n        !(\"drivesps\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        ecParity !== \"\"\n    );\n\n    setValidationErrors(commonValidation);\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    ecParityCalc,\n    resourcesSize,\n    limitSize,\n    selectedStorageClass,\n    isPageValid,\n    errorFlag,\n    nodeError,\n    drivesPerServer,\n    ecParity,\n  ]);\n\n  useEffect(() => {\n    if (distribution.error === \"\") {\n      // Get EC Value\n      updateField(\"ecParity\", \"\");\n\n      if (nodes.trim() !== \"\" && distribution.disks !== 0) {\n        api\n          .invoke(\"GET\", `api/v1/get-parity/${nodes}/${distribution.disks}`)\n          .then((ecList: string[]) => {\n            updateField(\"ecParityChoices\", ecListTransform(ecList));\n            updateField(\"cleanECChoices\", ecList);\n          })\n          .catch((err: any) => {\n            updateField(\"ecparityChoices\", []);\n            isPageValid(\"tenantSize\", false);\n            updateField(\"ecParity\", \"\");\n          });\n      }\n    }\n  }, [distribution, isPageValid, updateField, nodes]);\n\n  /* End Validation of pages */\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <div className={classes.headerElement}>\n          <h3 className={classes.h3Section}>Capacity</h3>\n          <span className={classes.descriptionText}>\n            Please select the desired capacity\n          </span>\n        </div>\n      </Grid>\n      {distribution.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{distribution.error}</div>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"nodes\"\n          name=\"nodes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.validity.valid) {\n              updateField(\"nodes\", e.target.value);\n              cleanValidation(\"nodes\");\n            }\n          }}\n          label=\"Number of Servers\"\n          disabled={selectedStorageClass === \"\"}\n          value={nodes}\n          min=\"4\"\n          required\n          error={validationErrors[\"nodes\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"drivesps\"\n          name=\"drivesps\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.validity.valid) {\n              updateField(\"drivesPerServer\", e.target.value);\n              cleanValidation(\"drivesps\");\n            }\n          }}\n          label=\"Drives per Server\"\n          value={drivesPerServer}\n          disabled={selectedStorageClass === \"\"}\n          min=\"1\"\n          required\n          error={validationErrors[\"drivesps\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <div className={classes.multiContainer}>\n          <div className={classes.formFieldRow}>\n            <div className={classes.compositeFieldContainer}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"volume_size\"\n                name=\"volume_size\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateField(\"volumeSize\", e.target.value);\n                  cleanValidation(\"volume_size\");\n                }}\n                label=\"Total Size\"\n                value={volumeSize}\n                disabled={selectedStorageClass === \"\"}\n                required\n                error={validationErrors[\"volume_size\"] || \"\"}\n                min=\"0\"\n              />\n              <div className={classes.compositeAddOn}>\n                <SelectWrapper\n                  label={\"\"}\n                  id=\"size_factor\"\n                  name=\"size_factor\"\n                  value={sizeFactor}\n                  disabled={selectedStorageClass === \"\"}\n                  onChange={(e: SelectChangeEvent<string>) => {\n                    updateField(\"sizeFactor\", e.target.value as string);\n                  }}\n                  options={k8sfactorForDropdown()}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Grid>\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <SelectWrapper\n          id=\"ec_parity\"\n          name=\"ec_parity\"\n          onChange={(e: SelectChangeEvent<string>) => {\n            updateField(\"ecParity\", e.target.value as string);\n          }}\n          label=\"Erasure Code Parity\"\n          disabled={selectedStorageClass === \"\"}\n          value={ecParity}\n          options={ecParityChoices}\n        />\n        <span className={classes.descriptionText}>\n          Please select the desired parity. This setting will change the max\n          usable capacity in the cluster\n        </span>\n      </Grid>\n\n      <TenantSizeResources />\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n\n  resourcesSize: state.tenants.createTenant.fields.tenantSize.resourcesSize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(TenantSize));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../../actions\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { erasureCodeCalc, getBytes } from \"../../../../../../common/utils\";\nimport { clearValidationError } from \"../../../utils\";\nimport { ecListTransform, Opts } from \"../../../ListTenants/utils\";\nimport { IResourcesSize } from \"../../../ListTenants/types\";\nimport {\n  IErasureCodeCalc,\n  IStorageDistribution,\n} from \"../../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../../utils/validationFunctions\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport {\n  IMkEnvs,\n  IntegrationConfiguration,\n  mkPanelConfigurations,\n} from \"./utils\";\n\ninterface ITenantSizeAWSProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  resourcesSize: IResourcesSize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageType: string;\n  cpuToUse: string;\n  maxCPUsUse: string;\n  formToRender?: IMkEnvs;\n  integrationSelection: IntegrationConfiguration;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    compositeFieldContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    compositeAddOn: {\n      marginLeft: 10,\n      \"& div\": {\n        marginBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        \"& div\": {\n          marginTop: 5,\n        },\n      },\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSizeMK = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  resourcesSize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  cpuToUse,\n  selectedStorageType,\n  maxCPUsUse,\n  formToRender,\n  integrationSelection,\n}: ITenantSizeAWSProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const updateMainField = useCallback(\n    (field: string, value: string) => {\n      updateAddField(\"nameTenant\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n\n      if (!cleanECChoices.includes(ecParity) || ecParity === \"\") {\n        updateField(\"ecParity\", ecCodeValidated.defaultEC);\n      }\n    }\n  }, [ecParity, ecParityChoices, distribution, cleanECChoices, updateField]);\n  /*End debounce functions*/\n\n  /*Set location Storage Types*/\n  useEffect(() => {\n    if (formToRender !== undefined && parseInt(nodes) >= 4) {\n      const setConfigs = mkPanelConfigurations[formToRender];\n      const keyCount = Object.keys(setConfigs).length;\n\n      //Configuration is filled\n      if (keyCount > 0) {\n        const configs: IntegrationConfiguration[] = get(\n          setConfigs,\n          \"configurations\",\n          []\n        );\n\n        const mainSelection = configs.find(\n          (item) => item.typeSelection === selectedStorageType\n        );\n\n        if (mainSelection) {\n          updateField(\"integrationSelection\", mainSelection);\n          updateMainField(\"selectedStorageClass\", mainSelection.storageClass);\n\n          let pvSize = parseInt(\n            getBytes(\n              mainSelection.driveSize.driveSize,\n              mainSelection.driveSize.sizeUnit,\n              true\n            ),\n            10\n          );\n\n          const distrCalculate: IStorageDistribution = {\n            pvSize,\n            nodes: parseInt(nodes),\n            disks: mainSelection.drivesPerServer,\n            persistentVolumes: mainSelection.drivesPerServer * parseInt(nodes),\n            error: \"\",\n          };\n\n          updateField(\"distribution\", distrCalculate);\n          // apply requests, half of the available resources\n          updateField(\n            \"resourcesCPURequest\",\n            Math.max(1, mainSelection.CPU / 2)\n          );\n          updateField(\n            \"resourcesMemoryRequest\",\n            Math.max(2, mainSelection.memory / 2)\n          );\n        }\n      }\n    }\n  }, [nodes, selectedStorageType, formToRender, updateField, updateMainField]);\n\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: parseInt(nodes) < 4,\n        customValidationMessage: \"Al least 4 servers must be selected\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        resourcesSize.error === \"\" &&\n        ecParity !== \"\" &&\n        parseInt(nodes) >= 4\n    );\n\n    setValidationErrors(commonValidation);\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    ecParityCalc,\n    resourcesSize,\n    limitSize,\n    selectedStorageType,\n    cpuToUse,\n    maxCPUsUse,\n    isPageValid,\n    drivesPerServer,\n    ecParity,\n  ]);\n\n  useEffect(() => {\n    if (integrationSelection.drivesPerServer !== 0) {\n      // Get EC Value\n      if (nodes.trim() !== \"\") {\n        api\n          .invoke(\n            \"GET\",\n            `api/v1/get-parity/${nodes}/${integrationSelection.drivesPerServer}`\n          )\n          .then((ecList: string[]) => {\n            updateField(\"ecParityChoices\", ecListTransform(ecList));\n            updateField(\"cleanECChoices\", ecList);\n          })\n          .catch((err: any) => {\n            updateField(\"ecparityChoices\", []);\n            isPageValid(\"tenantSize\", false);\n            updateField(\"ecParity\", \"\");\n          });\n      }\n    }\n  }, [integrationSelection, nodes, isPageValid, updateField]);\n\n  /* End Validation of pages */\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <div className={classes.headerElement}>\n          <h3 className={classes.h3Section}>Tenant Size</h3>\n          <span className={classes.descriptionText}>\n            Please select the desired capacity\n          </span>\n        </div>\n      </Grid>\n      {distribution.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{distribution.error}</div>\n        </Grid>\n      )}\n      {resourcesSize.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{resourcesSize.error}</div>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"nodes\"\n          name=\"nodes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            if (e.target.validity.valid) {\n              updateField(\"nodes\", e.target.value);\n              cleanValidation(\"nodes\");\n            }\n          }}\n          label=\"Number of Servers\"\n          disabled={selectedStorageType === \"\"}\n          value={nodes}\n          min=\"4\"\n          required\n          error={validationErrors[\"nodes\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <SelectWrapper\n          id=\"ec_parity\"\n          name=\"ec_parity\"\n          onChange={(e: SelectChangeEvent<string>) => {\n            updateField(\"ecParity\", e.target.value as string);\n          }}\n          label=\"Erasure Code Parity\"\n          disabled={selectedStorageType === \"\"}\n          value={ecParity}\n          options={ecParityChoices}\n        />\n        <span className={classes.descriptionText}>\n          Please select the desired parity. This setting will change the max\n          usable capacity in the cluster\n        </span>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => () => {\n  const createTenant = state.tenants.createTenant;\n\n  const {\n    memoryNode,\n    ecParityChoices,\n    distribution,\n    cleanECChoices,\n    sizeFactor,\n    ecParity,\n    cpuToUse,\n    integrationSelection,\n    resourcesSize,\n    drivesPerServer,\n    maxCPUsUse,\n    ecParityCalc,\n    volumeSize,\n    nodes,\n  } = createTenant.fields.tenantSize;\n\n  return {\n    volumeSize,\n    sizeFactor,\n    drivesPerServer,\n    nodes,\n    memoryNode,\n    ecParity,\n    ecParityChoices,\n    cleanECChoices,\n    resourcesSize,\n    distribution,\n    ecParityCalc,\n    cpuToUse,\n    maxCPUsUse,\n    integrationSelection,\n    limitSize: createTenant.limitSize,\n    selectedStorageType: createTenant.fields.nameTenant.selectedStorageType,\n  };\n};\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(TenantSizeMK));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../../../actions\";\nimport {\n  isPageValid,\n  setLimitSize,\n  setStorageClassesList,\n  updateAddField,\n} from \"../../../actions\";\nimport {\n  getLimitSizes,\n  IQuotaElement,\n  IQuotas,\n  Opts,\n} from \"../../../ListTenants/utils\";\nimport { AppState } from \"../../../../../../store\";\nimport { commonFormValidation } from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      position: \"fixed\",\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface INameTenantMainScreen {\n  classes: any;\n  storageClasses: Opts[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  setStorageClassesList: typeof setStorageClassesList;\n  setLimitSize: typeof setLimitSize;\n  tenantName: string;\n  namespace: string;\n  selectedStorageClass: string;\n  selectedStorageType: string;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({\n  classes,\n  storageClasses,\n  tenantName,\n  namespace,\n  selectedStorageClass,\n  selectedStorageType,\n  formToRender = IMkEnvs.default,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n  setModalErrorSnackMessage,\n}: INameTenantMainScreen) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [emptyNamespace, setEmptyNamespace] = useState<boolean>(true);\n  const [loadingNamespaceInfo, setLoadingNamespaceInfo] =\n    useState<boolean>(false);\n  const [showCreateButton, setShowCreateButton] = useState<boolean>(false);\n  const [openAddNSConfirm, setOpenAddNSConfirm] = useState<boolean>(false);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      updateAddField(\"nameTenant\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Storage classes retrieval\n  const getNamespaceInformation = useCallback(() => {\n    setShowCreateButton(false);\n    // Empty tenantValidation\n    api\n      .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants`)\n      .then((res: any[]) => {\n        const tenantsList = get(res, \"tenants\", []);\n\n        if (tenantsList && tenantsList.length > 0) {\n          setEmptyNamespace(false);\n          setLoadingNamespaceInfo(false);\n          return;\n        }\n        setEmptyNamespace(true);\n\n        // Storagequotas retrieval\n        api\n          .invoke(\n            \"GET\",\n            `/api/v1/namespaces/${namespace}/resourcequotas/${namespace}-storagequota`\n          )\n          .then((res: IQuotas) => {\n            const elements: IQuotaElement[] = get(res, \"elements\", []);\n            setLimitSize(getLimitSizes(res));\n\n            const newStorage = elements.map((storageClass: any) => {\n              const name = get(storageClass, \"name\", \"\").split(\n                \".storageclass.storage.k8s.io/requests.storage\"\n              )[0];\n\n              return { label: name, value: name };\n            });\n\n            setStorageClassesList(newStorage);\n\n            const stExists = newStorage.findIndex(\n              (storageClass) => storageClass.value === selectedStorageClass\n            );\n\n            if (newStorage.length > 0 && stExists === -1) {\n              updateField(\"selectedStorageClass\", newStorage[0].value);\n            } else if (newStorage.length === 0) {\n              updateField(\"selectedStorageClass\", \"\");\n              setStorageClassesList([]);\n            }\n            setLoadingNamespaceInfo(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingNamespaceInfo(false);\n            setShowCreateButton(true);\n            updateField(\"selectedStorageClass\", \"\");\n            setStorageClassesList([]);\n            console.error(\"Namespace error: \", err);\n          });\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage({\n          errorMessage: \"Error validating if namespace already has tenants\",\n          detailedError: err.detailedError,\n        });\n      });\n  }, [\n    namespace,\n    setLimitSize,\n    setModalErrorSnackMessage,\n    setStorageClassesList,\n    updateField,\n    selectedStorageClass,\n  ]);\n\n  const debounceNamespace = useMemo(\n    () => debounce(getNamespaceInformation, 500),\n    [getNamespaceInformation]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      setLoadingNamespaceInfo(true);\n\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  // Validation\n  useEffect(() => {\n    let customNamespaceError = false;\n    let errorMessage = \"\";\n\n    if (!emptyNamespace && !loadingNamespaceInfo) {\n      customNamespaceError = true;\n      errorMessage = \"You can only create one tenant per namespace\";\n    } else if (\n      storageClasses.length < 1 &&\n      emptyNamespace &&\n      !loadingNamespaceInfo\n    ) {\n      customNamespaceError = true;\n      errorMessage = \"Please enter a valid namespace\";\n    }\n\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"tenant-name\",\n        required: true,\n        pattern: /^[a-z0-9-]{3,63}$/,\n        customPatternMessage:\n          \"Name only can contain lowercase letters, numbers and '-'. Min. Length: 3\",\n        value: tenantName,\n      },\n      {\n        fieldKey: \"namespace\",\n        required: true,\n        value: namespace,\n        customValidation: customNamespaceError,\n        customValidationMessage: errorMessage,\n      },\n    ]);\n\n    const isValid =\n      !(\"tenant-name\" in commonValidation) &&\n      !(\"namespace\" in commonValidation) &&\n      ((formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n        (formToRender !== IMkEnvs.default && selectedStorageType !== \"\"));\n\n    isPageValid(\"nameTenant\", isValid);\n\n    setValidationErrors(commonValidation);\n  }, [\n    storageClasses,\n    namespace,\n    tenantName,\n    isPageValid,\n    emptyNamespace,\n    loadingNamespaceInfo,\n    selectedStorageType,\n    formToRender,\n  ]);\n\n  const frmValidationCleanup = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const addNamespace = () => {\n    setOpenAddNSConfirm(true);\n  };\n\n  const closeAddNamespace = (refresh: boolean) => {\n    setOpenAddNSConfirm(false);\n\n    if (refresh) {\n      debounceNamespace();\n    }\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && (\n        <AddNamespaceModal\n          addNamespaceOpen={openAddNSConfirm}\n          closeAddNamespaceModalAndRefresh={closeAddNamespace}\n          namespace={namespace}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={8} md={9}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <InputBoxWrapper\n                    id=\"tenant-name\"\n                    name=\"tenant-name\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantName\", e.target.value);\n                      frmValidationCleanup(\"tenant-name\");\n                    }}\n                    label=\"Name\"\n                    value={tenantName}\n                    required\n                    error={validationErrors[\"tenant-name\"] || \"\"}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"namespace\"\n                  name=\"namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"namespace\", e.target.value);\n                    frmValidationCleanup(\"namespace\");\n                  }}\n                  label=\"Namespace\"\n                  value={namespace}\n                  error={validationErrors[\"namespace\"] || \"\"}\n                  overlayIcon={showCreateButton ? <AddIcon /> : null}\n                  overlayAction={addNamespace}\n                  required\n                />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageType\",\n                        e.target.value as string\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} md={3}>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  tenantName: state.tenants.createTenant.fields.nameTenant.tenantName,\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  selectedStorageType:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageType,\n  storageClasses: state.tenants.createTenant.storageClasses,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(NameTenantMain));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { AppState } from \"../../../../../../store\";\n\ninterface ITenantResources {\n  features?: string[];\n}\n\nconst TenantResources = ({ features }: ITenantResources) => {\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nconst mapState = (state: AppState) => ({\n  features: state.console.session.features,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(TenantResources);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../../common/api\";\nimport { generatePoolName } from \"../../../../common/utils\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../Common/GenericWizard/types\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport { ErrorResponseHandler, ITenantCreator } from \"../../../../common/types\";\nimport { KeyPair } from \"../ListTenants/utils\";\n\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { getDefaultAffinity, getNodeSelector } from \"../TenantDetails/utils\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { AppState } from \"../../../../store\";\nimport { ICertificatesItems, IFieldStore } from \"../types\";\nimport { resetAddTenantForm, updateAddField } from \"../actions\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport history from \"../../../../history\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\n\ninterface IAddTenantProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  resetAddTenantForm: typeof resetAddTenantForm;\n  updateAddField: typeof updateAddField;\n  fields: IFieldStore;\n  certificates: ICertificatesItems;\n  selectedStorageClass: string;\n  namespace: string;\n  validPages: string[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  });\n\nconst AddTenant = ({\n  classes,\n  fields,\n  certificates,\n  selectedStorageClass,\n  namespace,\n  validPages,\n  setErrorSnackMessage,\n  resetAddTenantForm,\n}: IAddTenantProps) => {\n  // Modals\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n\n  // Fields\n  const [addSending, setAddSending] = useState<boolean>(false);\n\n  /* Send Information to backend */\n  useEffect(() => {\n    const tenantName = fields.nameTenant.tenantName;\n    const selectedStorageClass = fields.nameTenant.selectedStorageClass;\n    const imageName = fields.configure.imageName;\n    const customDockerhub = fields.configure.customDockerhub;\n    const imageRegistry = fields.configure.imageRegistry;\n    const imageRegistryUsername = fields.configure.imageRegistryUsername;\n    const imageRegistryPassword = fields.configure.imageRegistryPassword;\n    const exposeMinIO = fields.configure.exposeMinIO;\n    const exposeConsole = fields.configure.exposeConsole;\n    const idpSelection = fields.identityProvider.idpSelection;\n    const openIDConfigurationURL =\n      fields.identityProvider.openIDConfigurationURL;\n    const openIDClientID = fields.identityProvider.openIDClientID;\n    const openIDClaimName = fields.identityProvider.openIDClaimName;\n    const openIDCallbackURL = fields.identityProvider.openIDCallbackURL;\n    const openIDScopes = fields.identityProvider.openIDScopes;\n    const openIDSecretID = fields.identityProvider.openIDSecretID;\n    const ADURL = fields.identityProvider.ADURL;\n    const ADSkipTLS = fields.identityProvider.ADSkipTLS;\n    const ADServerInsecure = fields.identityProvider.ADServerInsecure;\n    const ADUserNameSearchFilter =\n      fields.identityProvider.ADUserNameSearchFilter;\n    const ADGroupSearchBaseDN = fields.identityProvider.ADGroupSearchBaseDN;\n    const ADGroupSearchFilter = fields.identityProvider.ADGroupSearchFilter;\n    const ADGroupNameAttribute = fields.identityProvider.ADGroupNameAttribute;\n    const ADUserDNs = fields.identityProvider.ADUserDNs;\n    const ADUserNameFormat = fields.identityProvider.ADUserNameFormat;\n    const ADLookupBindDN = fields.identityProvider.ADLookupBindDN;\n    const ADLookupBindPassword = fields.identityProvider.ADLookupBindPassword;\n    const ADUserDNSearchBaseDN = fields.identityProvider.ADUserDNSearchBaseDN;\n    const ADUserDNSearchFilter = fields.identityProvider.ADUserDNSearchFilter;\n    const ADServerStartTLS = fields.identityProvider.ADServerStartTLS;\n    const accessKeys = fields.identityProvider.accessKeys;\n    const secretKeys = fields.identityProvider.secretKeys;\n    const minioCertificates = certificates.minioCertificates;\n    const caCertificates = certificates.caCertificates;\n    const consoleCaCertificates = certificates.consoleCaCertificates;\n    const consoleCertificate = certificates.consoleCertificate;\n    const serverCertificate = certificates.serverCertificate;\n    const clientCertificate = certificates.clientCertificate;\n    const vaultCertificate = certificates.vaultCertificate;\n    const vaultCA = certificates.vaultCA;\n    const gemaltoCA = certificates.gemaltoCA;\n    const enableEncryption = fields.encryption.enableEncryption;\n    const encryptionType = fields.encryption.encryptionType;\n    const gemaltoEndpoint = fields.encryption.gemaltoEndpoint;\n    const gemaltoToken = fields.encryption.gemaltoToken;\n    const gemaltoDomain = fields.encryption.gemaltoDomain;\n    const gemaltoRetry = fields.encryption.gemaltoRetry;\n    const awsEndpoint = fields.encryption.awsEndpoint;\n    const awsRegion = fields.encryption.awsRegion;\n    const awsKMSKey = fields.encryption.awsKMSKey;\n    const awsAccessKey = fields.encryption.awsAccessKey;\n    const awsSecretKey = fields.encryption.awsSecretKey;\n    const awsToken = fields.encryption.awsToken;\n    const vaultEndpoint = fields.encryption.vaultEndpoint;\n    const vaultEngine = fields.encryption.vaultEngine;\n    const vaultNamespace = fields.encryption.vaultNamespace;\n    const vaultPrefix = fields.encryption.vaultPrefix;\n    const vaultAppRoleEngine = fields.encryption.vaultAppRoleEngine;\n    const vaultId = fields.encryption.vaultId;\n    const vaultSecret = fields.encryption.vaultSecret;\n    const vaultRetry = fields.encryption.vaultRetry;\n    const vaultPing = fields.encryption.vaultPing;\n    const azureEndpoint = fields.encryption.azureEndpoint;\n    const azureTenantID = fields.encryption.azureTenantID;\n    const azureClientID = fields.encryption.azureClientID;\n    const azureClientSecret = fields.encryption.azureClientSecret;\n    const gcpProjectID = fields.encryption.gcpProjectID;\n    const gcpEndpoint = fields.encryption.gcpEndpoint;\n    const gcpClientEmail = fields.encryption.gcpClientEmail;\n    const gcpClientID = fields.encryption.gcpClientID;\n    const gcpPrivateKeyID = fields.encryption.gcpPrivateKeyID;\n    const gcpPrivateKey = fields.encryption.gcpPrivateKey;\n    const enableAutoCert = fields.security.enableAutoCert;\n    const enableTLS = fields.security.enableTLS;\n    const ecParity = fields.tenantSize.ecParity;\n    const distribution = fields.tenantSize.distribution;\n    const tenantCustom = fields.configure.tenantCustom;\n    const logSearchCustom = fields.configure.logSearchCustom;\n    const prometheusCustom = fields.configure.prometheusCustom;\n    const logSearchVolumeSize = fields.configure.logSearchVolumeSize;\n    const logSearchSelectedStorageClass =\n      fields.configure.logSearchSelectedStorageClass;\n    const logSearchImage = fields.configure.logSearchImage;\n    const kesImage = fields.configure.kesImage;\n    const logSearchPostgresImage = fields.configure.logSearchPostgresImage;\n    const logSearchPostgresInitImage =\n      fields.configure.logSearchPostgresInitImage;\n    const prometheusImage = fields.configure.prometheusImage;\n    const prometheusSidecarImage = fields.configure.prometheusSidecarImage;\n    const prometheusInitImage = fields.configure.prometheusInitImage;\n    const prometheusSelectedStorageClass =\n      fields.configure.prometheusSelectedStorageClass;\n    const prometheusVolumeSize = fields.configure.prometheusVolumeSize;\n    const affinityType = fields.affinity.podAffinity;\n    const nodeSelectorLabels = fields.affinity.nodeSelectorLabels;\n    const withPodAntiAffinity = fields.affinity.withPodAntiAffinity;\n\n    const tenantSecurityContext = fields.configure.tenantSecurityContext;\n    const logSearchSecurityContext = fields.configure.logSearchSecurityContext;\n    const logSearchPostgresSecurityContext =\n      fields.configure.logSearchPostgresSecurityContext;\n    const prometheusSecurityContext =\n      fields.configure.prometheusSecurityContext;\n    const kesSecurityContext = fields.encryption.kesSecurityContext;\n    const kesReplicas = fields.encryption.replicas;\n\n    if (addSending) {\n      const poolName = generatePoolName([]);\n\n      let affinityObject = {};\n\n      switch (affinityType) {\n        case \"default\":\n          affinityObject = {\n            affinity: getDefaultAffinity(tenantName, poolName),\n          };\n          break;\n        case \"nodeSelector\":\n          affinityObject = {\n            affinity: getNodeSelector(\n              nodeSelectorLabels,\n              withPodAntiAffinity,\n              tenantName,\n              poolName\n            ),\n          };\n          break;\n      }\n\n      const erasureCode = ecParity.split(\":\")[1];\n\n      let dataSend: ITenantCreator = {\n        name: tenantName,\n        namespace: namespace,\n        access_key: \"\",\n        secret_key: \"\",\n        access_keys: [],\n        secret_keys: [],\n        enable_tls: enableTLS && enableAutoCert,\n        enable_console: true,\n        enable_prometheus: true,\n        service_name: \"\",\n        image: imageName,\n        expose_minio: exposeMinIO,\n        expose_console: exposeConsole,\n        pools: [\n          {\n            name: poolName,\n            servers: distribution.nodes,\n            volumes_per_server: distribution.disks,\n            volume_configuration: {\n              size: distribution.pvSize,\n              storage_class_name: selectedStorageClass,\n            },\n            securityContext: tenantCustom ? tenantSecurityContext : null,\n            ...affinityObject,\n          },\n        ],\n        erasureCodingParity: parseInt(erasureCode, 10),\n      };\n\n      // Set Resources\n      if (\n        fields.tenantSize.resourcesCPURequest !== \"\" ||\n        fields.tenantSize.resourcesCPULimit !== \"\" ||\n        fields.tenantSize.resourcesMemoryRequest !== \"\" ||\n        fields.tenantSize.resourcesMemoryLimit !== \"\"\n      ) {\n        dataSend.pools[0].resources = {};\n        // requests\n        if (\n          fields.tenantSize.resourcesCPURequest !== \"\" ||\n          fields.tenantSize.resourcesMemoryRequest !== \"\"\n        ) {\n          dataSend.pools[0].resources.requests = {};\n          if (fields.tenantSize.resourcesCPURequest !== \"\") {\n            dataSend.pools[0].resources.requests.cpu = parseInt(\n              fields.tenantSize.resourcesCPURequest\n            );\n          }\n          if (fields.tenantSize.resourcesMemoryRequest !== \"\") {\n            dataSend.pools[0].resources.requests.memory = parseInt(\n              fields.tenantSize.resourcesMemoryRequest\n            );\n          }\n        }\n        // limits\n        if (\n          fields.tenantSize.resourcesCPULimit !== \"\" ||\n          fields.tenantSize.resourcesMemoryLimit !== \"\"\n        ) {\n          dataSend.pools[0].resources.limits = {};\n          if (fields.tenantSize.resourcesCPULimit !== \"\") {\n            dataSend.pools[0].resources.limits.cpu = parseInt(\n              fields.tenantSize.resourcesCPULimit\n            );\n          }\n          if (fields.tenantSize.resourcesMemoryLimit !== \"\") {\n            dataSend.pools[0].resources.limits.memory = parseInt(\n              fields.tenantSize.resourcesMemoryLimit\n            );\n          }\n        }\n      }\n      if (customDockerhub) {\n        dataSend = {\n          ...dataSend,\n          image_registry: {\n            registry: imageRegistry,\n            username: imageRegistryUsername,\n            password: imageRegistryPassword,\n          },\n        };\n      }\n\n      if (logSearchCustom) {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            storageClass:\n              logSearchSelectedStorageClass === \"default\"\n                ? \"\"\n                : logSearchSelectedStorageClass,\n            storageSize: parseInt(logSearchVolumeSize),\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n            securityContext: logSearchSecurityContext,\n            postgres_securityContext: logSearchPostgresSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n          },\n        };\n      }\n\n      if (prometheusCustom) {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            storageClass:\n              prometheusSelectedStorageClass === \"default\"\n                ? \"\"\n                : prometheusSelectedStorageClass,\n            storageSize: parseInt(prometheusVolumeSize),\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n            securityContext: prometheusSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n          },\n        };\n      }\n\n      let tenantCerts: any = null;\n      let consoleCerts: any = null;\n      let caCerts: any = null;\n      let consoleCaCerts: any = null;\n\n      if (caCertificates.length > 0) {\n        caCerts = {\n          ca_certificates: caCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (consoleCaCertificates.length > 0) {\n        consoleCaCerts = {\n          console_ca_certificates: consoleCaCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (enableTLS && minioCertificates.length > 0) {\n        tenantCerts = {\n          minio: minioCertificates\n            .map((keyPair: KeyPair) => ({\n              crt: keyPair.encoded_cert,\n              key: keyPair.encoded_key,\n            }))\n            .filter((keyPair) => keyPair.crt && keyPair.key),\n        };\n      }\n\n      if (\n        enableTLS &&\n        consoleCertificate.encoded_cert !== \"\" &&\n        consoleCertificate.encoded_key !== \"\"\n      ) {\n        consoleCerts = {\n          console: {\n            crt: consoleCertificate.encoded_cert,\n            key: consoleCertificate.encoded_key,\n          },\n        };\n      }\n\n      if (tenantCerts || consoleCerts || caCerts || consoleCaCerts) {\n        dataSend = {\n          ...dataSend,\n          tls: {\n            ...tenantCerts,\n            ...consoleCerts,\n            ...caCerts,\n            ...consoleCaCerts,\n          },\n        };\n      }\n\n      if (enableEncryption) {\n        let insertEncrypt = {};\n\n        switch (encryptionType) {\n          case \"gemalto\":\n            let gemaltoCAIntroduce = {};\n\n            if (gemaltoCA.encoded_cert !== \"\") {\n              gemaltoCAIntroduce = {\n                ca: gemaltoCA.encoded_cert,\n              };\n            }\n            insertEncrypt = {\n              gemalto: {\n                keysecure: {\n                  endpoint: gemaltoEndpoint,\n                  credentials: {\n                    token: gemaltoToken,\n                    domain: gemaltoDomain,\n                    retry: parseInt(gemaltoRetry),\n                  },\n                  tls: {\n                    ...gemaltoCAIntroduce,\n                  },\n                },\n              },\n            };\n            break;\n          case \"aws\":\n            insertEncrypt = {\n              aws: {\n                secretsmanager: {\n                  endpoint: awsEndpoint,\n                  region: awsRegion,\n                  kmskey: awsKMSKey,\n                  credentials: {\n                    accesskey: awsAccessKey,\n                    secretkey: awsSecretKey,\n                    token: awsToken,\n                  },\n                },\n              },\n            };\n            break;\n          case \"azure\":\n            insertEncrypt = {\n              azure: {\n                keyvault: {\n                  endpoint: azureEndpoint,\n                  credentials: {\n                    tenant_id: azureTenantID,\n                    client_id: azureClientID,\n                    client_secret: azureClientSecret,\n                  },\n                },\n              },\n            };\n            break;\n          case \"gcp\":\n            insertEncrypt = {\n              gcp: {\n                secretmanager: {\n                  project_id: gcpProjectID,\n                  endpoint: gcpEndpoint,\n                  credentials: {\n                    client_email: gcpClientEmail,\n                    client_id: gcpClientID,\n                    private_key_id: gcpPrivateKeyID,\n                    private_key: gcpPrivateKey,\n                  },\n                },\n              },\n            };\n            break;\n          case \"vault\":\n            let vaultKeyPair = null;\n            let vaultCAInsert = null;\n            if (\n              vaultCertificate.encoded_key !== \"\" &&\n              vaultCertificate.encoded_cert !== \"\"\n            ) {\n              vaultKeyPair = {\n                key: vaultCertificate.encoded_key,\n                crt: vaultCertificate.encoded_cert,\n              };\n            }\n            if (vaultCA.encoded_cert !== \"\") {\n              vaultCAInsert = {\n                ca: vaultCA.encoded_cert,\n              };\n            }\n            let vaultTLS = null;\n            if (vaultKeyPair || vaultCA) {\n              vaultTLS = {\n                tls: {\n                  ...vaultKeyPair,\n                  ...vaultCAInsert,\n                },\n              };\n            }\n            insertEncrypt = {\n              vault: {\n                endpoint: vaultEndpoint,\n                engine: vaultEngine,\n                namespace: vaultNamespace,\n                prefix: vaultPrefix,\n                approle: {\n                  engine: vaultAppRoleEngine,\n                  id: vaultId,\n                  secret: vaultSecret,\n                  retry: parseInt(vaultRetry),\n                },\n                ...vaultTLS,\n                status: {\n                  ping: parseInt(vaultPing),\n                },\n              },\n            };\n            break;\n        }\n\n        let encryptionServerKeyPair: any = {};\n        let encryptionClientKeyPair: any = {};\n\n        if (\n          clientCertificate.encoded_key !== \"\" &&\n          clientCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionClientKeyPair = {\n            client: {\n              key: clientCertificate.encoded_key,\n              crt: clientCertificate.encoded_cert,\n            },\n          };\n        }\n\n        if (\n          serverCertificate.encoded_key !== \"\" &&\n          serverCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionServerKeyPair = {\n            server: {\n              key: serverCertificate.encoded_key,\n              crt: serverCertificate.encoded_cert,\n            },\n          };\n        }\n\n        dataSend = {\n          ...dataSend,\n          encryption: {\n            replicas: kesReplicas,\n            securityContext: kesSecurityContext,\n            image: kesImage,\n            ...encryptionClientKeyPair,\n            ...encryptionServerKeyPair,\n            ...insertEncrypt,\n          },\n        };\n      }\n\n      let dataIDP: any = {};\n      switch (idpSelection) {\n        case \"Built-in\":\n          let keyarray = [];\n          for (let i = 0; i < accessKeys.length; i++) {\n            keyarray.push({\n              access_key: accessKeys[i],\n              secret_key: secretKeys[i],\n            });\n          }\n          dataIDP = {\n            keys: keyarray,\n          };\n          break;\n        case \"OpenID\":\n          dataIDP = {\n            oidc: {\n              configuration_url: openIDConfigurationURL,\n              client_id: openIDClientID,\n              secret_id: openIDSecretID,\n              claim_name: openIDClaimName,\n              callback_url: openIDCallbackURL,\n              scopes: openIDScopes,\n            },\n          };\n          break;\n        case \"AD\":\n          dataIDP = {\n            active_directory: {\n              url: ADURL,\n              skip_tls_verification: ADSkipTLS,\n              server_insecure: ADServerInsecure,\n              username_format: ADUserNameFormat,\n              username_search_filter: ADUserNameSearchFilter,\n              group_search_base_dn: ADGroupSearchBaseDN,\n              group_search_filter: ADGroupSearchFilter,\n              group_name_attribute: ADGroupNameAttribute,\n              user_dns: ADUserDNs,\n              lookup_bind_dn: ADLookupBindDN,\n              lookup_bind_password: ADLookupBindPassword,\n              user_dn_search_base_dn: ADUserDNSearchBaseDN,\n              user_dn_search_filter: ADUserDNSearchFilter,\n              server_start_tls: ADServerStartTLS,\n            },\n          };\n          break;\n      }\n\n      dataSend = {\n        ...dataSend,\n        idp: { ...dataIDP },\n      };\n      api\n        .invoke(\"POST\", `/api/v1/tenants`, dataSend)\n        .then((res) => {\n          const consoleSAList = get(res, \"console\", []);\n\n          let newSrvAcc: NewServiceAccount = {\n            idp: get(res, \"externalIDP\", false),\n            console: [],\n          };\n\n          if (consoleSAList) {\n            if (Array.isArray(consoleSAList)) {\n              const consoleItem = consoleSAList.map((consoleKey) => {\n                return {\n                  accessKey: consoleKey.access_key,\n                  secretKey: consoleKey.secret_key,\n                };\n              });\n\n              newSrvAcc.console = consoleItem;\n            } else {\n              newSrvAcc = {\n                console: {\n                  accessKey: res.console.access_key,\n                  secretKey: res.console.secret_key,\n                },\n              };\n            }\n          }\n          setAddSending(false);\n          setShowNewCredentials(true);\n          setCreatedAccount(newSrvAcc);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          setErrorSnackMessage(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addSending]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      history.push(\"/tenants\");\n    },\n  };\n  const requiredPages = [\n    \"nameTenant\",\n    \"tenantSize\",\n    \"configure\",\n    \"affinity\",\n    \"identityProvider\",\n    \"security\",\n    \"encryption\",\n  ];\n  const createButton = {\n    label: \"Create\",\n    type: \"submit\",\n    enabled:\n      !addSending &&\n      selectedStorageClass !== \"\" &&\n      requiredPages.every((v) => validPages.includes(v)),\n    action: () => {\n      setAddSending(true);\n    },\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  const closeCredentialsModal = () => {\n    resetAddTenantForm();\n    history.push(\"/tenants\");\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeader label={\"Create New Tenant\"} />\n      <BackLink to={\"/tenants\"} label={\"Return to Tenant List\"} />\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  validPages: state.tenants.createTenant.validPages,\n  fields: state.tenants.createTenant.fields,\n  certificates: state.tenants.createTenant.certificates,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  updateAddField,\n  resetAddTenantForm,\n});\n\nexport default withStyles(styles)(connector(AddTenant));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { IAffinityModel } from \"../../../../common/types\";\n\nexport const getDefaultAffinity = (tenantName: string, poolName: string) => {\n  const defaultAffinity: IAffinityModel = {\n    podAntiAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n          labelSelector: {\n            matchExpressions: [\n              {\n                key: \"v1.min.io/tenant\",\n                operator: \"In\",\n                values: [tenantName],\n              },\n              {\n                key: \"v1.min.io/pool\",\n                operator: \"In\",\n                values: [poolName],\n              },\n            ],\n          },\n          topologyKey: \"kubernetes.io/hostname\",\n        },\n      ],\n    },\n  };\n  return defaultAffinity;\n};\n\nexport const getNodeSelector = (\n  labels: string,\n  withPodAntiAffinity: boolean,\n  tenantName: string,\n  poolName: string\n) => {\n  // Labels in the form of key1=value1&key2=value2&key3=value3...\n  const splittedLabels = labels.split(\"&\");\n  let matchExpressions: any = [];\n\n  splittedLabels.forEach((label: string) => {\n    const splitKeyValue = label.split(\"=\");\n    if (splitKeyValue.length === 2) {\n      matchExpressions.push({\n        key: splitKeyValue[0],\n        operator: \"In\",\n        values: [splitKeyValue[1]],\n      });\n    }\n  });\n\n  const nodeSelector: IAffinityModel = {\n    nodeAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [\n          {\n            matchExpressions: matchExpressions,\n          },\n        ],\n      },\n    },\n  };\n  if (withPodAntiAffinity) {\n    const def = getDefaultAffinity(tenantName, poolName);\n    nodeSelector.podAntiAffinity = def.podAntiAffinity;\n  }\n  console.log(nodeSelector);\n  return nodeSelector;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"./ListTenants/types\";\nimport { Opts } from \"./ListTenants/utils\";\nimport {\n  ADD_TENANT_ADD_CA_KEYPAIR,\n  ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ADD_CONSOLE_CERT,\n  ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n  ADD_TENANT_ADD_MINIO_KEYPAIR,\n  ADD_TENANT_DELETE_CA_KEYPAIR,\n  ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_DELETE_MINIO_KEYPAIR,\n  ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n  ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n  ADD_TENANT_ENCRYPTION_SERVER_CERT,\n  ADD_TENANT_ENCRYPTION_VAULT_CA,\n  ADD_TENANT_ENCRYPTION_VAULT_CERT,\n  ADD_TENANT_RESET_FORM,\n  ADD_TENANT_SET_CURRENT_PAGE,\n  ADD_TENANT_SET_LIMIT_SIZE,\n  ADD_TENANT_SET_PAGE_VALID,\n  ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n  ADD_TENANT_UPDATE_FIELD,\n  TENANT_DETAILS_SET_CURRENT_TENANT,\n  TENANT_DETAILS_SET_LOADING,\n  TENANT_DETAILS_SET_TAB,\n  TENANT_DETAILS_SET_TENANT,\n} from \"./types\";\n\n// Basic actions\nexport const setWizardPage = (page: number) => {\n  return {\n    type: ADD_TENANT_SET_CURRENT_PAGE,\n    page,\n  };\n};\n\nexport const updateAddField = (\n  pageName: string,\n  fieldName: string,\n  value: any\n) => {\n  return {\n    type: ADD_TENANT_UPDATE_FIELD,\n    pageName,\n    field: fieldName,\n    value,\n  };\n};\n\nexport const isPageValid = (pageName: string, valid: boolean) => {\n  return {\n    type: ADD_TENANT_SET_PAGE_VALID,\n    pageName,\n    valid,\n  };\n};\n\n// Name Tenant actions\n\nexport const setStorageClassesList = (storageClasses: Opts[]) => {\n  return {\n    type: ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n    storageClasses,\n  };\n};\n\nexport const setLimitSize = (limitSize: any) => {\n  return {\n    type: ADD_TENANT_SET_LIMIT_SIZE,\n    limitSize,\n  };\n};\n\n// Security actions\n\nexport const addCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CA_KEYPAIR,\n  };\n};\n\nexport const deleteCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  };\n};\n\nexport const deleteConsoleCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToConsoleCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addKeyPair = () => {\n  return {\n    type: ADD_TENANT_ADD_MINIO_KEYPAIR,\n  };\n};\n\nexport const deleteKeyPair = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_MINIO_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToKeyPair = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCertificate = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileServerCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_SERVER_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileClientCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileGemaltoCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const resetAddTenantForm = () => {\n  return {\n    type: ADD_TENANT_RESET_FORM,\n  };\n};\n\nexport const setTenantDetailsLoad = (loading: boolean) => {\n  return {\n    type: TENANT_DETAILS_SET_LOADING,\n    state: loading,\n  };\n};\n\nexport const setTenantName = (tenantName: string, tenantNamespace: string) => {\n  return {\n    type: TENANT_DETAILS_SET_CURRENT_TENANT,\n    name: tenantName,\n    namespace: tenantNamespace,\n  };\n};\n\nexport const setTenantInfo = (tenant: ITenant | null) => {\n  return {\n    type: TENANT_DETAILS_SET_TENANT,\n    tenant,\n  };\n};\n\nexport const setTenantTab = (tab: string) => {\n  return {\n    type: TENANT_DETAILS_SET_TAB,\n    tab,\n  };\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","link","display","alignItems","textDecoration","maxWidth","padding","color","palette","primary","light","fontSize","icon","marginRight","justifyContent","to","label","classes","className","root","marginLeft","borderWidth","borderColor","borderStyle","borderRadius","width","backgroundColor","main","opacity","contained","background","dark","children","variant","tooltip","rest","button","clsx","title","container","flexFlow","inputWithCopy","height","inputLabel","fontWeight","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","onClick","onMouseDown","edge","warningBlock","margin","credentialTitle","buttonContainer","textAlign","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","promptIcon","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","item","xs","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","WarnIcon","Button","consoleExtras","cCreds","itemMap","access_key","secret_key","console","filename","element","document","createElement","setAttribute","encodeURIComponent","style","body","appendChild","click","removeChild","download","JSON","stringify","endIcon","fieldBasic","tooltipHelper","valueString","whiteSpace","overflow","textOverflow","fileInputField","fileInputStyles","onChange","id","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","placement","HelpIcon","textBoxContainer","type","e","fileName","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","radioStyles","makeStyles","radioIcons","RadioButton","props","checkedIcon","radioSelectedIcon","radioUnselectedIcon","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","radioOptionsLayout","row","selectorOption","control","SelectStyled","lineHeight","spacing","input","border","InputBase","options","fullWidth","option","wizardStepContainer","flexDirection","flex","wizardComponent","marginBottom","minHeight","wizardModal","buttonsContainer","borderTop","paddingBottom","buttonInnerContainer","page","pageChange","loadingStep","forModal","componentRender","LinearProgress","buttons","btn","toPage","action","buttonAction","enabled","wizFromContainer","wizFromModal","modalWizardSteps","borderBottom","listStyle","paddingLeft","buttonList","cursor","outline","boxShadow","paddedContentGrid","stepsLabel","stepsMasterContainer","top","verticalSteps","borderRight","stepsContainer","paddingTop","stepItem","wizardSteps","currentStep","setCurrentStep","toElement","lastPage","nextPage","prevPage","pg","Fragment","step","sm","md","lg","xl","List","dense","ListItem","selected","ListItemText","pageContentStyles","contentSpacer","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","headerContainer","left","labelStyle","rightMenu","logo","fill","actions","direction","IMkEnvs","storageClasses","tenants","createTenant","customImage","fields","configure","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","exposeMinIO","exposeConsole","prometheusCustom","tenantCustom","logSearchCustom","logSearchVolumeSize","logSearchSizeFactor","prometheusVolumeSize","prometheusSizeFactor","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","selectedStorageClass","nameTenant","tenantSecurityContext","logSearchSecurityContext","logSearchPostgresSecurityContext","prometheusSecurityContext","updateAddField","isPageValid","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","logSearchCustomFields","fieldSpaceTop","prometheusCustomFields","modalBasic","wizardCommon","validationErrors","setValidationErrors","configureSTClasses","updateField","useCallback","field","useEffect","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","pattern","customPatternMessage","commonVal","commonFormValidation","Object","keys","filter","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","multiContainer","InputBoxWrapper","min","runAsNonRoot","SelectWrapper","idpSelection","identityProvider","accessKeys","secretKeys","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","ADURL","ADSkipTLS","ADServerInsecure","ADUserNameSearchFilter","ADGroupSearchBaseDN","ADGroupSearchFilter","ADGroupNameAttribute","ADUserDNs","ADUserNameFormat","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","shortened","gridTemplateColumns","gridGap","buttonTray","overlayAction","protocolRadioOptions","adUserDnRows","formFieldStyles","updateUserField","newUserField","updatePwordField","updateADUserField","newADUserDNsField","customIDPValidation","i","push","inputs","_","placeholder","Add","splice","RemoveIcon","getRandomString","Casino","Delete","RadioGroupSelector","formFieldRow","Typography","gutterBottom","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","caCertificates","addFileToCaCertificates","deleteCaCertificate","addCaCertificate","addKeyPair","addFileToKeyPair","deleteKeyPair","minioCertificateRows","fileItem","minWidth","minioCertsContainer","minioCACertsRow","rowActions","keyPair","FileSelector","encodedValue","cert","key","AddIcon","replicas","encryption","enableEncryption","encryptionType","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","enableCustomCertsForKES","serverCertificate","clientCertificate","vaultCertificate","vaultCA","gemaltoCA","kesSecurityContext","addFileServerCert","addFileClientCert","addFileVaultCert","addFileVaultCa","addFileGemaltoCa","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","encryptionAvailable","encoded_key","encoded_cert","encryptionValidation","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","setModalErrorSnackMessage","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","loading","setLoading","keyValueMap","setKeyValueMap","keyValuePairs","setKeyValuePairs","keyOptions","setKeyOptions","api","then","res","k","catch","err","vl","kvp","kvs","a","indexOf","join","valid","splittedLabels","forEach","splitItem","affinityHelpText","newKey","arrCp","assign","v","setErrorSnackMessage","wrapText","wordWrap","deleteDialogStyles","namespace","addNamespaceOpen","closeAddNamespaceModalAndRefresh","addNamespaceLoading","setAddNamespaceLoading","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","volumeSize","tenantSize","sizeFactor","drivesPerServer","nodes","memoryNode","ecParity","ecParityChoices","cleanECChoices","resourcesSize","distribution","ecParityCalc","limitSize","cpuToUse","integrationSelection","table","usableInformation","storageFactors","find","erasureCode","Divider","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","driveSize","sizeUnit","maxAllocatableResources","maxCPUsUse","maxMemorySize","resourcesSpecifyLimit","resourcesCPURequestError","resourcesCPURequest","resourcesCPULimitError","resourcesCPULimit","resourcesMemoryRequestError","resourcesMemoryRequest","resourcesMemoryLimitError","resourcesMemoryLimit","compositeFieldContainer","compositeAddOn","memoryExists","cpuExists","maxMemory","mem_priority","max_allocatable_mem","cpu_priority","max_allocatable_cpu","maxAllocatableCPU","baseCpuUse","max","baseMemoryUse","isNaN","validity","log","errorFlag","setErrorFlag","nodeError","setNodeError","ecCodeValidated","erasureCodeCalc","includes","defaultEC","factor","getBytes","clusterCapacity","unit","distrCalculate","calculateDistribution","parsedSize","commonValidation","trim","ecList","ecListTransform","k8sfactorForDropdown","selectedStorageType","formToRender","updateMainField","undefined","setConfigs","mkPanelConfigurations","mainSelection","resourcesConfigurations","aws","azure","gcp","variantSelectorLabel","variantSelectorValues","configurations","sizingComponent","default","tenantName","setStorageClassesList","setLimitSize","sizePreview","emptyNamespace","setEmptyNamespace","loadingNamespaceInfo","setLoadingNamespaceInfo","showCreateButton","setShowCreateButton","openAddNSConfirm","setOpenAddNSConfirm","getNamespaceInformation","tenantsList","elements","getLimitSizes","newStorage","stExists","findIndex","detailedError","debounceNamespace","useMemo","debounce","cancel","customNamespaceError","isValid","frmValidationCleanup","refresh","sx","overlayIcon","features","session","formRender","setFormRender","setConfiguration","validPages","resetAddTenantForm","pageBox","settingsCommon","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","addSending","setAddSending","consoleCaCertificates","consoleCertificate","affinityType","kesReplicas","poolName","generatePoolName","affinityObject","getDefaultAffinity","getNodeSelector","dataSend","access_keys","secret_keys","enable_tls","enable_console","enable_prometheus","service_name","image","expose_minio","expose_console","pools","servers","volumes_per_server","volume_configuration","storage_class_name","securityContext","erasureCodingParity","resources","requests","cpu","limits","image_registry","registry","username","password","logSearchConfiguration","storageSize","postgres_image","postgres_init_image","postgres_securityContext","prometheusConfiguration","sidecar_image","init_image","tenantCerts","consoleCerts","caCerts","consoleCaCerts","ca_certificates","console_ca_certificates","minio","crt","tls","insertEncrypt","gemaltoCAIntroduce","ca","gemalto","keysecure","endpoint","credentials","token","domain","retry","secretsmanager","region","kmskey","accesskey","secretkey","keyvault","tenant_id","client_id","client_secret","secretmanager","project_id","client_email","private_key_id","private_key","vaultKeyPair","vaultCAInsert","vaultTLS","vault","engine","prefix","approle","secret","status","ping","encryptionServerKeyPair","encryptionClientKeyPair","client","server","dataIDP","keyarray","oidc","configuration_url","secret_id","claim_name","callback_url","scopes","active_directory","url","skip_tls_verification","server_insecure","username_format","username_search_filter","group_search_base_dn","group_search_filter","group_name_attribute","user_dns","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","server_start_tls","consoleSAList","newSrvAcc","consoleItem","consoleKey","cancelButton","history","createButton","every","filteredWizardSteps","advancedOnly","CredentialsPrompt","PageHeader","BackLink","PageLayout","GenericWizard","resourceQuotas","quotas","returnQuotas","rsQuota","stCName","hard","used","tenantIsOnline","tenant","currentState","health_status","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","labelSelector","matchExpressions","operator","values","topologyKey","labels","splitKeyValue","nodeSelector","nodeAffinity","nodeSelectorTerms","def","pageName","ADD_TENANT_UPDATE_FIELD","ADD_TENANT_SET_PAGE_VALID","ADD_TENANT_SET_STORAGE_CLASSES_LIST","ADD_TENANT_SET_LIMIT_SIZE","ADD_TENANT_ADD_CA_KEYPAIR","ADD_TENANT_DELETE_CA_KEYPAIR","ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR","ADD_TENANT_ADD_MINIO_KEYPAIR","ADD_TENANT_DELETE_MINIO_KEYPAIR","ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR","ADD_TENANT_ENCRYPTION_SERVER_CERT","ADD_TENANT_ENCRYPTION_CLIENT_CERT","ADD_TENANT_ENCRYPTION_VAULT_CERT","ADD_TENANT_ENCRYPTION_VAULT_CA","ADD_TENANT_ENCRYPTION_GEMALTO_CA","ADD_TENANT_RESET_FORM","setTenantDetailsLoad","TENANT_DETAILS_SET_LOADING","setTenantName","tenantNamespace","TENANT_DETAILS_SET_CURRENT_TENANT","setTenantInfo","TENANT_DETAILS_SET_TENANT","setTenantTab","tab","TENANT_DETAILS_SET_TAB","errorBlock","withBreak"],"sourceRoot":""}