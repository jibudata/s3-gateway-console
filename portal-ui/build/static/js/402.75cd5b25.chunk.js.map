{"version":3,"file":"static/js/402.75cd5b25.chunk.js","mappings":"qOAyGA,UAxE8B,SAAHA,GAKG,IAJ5BC,EAA8BD,EAA9BC,+BACAC,EAASF,EAATE,UACAC,EAAcH,EAAdG,eAAcC,EAAAJ,EACdK,eAAAA,OAAc,IAAAD,EAAG,CAAC,EAACA,EAEbE,EAAgD,YAA1BD,EAAeE,OAErCC,GAAWC,EAAAA,EAAAA,MACjBC,GAAkDC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnEI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAsB9C,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,uBACLC,YAAab,EAAsB,UAAY,SAC/Cc,OAAQlB,EACRmB,UAAWP,EACXQ,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,IAAgB,IAC5BC,UA3BqB,WACnBV,IAGJC,GAAqB,GAErBU,EAAAA,EAAIC,QACDC,oBAAoBxB,EAAgB,CACnCyB,YAAatB,IAEduB,MAAK,WACJd,GAAqB,GACrBd,GAA+B,EACjC,IACC6B,OAAM,SAACC,GACNhB,GAAqB,GACrBP,GAASwB,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAIG,QACnD,IACJ,EAUIC,mBAAoB,CAClBC,QAAS,cAEXC,QAAS,WACPpC,GAA+B,EACjC,EACAqC,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,IAAG,CAACC,GAAG,2BAA0BC,SAAA,CAAC,2BACR,KACzB1B,EAAAA,EAAAA,KAAA,UAAA0B,SAASpC,EAAsB,UAAY,WAAmB,IAAI,8BAEjEA,IACCiC,EAAAA,EAAAA,MAACI,EAAAA,SAAQ,CAAAD,SAAA,EACP1B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAA0B,SAAQ,sDAGZ1B,EAAAA,EAAAA,KAACwB,EAAAA,IAAG,CACFI,GAAI,CACFC,WAAY,QACZH,SAEDpC,GACCU,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAACC,gBAAiB1C,IAC/B,WAMhB,C","sources":["screens/Console/Buckets/BucketDetails/EnableVersioningModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box, ConfirmModalIcon } from \"mds\";\nimport { BucketVersioningResponse } from \"api/consoleApi\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport VersioningInfo from \"../VersioningInfo\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IVersioningEventProps {\n  closeVersioningModalAndRefresh: (refresh: boolean) => void;\n  modalOpen: boolean;\n  selectedBucket: string;\n  versioningInfo: BucketVersioningResponse | undefined;\n}\n\nconst EnableVersioningModal = ({\n  closeVersioningModalAndRefresh,\n  modalOpen,\n  selectedBucket,\n  versioningInfo = {},\n}: IVersioningEventProps) => {\n  const isVersioningEnabled = versioningInfo.status === \"Enabled\";\n\n  const dispatch = useAppDispatch();\n  const [versioningLoading, setVersioningLoading] = useState<boolean>(false);\n\n  const enableVersioning = () => {\n    if (versioningLoading) {\n      return;\n    }\n    setVersioningLoading(true);\n\n    api.buckets\n      .setBucketVersioning(selectedBucket, {\n        versioning: !isVersioningEnabled,\n      })\n      .then(() => {\n        setVersioningLoading(false);\n        closeVersioningModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setVersioningLoading(false);\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Versioning on Bucket`}\n      confirmText={isVersioningEnabled ? \"Suspend\" : \"Enable\"}\n      isOpen={modalOpen}\n      isLoading={versioningLoading}\n      titleIcon={<ConfirmModalIcon />}\n      onConfirm={enableVersioning}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      onClose={() => {\n        closeVersioningModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <Box id=\"alert-dialog-description\">\n          Are you sure you want to{\" \"}\n          <strong>{isVersioningEnabled ? \"suspend\" : \"enable\"}</strong>{\" \"}\n          versioning for this bucket?\n          {isVersioningEnabled && (\n            <Fragment>\n              <br />\n              <br />\n              <strong>File versions won't be automatically deleted.</strong>\n            </Fragment>\n          )}\n          <Box\n            sx={{\n              paddingTop: \"20px\",\n            }}\n          >\n            {isVersioningEnabled ? (\n              <VersioningInfo versioningState={versioningInfo} />\n            ) : null}\n          </Box>\n        </Box>\n      }\n    />\n  );\n};\n\nexport default EnableVersioningModal;\n"],"names":["_ref","closeVersioningModalAndRefresh","modalOpen","selectedBucket","_ref$versioningInfo","versioningInfo","isVersioningEnabled","status","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","versioningLoading","setVersioningLoading","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","titleIcon","ConfirmModalIcon","onConfirm","api","buckets","setBucketVersioning","versioning","then","catch","err","setErrorSnackMessage","errorToHandler","error","confirmButtonProps","variant","onClose","confirmationContent","_jsxs","Box","id","children","Fragment","sx","paddingTop","VersioningInfo","versioningState"],"sourceRoot":""}