{"version":3,"file":"static/js/738.eed2fa45.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/EventDestinations/ConfTargetGeneric.tsx","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormLabel/FormLabel.js","../node_modules/@mui/material/FormLabel/formLabelClasses.js","../node_modules/@mui/material/InputLabel/inputLabelClasses.js","../node_modules/@mui/material/InputLabel/InputLabel.js","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { AddIcon, Box, HelpIcon, InputBox, InputLabel, Tooltip } from \"mds\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange],\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBox\n        key={`csv-multi-${name}-${index.toString()}`}\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <Fragment>\n      <Box sx={{ display: \"flex\" }} className={\"inputItem\"}>\n        <InputLabel\n          sx={{\n            alignItems: \"flex-start\",\n          }}\n        >\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <Box className={tooltip}>\n                  <HelpIcon />\n                </Box>\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            width: \"100%\",\n            overflowY: \"auto\",\n            height: 150,\n            position: \"relative\",\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Box>\n    </Fragment>\n  );\n};\nexport default CSVMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n  actionButton?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n  actionButton,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          className={`${classes.predefinedList} ${\n            actionButton ? classes.includesActionButton : \"\"\n          }`}\n        >\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n          {actionButton && (\n            <div className={classes.overlayShareOption}>{actionButton}</div>\n          )}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, IOverrideEnv, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { ConsoleIcon, InputBox, Switch, Tooltip } from \"mds\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  overrideEnv?: IOverrideEnv;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[],\n) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  overrideEnv,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    value = value.trim();\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    const holderItem = valueHolder[item];\n\n    if (holderItem) {\n      // Override Value with env var, we display generic string component\n      const override = overrideEnv?.[`${holderItem.key}`];\n\n      if (override) {\n        return (\n          <PredefinedList\n            label={field.label}\n            content={override.value}\n            actionButton={\n              <Grid\n                item\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingRight: \"10px\",\n                }}\n              >\n                <Tooltip\n                  tooltip={`This value is set from the ${override.overrideEnv} environment variable`}\n                  placement={\"left\"}\n                >\n                  <ConsoleIcon style={{ width: 20 }} />\n                </Tooltip>\n              </Grid>\n            }\n          />\n        );\n      }\n    }\n\n    switch (field.type) {\n      case \"on|off\":\n        const value = holderItem ? holderItem.value : \"off\";\n\n        return (\n          <Switch\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={holderItem ? holderItem.value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string | string[]) => {\n              let valCh = \"\";\n\n              if (Array.isArray(value)) {\n                valCh = value.join(\",\");\n              } else {\n                valCh = value;\n              }\n\n              setValueElement(field.name, valCh, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBox\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={holderItem ? holderItem.value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, ownerState.color === 'secondary' && styles.colorSecondary, ownerState.filled && styles.filled);\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  [`&.${formLabelClasses.focused}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${formLabelClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n      children,\n      className,\n      component = 'label'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormLabel', slot);\n}\nconst formLabelClasses = generateUtilityClasses('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);\nexport default formLabelClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiInputLabel', slot);\n}\nconst inputLabelClasses = generateUtilityClasses('MuiInputLabel', ['root', 'focused', 'disabled', 'error', 'required', 'asterisk', 'formControl', 'sizeSmall', 'shrink', 'animated', 'standard', 'filled', 'outlined']);\nexport default inputLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableAnimation\", \"margin\", \"shrink\", \"variant\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport FormLabel, { formLabelClasses } from '../FormLabel';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getInputLabelUtilityClasses } from './inputLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'block',\n  transformOrigin: 'top left',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '100%'\n}, ownerState.formControl && {\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  // slight alteration to spec spacing to match visual spec result\n  transform: 'translate(0, 20px) scale(1)'\n}, ownerState.size === 'small' && {\n  // Compensation for the `Input.inputSizeSmall` style.\n  transform: 'translate(0, 17px) scale(1)'\n}, ownerState.shrink && {\n  transform: 'translate(0, -1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  maxWidth: '133%'\n}, !ownerState.disableAnimation && {\n  transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n    duration: theme.transitions.duration.shorter,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.variant === 'filled' && _extends({\n  // Chrome's autofill feature gives the input field a yellow background.\n  // Since the input field is behind the label in the HTML tree,\n  // the input field is drawn last and hides the label with an opaque background color.\n  // zIndex: 1 will raise the label above opaque background-colors of input.\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(12px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(12px, 13px) scale(1)'\n}, ownerState.shrink && _extends({\n  userSelect: 'none',\n  pointerEvents: 'auto',\n  transform: 'translate(12px, 7px) scale(0.75)',\n  maxWidth: 'calc(133% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(12px, 4px) scale(0.75)'\n})), ownerState.variant === 'outlined' && _extends({\n  // see comment above on filled.zIndex\n  zIndex: 1,\n  pointerEvents: 'none',\n  transform: 'translate(14px, 16px) scale(1)',\n  maxWidth: 'calc(100% - 24px)'\n}, ownerState.size === 'small' && {\n  transform: 'translate(14px, 9px) scale(1)'\n}, ownerState.shrink && {\n  userSelect: 'none',\n  pointerEvents: 'auto',\n  // Theoretically, we should have (8+5)*2/0.75 = 34px\n  // but it feels a better when it bleeds a bit on the left, so 32px.\n  maxWidth: 'calc(133% - 32px)',\n  transform: 'translate(14px, -9px) scale(0.75)'\n})));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n      disableAnimation = false,\n      shrink: shrinkProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, _extends({\n    \"data-shrink\": shrink,\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;","import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}"],"names":["_ref","elements","name","label","_ref$tooltip","tooltip","_ref$commonPlaceholde","commonPlaceholder","onChange","_ref$withBorder","withBorder","_useState","useState","_useState2","_slicedToArray","currentElements","setCurrentElements","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","onChangeCallback","useCallback","newString","firstUpdate","useRef","elementsString","filter","element","trim","join","onChangeElement","e","persist","updatedElement","_toConsumableArray","index","get","target","parseInt","value","inputs","map","_jsx","InputBox","id","concat","toString","placeholder","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Fragment","children","_jsxs","Box","sx","display","className","InputLabel","alignItems","marginLeft","width","Tooltip","placement","HelpIcon","withBorders","overflowY","height","position","ref","withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","paddingTop","flexWrap","textBoxContainer","flexGrow","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","_ref$disabled","disabled","_ref$index","_ref$error","error","_ref$required","required","_ref$placeholder","classes","inputProps","React","Grid","item","xs","fieldContainer","errorInField","htmlFor","tooltipContainer","title","TextField","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","predefinedList","_ref$label","content","_ref$multiLine","multiLine","actionButton","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","valueDef","key","type","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","modalBasic","fields","defaultVals","overrideEnv","valueHolder","setValueHolder","fieldsElements","defValList","values","field","setValueElement","valuesDup","fieldDefinition","holderItem","override","PredefinedList","justifyContent","paddingRight","ConsoleIcon","style","Switch","checked","CSVMultiSelector","valCh","Array","isArray","CommentBoxWrapper","container","fieldBox","FormControlContext","undefined","formControlState","props","states","muiFormControl","reduce","acc","state","useFormControl","_excluded","FormLabelRoot","styled","slot","overridesResolver","styles","ownerState","_extends","colorSecondary","filled","_ref2","_extends2","vars","palette","text","secondary","typography","body1","lineHeight","_defineProperty","formLabelClasses","focused","main","AsteriskComponent","asterisk","_ref3","FormLabel","inProps","useThemeProps","_props$component","component","other","_objectWithoutPropertiesLoose","fcs","slots","capitalize","composeClasses","getFormLabelUtilityClasses","useUtilityClasses","as","clsx","generateUtilityClass","generateUtilityClasses","getInputLabelUtilityClasses","InputLabelRoot","shouldForwardProp","prop","rootShouldForwardProp","formControl","size","sizeSmall","disableAnimation","animated","transformOrigin","whiteSpace","overflow","textOverflow","maxWidth","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","userSelect","_props$disableAnimati","shrinkProp","adornedStart","composedClasses","muiNames","indexOf","muiName"],"sourceRoot":""}