{"version":3,"file":"static/js/7295.c85034bf.chunk.js","mappings":"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","sources":["screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurationDetails.tsx","screens/Console/IDP/IDPOpenIDConfigurationDetails.tsx","screens/Console/IDP/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Grid } from \"@mui/material\";\nimport {\n  buttonsStyles,\n  containerForHeader,\n  formFieldStyles,\n  hrClass,\n  modalBasic,\n  pageContentStyles,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { RefreshIcon, TrashIcon } from \"../../../icons\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { Button } from \"mds\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport api from \"../../../common/api\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../common/BackLink\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ntype IDPConfigurationDetailsProps = {\n  classes?: any;\n  formFields: object;\n  endpoint: string;\n  backLink: string;\n  header: string;\n  idpType: string;\n  icon: React.ReactNode;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n    pageContainer: {\n      height: \"100%\",\n    },\n    screenTitle: {\n      border: 0,\n      paddingTop: 0,\n    },\n    ...pageContentStyles,\n    ...searchField,\n    capitalize: {\n      textTransform: \"capitalize\",\n    },\n    ...hrClass,\n    ...buttonsStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst IDPConfigurationDetails = ({\n  classes,\n  formFields,\n  endpoint,\n  backLink,\n  header,\n  idpType,\n  icon,\n}: IDPConfigurationDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const configurationName = params.idpName;\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isEnabled, setIsEnabled] = useState<boolean>(false);\n  const [fields, setFields] = useState<any>({});\n  const [originalFields, setOriginalFields] = useState<any>({});\n  const [record, setRecord] = useState<any>({});\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const onSuccess = (res: any) => {\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loadingSave, invokeApi] = useApi(onSuccess, onError);\n\n  const onEnabledSuccess = (res: any) => {\n    setIsEnabled(!isEnabled);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onEnabledError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n  };\n\n  const [loadingEnabledSave, invokeEnabledApi] = useApi(\n    onEnabledSuccess,\n    onEnabledError\n  );\n\n  const toggleEditMode = () => {\n    if (editMode) {\n      parseFields(record);\n    }\n    setEditMode(!editMode);\n  };\n\n  const parseFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        if (item.key === \"enable\") {\n          setIsEnabled(item.value === \"on\");\n        }\n        fields[item.key] = item.value;\n      });\n    }\n    setFields(fields);\n  };\n\n  const parseOriginalFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        fields[item.key] = item.value;\n      });\n    }\n    setOriginalFields(fields);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n\n  useEffect(() => {\n    const loadRecord = () => {\n      api\n        .invoke(\"GET\", `${endpoint}${configurationName}`)\n        .then((result: any) => {\n          if (result) {\n            setRecord(result);\n            parseFields(result);\n            parseOriginalFields(result);\n          }\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    };\n    if (loading) {\n      loadRecord();\n    }\n  }, [dispatch, loading, configurationName, endpoint]);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(formFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const resetForm = () => {\n    setFields({});\n  };\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let input = \"\";\n    for (const key of Object.keys(formFields)) {\n      if (fields[key] || fields[key] !== originalFields[key]) {\n        input += `${key}=${fields[key]} `;\n      }\n    }\n    invokeApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n    setEditMode(false);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      navigate(backLink);\n    }\n  };\n\n  const toggleConfiguration = (value: boolean) => {\n    const input = `enable=${value ? \"on\" : \"off\"}`;\n    invokeEnabledApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n  };\n\n  return (\n    <Grid item xs={12}>\n      {deleteOpen && configurationName && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={configurationName}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeader\n        label={<BackLink to={backLink} label={header} />}\n        actions={\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={isEnabled}\n            value={\"is-configuration-enabled\"}\n            id={\"is-configuration-enabled\"}\n            name={\"is-configuration-enabled\"}\n            onChange={(e) => toggleConfiguration(e.target.checked)}\n            description=\"\"\n            disabled={loadingEnabledSave}\n          />\n        }\n      />\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            classes={{\n              screenTitle: classes.screenTitle,\n            }}\n            icon={icon}\n            title={configurationName === \"_\" ? \"Default\" : configurationName}\n            actions={\n              <Fragment>\n                {configurationName !== \"_\" && (\n                  <Button\n                    id={\"delete-idp-config\"}\n                    onClick={() => {\n                      setDeleteOpen(true);\n                    }}\n                    label={\"Delete Configuration\"}\n                    icon={<TrashIcon />}\n                    variant={\"secondary\"}\n                  />\n                )}\n                <Button\n                  id={\"refresh-idp-config\"}\n                  onClick={() => setLoading(true)}\n                  label={\"Refresh\"}\n                  icon={<RefreshIcon />}\n                />\n              </Fragment>\n            }\n          />\n        </Grid>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n            <Grid xs={12} item className={classes.fieldBox}>\n              {Object.entries(formFields).map(([key, value]) => (\n                <Grid item xs={12} className={classes.formFieldRow} key={key}>\n                  <InputBoxWrapper\n                    id={key}\n                    required={value.required}\n                    name={key}\n                    label={value.label}\n                    tooltip={value.tooltip}\n                    error={value.hasError(fields[key], editMode)}\n                    value={fields[key] ? fields[key] : \"\"}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setFields({ ...fields, [key]: e.target.value })\n                    }\n                    placeholder={value.placeholder}\n                    disabled={!editMode}\n                    type={value.type}\n                  />\n                </Grid>\n              ))}\n              <Grid item xs={12} textAlign={\"right\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"edit\"}\n                    type=\"button\"\n                    variant={editMode ? \"regular\" : \"callAction\"}\n                    onClick={toggleEditMode}\n                    label={editMode ? \"Cancel\" : \"Edit\"}\n                  />\n                  {editMode && (\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n                  )}\n\n                  {editMode && (\n                    <Button\n                      id={\"save-key\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      disabled={loading || loadingSave || !validSave()}\n                      label={\"Save\"}\n                    />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(IDPConfigurationDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { LockIcon } from \"../../../icons\";\nimport { openIDFormFields } from \"./utils\";\nimport IDPConfigurationDetails from \"./IDPConfigurationDetails\";\n\ntype IDPOpenIDConfigurationDetailsProps = {\n  classes?: any;\n};\n\nconst styles = (theme: Theme) => createStyles({});\n\nconst IDPOpenIDConfigurationDetails = ({\n  classes,\n}: IDPOpenIDConfigurationDetailsProps) => {\n  return (\n    <IDPConfigurationDetails\n      backLink={IAM_PAGES.IDP_OPENID_CONFIGURATIONS}\n      header={\"OpenID Configurations\"}\n      endpoint={\"/api/v1/idp/openid/\"}\n      idpType={\"openid\"}\n      formFields={openIDFormFields}\n      icon={<LockIcon width={40} />}\n    />\n  );\n};\n\nexport default withStyles(styles)(IDPOpenIDConfigurationDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"Display Name\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"Claim Prefix\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"Scopes\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"Redirect URI\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"Role Policy\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n};\n\nexport const ldapFormFields = {\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"Base LDAP DN to search for user DN\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"Search filter to lookup user DN\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"Display Name\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"Group Search Base DN\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"Group Search Filter\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n  },\n};\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","displayName","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmButtonProps","disabled","confirmationContent","withStyles","theme","createStyles","formFieldStyles","formFieldRow","modalBasic","pageContainer","height","screenTitle","border","paddingTop","pageContentStyles","searchField","capitalize","textTransform","hrClass","buttonsStyles","containerForHeader","spacing","classes","formFields","endpoint","backLink","header","icon","navigate","useNavigate","configurationName","useParams","idpName","useState","loading","setLoading","isEnabled","setIsEnabled","fields","setFields","originalFields","setOriginalFields","record","setRecord","editMode","setEditMode","setDeleteOpen","loadingSave","invokeApi","loadingEnabledSave","invokeEnabledApi","parseFields","info","forEach","item","key","value","useEffect","api","then","result","parseOriginalFields","catch","refresh","xs","label","to","actions","indicatorLabels","checked","id","name","onChange","e","input","toggleConfiguration","target","description","className","Fragment","onClick","variant","noValidate","autoComplete","onSubmit","event","preventDefault","Object","keys","saveRecord","container","sx","marginTop","fieldBox","entries","map","required","tooltip","error","hasError","placeholder","type","textAlign","display","alignItems","justifyContent","gap","color","undefined","validSave","IAM_PAGES","openIDFormFields","width","config_url","s","client_id","client_secret","display_name","claim_name","claim_prefix","scopes","redirect_uri","role_policy","ldapFormFields","server_addr","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter"],"sourceRoot":""}