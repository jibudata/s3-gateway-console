{"version":3,"file":"static/js/9968.741ebf65.chunk.js","mappings":"+MAwEA,UA1CqB,SAAHA,GAIS,IAHzBC,EAA0BD,EAA1BC,2BACAC,EAAUF,EAAVE,WACAC,EAAcH,EAAdG,eAEMC,GAAWC,EAAAA,EAAAA,MAMjBC,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASN,GAA2B,EAAM,IACzC,SAACO,GAAyB,OAC3CJ,GAASK,EAAAA,EAAAA,IAAqBD,GAAM,IAGmCE,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlEM,EAAaF,EAAA,GAAEG,EAAeH,EAAA,GAErC,IAAKP,EACH,OAAO,KAST,OACEW,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,gBACLC,YAAa,SACbC,OAAQhB,EACRiB,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BC,UAAWT,EACXU,UAboB,WACtBT,EAAgB,SAAS,mBAADU,OAAqBpB,GAAkB,CAC7DqB,KAAMrB,GAEV,EAUIsB,QAtBY,WAAH,OAASxB,GAA2B,EAAO,EAuBpDyB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,2CAC+Bf,EAAAA,EAAAA,KAAA,KAAAe,SAAI1B,IAAmB,MAAEW,EAAAA,EAAAA,KAAA,SAAM,kDAMhF,C","sources":["screens/Console/Buckets/ListBuckets/DeleteBucket.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteBucketProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedBucket: string;\n}\n\nconst DeleteBucket = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n}: IDeleteBucketProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedBucket) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/buckets/${selectedBucket}`, {\n      name: selectedBucket,\n    });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Bucket`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete bucket <b>{selectedBucket}</b>? <br />\n          A bucket can only be deleted if it's empty.\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucket;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedBucket","dispatch","useAppDispatch","_useApi","useApi","err","setErrorSnackMessage","_useApi2","_slicedToArray","deleteLoading","invokeDeleteApi","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","concat","name","onClose","confirmationContent","_jsxs","Fragment","children"],"sourceRoot":""}