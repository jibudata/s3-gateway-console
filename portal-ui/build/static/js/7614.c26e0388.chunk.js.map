{"version":3,"file":"static/js/7614.c26e0388.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/IDP/AddIDPConfigurationHelpbox.tsx","screens/Console/IDP/AddIDPConfiguration.tsx","screens/Console/IDP/AddIDPOpenIDConfiguration.tsx","screens/Console/IDP/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React, { Fragment } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IContent {\n  icon: React.ReactNode;\n  text: string;\n  iconDescription: string;\n}\n\ninterface IAddIDPConfigurationHelpBoxProps {\n  helpText: string;\n  docLink: string;\n  docText: string;\n  contents: IContent[];\n}\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\n\nconst AddIDPConfigurationHelpBox = ({\n  helpText,\n  docLink,\n  docText,\n  contents,\n}: IAddIDPConfigurationHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content, index) => (\n          <Fragment key={`feature-item-${index}`}>\n            {content.icon && (\n              <Box sx={{ paddingBottom: \"20px\" }}>\n                <FeatureItem\n                  icon={content.icon}\n                  description={content.iconDescription}\n                />\n              </Box>\n            )}\n            <Box sx={{ paddingBottom: \"20px\" }}>{content.text}</Box>\n          </Fragment>\n        ))}\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <a href={docLink} target=\"_blank\" rel=\"noopener\">\n            {docText}\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddIDPConfigurationHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Grid } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { BackLink, Button, PageLayout } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport SectionTitle from \"../Common/SectionTitle\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\ntype AddIDPConfigurationProps = {\n  classes?: any;\n  icon: React.ReactNode;\n  helpBox: React.ReactNode;\n  header: string;\n  title: string;\n  backLink: string;\n  formFields: object;\n  endpoint: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddIDPConfiguration = ({\n  classes,\n  icon,\n  helpBox,\n  header,\n  backLink,\n  title,\n  formFields,\n  endpoint,\n}: AddIDPConfigurationProps) => {\n  const extraFormFields = {\n    name: {\n      required: true,\n      hasError: (s: string, editMode: boolean) => {\n        return !s && editMode ? \"Config Name is required\" : \"\";\n      },\n      label: \"Name\",\n      tooltip: \"Name for identity provider configuration\",\n      placeholder: \"Name\",\n      type: \"text\",\n    },\n    ...formFields,\n  };\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const [fields, setFields] = useState<any>({});\n\n  const onSuccess = (res: any) => {\n    navigate(backLink);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(extraFormFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const resetForm = () => {\n    setFields({});\n  };\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    const name = fields[\"name\"];\n    let input = \"\";\n    for (const key of Object.keys(formFields)) {\n      if (fields[key]) {\n        input += `${key}=${fields[key]} `;\n      }\n    }\n    invokeApi(\"POST\", endpoint, { name, input });\n  };\n\n  const renderFormField = (key: string, value: any) => {\n    switch (value.type) {\n      case \"toggle\":\n        return (\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={fields[key] === \"on\" ? true : false}\n            value={\"is-field-enabled\"}\n            id={\"is-field-enabled\"}\n            name={\"is-field-enabled\"}\n            label={value.label}\n            tooltip={value.tooltip}\n            onChange={(e) =>\n              setFields({ ...fields, [key]: e.target.checked ? \"on\" : \"off\" })\n            }\n            description=\"\"\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={key}\n            required={value.required}\n            name={key}\n            label={value.label}\n            tooltip={value.tooltip}\n            error={value.hasError(fields[key], true)}\n            value={fields[key] ? fields[key] : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setFields({ ...fields, [key]: e.target.value })\n            }\n            placeholder={value.placeholder}\n            type={value.type}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <PageHeaderWrapper\n        label={<BackLink onClick={() => navigate(backLink)} label={header} />}\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: {\n              md: \"2fr 1.2fr\",\n              xs: \"1fr\",\n            },\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle icon={icon}>{title}</SectionTitle>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                addRecord(e);\n              }}\n            >\n              <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n                <Grid xs={12} item>\n                  {Object.entries(extraFormFields).map(([key, value]) => (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.formFieldRow}\n                      key={key}\n                    >\n                      {renderFormField(key, value)}\n                    </Grid>\n                  ))}\n                  <Grid item xs={12} textAlign={\"right\"}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-end\",\n                        marginTop: \"20px\",\n                        gap: \"15px\",\n                      }}\n                    >\n                      <Button\n                        id={\"clear\"}\n                        type=\"button\"\n                        variant=\"regular\"\n                        onClick={resetForm}\n                        label={\"Clear\"}\n                      />\n\n                      <Button\n                        id={\"save-key\"}\n                        type=\"submit\"\n                        variant=\"callAction\"\n                        color=\"primary\"\n                        disabled={loading || !validSave()}\n                        label={\"Save\"}\n                      />\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          </Box>\n          {helpBox}\n        </Box>\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(AddIDPConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { LockIcon } from \"mds\";\nimport AddIDPConfiguration from \"./AddIDPConfiguration\";\nimport { openIDFormFields, openIDHelpBoxContents } from \"./utils\";\nimport AddIDPConfigurationHelpBox from \"./AddIDPConfigurationHelpbox\";\n\nconst AddIDPOpenIDConfiguration = () => {\n  return (\n    <AddIDPConfiguration\n      icon={<LockIcon />}\n      helpBox={\n        <AddIDPConfigurationHelpBox\n          helpText={\"Learn more about OpenID Connect Configurations\"}\n          contents={openIDHelpBoxContents}\n          docLink={\n            \"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-oidc\"\n          }\n          docText={\"Learn more about OpenID Connect Configurations\"}\n        />\n      }\n      header={\"OpenID Configurations\"}\n      backLink={IAM_PAGES.IDP_OPENID_CONFIGURATIONS}\n      title={\"Create OpenID Configuration\"}\n      endpoint={\"/api/v1/idp/openid/\"}\n      formFields={openIDFormFields}\n    />\n  );\n};\n\nexport default AddIDPOpenIDConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { LockIcon } from \"mds\";\n\nexport const ldapHelpBoxContents = [\n  {\n    text: \"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: <LoginIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries\",\n    icon: null,\n    iconDescription: \"\",\n  },\n  {\n    text: \"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDHelpBoxContents = [\n  {\n    text: \"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.\",\n    icon: <LockIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_userinfo: {\n    required: false,\n    label: \"Claim User Info\",\n    tooltip: \"\",\n    placeholder: \"Claim User Info\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri_dynamic: {\n    required: false,\n    label: \"Redirect URI Dynamic\",\n    tooltip: \"\",\n    placeholder: \"Redirect URI Dynamic\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n};\n\nexport const ldapFormFields = {\n  server_insecure: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Insecure\",\n    tooltip: \"disable SSL certificate verification \",\n    placeholder: \"myldapserver.com:636\",\n    type: \"toggle\",\n  },\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n  },\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref","_ref$label","label","onChange","value","id","name","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","_jsxs","React","children","_jsx","className","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","type","_ref$autoComplete","autoComplete","_ref$multiline","multiline","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","concat","IconButton","onClick","size","FeatureItem","icon","Box","sx","marginRight","marginBottom","style","fontStyle","_ref2","helpText","docLink","docText","contents","flex","flexFlow","paddingBottom","HelpIconFilled","map","content","Fragment","iconDescription","text","href","target","rel","formFieldStyles","modalBasic","helpBox","header","backLink","formFields","endpoint","extraFormFields","hasError","s","editMode","navigate","useNavigate","dispatch","useAppDispatch","fields","setFields","_useApi","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","_useApi2","loading","invokeApi","renderFormField","key","FormSwitchWrapper","e","InputBoxWrapper","PageHeaderWrapper","BackLink","PageLayout","gap","gridTemplateColumns","SectionTitle","noValidate","onSubmit","event","preventDefault","input","_i2","_Object$keys","Object","keys","addRecord","spacing","entries","_ref3","formFieldRow","Button","variant","_i","_Object$entries","_Object$entries$_i","undefined","validSave","AddIDPConfiguration","LockIcon","AddIDPConfigurationHelpBox","openIDHelpBoxContents","IAM_PAGES","IDP_OPENID_CONFIGURATIONS","openIDFormFields","ldapHelpBoxContents","LoginIcon","config_url","client_id","client_secret","claim_name","display_name","claim_prefix","scopes","redirect_uri","role_policy","claim_userinfo","redirect_uri_dynamic","ldapFormFields","server_insecure","server_addr","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter"],"sourceRoot":""}