{"version":3,"file":"static/js/3990.5e998248.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|/Users/dvaldivia/go/src/github.com/minio/console/portal-ui/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","componentWillMount","state","this","constructor","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","instance","Constructor","TypeError","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","assertThisInitialized","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","writable","configurable","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","position","top","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","_slicedToArray","arr","_i","_s","_e","_arr","_n","_d","next","done","err","unsupportedIterableToArray","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}