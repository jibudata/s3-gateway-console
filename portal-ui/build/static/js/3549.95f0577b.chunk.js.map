{"version":3,"file":"static/js/3549.95f0577b.chunk.js","mappings":"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","sources":["screens/Console/Account/AddServiceAccountHelpBox.tsx","screens/Console/Account/AddServiceAccountScreen.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport {\n  HelpIconFilled,\n  IAMPoliciesIcon,\n  PasswordKeyIcon,\n  ServiceAccountIcon,\n} from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst AddServiceAccountHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about Access Keys</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<ServiceAccountIcon />}\n            description={`Create Access Keys`}\n          />\n          <Box sx={{ paddingTop: \"20px\" }}>\n            Access Keys inherit the policies explicitly attached to the parent\n            user, and the policies attached to each group in which the parent\n            user has membership.\n          </Box>\n        </Box>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<PasswordKeyIcon />}\n            description={`Assign Custom Credentials`}\n          />\n          <Box sx={{ paddingTop: \"10px\" }}>\n            Randomized access credentials are recommended, and provided by\n            default. You may use your own custom Access Key and Secret Key by\n            replacing the default values. After creation of any Access Key, you\n            will be given the opportunity to view and download the account\n            credentials.\n          </Box>\n          <Box sx={{ paddingTop: \"10px\" }}>\n            Access Keys support programmatic access by applications. You cannot\n            use a Access Key to log into the MinIO Console.\n          </Box>\n        </Box>\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <FeatureItem\n            icon={<IAMPoliciesIcon />}\n            description={`Assign Access Policies`}\n          />\n          <Box sx={{ paddingTop: \"10px\" }}>\n            You can specify an optional JSON-formatted IAM policy to further\n            restrict Access Key access to a subset of the actions and resources\n            explicitly allowed for the parent user. Additional access beyond\n            that of the parent user cannot be implemented through these\n            policies.\n          </Box>\n          <Box sx={{ paddingTop: \"10px\" }}>\n            You cannot modify the optional Access Key IAM policy after saving.\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      ></Box>\n    </Box>\n  );\n};\n\nexport default AddServiceAccountHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Button,\n  IAMPoliciesIcon,\n  PasswordKeyIcon,\n  ServiceAccountCredentialsIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box } from \"@mui/material\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport AddServiceAccountHelpBox from \"./AddServiceAccountHelpBox\";\n\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../../src/common/types\";\nimport api from \"../../../../src/common/api\";\nimport CredentialsPrompt from \"../Common/CredentialsPrompt/CredentialsPrompt\";\n\nimport SectionTitle from \"../Common/SectionTitle\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\n\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { getRandomString } from \"../../../common/utils\";\n\ninterface IAddServiceAccountProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddServiceAccount = ({ classes }: IAddServiceAccountProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(getRandomString(16));\n  const [secretKey, setSecretKey] = useState<string>(getRandomString(32));\n  const [isRestrictedByPolicy, setIsRestrictedByPolicy] =\n    useState<boolean>(false);\n  const [newServiceAccount, setNewServiceAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [policyJSON, setPolicyJSON] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (addSending) {\n      api\n        .invoke(\"POST\", `/api/v1/service-account-credentials`, {\n          policy: policyJSON,\n          accessKey: accessKey,\n          secretKey: secretKey,\n        })\n        .then((res) => {\n          setAddSending(false);\n          setNewServiceAccount({\n            accessKey: res.accessKey || \"\",\n            secretKey: res.secretKey || \"\",\n            url: res.url || \"\",\n          });\n        })\n\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [addSending, setAddSending, dispatch, policyJSON, accessKey, secretKey]);\n\n  useEffect(() => {\n    if (isRestrictedByPolicy) {\n      api.invoke(\"GET\", `/api/v1/user/policy`).then((res: string) => {\n        setPolicyJSON(JSON.stringify(JSON.parse(res), null, 4));\n      });\n    }\n  }, [isRestrictedByPolicy]);\n\n  const addServiceAccount = (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddSending(true);\n  };\n\n  const resetForm = () => {\n    setPolicyJSON(\"\");\n    setNewServiceAccount(null);\n    setAccessKey(\"\");\n    setSecretKey(\"\");\n    setShowPassword(false);\n  };\n\n  const closeCredentialsModal = () => {\n    setNewServiceAccount(null);\n    navigate(`${IAM_PAGES.ACCOUNT}`);\n  };\n\n  return (\n    <Fragment>\n      {newServiceAccount !== null && (\n        <CredentialsPrompt\n          newServiceAccount={newServiceAccount}\n          open={newServiceAccount !== null}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Access Key\"\n        />\n      )}\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              label={\"Access Keys\"}\n              onClick={() => navigate(IAM_PAGES.ACCOUNT)}\n            />\n          }\n        />\n        <PageLayout>\n          <Box\n            sx={{\n              display: \"grid\",\n              padding: \"25px\",\n              gap: \"25px\",\n              gridTemplateColumns: {\n                md: \"2fr 1.2fr\",\n                xs: \"1fr\",\n              },\n              border: \"1px solid #eaeaea\",\n            }}\n          >\n            <Box>\n              <SectionTitle icon={<ServiceAccountCredentialsIcon />}>\n                Create Access Key\n              </SectionTitle>\n\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  addServiceAccount(e);\n                }}\n              >\n                <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n                  <Grid item xs={12}>\n                    <Grid container item spacing=\"20\">\n                      <Grid item xs={12}>\n                        <Grid container>\n                          <Grid item xs={1}>\n                            <PasswordKeyIcon />\n                          </Grid>\n                          <Grid item>\n                            <Grid container item spacing=\"20\">\n                              <Grid item xs={12}>\n                                {\" \"}\n                                <div className={classes.stackedInputs}>\n                                  <InputBoxWrapper\n                                    value={accessKey}\n                                    label={\"Access Key\"}\n                                    id={\"accessKey\"}\n                                    name={\"accessKey\"}\n                                    placeholder={\"Enter Access Key\"}\n                                    onChange={(e) => {\n                                      setAccessKey(e.target.value);\n                                    }}\n                                  />\n                                </div>\n                              </Grid>\n                              <Grid item xs={12}>\n                                <div className={classes.stackedInputs}>\n                                  <InputBoxWrapper\n                                    value={secretKey}\n                                    label={\"Secret Key\"}\n                                    id={\"secretKey\"}\n                                    name={\"secretKey\"}\n                                    type={showPassword ? \"text\" : \"password\"}\n                                    placeholder={\"Enter Secret Key\"}\n                                    onChange={(e) => {\n                                      setSecretKey(e.target.value);\n                                    }}\n                                    overlayIcon={\n                                      showPassword ? (\n                                        <VisibilityOffIcon />\n                                      ) : (\n                                        <RemoveRedEyeIcon />\n                                      )\n                                    }\n                                    overlayAction={() =>\n                                      setShowPassword(!showPassword)\n                                    }\n                                  />\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container item spacing=\"20\">\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={1}>\n                          <IAMPoliciesIcon />\n                        </Grid>\n                        <Grid item xs={11}>\n                          <FormSwitchWrapper\n                            value=\"serviceAccountPolicy\"\n                            id=\"serviceAccountPolicy\"\n                            name=\"serviceAccountPolicy\"\n                            checked={isRestrictedByPolicy}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setIsRestrictedByPolicy(event.target.checked);\n                            }}\n                            label={\"Restrict beyond user policy\"}\n                            tooltip={\n                              \"You can specify an optional JSON-formatted IAM policy to further restrict Access Key access to a subset of the actions and resources explicitly allowed for the parent user. Additional access beyond that of the parent user cannot be implemented through these policies.\"\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {isRestrictedByPolicy && (\n                      <Grid\n                        item\n                        xs={12}\n                        className={classes.codeMirrorContainer}\n                      >\n                        <div>\n                          <PanelTitle>\n                            Current User Policy - edit the JSON to remove\n                            permissions for this Access Key\n                          </PanelTitle>\n                        </div>\n                        <Grid item xs={12} className={classes.formScrollable}>\n                          <CodeMirrorWrapper\n                            value={policyJSON}\n                            onBeforeChange={(editor, data, value) => {\n                              setPolicyJSON(value);\n                            }}\n                            editorHeight={\"350px\"}\n                          />\n                        </Grid>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs={12} className={classes.modalButtonBar}>\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n\n                    <Button\n                      id={\"create-sa\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      label={\"Create\"}\n                    />\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n            <AddServiceAccountHelpBox />\n          </Box>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddServiceAccount);\n"],"names":["FeatureItem","icon","description","Box","sx","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","flex","border","borderRadius","flexFlow","padding","marginTop","xs","fontWeight","alignItems","paddingBottom","paddingTop","withStyles","theme","createStyles","formFieldStyles","modalStyleUtils","classes","dispatch","useAppDispatch","navigate","useNavigate","useState","addSending","setAddSending","getRandomString","accessKey","setAccessKey","secretKey","setSecretKey","isRestrictedByPolicy","setIsRestrictedByPolicy","newServiceAccount","setNewServiceAccount","showPassword","setShowPassword","policyJSON","setPolicyJSON","useEffect","api","policy","then","res","url","catch","err","setErrorSnackMessage","JSON","stringify","parse","Fragment","CredentialsPrompt","open","closeModal","IAM_PAGES","entity","Grid","item","PageHeaderWrapper","label","onClick","PageLayout","gap","gridTemplateColumns","md","SectionTitle","noValidate","autoComplete","onSubmit","e","preventDefault","addServiceAccount","container","spacing","className","stackedInputs","InputBoxWrapper","value","id","name","placeholder","onChange","target","type","overlayIcon","VisibilityOff","RemoveRedEye","overlayAction","FormSwitchWrapper","checked","event","tooltip","codeMirrorContainer","PanelTitle","formScrollable","CodeMirrorWrapper","onBeforeChange","editor","data","editorHeight","modalButtonBar","variant"],"sourceRoot":""}