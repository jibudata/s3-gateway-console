{"version":3,"file":"static/js/9709.2b6cbcc6.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/KMS/ListKeys.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  overrideLabelClasses?: string;\n  overrideCheckboxStyles?: React.CSSProperties;\n  index?: number;\n  noTopMargin?: boolean;\n  checked: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n      flexWrap: \"nowrap\",\n    },\n    noTopMargin: {\n      marginTop: 0,\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  noTopMargin = false,\n  tooltip = \"\",\n  overrideLabelClasses = \"\",\n  overrideCheckboxStyles,\n  classes,\n  className,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          noTopMargin ? classes.noTopMargin : \"\"\n        } ${className ? className : \"\"}`}\n      >\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n            disableRipple\n            disableFocusRipple\n            focusRipple={false}\n            centerRipple={false}\n            disableTouchRipple\n            style={overrideCheckboxStyles || {}}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\n          >\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React, { SVGProps } from \"react\";\n\nconst FormatDriveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={`min-icon`}\n    fill={\"currentcolor\"}\n    {...props}\n  >\n    <path d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"></path>\n  </svg>\n);\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport {\n  DownloadIcon,\n  EditIcon,\n  IAMPoliciesIcon,\n  PreviewIcon,\n  ShareIcon,\n  TrashIcon,\n} from \"mds\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | React.ReactNode;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n      sx={{\n        width: \"30px\",\n        height: \"30px\",\n      }}\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport {\n  checkboxIcons,\n  radioIcons,\n  TableRowPredefStyles,\n} from \"../FormComponents/common/styleLibrary\";\nimport { Loader, ProgressBar } from \"mds\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n  rowStyle?: ({\n    index,\n  }: {\n    index: number;\n  }) => \"deleted\" | \"\" | React.CSSProperties;\n  parentClassName?: string;\n  tooltip?: any;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"0 16px 8px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 0,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          fontWeight: 600,\n        },\n        \"&:not(.deleted) .selected\": {\n          color: \"#081C42\",\n        },\n        \"&.deleted .selected\": {\n          color: \"#C51B3F\",\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__row\": {\n        width: \"100% !important\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean,\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[],\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!),\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined,\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown,\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      // @ts-ignore\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField],\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string,\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <Loader\n              style={{ width: 18, height: 18 }}\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n  rowStyle,\n  parentClassName = \"\",\n  tooltip,\n}: TableWrapperProps) => {\n  const navigate = useNavigate();\n\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        navigate(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12} className={parentClassName}>\n      <TooltipWrapper tooltip={tooltip ? tooltip : \"\"}>\n        <Paper\n          style={{ overflow: \"hidden\" }}\n          className={`${classes.paper} ${\n            noBackground ? classes.noBackground : \"\"\n          }\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n        >\n          {isLoading && (\n            <Grid container className={classes.loadingBox}>\n              <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                {loadingMessage}\n              </Grid>\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            </Grid>\n          )}\n          {columnsSelector && !isLoading && records.length > 0 && (\n            <div className={classes.overlayColumnSelection}>\n              {columnsSelection(columns)}\n            </div>\n          )}\n          {records && !isLoading && records.length > 0 ? (\n            // @ts-ignore\n            <InfiniteLoader\n              isRowLoaded={({ index }) => !!records[index]}\n              loadMoreRows={\n                infiniteScrollConfig\n                  ? infiniteScrollConfig.loadMoreRecords\n                  : () => new Promise(() => true)\n              }\n              rowCount={\n                infiniteScrollConfig\n                  ? infiniteScrollConfig.recordsCount\n                  : records.length\n              }\n            >\n              {({ onRowsRendered, registerChild }) => (\n                // @ts-ignore\n                <AutoSizer>\n                  {({ width, height }: any) => {\n                    const optionsWidth = calculateOptionsSize(\n                      width,\n                      itemActions\n                        ? itemActions.filter((el) => el.type !== \"view\").length\n                        : 0,\n                    );\n                    const hasSelect: boolean = !!(onSelect && selectedItems);\n                    const hasOptions: boolean = !!(\n                      (itemActions && itemActions.length > 1) ||\n                      (itemActions &&\n                        itemActions.length === 1 &&\n                        itemActions[0].type !== \"view\")\n                    );\n                    return (\n                      // @ts-ignore\n                      <Table\n                        ref={registerChild}\n                        disableHeader={false}\n                        headerClassName={\"headerItem\"}\n                        headerHeight={40}\n                        height={height + 8}\n                        noRowsRenderer={() => (\n                          <Fragment>\n                            {customEmptyMessage !== \"\"\n                              ? customEmptyMessage\n                              : `There are no ${entityName} yet.`}\n                          </Fragment>\n                        )}\n                        overscanRowCount={10}\n                        rowHeight={40}\n                        width={width}\n                        rowCount={records.length}\n                        rowGetter={({ index }) => records[index]}\n                        onRowClick={({ rowData }) => {\n                          clickAction(rowData);\n                        }}\n                        rowClassName={(r) =>\n                          `rowLine ${findView ? \"canClick\" : \"\"} ${\n                            !findView && textSelectable ? \"canSelectText\" : \"\"\n                          } ${rowStyle ? rowStyle(r) : \"\"}`\n                        }\n                        onRowsRendered={onRowsRendered}\n                        sort={sortConfig ? sortConfig.triggerSort : undefined}\n                        sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                        sortDirection={\n                          sortConfig ? sortConfig.currentDirection : undefined\n                        }\n                        scrollToIndex={\n                          autoScrollToBottom ? records.length - 1 : -1\n                        }\n                        rowStyle={(r) => {\n                          if (rowStyle) {\n                            const returnElement = rowStyle(r);\n\n                            if (typeof returnElement === \"string\") {\n                              return get(\n                                TableRowPredefStyles,\n                                returnElement,\n                                {},\n                              );\n                            }\n\n                            return returnElement;\n                          }\n\n                          return {};\n                        }}\n                      >\n                        {hasSelect && (\n                          // @ts-ignore\n                          <Column\n                            headerRenderer={() => (\n                              <Fragment>\n                                {onSelectAll ? (\n                                  <div className={classes.checkAllWrapper}>\n                                    <CheckboxWrapper\n                                      label={\"\"}\n                                      onChange={onSelectAll}\n                                      value=\"all\"\n                                      id={\"selectAll\"}\n                                      name={\"selectAll\"}\n                                      checked={\n                                        selectedItems?.length === records.length\n                                      }\n                                    />\n                                  </div>\n                                ) : (\n                                  <Fragment>Select</Fragment>\n                                )}\n                              </Fragment>\n                            )}\n                            dataKey={`select-${idField}`}\n                            width={selectWidth}\n                            disableSort\n                            cellRenderer={({ rowData }) => {\n                              const isSelected = selectedItems\n                                ? selectedItems.includes(\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField],\n                                  )\n                                : false;\n\n                              return (\n                                <Checkbox\n                                  value={\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField]\n                                  }\n                                  color=\"primary\"\n                                  inputProps={{\n                                    \"aria-label\": \"secondary checkbox\",\n                                  }}\n                                  className=\"TableCheckbox\"\n                                  checked={isSelected}\n                                  onChange={onSelect}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                  }}\n                                  checkedIcon={\n                                    <span\n                                      className={\n                                        radioSelection\n                                          ? classes.radioSelectedIcon\n                                          : classes.checkedIcon\n                                      }\n                                    />\n                                  }\n                                  icon={\n                                    <span\n                                      className={\n                                        radioSelection\n                                          ? classes.radioUnselectedIcon\n                                          : classes.unCheckedIcon\n                                      }\n                                    />\n                                  }\n                                />\n                              );\n                            }}\n                          />\n                        )}\n                        {generateColumnsMap(\n                          columns,\n                          width,\n                          optionsWidth,\n                          hasSelect,\n                          hasOptions,\n                          selectedItems || [],\n                          idField,\n                          columnsSelector,\n                          columnsShown,\n                          sortConfig ? sortConfig.currentSort : \"\",\n                          sortConfig ? sortConfig.currentDirection : undefined,\n                        )}\n                        {hasOptions && (\n                          // @ts-ignore\n                          <Column\n                            dataKey={idField}\n                            width={optionsWidth}\n                            headerClassName=\"optionsAlignment\"\n                            className=\"optionsAlignment\"\n                            cellRenderer={({ rowData }) => {\n                              const isSelected = selectedItems\n                                ? selectedItems.includes(\n                                    isString(rowData)\n                                      ? rowData\n                                      : rowData[idField],\n                                  )\n                                : false;\n                              return elementActions(\n                                itemActions || [],\n                                rowData,\n                                isSelected,\n                                idField,\n                              );\n                            }}\n                          />\n                        )}\n                      </Table>\n                    );\n                  }}\n                </AutoSizer>\n              )}\n            </InfiniteLoader>\n          ) : (\n            <Fragment>\n              {!isLoading && (\n                <div id={\"empty-results\"}>\n                  {customEmptyMessage !== \"\"\n                    ? customEmptyMessage\n                    : `There are no ${entityName} yet.`}\n                </div>\n              )}\n            </Fragment>\n          )}\n        </Paper>\n      </TooltipWrapper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, Theme } from \"@mui/material\";\nimport { createStyles, withStyles } from \"@mui/styles\";\nimport { AddIcon, Button, PageLayout, RefreshIcon, UploadIcon } from \"mds\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../../common/api\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport {\n  containerForHeader,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport SearchBox from \"../Common/SearchBox\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst DeleteKMSModal = withSuspense(\n  React.lazy(() => import(\"./DeleteKMSModal\")),\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...containerForHeader,\n  });\n\ninterface IKeysProps {\n  classes: any;\n}\n\nconst ListKeys = ({ classes }: IKeysProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedKey, setSelectedKey] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<[]>([]);\n\n  const deleteKey = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_DELETE_KEY,\n  ]);\n\n  const displayKeys = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.KMS_LIST_KEYS,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n  }, [filter]);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayKeys) {\n        let pattern = filter.trim() === \"\" ? \"*\" : filter.trim();\n        api\n          .invoke(\"GET\", `/api/v1/kms/keys?pattern=${pattern}`)\n          .then((res) => {\n            setLoading(false);\n            setRecords(res.results);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayKeys, filter]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const confirmDeleteKey = (key: string) => {\n    setDeleteOpen(true);\n    setSelectedKey(key);\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"delete\",\n      onClick: confirmDeleteKey,\n      sendOnlyId: true,\n      disableButtonFunction: () => !deleteKey,\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(setHelpName(\"list_keys\"));\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      {deleteOpen && (\n        <DeleteKMSModal\n          deleteOpen={deleteOpen}\n          selectedItem={selectedKey}\n          endpoint={\"/api/v1/kms/keys/\"}\n          element={\"Key\"}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Key Management Service Keys\"\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid container spacing={1}>\n          <Grid\n            item\n            xs={12}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"flex-end\"}\n            sx={{\n              \"& button\": {\n                marginLeft: \"8px\",\n              },\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <SearchBox\n                onChange={setFilter}\n                placeholder=\"Search Keys with pattern\"\n                value={filter}\n              />\n            </SecureComponent>\n\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_IMPORT_KEY]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Import Key\"}>\n                <Button\n                  id={\"import-key\"}\n                  variant={\"regular\"}\n                  icon={<UploadIcon />}\n                  onClick={() => {\n                    navigate(IAM_PAGES.KMS_KEYS_IMPORT);\n                  }}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_CREATE_KEY]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Create Key\"}>\n                <Button\n                  id={\"create-key\"}\n                  label={\"Create Key\"}\n                  variant={\"callAction\"}\n                  icon={<AddIcon />}\n                  onClick={() => navigate(IAM_PAGES.KMS_KEYS_ADD)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Grid>\n          <Grid item xs={12} className={classes.tableBlock}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.KMS_LIST_KEYS]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TableWrapper\n                itemActions={tableActions}\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Created By\", elementKey: \"createdBy\" },\n                  { label: \"Created At\", elementKey: \"createdAt\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListKeys);\n"],"names":["withStyles","theme","createStyles","_objectSpread","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","display","justifyContent","alignItems","margin","marginBottom","flexBasis","flexWrap","noTopMargin","marginTop","_ref","label","onChange","value","id","name","_ref$checked","checked","_ref$disabled","disabled","_ref$noTopMargin","_ref$tooltip","tooltip","_ref$overrideLabelCla","overrideLabelClasses","overrideCheckboxStyles","classes","className","_jsx","React","children","_jsxs","Grid","item","xs","concat","Checkbox","color","inputProps","checkedIcon","icon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","style","InputLabel","htmlFor","noMinWidthLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","unSelected","selected","_ref$active","active","xmlns","width","height","viewBox","fill","d","props","spacing","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","_ref$sendOnlyId","sendOnlyId","valueClick","PreviewIcon","EditIcon","TrashIcon","IAMPoliciesIcon","ShareIcon","CloudIcon","ConsoleIcon","DownloadIcon","DisableIcon","FormatDriveIcon","defineIcon","buttonElement","IconButton","size","e","stopPropagation","preventDefault","sx","isString","Link","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","_toConsumableArray","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","Column","dataKey","headerClassName","headerTextAlign","headerRenderer","Fragment","ArrowDropUpIcon","ArrowDropDownIcon","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","paper","overflow","flexDirection","padding","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","defaultPaperHeight","loadingBox","paddingTop","paddingBottom","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","fontSize","borderBottom","checkAllWrapper","transitionDuration","outline","userSelect","fontWeight","fontStyle","borderColor","textTransform","textAlign","left","radioIcons","_ref2","itemActions","onSelect","records","isLoading","_ref2$loadingMessage","loadingMessage","Typography","component","entityName","_ref2$radioSelection","radioSelection","_ref2$customEmptyMess","customEmptyMessage","_ref2$customPaperHeig","customPaperHeight","_ref2$noBackground","_ref2$columnsSelector","_ref2$textSelectable","textSelectable","_ref2$columnsShown","_ref2$onColumnChange","onColumnChange","state","infiniteScrollConfig","sortConfig","_ref2$autoScrollToBot","autoScrollToBottom","_ref2$disabled","onSelectAll","rowStyle","_ref2$parentClassName","parentClassName","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","columnSelectorOpen","setColumnSelectorOpen","_React$useState","_React$useState2","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","TooltipWrapper","Paper","container","ProgressBar","ViewColumnIcon","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","target","columnsSelection","InfiniteLoader","isRowLoaded","_ref3","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","_ref4","onRowsRendered","registerChild","AutoSizer","_ref5","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","Table","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","_ref6","onRowClick","_ref7","rowItem","disableButtonFunction","clickAction","rowClassName","r","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","returnElement","TableRowPredefStyles","_ref8","radioSelectedIcon","radioUnselectedIcon","_ref9","actions","action","vlSend","showLoaderFunction","Loader","TableActionButton","elementActions","DeleteKMSModal","withSuspense","searchField","containerForHeader","dispatch","useAppDispatch","setFilter","_useState3","_useState4","deleteOpen","setDeleteOpen","_useState5","_useState6","selectedKey","setSelectedKey","_useState7","_useState8","loading","setLoading","_useState9","_useState10","setRecords","deleteKey","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","KMS_DELETE_KEY","displayKeys","KMS_LIST_KEYS","useEffect","fetchRecords","pattern","trim","api","invoke","then","res","results","catch","err","setErrorSnackMessage","tableActions","key","setHelpName","selectedItem","endpoint","element","closeDeleteModalAndRefresh","refresh","PageHeaderWrapper","HelpMenu","PageLayout","pageContainer","marginLeft","SecureComponent","scopes","resource","errorProps","SearchBox","placeholder","Button","variant","RefreshIcon","KMS_IMPORT_KEY","UploadIcon","IAM_PAGES","KMS_KEYS_IMPORT","KMS_CREATE_KEY","AddIcon","KMS_KEYS_ADD","tableBlock","TableWrapper"],"sourceRoot":""}