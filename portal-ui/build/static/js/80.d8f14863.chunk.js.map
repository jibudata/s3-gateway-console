{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Tenants/TenantDetails/utils.ts","screens/Console/Tenants/TenantDetails/AddPoolModal.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","setModalSnackMessage","deleteDialogStyles","root","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","scroll","event","reason","DialogTitle","titleText","closeContainer","IconButton","disableRipple","size","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","overlayAction","top","maxHeight","label","onChange","value","id","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","inputProps","Fragment","container","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","unSelected","selected","CloudIcon","active","xmlns","viewBox","fill","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","spacing","margin","buttonDisabled","filter","valueToSend","idField","to","sendOnlyId","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","e","stopPropagation","preventDefault","Tooltip","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","calculateColumnRest","map","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","flexDirection","boxShadow","minHeight","overflowY","noBackground","defaultPaperHeight","loadingBox","paddingTop","overlayColumnSelection","popoverContent","shownColumnsLabel","borderBottom","checkAllWrapper","outline","userSelect","borderColor","textTransform","textAlign","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","currentTarget","closeColumnSelector","Grid","item","xs","Paper","LinearProgress","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CheckboxWrapper","checked","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","actions","action","vlSend","showLoaderFunction","CircularProgress","variant","elementActions","fieldContainer","justifyContent","marginBottom","flexBasis","SelectStyled","input","InputBase","options","option","getDefaultAffinity","tenantName","poolName","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","labelSelector","matchExpressions","key","operator","values","topologyKey","getNodeSelector","labels","withPodAntiAffinity","splittedLabels","split","forEach","splitKeyValue","nodeSelector","nodeAffinity","nodeSelectorTerms","def","console","log","buttonContainer","bottomContainer","flexFlow","factorElements","sizeNumber","sizeDescription","formFieldStyles","modalStyleUtils","tenant","onClosePoolAndReload","addSending","setAddSending","numberOfNodes","setNumberOfNodes","volumeSize","setVolumeSize","volumesPerServer","setVolumesPerSever","selectedStorageClass","setSelectedStorageClass","storageClasses","setStorageClasses","instanceCapacity","totalCapacity","api","invoke","namespace","then","res","newStorage","storageClass","catch","err","ModalWrapper","noValidate","onSubmit","generatePoolName","pools","defaultAffinity","data","servers","volumes_per_server","volume_configuration","storage_class_name","affinity","formFieldRow","InputBoxWrapper","parseInt","SelectWrapper","niceBytes","modalButtonBar","Button","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","setErrorSnackMessage","setTenantDetailsLoad","tenantDetailsStyles","actionsTray","containerForHeader","setPools","addPoolOpen","setAddPool","setFilter","resPools","filteredPools","pool","toLowerCase","reload","sectionTitle","TextField","searchField","disableUnderline","startAdornment","InputAdornment","SearchIcon","endIcon","TableWrapper"],"mappings":"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","file":"static/js/80.d8f14863.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"1rem 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>{title}</div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <ModalError />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern=\"\",\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if(pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { IAffinityModel } from \"../../../../common/types\";\n\nexport const getDefaultAffinity = (tenantName: string, poolName: string) => {\n  const defaultAffinity: IAffinityModel = {\n    podAntiAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n          labelSelector: {\n            matchExpressions: [\n              {\n                key: \"v1.min.io/tenant\",\n                operator: \"In\",\n                values: [tenantName],\n              },\n              {\n                key: \"v1.min.io/pool\",\n                operator: \"In\",\n                values: [poolName],\n              },\n            ],\n          },\n          topologyKey: \"kubernetes.io/hostname\",\n        },\n      ],\n    },\n  };\n  return defaultAffinity;\n};\n\nexport const getNodeSelector = (\n  labels: string,\n  withPodAntiAffinity: boolean,\n  tenantName: string,\n  poolName: string\n) => {\n  // Labels in the form of key1=value1&key2=value2&key3=value3...\n  const splittedLabels = labels.split(\"&\");\n  let matchExpressions: any = [];\n\n  splittedLabels.forEach((label: string) => {\n    const splitKeyValue = label.split(\"=\");\n    if (splitKeyValue.length === 2) {\n      matchExpressions.push({\n        key: splitKeyValue[0],\n        operator: \"In\",\n        values: [splitKeyValue[1]],\n      });\n    }\n  });\n\n  const nodeSelector: IAffinityModel = {\n    nodeAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [\n          {\n            matchExpressions: matchExpressions,\n          },\n        ],\n      },\n    },\n  };\n  if (withPodAntiAffinity) {\n    const def = getDefaultAffinity(tenantName, poolName);\n    nodeSelector.podAntiAffinity = def.podAntiAffinity;\n  }\n  console.log(nodeSelector);\n  return nodeSelector;\n};\n","import React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { generatePoolName, niceBytes } from \"../../../../common/utils\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { IAddPoolRequest, ITenant } from \"../ListTenants/types\";\nimport { ErrorResponseHandler, IAffinityModel } from \"../../../../common/types\";\nimport { getDefaultAffinity } from \"./utils\";\n\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IQuotaElement, IQuotas, Opts } from \"../ListTenants/utils\";\n\ninterface IAddPoolProps {\n  tenant: ITenant;\n  classes: any;\n  open: boolean;\n  onClosePoolAndReload: (shouldReload: boolean) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginLeft: 30,\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst AddPoolModal = ({\n  tenant,\n  classes,\n  open,\n  onClosePoolAndReload,\n}: IAddPoolProps) => {\n  const [addSending, setAddSending] = useState<boolean>(false);\n  const [numberOfNodes, setNumberOfNodes] = useState<number>(0);\n  const [volumeSize, setVolumeSize] = useState<number>(0);\n  const [volumesPerServer, setVolumesPerSever] = useState<number>(0);\n  const [selectedStorageClass, setSelectedStorageClass] = useState<string>(\"\");\n  const [storageClasses, setStorageClasses] = useState<Opts[]>([]);\n\n  const instanceCapacity: number = volumeSize * 1073741824 * volumesPerServer;\n  const totalCapacity: number = instanceCapacity * numberOfNodes;\n\n  useEffect(() => {\n    setSelectedStorageClass(\"\");\n\n    setStorageClasses([]);\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`\n      )\n      .then((res: IQuotas) => {\n        const elements: IQuotaElement[] = get(res, \"elements\", []);\n\n        const newStorage = elements.map((storageClass: any) => {\n          const name = get(storageClass, \"name\", \"\").split(\n            \".storageclass.storage.k8s.io/requests.storage\"\n          )[0];\n\n          return { label: name, value: name };\n        });\n\n        setStorageClasses(newStorage);\n        if (newStorage.length > 0) {\n          setSelectedStorageClass(newStorage[0].value);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n      });\n  }, [tenant]);\n\n  return (\n    <ModalWrapper\n      onClose={() => onClosePoolAndReload(false)}\n      modalOpen={open}\n      title=\"Add Pool\"\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setAddSending(true);\n\n          const poolName = generatePoolName(tenant.pools);\n\n          const defaultAffinity: IAffinityModel = getDefaultAffinity(\n            tenant.name,\n            poolName\n          );\n\n          const data: IAddPoolRequest = {\n            name: poolName,\n            servers: numberOfNodes,\n            volumes_per_server: volumesPerServer,\n            volume_configuration: {\n              size: volumeSize * 1073741824,\n              storage_class_name: selectedStorageClass,\n              labels: null,\n            },\n            affinity: defaultAffinity,\n          };\n\n          api\n            .invoke(\n              \"POST\",\n              `/api/v1/namespaces/${tenant.namespace}/tenants/${tenant.name}/pools`,\n              data\n            )\n            .then(() => {\n              setAddSending(false);\n              onClosePoolAndReload(true);\n            })\n            .catch((err: ErrorResponseHandler) => {\n              setAddSending(false);\n              // setDeleteError(err);\n            });\n        }}\n      >\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"number_of_nodes\"\n            name=\"number_of_nodes\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setNumberOfNodes(parseInt(e.target.value));\n            }}\n            label=\"Number o Nodes\"\n            value={numberOfNodes.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"pool_size\"\n            name=\"pool_size\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setVolumeSize(parseInt(e.target.value));\n            }}\n            label=\"Volume Size (Gi)\"\n            value={volumeSize.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"volumes_per_sever\"\n            name=\"volumes_per_sever\"\n            type=\"number\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setVolumesPerSever(parseInt(e.target.value));\n            }}\n            label=\"Volumes per Server\"\n            value={volumesPerServer.toString(10)}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <SelectWrapper\n            id=\"storage_class\"\n            name=\"storage_class\"\n            onChange={(e: SelectChangeEvent<string>) => {\n              setSelectedStorageClass(e.target.value as string);\n            }}\n            label=\"Storage Class\"\n            value={selectedStorageClass}\n            options={storageClasses}\n            disabled={storageClasses.length < 1}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.bottomContainer}>\n          <div className={classes.factorElements}>\n            <div>\n              <div className={classes.sizeNumber}>\n                {niceBytes(instanceCapacity.toString(10))}\n              </div>\n              <div className={classes.sizeDescription}>Instance Capacity</div>\n            </div>\n            <div>\n              <div className={classes.sizeNumber}>\n                {niceBytes(totalCapacity.toString(10))}\n              </div>\n              <div className={classes.sizeDescription}>Total Capacity</div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"primary\"\n            disabled={addSending}\n            onClick={() => onClosePoolAndReload(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={addSending}\n          >\n            Save\n          </Button>\n        </Grid>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddPoolModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Button, TextField } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { AddIcon } from \"../../../../icons\";\nimport { IPool, ITenant } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport AddPoolModal from \"./AddPoolModal\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { AppState } from \"../../../../store\";\nimport { setTenantDetailsLoad } from \"../actions\";\nimport SearchIcon from \"../../../../icons/SearchIcon\";\n\ninterface IPoolsSummary {\n  classes: any;\n  tenant: ITenant | null;\n  loadingTenant: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsSummary = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setTenantDetailsLoad,\n}: IPoolsSummary) => {\n  const [pools, setPools] = useState<IPool[]>([]);\n  const [addPoolOpen, setAddPool] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const onClosePoolAndRefresh = (reload: boolean) => {\n    setAddPool(false);\n\n    if (reload) {\n      setTenantDetailsLoad(true);\n    }\n  };\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return (\n    <Fragment>\n      {addPoolOpen && tenant !== null && (\n        <AddPoolModal\n          open={addPoolOpen}\n          onClosePoolAndReload={onClosePoolAndRefresh}\n          tenant={tenant}\n        />\n      )}\n\n      <h1 className={classes.sectionTitle}>Pools</h1>\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <TextField\n            placeholder=\"Filter\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            onChange={(event) => {\n              setFilter(event.target.value);\n            }}\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            variant=\"standard\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<AddIcon />}\n            onClick={() => {\n              setAddPool(true);\n            }}\n          >\n            Expand Tenant\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TableWrapper\n            itemActions={[]}\n            columns={[\n              { label: \"Name\", elementKey: \"name\" },\n              { label: \"Capacity\", elementKey: \"capacity\" },\n              { label: \"# of Instances\", elementKey: \"servers\" },\n              { label: \"# of Drives\", elementKey: \"volumes\" },\n            ]}\n            isLoading={loadingTenant}\n            records={filteredPools}\n            entityName=\"Servers\"\n            idField=\"name\"\n            customEmptyMessage=\"No Pools found\"\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n});\n\nexport default withStyles(styles)(connector(PoolsSummary));\n"],"sourceRoot":""}