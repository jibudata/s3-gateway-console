{"version":3,"file":"static/js/6491.344a4217.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/IDP/AddIDPConfigurationHelpbox.tsx","screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurationDetails.tsx","screens/Console/IDP/IDPOpenIDConfigurationDetails.tsx","screens/Console/IDP/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs={12} sm={8} md={8}>\n          {label !== \"\" && (\n            <InputLabel htmlFor={id} className={classes.inputLabel}>\n              <span>{label}</span>\n              {tooltip !== \"\" && (\n                <div className={classes.tooltipContainer}>\n                  <Tooltip title={tooltip} placement=\"top-start\">\n                    <div className={classes.tooltip}>\n                      <HelpIcon />\n                    </div>\n                  </Tooltip>\n                </div>\n              )}\n            </InputLabel>\n          )}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sm={label !== \"\" ? 4 : 12}\n          md={label !== \"\" ? 4 : 12}\n          textAlign={\"right\"}\n          justifyContent={\"end\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n        {description !== \"\" && (\n          <Grid item xs={12} textAlign={\"left\"}>\n            <Typography component=\"p\" className={classes.fieldDescription}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ninterface IScreenTitle {\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  headerBarIcon: {\n    marginRight: \".7rem\",\n    color: theme.palette.primary.main,\n    \"& .min-icon\": {\n      width: 44,\n      height: 44,\n    },\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n  headerBarSubheader: {\n    color: \"grey\",\n    \"@media (max-width: 900px)\": {\n      maxWidth: 200,\n    },\n  },\n  stContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 8,\n\n    borderBottom: \"1px solid #EAEAEA\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n    },\n  },\n  titleColumn: {\n    height: \"auto\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"flex-start\",\n    \"& h1\": {\n      fontSize: 19,\n    },\n  },\n  leftItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"@media (max-width: 600px)\": {\n      flexFlow: \"column\",\n      width: \"100%\",\n    },\n  },\n  rightItems: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& button\": {\n      marginLeft: 8,\n    },\n    \"@media (max-width: 600px)\": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ScreenTitle = ({\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.stContainer} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScreenTitle;\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","import React, { Fragment } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { HelpIconFilled } from \"mds\";\n\ninterface IContent {\n  icon: React.ReactNode;\n  text: string;\n  iconDescription: string;\n}\n\ninterface IAddIDPConfigurationHelpBoxProps {\n  helpText: string;\n  docLink: string;\n  docText: string;\n  contents: IContent[];\n}\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\n\nconst AddIDPConfigurationHelpBox = ({\n  helpText,\n  docLink,\n  docText,\n  contents,\n}: IAddIDPConfigurationHelpBoxProps) => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n          paddingBottom: \"20px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>{helpText}</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        {contents.map((content, index) => (\n          <Fragment key={`feature-item-${index}`}>\n            {content.icon && (\n              <Box sx={{ paddingBottom: \"20px\" }}>\n                <FeatureItem\n                  icon={content.icon}\n                  description={content.iconDescription}\n                />\n              </Box>\n            )}\n            <Box sx={{ paddingBottom: \"20px\" }}>{content.text}</Box>\n          </Fragment>\n        ))}\n        <Box sx={{ paddingBottom: \"20px\" }}>\n          <a href={docLink} target=\"_blank\" rel=\"noopener\">\n            {docText}\n          </a>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddIDPConfigurationHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Grid } from \"@mui/material\";\nimport {\n  containerForHeader,\n  formFieldStyles,\n  modalBasic,\n  searchField,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  BackLink,\n  Button,\n  EditIcon,\n  PageLayout,\n  RefreshIcon,\n  TrashIcon,\n} from \"mds\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport api from \"../../../common/api\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport LabelValuePair from \"../Common/UsageBarWrapper/LabelValuePair\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\ntype IDPConfigurationDetailsProps = {\n  classes?: any;\n  formFields: object;\n  endpoint: string;\n  backLink: string;\n  header: string;\n  idpType: string;\n  helpBox: React.ReactNode;\n  icon: React.ReactNode;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n    pageContainer: {\n      height: \"100%\",\n    },\n    ...searchField,\n\n    ...containerForHeader,\n  });\n\nconst IDPConfigurationDetails = ({\n  classes,\n  formFields,\n  endpoint,\n  backLink,\n  header,\n  idpType,\n  icon,\n  helpBox,\n}: IDPConfigurationDetailsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const configurationName = params.idpName;\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isEnabled, setIsEnabled] = useState<boolean>(false);\n  const [fields, setFields] = useState<any>({});\n  const [originalFields, setOriginalFields] = useState<any>({});\n  const [record, setRecord] = useState<any>({});\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const onSuccess = (res: any) => {\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loadingSave, invokeApi] = useApi(onSuccess, onError);\n\n  const onEnabledSuccess = (res: any) => {\n    setIsEnabled(!isEnabled);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n\n  const onEnabledError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n  };\n\n  const [loadingEnabledSave, invokeEnabledApi] = useApi(\n    onEnabledSuccess,\n    onEnabledError\n  );\n\n  const toggleEditMode = () => {\n    if (editMode) {\n      parseFields(record);\n    }\n    setEditMode(!editMode);\n  };\n\n  const parseFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        if (item.key === \"enable\") {\n          setIsEnabled(item.value === \"on\");\n        }\n        fields[item.key] = item.value;\n      });\n    }\n    setFields(fields);\n  };\n\n  const parseOriginalFields = (record: any) => {\n    let fields: any = {};\n    if (record.info) {\n      record.info.forEach((item: any) => {\n        fields[item.key] = item.value;\n      });\n    }\n    setOriginalFields(fields);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n\n  useEffect(() => {\n    const loadRecord = () => {\n      api\n        .invoke(\"GET\", `${endpoint}${configurationName}`)\n        .then((result: any) => {\n          if (result) {\n            setRecord(result);\n            parseFields(result);\n            parseOriginalFields(result);\n          }\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    };\n\n    if (loading) {\n      loadRecord();\n    }\n  }, [dispatch, loading, configurationName, endpoint]);\n\n  const validSave = () => {\n    for (const [key, value] of Object.entries(formFields)) {\n      if (\n        value.required &&\n        !(\n          fields[key] !== undefined &&\n          fields[key] !== null &&\n          fields[key] !== \"\"\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const resetForm = () => {\n    setFields({});\n  };\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let input = \"\";\n    for (const key of Object.keys(formFields)) {\n      if (fields[key] || fields[key] !== originalFields[key]) {\n        input += `${key}=${fields[key]} `;\n      }\n    }\n    invokeApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n    setEditMode(false);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      navigate(backLink);\n    }\n  };\n\n  const toggleConfiguration = (value: boolean) => {\n    const input = `enable=${value ? \"on\" : \"off\"}`;\n    invokeEnabledApi(\"PUT\", `${endpoint}${configurationName}`, { input });\n  };\n\n  const renderFormField = (key: string, value: any) => {\n    switch (value.type) {\n      case \"toggle\":\n        return (\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={fields[key] === \"on\" ? true : false}\n            value={\"is-field-enabled\"}\n            id={\"is-field-enabled\"}\n            name={\"is-field-enabled\"}\n            label={value.label}\n            tooltip={value.tooltip}\n            onChange={(e) =>\n              setFields({ ...fields, [key]: e.target.checked ? \"on\" : \"off\" })\n            }\n            description=\"\"\n            disabled={!editMode}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={key}\n            required={value.required}\n            name={key}\n            label={value.label}\n            tooltip={value.tooltip}\n            error={value.hasError(fields[key], editMode)}\n            value={fields[key] ? fields[key] : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setFields({ ...fields, [key]: e.target.value })\n            }\n            placeholder={value.placeholder}\n            disabled={!editMode}\n            type={value.type}\n          />\n        );\n    }\n  };\n\n  const renderEditForm = () => {\n    return (\n      <Box\n        sx={{\n          display: \"grid\",\n          padding: \"25px\",\n          gap: \"25px\",\n          gridTemplateColumns: {\n            md: \"2fr 1.2fr\",\n            xs: \"1fr\",\n          },\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\n            <Grid xs={12} item className={classes.fieldBox}>\n              {Object.entries(formFields).map(([key, value]) => (\n                <Grid item xs={12} className={classes.formFieldRow} key={key}>\n                  {renderFormField(key, value)}\n                </Grid>\n              ))}\n              <Grid item xs={12} textAlign={\"right\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {editMode && (\n                    <Button\n                      id={\"clear\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={resetForm}\n                      label={\"Clear\"}\n                    />\n                  )}\n                  {editMode && (\n                    <Button\n                      id={\"cancel\"}\n                      type=\"button\"\n                      variant=\"regular\"\n                      onClick={toggleEditMode}\n                      label={\"Cancel\"}\n                    />\n                  )}\n                  {editMode && (\n                    <Button\n                      id={\"save-key\"}\n                      type=\"submit\"\n                      variant=\"callAction\"\n                      color=\"primary\"\n                      disabled={loading || loadingSave || !validSave()}\n                      label={\"Save\"}\n                    />\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n        {helpBox}\n      </Box>\n    );\n  };\n  const renderViewForm = () => {\n    return (\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n          gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n          gap: 3,\n          padding: \"15px\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        {Object.entries(formFields).map(([key, value]) => (\n          <LabelValuePair\n            key={key}\n            label={value.label}\n            value={fields[key] ? fields[key] : \"\"}\n          />\n        ))}\n      </Box>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"idp_config\"));\n  }, [dispatch]);\n\n  return (\n    <Grid item xs={12}>\n      {deleteOpen && configurationName && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={configurationName}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label={<BackLink onClick={() => navigate(backLink)} label={header} />}\n        actions={<HelpMenu />}\n      />\n      <PageLayout className={classes.pageContainer}>\n        <Box>\n          <ScreenTitle\n            icon={icon}\n            title={configurationName === \"_\" ? \"Default\" : configurationName}\n            actions={\n              <Fragment>\n                {configurationName !== \"_\" && (\n                  <Button\n                    id={\"delete-idp-config\"}\n                    onClick={() => {\n                      setDeleteOpen(true);\n                    }}\n                    label={\"Delete Configuration\"}\n                    icon={<TrashIcon />}\n                    variant={\"secondary\"}\n                  />\n                )}\n                {!editMode && (\n                  <Button\n                    id={\"edit\"}\n                    type=\"button\"\n                    variant={\"callAction\"}\n                    icon={<EditIcon />}\n                    onClick={toggleEditMode}\n                    label={\"Edit\"}\n                  />\n                )}\n                <Button\n                  id={\"is-configuration-enabled\"}\n                  onClick={() => toggleConfiguration(!isEnabled)}\n                  label={isEnabled ? \"Disable\" : \"Enable\"}\n                  disabled={loadingEnabledSave}\n                />\n                <Button\n                  id={\"refresh-idp-config\"}\n                  onClick={() => setLoading(true)}\n                  label={\"Refresh\"}\n                  icon={<RefreshIcon />}\n                />\n              </Fragment>\n            }\n          />\n\n          {editMode ? renderEditForm() : renderViewForm()}\n        </Box>\n      </PageLayout>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(IDPConfigurationDetails);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { LockIcon } from \"mds\";\nimport { openIDFormFields, openIDHelpBoxContents } from \"./utils\";\nimport IDPConfigurationDetails from \"./IDPConfigurationDetails\";\nimport AddIDPConfigurationHelpBox from \"./AddIDPConfigurationHelpbox\";\n\nconst IDPOpenIDConfigurationDetails = () => {\n  return (\n    <IDPConfigurationDetails\n      backLink={IAM_PAGES.IDP_OPENID_CONFIGURATIONS}\n      header={\"OpenID Configurations\"}\n      endpoint={\"/api/v1/idp/openid/\"}\n      idpType={\"openid\"}\n      helpBox={\n        <AddIDPConfigurationHelpBox\n          helpText={\"Learn more about OpenID Connect Configurations\"}\n          contents={openIDHelpBoxContents}\n          docLink={\n            \"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-oidc\"\n          }\n          docText={\"Learn more about OpenID Connect Configurations\"}\n        />\n      }\n      formFields={openIDFormFields}\n      icon={<LockIcon width={40} />}\n    />\n  );\n};\n\nexport default IDPOpenIDConfigurationDetails;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { LockIcon } from \"mds\";\n\nexport const ldapHelpBoxContents = [\n  {\n    text: \"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: <LoginIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries\",\n    icon: null,\n    iconDescription: \"\",\n  },\n  {\n    text: \"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDHelpBoxContents = [\n  {\n    text: \"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.\",\n    icon: <LockIcon />,\n    iconDescription: \"Create Configurations\",\n  },\n  {\n    text: \"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.\",\n    icon: null,\n    iconDescription: \"\",\n  },\n];\n\nexport const openIDFormFields = {\n  config_url: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Config URL is required\" : \"\";\n    },\n    label: \"Config URL\",\n    tooltip: \"Config URL for identity provider configuration\",\n    placeholder:\n      \"https://identity-provider-url/.well-known/openid-configuration\",\n    type: \"text\",\n  },\n  client_id: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client ID is required\" : \"\";\n    },\n    label: \"Client ID\",\n    tooltip: \"Identity provider Client ID\",\n    placeholder: \"Enter Client ID\",\n    type: \"text\",\n  },\n  client_secret: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Client Secret is required\" : \"\";\n    },\n    label: \"Client Secret\",\n    tooltip: \"Identity provider Client Secret\",\n    placeholder: \"Enter Client Secret\",\n    type: \"password\",\n  },\n  claim_name: {\n    required: false,\n    label: \"Claim Name\",\n    tooltip: \"Claim from which MinIO will read the policy or role to use\",\n    placeholder: \"Enter Claim Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  display_name: {\n    required: false,\n    label: \"Display Name\",\n    tooltip: \"\",\n    placeholder: \"Enter Display Name\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_prefix: {\n    required: false,\n    label: \"Claim Prefix\",\n    tooltip: \"\",\n    placeholder: \"Enter Claim Prefix\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  scopes: {\n    required: false,\n    label: \"Scopes\",\n    tooltip: \"\",\n    placeholder: \"openid,profile,email\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri: {\n    required: false,\n    label: \"Redirect URI\",\n    tooltip: \"\",\n    placeholder: \"https://console-endpoint-url/oauth_callback\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  role_policy: {\n    required: false,\n    label: \"Role Policy\",\n    tooltip: \"\",\n    placeholder: \"readonly\",\n    type: \"text\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  claim_userinfo: {\n    required: false,\n    label: \"Claim User Info\",\n    tooltip: \"\",\n    placeholder: \"Claim User Info\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n  redirect_uri_dynamic: {\n    required: false,\n    label: \"Redirect URI Dynamic\",\n    tooltip: \"\",\n    placeholder: \"Redirect URI Dynamic\",\n    type: \"toggle\",\n    hasError: (s: string, editMode: boolean) => \"\",\n  },\n};\n\nexport const ldapFormFields = {\n  server_insecure: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Insecure\",\n    tooltip: \"Disable SSL certificate verification \",\n    placeholder: \"myldapserver.com:636\",\n    type: \"toggle\",\n  },\n  server_addr: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Server Address is required\" : \"\";\n    },\n    label: \"Server Address\",\n    tooltip: 'AD/LDAP server address e.g. \"myldapserver.com:636\"',\n    placeholder: \"myldapserver.com:636\",\n    type: \"text\",\n  },\n  lookup_bind_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind DN is required\" : \"\";\n    },\n    label: \"Lookup Bind DN\",\n    tooltip:\n      \"DN (Distinguished Name) for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"cn=admin,dc=min,dc=io\",\n    type: \"text\",\n  },\n  lookup_bind_password: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"Lookup Bind Password is required\" : \"\";\n    },\n    label: \"Lookup Bind Password\",\n    tooltip:\n      \"Password for LDAP read-only service account used to perform DN and group lookups\",\n    placeholder: \"admin\",\n    type: \"password\",\n  },\n  user_dn_search_base_dn: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Base DN is required\" : \"\";\n    },\n    label: \"User DN Search Base\",\n    tooltip: \"\",\n    placeholder: \"DC=example,DC=net\",\n    type: \"text\",\n  },\n  user_dn_search_filter: {\n    required: true,\n    hasError: (s: string, editMode: boolean) => {\n      return !s && editMode ? \"User DN Search Filter is required\" : \"\";\n    },\n    label: \"User DN Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(sAMAcountName=%s)\",\n    type: \"text\",\n  },\n  group_search_base_dn: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Base DN\",\n    tooltip: \"\",\n    placeholder: \"ou=swengg,dc=min,dc=io\",\n    type: \"text\",\n  },\n  group_search_filter: {\n    required: false,\n    hasError: (s: string, editMode: boolean) => \"\",\n    label: \"Group Search Filter\",\n    tooltip: \"\",\n    placeholder: \"(&(objectclass=groupofnames)(member=%d))\",\n    type: \"text\",\n  },\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","_objectSpread","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","_ref","_ref$label","label","onChange","value","id","name","_ref$checked","_ref$disabled","disabled","_ref$switchOnly","switchOnly","_ref$tooltip","_ref$description","description","classes","indicatorLabels","_ref$extraInputProps","extraInputProps","switchComponent","_jsxs","React","children","_jsx","className","clsx","_defineProperty","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","Grid","container","item","xs","sm","md","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","textAlign","Typography","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","_ref$type","type","_ref$autoComplete","autoComplete","_ref$multiline","multiline","_ref$index","index","_ref$error","error","_ref$required","required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","_useState","useState","_useState2","_slicedToArray","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","concat","IconButton","onClick","size","useStyles","headerBarIcon","marginRight","primary","main","headerBarSubheader","stContainer","borderBottom","flexFlow","titleColumn","leftItems","rightItems","icon","subTitle","actions","style","_ref$value","_ref$orientation","orientation","_ref$stkProps","stkProps","_ref$lblProps","lblProps","_ref$valProps","valProps","Stack","direction","FeatureItem","Box","sx","marginBottom","fontStyle","_ref2","helpText","docLink","docText","contents","flex","paddingBottom","HelpIconFilled","map","content","Fragment","iconDescription","text","href","target","rel","closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","_useApi","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","_useApi2","deleteLoading","invokeDeleteApi","displayName","ConfirmDialog","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onClose","confirmButtonProps","confirmationContent","DialogContentText","formFieldStyles","formFieldRow","modalBasic","pageContainer","searchField","containerForHeader","formFields","endpoint","backLink","header","helpBox","navigate","useNavigate","configurationName","useParams","idpName","loading","setLoading","_useState3","_useState4","isEnabled","setIsEnabled","_useState5","_useState6","fields","setFields","_useState7","_useState8","originalFields","setOriginalFields","_useState9","_useState10","record","setRecord","_useState11","_useState12","editMode","setEditMode","_useState13","_useState14","setDeleteOpen","loadingSave","invokeApi","_useApi3","_useApi4","loadingEnabledSave","invokeEnabledApi","toggleEditMode","parseFields","info","forEach","key","useEffect","api","invoke","then","result","parseOriginalFields","catch","validSave","_i","_Object$entries","Object","entries","_Object$entries$_i","undefined","resetForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","wrap","_context","prev","next","stop","_x","apply","arguments","renderFormField","FormSwitchWrapper","e","InputBoxWrapper","hasError","setHelpName","DeleteIDPConfigurationModal","PageHeaderWrapper","BackLink","HelpMenu","PageLayout","ScreenTitle","Button","TrashIcon","variant","EditIcon","input","toggleConfiguration","RefreshIcon","gap","gridTemplateColumns","noValidate","onSubmit","event","preventDefault","_i2","_Object$keys","keys","saveRecord","spacing","fieldBox","_ref3","_ref4","gridAutoFlow","_ref5","_ref6","LabelValuePair","IDPConfigurationDetails","IAM_PAGES","IDP_OPENID_CONFIGURATIONS","AddIDPConfigurationHelpBox","openIDHelpBoxContents","openIDFormFields","LockIcon","ldapHelpBoxContents","LoginIcon","config_url","s","client_id","client_secret","claim_name","display_name","claim_prefix","scopes","redirect_uri","role_policy","claim_userinfo","redirect_uri_dynamic","ldapFormFields","server_insecure","server_addr","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","group_search_base_dn","group_search_filter"],"sourceRoot":""}