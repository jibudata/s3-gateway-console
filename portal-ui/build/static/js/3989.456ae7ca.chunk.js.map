{"version":3,"file":"static/js/3989.456ae7ca.chunk.js","mappings":"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","sources":["screens/Console/Buckets/VersioningInfo.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/EditActionButton.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/EditablePropertyItem.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/ReportedUsage.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/BucketQuotaSize.tsx","screens/Console/Buckets/BucketDetails/BucketSummaryPanel.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/LabelWithIcon.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { DisabledIcon, EnabledIcon, Box } from \"mds\";\nimport { BucketVersioningResponse } from \"api/consoleApi\";\nimport LabelWithIcon from \"./BucketDetails/SummaryItems/LabelWithIcon\";\n\nconst VersioningInfo = ({\n  versioningState = {},\n}: {\n  versioningState?: BucketVersioningResponse;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n      }}\n    >\n      <Box sx={{ fontWeight: \"medium\", display: \"flex\", gap: 2 }}>\n        {versioningState.excludeFolders ? (\n          <LabelWithIcon\n            icon={\n              versioningState.excludeFolders ? (\n                <EnabledIcon style={{ color: \"green\" }} />\n              ) : (\n                <DisabledIcon />\n              )\n            }\n            label={\n              <label style={{ textDecoration: \"normal\" }}>\n                Exclude Folders\n              </label>\n            }\n          />\n        ) : null}\n      </Box>\n      {versioningState.excludedPrefixes?.length ? (\n        <Box\n          sx={{\n            fontWeight: \"medium\",\n            display: \"flex\",\n            justifyItems: \"end\",\n            placeItems: \"flex-start\",\n            flexDirection: \"column\",\n            gap: 1,\n          }}\n        >\n          <Box>Excluded Prefixes :</Box>\n          <div\n            style={{\n              maxHeight: \"200px\",\n              overflowY: \"auto\",\n              placeItems: \"flex-start\",\n              justifyItems: \"end\",\n              flexDirection: \"column\",\n              display: \"flex\",\n            }}\n          >\n            {versioningState.excludedPrefixes?.map((it) => (\n              <div>\n                <strong>{it.prefix}</strong>\n              </div>\n            ))}\n          </div>\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default VersioningInfo;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { EditIcon, IconButton } from \"mds\";\n\ntype EditActionButtonProps = {\n  disabled?: boolean;\n  onClick: () => void | any;\n  [x: string]: any;\n};\n\nconst EditActionButton = ({\n  disabled,\n  onClick,\n  ...restProps\n}: EditActionButtonProps) => {\n  return (\n    <IconButton\n      size={\"small\"}\n      disabled={disabled}\n      onClick={onClick}\n      {...restProps}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n};\n\nexport default EditActionButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { ActionLink, Box, HelpTip, ValuePair } from \"mds\";\nimport { SecureComponent } from \"../../../../../common/SecureComponent\";\n\nimport EditActionButton from \"./EditActionButton\";\n\ntype EditablePropertyItemProps = {\n  isLoading: boolean;\n  resourceName: string;\n  iamScopes: string[];\n  property: any;\n  value: any;\n  onEdit: () => void;\n  secureCmpProps?: Record<any, any>;\n  disabled?: boolean;\n  helpTip?: any;\n};\n\nconst SecureAction = ({\n  resourceName,\n  iamScopes,\n  secureCmpProps = {},\n  children,\n}: {\n  resourceName: string;\n  iamScopes: string[];\n  children: any;\n  secureCmpProps?: Record<any, any>;\n}) => {\n  return (\n    <SecureComponent\n      scopes={iamScopes}\n      resource={resourceName}\n      errorProps={{ disabled: true }}\n      {...secureCmpProps}\n    >\n      {children}\n    </SecureComponent>\n  );\n};\n\nconst EditablePropertyItem = ({\n  isLoading = true,\n  resourceName = \"\",\n  iamScopes,\n  secureCmpProps = {},\n  property = null,\n  value = null,\n  onEdit,\n  disabled = false,\n  helpTip,\n}: EditablePropertyItemProps) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"baseline\",\n        justifyContent: \"flex-start\",\n        gap: 10,\n      }}\n    >\n      <ValuePair\n        label={property}\n        value={\n          helpTip ? (\n            <SecureAction\n              resourceName={resourceName}\n              iamScopes={iamScopes}\n              secureCmpProps={secureCmpProps}\n            >\n              <HelpTip placement=\"left\" content={helpTip}>\n                <ActionLink\n                  isLoading={isLoading}\n                  onClick={onEdit}\n                  label={value}\n                  sx={{ fontWeight: \"bold\" }}\n                  disabled={disabled}\n                />\n              </HelpTip>\n            </SecureAction>\n          ) : (\n            <SecureAction\n              resourceName={resourceName}\n              iamScopes={iamScopes}\n              secureCmpProps={secureCmpProps}\n            >\n              <ActionLink\n                isLoading={isLoading}\n                onClick={onEdit}\n                label={value}\n                sx={{ fontWeight: \"bold\" }}\n                disabled={disabled}\n              />\n            </SecureAction>\n          )\n        }\n      />\n      <SecureAction\n        resourceName={resourceName}\n        iamScopes={iamScopes}\n        secureCmpProps={secureCmpProps}\n      >\n        <EditActionButton\n          onClick={onEdit}\n          sx={{\n            background: \"#f8f8f8\",\n            marginLeft: \"3px\",\n            top: 3,\n            \"& .min-icon\": {\n              width: \"16px\",\n              height: \"16px\",\n            },\n          }}\n          disabled={disabled}\n        />\n      </SecureAction>\n    </Box>\n  );\n};\n\nexport default EditablePropertyItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { ReportedUsageFullIcon, Box } from \"mds\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nconst ReportedUsage = ({ bucketSize }: { bucketSize: string }) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n\n        \"& .min-icon\": {\n          height: 37,\n          width: 37,\n        },\n      }}\n    >\n      <ReportedUsageFullIcon />\n\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          justifyContent: \"center\",\n          flexFlow: \"column\",\n          marginLeft: \"20px\",\n          fontSize: \"19px\",\n        }}\n      >\n        <label\n          style={{\n            fontWeight: 600,\n          }}\n        >\n          Reported Usage:\n        </label>\n        <label>{niceBytes(bucketSize)}</label>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ReportedUsage;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { HardBucketQuotaIcon, Box } from \"mds\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nconst BucketQuotaSize = ({ quota }: { quota: any }) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n\n        \"& .min-icon\": {\n          height: 37,\n          width: 37,\n        },\n      }}\n    >\n      <HardBucketQuotaIcon />\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          justifyContent: \"center\",\n          flexFlow: \"column\",\n          marginLeft: \"20px\",\n          fontSize: \"19px\",\n        }}\n      >\n        <label\n          style={{\n            fontWeight: 600,\n            textTransform: \"capitalize\",\n          }}\n        >\n          {quota?.type} Quota\n        </label>\n        <label> {niceBytes(`${quota?.quota}`, true)}</label>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BucketQuotaSize;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { api } from \"api\";\nimport {\n  BucketEncryptionInfo,\n  BucketQuota,\n  BucketVersioningResponse,\n  GetBucketRetentionConfig,\n} from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport {\n  Box,\n  DisabledIcon,\n  EnabledIcon,\n  Grid,\n  SectionTitle,\n  ValuePair,\n} from \"mds\";\nimport { twoColCssGridLayoutConfig } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport {\n  selDistSet,\n  setErrorSnackMessage,\n  setHelpName,\n} from \"../../../../systemSlice\";\nimport {\n  selBucketDetailsInfo,\n  selBucketDetailsLoading,\n  setBucketDetailsLoad,\n} from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport VersioningInfo from \"../VersioningInfo\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport LabelWithIcon from \"./SummaryItems/LabelWithIcon\";\nimport EditablePropertyItem from \"./SummaryItems/EditablePropertyItem\";\nimport ReportedUsage from \"./SummaryItems/ReportedUsage\";\nimport BucketQuotaSize from \"./SummaryItems/BucketQuotaSize\";\n\nconst SetAccessPolicy = withSuspense(\n  React.lazy(() => import(\"./SetAccessPolicy\")),\n);\nconst SetRetentionConfig = withSuspense(\n  React.lazy(() => import(\"./SetRetentionConfig\")),\n);\nconst EnableBucketEncryption = withSuspense(\n  React.lazy(() => import(\"./EnableBucketEncryption\")),\n);\nconst EnableVersioningModal = withSuspense(\n  React.lazy(() => import(\"./EnableVersioningModal\")),\n);\nconst BucketTags = withSuspense(\n  React.lazy(() => import(\"./SummaryItems/BucketTags\")),\n);\nconst EnableQuota = withSuspense(React.lazy(() => import(\"./EnableQuota\")));\n\nconst BucketSummary = () => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const bucketInfo = useSelector(selBucketDetailsInfo);\n  const distributedSetup = useSelector(selDistSet);\n\n  const [encryptionCfg, setEncryptionCfg] =\n    useState<BucketEncryptionInfo | null>(null);\n  const [bucketSize, setBucketSize] = useState<number | \"0\">(\"0\");\n  const [hasObjectLocking, setHasObjectLocking] = useState<boolean | undefined>(\n    false,\n  );\n  const [accessPolicyScreenOpen, setAccessPolicyScreenOpen] =\n    useState<boolean>(false);\n  const [replicationRules, setReplicationRules] = useState<boolean>(false);\n  const [loadingObjectLocking, setLoadingLocking] = useState<boolean>(true);\n  const [loadingSize, setLoadingSize] = useState<boolean>(true);\n  const [bucketLoading, setBucketLoading] = useState<boolean>(true);\n  const [loadingEncryption, setLoadingEncryption] = useState<boolean>(true);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [loadingQuota, setLoadingQuota] = useState<boolean>(true);\n  const [loadingReplication, setLoadingReplication] = useState<boolean>(true);\n  const [loadingRetention, setLoadingRetention] = useState<boolean>(true);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse>();\n  const [quotaEnabled, setQuotaEnabled] = useState<boolean>(false);\n  const [quota, setQuota] = useState<BucketQuota | null>(null);\n  const [encryptionEnabled, setEncryptionEnabled] = useState<boolean>(false);\n  const [retentionEnabled, setRetentionEnabled] = useState<boolean>(false);\n  const [retentionConfig, setRetentionConfig] =\n    useState<GetBucketRetentionConfig | null>(null);\n  const [retentionConfigOpen, setRetentionConfigOpen] =\n    useState<boolean>(false);\n  const [enableEncryptionScreenOpen, setEnableEncryptionScreenOpen] =\n    useState<boolean>(false);\n  const [enableQuotaScreenOpen, setEnableQuotaScreenOpen] =\n    useState<boolean>(false);\n  const [enableVersioningOpen, setEnableVersioningOpen] =\n    useState<boolean>(false);\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_summary\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const bucketName = params.bucketName || \"\";\n\n  let accessPolicy = \"n/a\";\n  let policyDefinition = \"\";\n\n  if (bucketInfo !== null && bucketInfo.access && bucketInfo.definition) {\n    accessPolicy = bucketInfo.access;\n    policyDefinition = bucketInfo.definition;\n  }\n\n  const displayGetBucketObjectLockConfiguration = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const displayGetBucketEncryptionConfiguration = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_BUCKET_ENCRYPTION_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  const displayGetBucketQuota = hasPermission(bucketName, [\n    IAM_SCOPES.ADMIN_GET_BUCKET_QUOTA,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setBucketLoading(true);\n    } else {\n      setBucketLoading(false);\n    }\n  }, [loadingBucket, setBucketLoading]);\n\n  useEffect(() => {\n    if (loadingEncryption) {\n      if (displayGetBucketEncryptionConfiguration) {\n        api.buckets\n          .getBucketEncryptionInfo(bucketName)\n          .then((res) => {\n            if (res.data.algorithm) {\n              setEncryptionEnabled(true);\n              setEncryptionCfg(res.data);\n            }\n            setLoadingEncryption(false);\n          })\n          .catch((err) => {\n            err = errorToHandler(err.error);\n            if (\n              err.errorMessage ===\n              \"The server side encryption configuration was not found\"\n            ) {\n              setEncryptionEnabled(false);\n              setEncryptionCfg(null);\n            }\n            setLoadingEncryption(false);\n          });\n      } else {\n        setEncryptionEnabled(false);\n        setEncryptionCfg(null);\n        setLoadingEncryption(false);\n      }\n    }\n  }, [loadingEncryption, bucketName, displayGetBucketEncryptionConfiguration]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  useEffect(() => {\n    if (loadingQuota && distributedSetup) {\n      if (displayGetBucketQuota) {\n        api.buckets\n          .getBucketQuota(bucketName)\n          .then((res) => {\n            setQuota(res.data);\n            if (res.data.quota) {\n              setQuotaEnabled(true);\n            } else {\n              setQuotaEnabled(false);\n            }\n            setLoadingQuota(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n            setQuotaEnabled(false);\n            setLoadingQuota(false);\n          });\n      } else {\n        setQuotaEnabled(false);\n        setLoadingQuota(false);\n      }\n    }\n  }, [\n    loadingQuota,\n    setLoadingVersioning,\n    dispatch,\n    bucketName,\n    distributedSetup,\n    displayGetBucketQuota,\n  ]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      if (displayGetBucketObjectLockConfiguration) {\n        api.buckets\n          .getBucketObjectLockingStatus(bucketName)\n          .then((res) => {\n            setHasObjectLocking(res.data.object_locking_enabled);\n            setLoadingLocking(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n            setLoadingLocking(false);\n          });\n      } else {\n        setLoadingLocking(false);\n      }\n    }\n  }, [\n    loadingObjectLocking,\n    dispatch,\n    bucketName,\n    loadingVersioning,\n    distributedSetup,\n    displayGetBucketObjectLockConfiguration,\n  ]);\n\n  useEffect(() => {\n    if (loadingSize) {\n      api.buckets\n        .listBuckets()\n        .then((res) => {\n          const resBuckets = get(res.data, \"buckets\", []);\n\n          const bucketInfo = resBuckets.find(\n            (bucket) => bucket.name === bucketName,\n          );\n\n          const size = get(bucketInfo, \"size\", \"0\");\n\n          setLoadingSize(false);\n          setBucketSize(size);\n        })\n        .catch((err) => {\n          setLoadingSize(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [loadingSize, dispatch, bucketName]);\n\n  useEffect(() => {\n    if (loadingReplication && distributedSetup) {\n      api.buckets\n        .getBucketReplication(bucketName)\n        .then((res) => {\n          const r = res.data.rules ? res.data.rules : [];\n          setReplicationRules(r.length > 0);\n          setLoadingReplication(false);\n        })\n        .catch((err) => {\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          setLoadingReplication(false);\n        });\n    }\n  }, [loadingReplication, dispatch, bucketName, distributedSetup]);\n\n  useEffect(() => {\n    if (loadingRetention && hasObjectLocking) {\n      api.buckets\n        .getBucketRetentionConfig(bucketName)\n        .then((res) => {\n          setLoadingRetention(false);\n          setRetentionEnabled(true);\n          setRetentionConfig(res.data);\n        })\n        .catch((err) => {\n          setRetentionEnabled(false);\n          setLoadingRetention(false);\n          setRetentionConfig(null);\n        });\n    }\n  }, [loadingRetention, hasObjectLocking, bucketName]);\n\n  const loadAllBucketData = () => {\n    dispatch(setBucketDetailsLoad(true));\n    setBucketLoading(true);\n    setLoadingSize(true);\n    setLoadingVersioning(true);\n    setLoadingEncryption(true);\n    setLoadingRetention(true);\n  };\n\n  const setBucketVersioning = () => {\n    setEnableVersioningOpen(true);\n  };\n  const setBucketQuota = () => {\n    setEnableQuotaScreenOpen(true);\n  };\n\n  const closeEnableBucketEncryption = () => {\n    setEnableEncryptionScreenOpen(false);\n    setLoadingEncryption(true);\n  };\n  const closeEnableBucketQuota = () => {\n    setEnableQuotaScreenOpen(false);\n    setLoadingQuota(true);\n  };\n\n  const closeSetAccessPolicy = () => {\n    setAccessPolicyScreenOpen(false);\n    loadAllBucketData();\n  };\n\n  const closeRetentionConfig = () => {\n    setRetentionConfigOpen(false);\n    loadAllBucketData();\n  };\n\n  const closeEnableVersioning = (refresh: boolean) => {\n    setEnableVersioningOpen(false);\n    if (refresh) {\n      loadAllBucketData();\n    }\n  };\n\n  let versioningStatus = versioningInfo?.status;\n  let versioningText = \"Unversioned (Default)\";\n  if (versioningStatus === \"Enabled\") {\n    versioningText = \"Versioned\";\n  } else if (versioningStatus === \"Suspended\") {\n    versioningText = \"Suspended\";\n  }\n\n  return (\n    <Fragment>\n      {enableEncryptionScreenOpen && (\n        <EnableBucketEncryption\n          open={enableEncryptionScreenOpen}\n          selectedBucket={bucketName}\n          encryptionEnabled={encryptionEnabled}\n          encryptionCfg={encryptionCfg}\n          closeModalAndRefresh={closeEnableBucketEncryption}\n        />\n      )}\n      {enableQuotaScreenOpen && (\n        <EnableQuota\n          open={enableQuotaScreenOpen}\n          selectedBucket={bucketName}\n          enabled={quotaEnabled}\n          cfg={quota}\n          closeModalAndRefresh={closeEnableBucketQuota}\n        />\n      )}\n      {accessPolicyScreenOpen && (\n        <SetAccessPolicy\n          bucketName={bucketName}\n          open={accessPolicyScreenOpen}\n          actualPolicy={accessPolicy}\n          actualDefinition={policyDefinition}\n          closeModalAndRefresh={closeSetAccessPolicy}\n        />\n      )}\n      {retentionConfigOpen && (\n        <SetRetentionConfig\n          bucketName={bucketName}\n          open={retentionConfigOpen}\n          closeModalAndRefresh={closeRetentionConfig}\n        />\n      )}\n      {enableVersioningOpen && (\n        <EnableVersioningModal\n          closeVersioningModalAndRefresh={closeEnableVersioning}\n          modalOpen={enableVersioningOpen}\n          selectedBucket={bucketName}\n          versioningInfo={versioningInfo}\n          objectLockingEnabled={!!hasObjectLocking}\n        />\n      )}\n\n      <SectionTitle separator sx={{ marginBottom: 15 }}>\n        Summary\n      </SectionTitle>\n      <Grid container>\n        <SecureComponent\n          scopes={[IAM_SCOPES.S3_GET_BUCKET_POLICY, IAM_SCOPES.S3_GET_ACTIONS]}\n          resource={bucketName}\n        >\n          <Grid item xs={12}>\n            <Box sx={twoColCssGridLayoutConfig}>\n              <Box sx={twoColCssGridLayoutConfig}>\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_POLICY,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Access Policy:\"}\n                    value={accessPolicy.toLowerCase()}\n                    onEdit={() => {\n                      setAccessPolicyScreenOpen(true);\n                    }}\n                    isLoading={bucketLoading}\n                    helpTip={\n                      <Fragment>\n                        <strong>Private</strong> policy limits access to\n                        credentialled accounts with appropriate permissions\n                        <br />\n                        <strong>Public</strong> policy anyone will be able to\n                        upload, download and delete files from this Bucket once\n                        logged in\n                        <br />\n                        <strong>Custom</strong> policy can be written to define\n                        which accounts are authorized to access this Bucket\n                        <br />\n                        <br />\n                        To allow Bucket access without credentials, use the{\" \"}\n                        <a href={`/buckets/${bucketName}/admin/prefix`}>\n                          Anonymous\n                        </a>{\" \"}\n                        setting\n                      </Fragment>\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_ENCRYPTION_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_ENCRYPTION_CONFIGURATION,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Encryption:\"}\n                    value={encryptionEnabled ? \"Enabled\" : \"Disabled\"}\n                    onEdit={() => {\n                      setEnableEncryptionScreenOpen(true);\n                    }}\n                    isLoading={loadingEncryption}\n                    helpTip={\n                      <Fragment>\n                        MinIO supports enabling automatic{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/kubernetes/upstream/administration/server-side-encryption/server-side-encryption-sse-kms.html\"\n                          target=\"blank\"\n                        >\n                          SSE-KMS\n                        </a>{\" \"}\n                        and{\" \"}\n                        <a\n                          href=\"https://min.io/docs/minio/kubernetes/upstream/administration/server-side-encryption/server-side-encryption-sse-s3.html\"\n                          target=\"blank\"\n                        >\n                          SSE-S3\n                        </a>{\" \"}\n                        encryption of all objects written to a bucket using a\n                        specific External Key (EK) stored on the external KMS.\n                      </Fragment>\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_REPLICATION_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <ValuePair\n                    label={\"Replication:\"}\n                    value={\n                      <LabelWithIcon\n                        icon={\n                          replicationRules ? <EnabledIcon /> : <DisabledIcon />\n                        }\n                        label={\n                          <label className={\"muted\"}>\n                            {replicationRules ? \"Enabled\" : \"Disabled\"}\n                          </label>\n                        }\n                      />\n                    }\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  scopes={[\n                    IAM_SCOPES.S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]}\n                  resource={bucketName}\n                >\n                  <ValuePair\n                    label={\"Object Locking:\"}\n                    value={\n                      <LabelWithIcon\n                        icon={\n                          hasObjectLocking ? <EnabledIcon /> : <DisabledIcon />\n                        }\n                        label={\n                          <label className={\"muted\"}>\n                            {hasObjectLocking ? \"Enabled\" : \"Disabled\"}\n                          </label>\n                        }\n                      />\n                    }\n                  />\n                </SecureComponent>\n                <Box>\n                  <ValuePair\n                    label={\"Tags:\"}\n                    value={<BucketTags bucketName={bucketName} />}\n                  />\n                </Box>\n                <EditablePropertyItem\n                  iamScopes={[IAM_SCOPES.ADMIN_SET_BUCKET_QUOTA]}\n                  resourceName={bucketName}\n                  property={\"Quota:\"}\n                  value={quotaEnabled ? \"Enabled\" : \"Disabled\"}\n                  onEdit={setBucketQuota}\n                  isLoading={loadingQuota}\n                  helpTip={\n                    <Fragment>\n                      Setting a{\" \"}\n                      <a\n                        href=\"https://min.io/docs/minio/linux/reference/minio-mc/mc-quota-set.html\"\n                        target=\"blank\"\n                      >\n                        quota\n                      </a>{\" \"}\n                      assigns a hard limit to a bucket beyond which MinIO does\n                      not allow writes.\n                    </Fragment>\n                  }\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"1fr\",\n                  alignItems: \"flex-start\",\n                }}\n              >\n                <ReportedUsage bucketSize={`${bucketSize}`} />\n                {quotaEnabled && quota ? (\n                  <BucketQuotaSize quota={quota} />\n                ) : null}\n              </Box>\n            </Box>\n          </Grid>\n        </SecureComponent>\n\n        {distributedSetup && (\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_BUCKET_VERSIONING,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n          >\n            <Grid item xs={12} sx={{ marginTop: 5 }}>\n              <SectionTitle separator sx={{ marginBottom: 15 }}>\n                Versioning\n              </SectionTitle>\n\n              <Box sx={twoColCssGridLayoutConfig}>\n                <Box sx={twoColCssGridLayoutConfig}>\n                  <EditablePropertyItem\n                    iamScopes={[\n                      IAM_SCOPES.S3_PUT_BUCKET_VERSIONING,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]}\n                    resourceName={bucketName}\n                    property={\"Current Status:\"}\n                    value={\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          textDecorationStyle: \"initial\",\n                          placeItems: \"flex-start\",\n                          justifyItems: \"flex-start\",\n                          gap: 3,\n                        }}\n                      >\n                        <div> {versioningText}</div>\n                      </Box>\n                    }\n                    onEdit={setBucketVersioning}\n                    isLoading={loadingVersioning}\n                    disabled={hasObjectLocking}\n                  />\n\n                  {versioningInfo?.status === \"Enabled\" ? (\n                    <VersioningInfo versioningState={versioningInfo} />\n                  ) : null}\n                </Box>\n              </Box>\n            </Grid>\n          </SecureComponent>\n        )}\n\n        {hasObjectLocking && (\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_OBJECT_RETENTION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n          >\n            <Grid item xs={12} sx={{ marginTop: 5 }}>\n              <SectionTitle separator sx={{ marginBottom: 15 }}>\n                Retention\n              </SectionTitle>\n\n              <Box sx={twoColCssGridLayoutConfig}>\n                <Box sx={twoColCssGridLayoutConfig}>\n                  <EditablePropertyItem\n                    iamScopes={[IAM_SCOPES.ADMIN_SET_BUCKET_QUOTA]}\n                    resourceName={bucketName}\n                    property={\"Retention:\"}\n                    value={retentionEnabled ? \"Enabled\" : \"Disabled\"}\n                    onEdit={() => {\n                      setRetentionConfigOpen(true);\n                    }}\n                    isLoading={loadingRetention}\n                    helpTip={\n                      <Fragment>\n                        MinIO{\" \"}\n                        <a\n                          target=\"blank\"\n                          href=\"https://min.io/docs/minio/macos/administration/object-management.html#object-retention\"\n                        >\n                          Object Locking\n                        </a>{\" \"}\n                        enforces Write-Once Read-Many (WORM) immutability to\n                        protect versioned objects from deletion.\n                      </Fragment>\n                    }\n                  />\n\n                  <ValuePair\n                    label={\"Mode:\"}\n                    value={\n                      <label\n                        className={\"muted\"}\n                        style={{ textTransform: \"capitalize\" }}\n                      >\n                        {retentionConfig && retentionConfig.mode\n                          ? retentionConfig.mode\n                          : \"-\"}\n                      </label>\n                    }\n                  />\n                  <ValuePair\n                    label={\"Validity:\"}\n                    value={\n                      <label\n                        className={\"muted\"}\n                        style={{ textTransform: \"capitalize\" }}\n                      >\n                        {retentionConfig && retentionConfig.validity}{\" \"}\n                        {retentionConfig &&\n                          (retentionConfig.validity === 1\n                            ? retentionConfig.unit?.slice(0, -1)\n                            : retentionConfig.unit)}\n                      </label>\n                    }\n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </SecureComponent>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketSummary;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"mds\";\n\ntype LabelWithIconProps = {\n  icon: React.ReactNode | null;\n  label: React.ReactNode | null;\n};\n\nconst LabelWithIcon = ({ icon = null, label = null }: LabelWithIconProps) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 5,\n        marginTop: 3,\n      }}\n    >\n      <Box\n        sx={{\n          height: 16,\n          width: 16,\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        {icon}\n      </Box>\n      <Box>{label}</Box>\n    </Box>\n  );\n};\n\nexport default LabelWithIcon;\n"],"names":["_ref","_versioningState$excl","_versioningState$excl2","_ref$versioningState","versioningState","_jsxs","Box","sx","display","flexDirection","gap","children","_jsx","fontWeight","excludeFolders","LabelWithIcon","icon","EnabledIcon","style","color","DisabledIcon","label","textDecoration","excludedPrefixes","length","justifyItems","placeItems","maxHeight","overflowY","map","it","prefix","disabled","onClick","restProps","_objectWithoutProperties","_excluded","IconButton","_objectSpread","size","EditIcon","SecureAction","resourceName","iamScopes","_ref$secureCmpProps","secureCmpProps","SecureComponent","scopes","resource","errorProps","_ref2","_ref2$isLoading","isLoading","_ref2$resourceName","_ref2$secureCmpProps","_ref2$property","property","_ref2$value","value","onEdit","_ref2$disabled","helpTip","alignItems","justifyContent","ValuePair","HelpTip","placement","content","ActionLink","EditActionButton","background","marginLeft","top","width","height","bucketSize","ReportedUsageFullIcon","flexFlow","fontSize","niceBytes","quota","HardBucketQuotaIcon","textTransform","type","concat","SetAccessPolicy","withSuspense","React","SetRetentionConfig","EnableBucketEncryption","EnableVersioningModal","BucketTags","EnableQuota","_retentionConfig$unit","dispatch","useAppDispatch","params","useParams","loadingBucket","useSelector","selBucketDetailsLoading","bucketInfo","selBucketDetailsInfo","distributedSetup","selDistSet","_useState","useState","_useState2","_slicedToArray","encryptionCfg","setEncryptionCfg","_useState3","_useState4","setBucketSize","_useState5","_useState6","hasObjectLocking","setHasObjectLocking","_useState7","_useState8","accessPolicyScreenOpen","setAccessPolicyScreenOpen","_useState9","_useState10","replicationRules","setReplicationRules","_useState11","_useState12","loadingObjectLocking","setLoadingLocking","_useState13","_useState14","loadingSize","setLoadingSize","_useState15","_useState16","bucketLoading","setBucketLoading","_useState17","_useState18","loadingEncryption","setLoadingEncryption","_useState19","_useState20","loadingVersioning","setLoadingVersioning","_useState21","_useState22","loadingQuota","setLoadingQuota","_useState23","_useState24","loadingReplication","setLoadingReplication","_useState25","_useState26","loadingRetention","setLoadingRetention","_useState27","_useState28","versioningInfo","setVersioningInfo","_useState29","_useState30","quotaEnabled","setQuotaEnabled","_useState31","_useState32","setQuota","_useState33","_useState34","encryptionEnabled","setEncryptionEnabled","_useState35","_useState36","retentionEnabled","setRetentionEnabled","_useState37","_useState38","retentionConfig","setRetentionConfig","_useState39","_useState40","retentionConfigOpen","setRetentionConfigOpen","_useState41","_useState42","enableEncryptionScreenOpen","setEnableEncryptionScreenOpen","_useState43","_useState44","enableQuotaScreenOpen","setEnableQuotaScreenOpen","_useState45","_useState46","enableVersioningOpen","setEnableVersioningOpen","useEffect","setHelpName","bucketName","accessPolicy","policyDefinition","access","definition","displayGetBucketObjectLockConfiguration","hasPermission","IAM_SCOPES","S3_GET_BUCKET_OBJECT_LOCK_CONFIGURATION","S3_GET_ACTIONS","displayGetBucketEncryptionConfiguration","S3_GET_BUCKET_ENCRYPTION_CONFIGURATION","displayGetBucketQuota","ADMIN_GET_BUCKET_QUOTA","api","buckets","getBucketEncryptionInfo","then","res","data","algorithm","catch","err","errorToHandler","error","errorMessage","getBucketVersioning","setErrorSnackMessage","getBucketQuota","getBucketObjectLockingStatus","object_locking_enabled","listBuckets","get","find","bucket","name","getBucketReplication","r","rules","getBucketRetentionConfig","loadAllBucketData","setBucketDetailsLoad","versioningStatus","status","versioningText","Fragment","open","selectedBucket","closeModalAndRefresh","enabled","cfg","actualPolicy","actualDefinition","closeVersioningModalAndRefresh","refresh","modalOpen","objectLockingEnabled","SectionTitle","separator","marginBottom","Grid","container","S3_GET_BUCKET_POLICY","item","xs","twoColCssGridLayoutConfig","EditablePropertyItem","S3_PUT_BUCKET_POLICY","S3_PUT_ACTIONS","toLowerCase","href","S3_PUT_BUCKET_ENCRYPTION_CONFIGURATION","target","S3_GET_REPLICATION_CONFIGURATION","className","ADMIN_SET_BUCKET_QUOTA","gridTemplateColumns","ReportedUsage","BucketQuotaSize","S3_GET_BUCKET_VERSIONING","marginTop","S3_PUT_BUCKET_VERSIONING","textDecorationStyle","VersioningInfo","S3_GET_OBJECT_RETENTION","mode","validity","unit","slice","_ref$icon","_ref$label"],"sourceRoot":""}