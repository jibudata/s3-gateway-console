{"version":3,"file":"static/js/4653.957113df.chunk.js","mappings":"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","sources":["screens/Console/Common/ScreenTitle/ScreenTitle.tsx","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\ninterface IScreenTitle {\n  classes: any;\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerBarIcon: {\n      marginRight: \".7rem\",\n      color: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 44,\n        height: 44,\n      },\n    },\n    headerBarSubheader: {\n      color: \"grey\",\n      \"@media (max-width: 900px)\": {\n        maxWidth: 200,\n      },\n    },\n    screenTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"1rem\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    titleColumn: {\n      height: \"auto\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"flex-start\",\n      \"& h1\": {\n        fontSize: 19,\n      },\n    },\n    leftItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rightItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  });\n\nconst ScreenTitle = ({\n  classes,\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.screenTitle} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ScreenTitle);\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { SettingsIcon } from \"../../../../icons\";\nimport { Link, Redirect, Route, Router, Switch } from \"react-router-dom\";\nimport history from \"../../../../history\";\nimport VerticalTabs from \"../../Common/VerticalTabs/VerticalTabs\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport get from \"lodash/get\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\n\nconst ConfigurationForm = withSuspense(\n  React.lazy(() => import(\"./ConfigurationForm\"))\n);\n\ninterface IConfigurationOptions {\n  classes: any;\n  match: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    settingsOptionsContainer: {\n      display: \"flex\" as const,\n      flexDirection: \"row\" as const,\n      justifyContent: \"flex-start\" as const,\n      flexWrap: \"wrap\" as const,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      backgroundColor: \"#fff\",\n    },\n    ...searchField,\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\nconst ConfigurationOptions = ({ classes, match }: IConfigurationOptions) => {\n  const configurationName = get(match, \"url\", \"\");\n  let selConfigTab = configurationName.substring(\n    configurationName.lastIndexOf(\"/\") + 1\n  );\n  selConfigTab = selConfigTab === \"settings\" ? \"region\" : selConfigTab;\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Settings\"} />\n\n      <PageLayout>\n        <Grid item xs={12}>\n          <div\n            id=\"settings-container\"\n            className={classes.settingsOptionsContainer}\n          >\n            <ScreenTitle icon={<SettingsIcon />} title={\"Configuration:\"} />\n            <VerticalTabs\n              selectedTab={selConfigTab}\n              isRouteTabs\n              routes={\n                <Router history={history}>\n                  <Switch>\n                    {configurationElements.map((element) => (\n                      <Route\n                        exact\n                        key={`configItem-${element.configuration_label}`}\n                        path={`${IAM_PAGES.SETTINGS}/${element.configuration_id}`}\n                        component={ConfigurationForm}\n                      />\n                    ))}\n                    <Route exact path={IAM_PAGES.SETTINGS}>\n                      <Redirect to={`${IAM_PAGES.SETTINGS}/region`} />\n                    </Route>\n                  </Switch>\n                </Router>\n              }\n            >\n              {configurationElements.map((element) => {\n                const { configuration_id, configuration_label, icon } = element;\n                return {\n                  tabConfig: {\n                    label: configuration_label,\n                    value: configuration_id,\n                    icon: icon,\n                    component: Link,\n                    to: getRoutePath(configuration_id),\n                  },\n                };\n              })}\n            </VerticalTabs>\n          </div>\n        </Grid>\n        <Grid item xs={12} sx={{ paddingTop: \"15px\" }}>\n          <HelpBox\n            title={\"Learn more about SETTINGS\"}\n            iconComponent={<SettingsIcon />}\n            help={\n              <Fragment>\n                MinIO supports a variety of configurations ranging from\n                encryption, compression, region, notifications, etc.\n                <br />\n                <br />\n                You can learn more at our{\" \"}\n                <a\n                  href=\"https://docs.min.io/minio/baremetal/reference/minio-cli/minio-mc-admin/mc-admin.config.html?ref=con#id4\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  documentation\n                </a>\n                .\n              </Fragment>\n            }\n          />\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationOptions);\n"],"names":["withStyles","theme","createStyles","headerBarIcon","marginRight","color","palette","primary","main","width","height","headerBarSubheader","maxWidth","screenTitle","display","alignItems","justifyContent","padding","borderBottom","flexFlow","titleColumn","fontSize","leftItems","rightItems","classes","icon","title","subTitle","actions","className","container","item","xs","style","margin","Context","React","TabContext","props","children","value","idPrefix","id","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","name","overridesResolver","styles","root","spacing","inProps","useThemeProps","ownerState","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","tabStripStyle","minHeight","tabsContainer","tabsHeaderContainer","background","borderRight","marginBottom","fontWeight","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","push","tabConfig","content","Box","onChange","event","newValue","orientation","variant","scrollButtons","tabList","map","index","Tab","tabHeader","disableRipple","disableTouchRipple","focusRipple","ConfigurationForm","withSuspense","settingsOptionsContainer","flexWrap","border","borderRadius","backgroundColor","searchField","actionsTray","containerForHeader","match","configurationName","get","selConfigTab","substring","lastIndexOf","Fragment","label","history","configurationElements","element","exact","path","IAM_PAGES","configuration_id","component","configuration_label","to","Link","sx","paddingTop","iconComponent","help","href","target","rel"],"sourceRoot":""}