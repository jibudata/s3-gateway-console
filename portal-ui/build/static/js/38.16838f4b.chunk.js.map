{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/shared/ErrorBlock.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Configurations/TiersConfiguration/UpdateTierCredentiasModal.tsx","screens/Console/Configurations/TiersConfiguration/ListTiersConfiguration.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","modalSnackMessage","modalSnackBar","modalErrorContainer","position","border","borderLeftWidth","borderRadius","zIndex","padding","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","cursor","errorTitle","errorLabel","marginRight","messageIcon","simpleError","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","baseCloseLine","content","borderLeft","setModalSnackMessage","dialogContainer","closeContainer","modalCloseIcon","closeIcon","borderColor","titleClass","whiteSpace","textOverflow","modalContent","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","IconButton","disableRipple","size","DialogTitle","id","DialogContent","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","textBoxWithIcon","paddingRight","errorState","top","overlayAction","maxHeight","onChange","value","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","unSelected","selected","CloudIcon","active","xmlns","viewBox","d","ConsoleIcon","DescriptionIcon","FormatDriveIcon","spacing","margin","buttonDisabled","filter","valueToSend","idField","to","sendOnlyId","valueClick","icon","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","e","stopPropagation","preventDefault","Tooltip","isString","rowText","borderWidth","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","calculateColumnRest","map","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","flexDirection","overflowY","noBackground","defaultPaperHeight","allTableSettings","minTableHeader","rowUnselected","rowSelected","paginatorContainer","checkBoxHeader","paddingBottom","actionsContainer","paginatorComponent","borderBottom","checkBoxRow","loadingBox","paddingTop","overlayColumnSelection","popoverContent","shownColumnsLabel","outline","userSelect","textTransform","checkboxIcons","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","infiniteScrollConfig","sortConfig","autoScrollToBottom","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","Paper","LinearProgress","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CheckboxWrapper","checked","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","history","push","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","Checkbox","checkedIcon","radioSelectedIcon","radioUnselectedIcon","unCheckedIcon","action","vlSend","showLoaderFunction","CircularProgress","elementActions","fieldContainer","marginBottom","flexBasis","root","borderStyle","contained","background","dark","light","rest","button","clsx","leftItems","iconSize","helpText","iconComponent","help","textDecoration","info","fontFamily","errorBlock","withBreak","flexWrap","errorText","valueString","fileReselect","fieldBottom","fileInputField","accept","showFileSelector","setShowSelector","InputLabel","fieldLabelError","HelpIcon","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","split","fileProcess","data","ErrorBlock","buttonContainer","modalBasic","closeModalAndRefresh","tierData","savingTiers","setSavingTiers","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","isFormValid","setIsFormValid","valid","ModalWrapper","noValidate","onSubmit","rules","access_key","secret_key","api","invoke","then","catch","err","addRecord","formScrollable","InputBoxWrapper","FileSelector","encodedValue","Button","setErrorSnackMessage","actionsTray","searchField","settingsCommon","typesSelection","containerForHeader","strongText","keyName","iconText","customConfigurationPage","customTitle","setRecords","setFilter","setIsLoading","updateCredentialsOpen","setUpdateCredentialsOpen","selectedTier","setSelectedTier","res","items","filteredRecords","b","getItemName","getItemType","indexOf","addTier","UpdateTierCredentiasModal","PageHeader","TextField","disableUnderline","startAdornment","InputAdornment","SearchIcon","BoxIconButton","RefreshIcon","endIcon","TableWrapper","endpoint","bucket","prefix","region","HelpBox","href","rel","alignContent","AButton"],"mappings":"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","file":"static/js/38.16838f4b.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={classes.headerContainer}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    simpleError: {\n      marginTop: 5,\n      padding: \"2px 5px\",\n      fontSize: 16,\n      color: \"#000\",\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { snackBarCommon } from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst baseCloseLine = {\n  content: '\" \"',\n  borderLeft: \"2px solid #9C9C9C\",\n  height: 33,\n  width: 1,\n  position: \"absolute\",\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dialogContainer: {\n      padding: \"8px 15px 22px\",\n    },\n    closeContainer: {\n      textAlign: \"right\",\n    },\n    closeButton: {\n      height: 16,\n      width: 16,\n      padding: 0,\n      backgroundColor: \"initial\",\n      \"&:hover\": {\n        backgroundColor: \"initial\",\n      },\n      \"&:active\": {\n        backgroundColor: \"initial\",\n      },\n    },\n    modalCloseIcon: {\n      fontSize: 35,\n      color: \"#9C9C9C\",\n      fontWeight: 300,\n      \"&:hover\": {\n        color: \"#9C9C9C\",\n      },\n    },\n    closeIcon: {\n      \"&::before\": {\n        ...baseCloseLine,\n        transform: \"rotate(45deg)\",\n        height: 12,\n      },\n      \"&::after\": {\n        ...baseCloseLine,\n        transform: \"rotate(-45deg)\",\n        height: 12,\n      },\n      \"&:hover::before, &:hover::after\": {\n        borderColor: \"#9C9C9C\",\n      },\n      display: \"block\",\n      position: \"relative\",\n      height: 12,\n      width: 12,\n    },\n    titleClass: {\n      padding: \"0px 50px 12px\",\n      fontSize: \"1.2rem\",\n      fontWeight: 600,\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n    },\n    modalContent: {\n      padding: \"0 50px\",\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...customSize}\n    >\n      <div className={classes.dialogContainer}>\n        <ModalError />\n        <Snackbar\n          open={openSnackbar}\n          className={classes.snackBarModal}\n          onClose={() => {\n            closeSnackBar();\n          }}\n          message={message}\n          ContentProps={{\n            className: `${classes.snackBar} ${\n              modalSnackMessage && modalSnackMessage.type === \"error\"\n                ? classes.errorSnackBar\n                : \"\"\n            }`,\n          }}\n          autoHideDuration={\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? 10000\n              : 5000\n          }\n        />\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"large\"\n          >\n            <span className={classes.closeIcon} />\n          </IconButton>\n        </div>\n        <DialogTitle id=\"alert-dialog-title\" className={classes.titleClass}>\n          {title}\n        </DialogTitle>\n        <DialogContent className={noContentPadding ? \"\" : classes.modalContent}>\n          {children}\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst FormatDriveIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Component } from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | Component;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon active={selected} />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport history from \"../../../../history\";\nimport {\n  checkboxIcons,\n  radioIcons,\n} from \"../FormComponents/common/styleLibrary\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst rowText = {\n  fontWeight: 400,\n  fontSize: 14,\n  borderColor: borderColor,\n  borderWidth: \"0.5px\",\n  height: 40,\n  transitionDuration: \"0.3s\",\n  padding: \"initial\",\n  paddingRight: 6,\n  paddingLeft: 6,\n};\n\nconst styles = () =>\n  createStyles({\n    dialogContainer: {\n      padding: \"12px 26px 22px\",\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"8px 16px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 3,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    allTableSettings: {\n      \"& .MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: \"initial\",\n      },\n      \"& .MuiTableCell-body.MuiTableCell-sizeSmall:last-child\": {\n        paddingRight: 6,\n      },\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: 700,\n          fontSize: 14,\n          borderColor: \"#39393980\",\n          borderWidth: \"0.5px\",\n          padding: \"6px 0 10px\",\n        },\n      },\n    },\n    rowUnselected: {\n      ...rowText,\n      color: \"#393939\",\n    },\n    rowSelected: {\n      ...rowText,\n      color: \"#081C42\",\n      fontWeight: 600,\n    },\n    paginatorContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"5px 38px\",\n    },\n    checkBoxHeader: {\n      width: 50,\n      textAlign: \"left\",\n      paddingRight: 10,\n      \"&.MuiTableCell-paddingCheckbox\": {\n        paddingBottom: 4,\n        paddingLeft: 0,\n      },\n    },\n    actionsContainer: {\n      width: 150,\n      borderColor: borderColor,\n    },\n    paginatorComponent: {\n      borderBottom: 0,\n    },\n    checkBoxRow: {\n      borderColor: borderColor,\n      padding: \"0 10px 0 0\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <CircularProgress\n              color=\"primary\"\n              size={18}\n              variant=\"indeterminate\"\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n}: TableWrapperProps) => {\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        history.push(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                    >\n                      {hasSelect && (\n                        <Column\n                          headerRenderer={() => <Fragment>Select</Fragment>}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        <Column\n                          headerRenderer={() => <Fragment>Options</Fragment>}\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  tooltip = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.noMinWidthLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid rgb(234, 237, 238)\",\n      borderRadius: 5,\n      paddingTop: 10,\n      paddingLeft: 40,\n      paddingRight: 40,\n      paddingBottom: 40,\n      marginTop: 10,\n      marginBottom: 10,\n      backgroundColor: \"#fbfafa\",\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        width: \"2.5rem\",\n        marginRight: \".8rem\",\n      },\n    },\n    iconSize: {\n      fontSize: 64,\n    },\n    helpText: {\n      fontSize: 16,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst componentHeight = 48;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      height: componentHeight,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    errorText: {\n      margin: \"0\",\n      fontSize: \"0.75rem\",\n      marginTop: 3,\n      textAlign: \"left\",\n      fontFamily: \"Lato,sans-serif\",\n      fontWeight: 400,\n      lineHeight: \"1.66\",\n      color: \"#dc1f2e\",\n    },\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileReselect: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: componentHeight,\n    },\n    fieldBottom: {\n      borderBottom: \"#9c9c9c 1px solid\",\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldBottom} ${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"large\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"large\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport { ITierElement } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\n\ninterface ITierCredentialsModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  tierData: ITierElement;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n  });\n\nconst UpdateTierCredentialsModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  tierData,\n  setModalErrorSnackMessage,\n}: ITierCredentialsModal) => {\n  const [savingTiers, setSavingTiers] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n\n  const type = get(tierData, \"type\", \"\");\n  const name = get(tierData, `${type}.name`, \"\");\n\n  useEffect(() => {\n    let valid = true;\n\n    if (type === \"s3\" || type === \"azure\") {\n      if (accountName === \"\" || accountKey === \"\") {\n        valid = false;\n      }\n    } else if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [accountKey, accountName, encodedCreds, type]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (type === \"s3\" || type === \"azure\") {\n      rules = {\n        access_key: accountName,\n        secret_key: accountKey,\n      };\n    } else if (type === \"gcs\") {\n      rules = {\n        creds: encodedCreds,\n      };\n    }\n    if (name !== \"\") {\n      api\n        .invoke(\"PUT\", `/api/v1/admin/tiers/${type}/${name}/credentials`, rules)\n        .then(() => {\n          setSavingTiers(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSavingTiers(false);\n          setModalErrorSnackMessage(err);\n        });\n    } else {\n      setModalErrorSnackMessage({\n        errorMessage: \"There was an error retrieving tier information\",\n        detailedError: \"\",\n      });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`Update Credentials - ${type} / ${name}`}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          setSavingTiers(true);\n          addRecord();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            {type === \"s3\" && (\n              <Fragment>\n                <InputBoxWrapper\n                  id=\"accessKey\"\n                  name=\"accessKey\"\n                  label=\"Access Key\"\n                  placeholder=\"Enter Access Key\"\n                  value={accessKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setAccessKey(e.target.value);\n                  }}\n                />\n                <InputBoxWrapper\n                  id=\"secretKey\"\n                  name=\"secretKey\"\n                  label=\"Secret Key\"\n                  placeholder=\"Enter Secret Key\"\n                  value={secretKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setSecretKey(e.target.value);\n                  }}\n                />\n              </Fragment>\n            )}\n            {type === \"gcs\" && (\n              <Fragment>\n                <FileSelector\n                  accept=\".json\"\n                  id=\"creds\"\n                  label=\"Credentials\"\n                  name=\"creds\"\n                  onChange={(encodedValue, fileName) => {\n                    setEncodedCreds(encodedValue);\n                    setCreds(fileName);\n                  }}\n                  value={creds}\n                />\n              </Fragment>\n            )}\n            {type === \"azure\" && (\n              <Fragment>\n                <InputBoxWrapper\n                  id=\"accountName\"\n                  name=\"accountName\"\n                  label=\"Account Name\"\n                  placeholder=\"Enter Account Name\"\n                  value={accountName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setAccountName(e.target.value);\n                  }}\n                />\n                <InputBoxWrapper\n                  id=\"accountKey\"\n                  name=\"accountKey\"\n                  label=\"Account Key\"\n                  placeholder=\"Enter Account Key\"\n                  value={accountKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setAccountKey(e.target.value);\n                  }}\n                />\n              </Fragment>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={savingTiers || !isFormValid}\n            >\n              Save\n            </Button>\n          </Grid>\n          {savingTiers && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UpdateTierCredentialsModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress, TextField } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  typesSelection,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { AddIcon, TiersIcon } from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ITierElement, ITierResponse } from \"./types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\n\nimport UpdateTierCredentiasModal from \"./UpdateTierCredentiasModal\";\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\nimport SearchIcon from \"../../../../icons/SearchIcon\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport BoxIconButton from \"../../Common/BoxIconButton/BoxIconButton\";\nimport AButton from \"../../Common/AButton/AButton\";\n\ninterface IListTiersConfig {\n  classes: any;\n  history: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...settingsCommon,\n    ...typesSelection,\n    ...containerForHeader(theme.spacing(4)),\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    iconText: {\n      lineHeight: \"24px\",\n    },\n    customConfigurationPage: {\n      minHeight: 400,\n    },\n    actionsTray: {\n      ...actionsTray.actionsTray,\n    },\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n  });\n\nconst ListTiersConfiguration = ({\n  classes,\n  history,\n  setErrorSnackMessage,\n}: IListTiersConfig) => {\n  const [records, setRecords] = useState<ITierElement[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [updateCredentialsOpen, setUpdateCredentialsOpen] =\n    useState<boolean>(false);\n  const [selectedTier, setSelectedTier] = useState<ITierElement>({\n    type: \"unsupported\",\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/admin/tiers`)\n          .then((res: ITierResponse) => {\n            setRecords(res.items || []);\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setErrorSnackMessage(err);\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, setErrorSnackMessage]);\n\n  const filteredRecords = records.filter((b: ITierElement) => {\n    if (filter === \"\") {\n      return true;\n    }\n    const getItemName = get(b, `${b.type}.name`, \"\");\n    const getItemType = get(b, `type`, \"\");\n\n    return getItemName.indexOf(filter) >= 0 || getItemType.indexOf(filter) >= 0;\n  });\n\n  const addTier = () => {\n    history.push(\"/tiers/add\");\n  };\n\n  const renderTierName = (item: ITierElement) => {\n    const name = get(item, `${item.type}.name`, \"\");\n\n    if (name !== null) {\n      return name;\n    }\n\n    return \"\";\n  };\n\n  const renderTierPrefix = (item: ITierElement) => {\n    const prefix = get(item, `${item.type}.prefix`, \"\");\n\n    if (prefix !== null) {\n      return prefix;\n    }\n\n    return \"\";\n  };\n\n  const renderTierEndpoint = (item: ITierElement) => {\n    const endpoint = get(item, `${item.type}.endpoint`, \"\");\n\n    if (endpoint !== null) {\n      return endpoint;\n    }\n\n    return \"\";\n  };\n\n  const renderTierBucket = (item: ITierElement) => {\n    const bucket = get(item, `${item.type}.bucket`, \"\");\n\n    if (bucket !== null) {\n      return bucket;\n    }\n\n    return \"\";\n  };\n\n  const renderTierRegion = (item: ITierElement) => {\n    const region = get(item, `${item.type}.region`, \"\");\n\n    if (region !== null) {\n      return region;\n    }\n\n    return \"\";\n  };\n\n  const closeTierCredentials = () => {\n    setUpdateCredentialsOpen(false);\n  };\n\n  return (\n    <Fragment>\n      {updateCredentialsOpen && (\n        <UpdateTierCredentiasModal\n          open={updateCredentialsOpen}\n          tierData={selectedTier}\n          closeModalAndRefresh={closeTierCredentials}\n        />\n      )}\n      <PageHeader label=\"Tiers\" />\n      <Grid container className={classes.container}>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <TextField\n            placeholder=\"Filter\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            onChange={(event) => {\n              setFilter(event.target.value);\n            }}\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            variant=\"standard\"\n          />\n          <BoxIconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            onClick={() => {\n              setIsLoading(true);\n            }}\n            size=\"large\"\n          >\n            <RefreshIcon />\n          </BoxIconButton>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<AddIcon />}\n            onClick={addTier}\n          >\n            Add Tier\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <br />\n        </Grid>\n        {isLoading && <LinearProgress />}\n        {!isLoading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <Grid item xs={12}>\n                  <TableWrapper\n                    itemActions={[\n                      {\n                        type: \"edit\",\n                        onClick: (tierData: ITierElement) => {\n                          setSelectedTier(tierData);\n                          setUpdateCredentialsOpen(true);\n                        },\n                      },\n                    ]}\n                    columns={[\n                      {\n                        label: \"Tier Name\",\n                        elementKey: \"type\",\n                        renderFunction: renderTierName,\n                        renderFullObject: true,\n                      },\n                      {\n                        label: \"Type\",\n                        elementKey: \"type\",\n                        width: 150,\n                      },\n                      {\n                        label: \"Endpoint\",\n                        elementKey: \"type\",\n                        renderFunction: renderTierEndpoint,\n                        renderFullObject: true,\n                      },\n                      {\n                        label: \"Bucket\",\n                        elementKey: \"type\",\n                        renderFunction: renderTierBucket,\n                        renderFullObject: true,\n                      },\n                      {\n                        label: \"Prefix\",\n                        elementKey: \"type\",\n                        renderFunction: renderTierPrefix,\n                        renderFullObject: true,\n                      },\n                      {\n                        label: \"Region\",\n                        elementKey: \"type\",\n                        renderFunction: renderTierRegion,\n                        renderFullObject: true,\n                      },\n                    ]}\n                    isLoading={isLoading}\n                    records={filteredRecords}\n                    entityName=\"Tiers\"\n                    idField=\"service_name\"\n                    customPaperHeight={classes.customConfigurationPage}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <HelpBox\n                    title={\"Learn more about TIERS\"}\n                    iconComponent={<TiersIcon />}\n                    help={\n                      <Fragment>\n                        Tiers are used by the MinIO Object Lifecycle Management\n                        which allows creating rules for time or date based\n                        automatic transition or expiry of objects. For object\n                        transition, MinIO automatically moves the object to a\n                        configured remote storage tier.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://docs.min.io/minio/baremetal/lifecycle-management/lifecycle-management-overview.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Tiers\"}\n                    iconComponent={<TiersIcon />}\n                    help={\n                      <Fragment>\n                        Tiers are used by the MinIO Object Lifecycle Management\n                        which allows creating rules for time or date based\n                        automatic transition or expiry of objects. For object\n                        transition, MinIO automatically moves the object to a\n                        configured remote storage tier.\n                        <br />\n                        <br />\n                        To get started,{\" \"}\n                        <AButton onClick={addTier}>Add A Tier</AButton>.\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(ListTiersConfiguration));\n"],"sourceRoot":""}