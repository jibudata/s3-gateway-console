{"version":3,"file":"static/js/4335.111324c3.chunk.js","mappings":"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,MAAO,sBACPa,MAAO,sBAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,eACPa,MAAO,eAET,CACEb,MAAO,mBACPa,MAAO,mBAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,iBACPa,MAAO,iBAET,CACEb,MAAO,cACPa,MAAO,cAET,CACEb,MAAO,gBACPa,MAAO,gBAET,CACEb,MAAO,aACPa,MAAO,aAET,CACEb,MAAO,qBACPa,MAAO,kBAET,CACEb,MAAO,kBACPa,MAAO,iBAET,CACEb,MAAO,YACPa,MAAO,YAET,CACEb,MAAO,oBACPa,MAAO,iBAET,CACEb,MAAO,UACPa,MAAO,UAET,CACEb,MAAO,kBACPa,MAAO,eAET,CACEb,MAAO,YACPa,MAAO,WAET,CACEb,MAAO,oBACPa,MAAO,gBAET,CACEb,MAAO,iBACPa,MAAO,eAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,iBACPa,MAAO,iBAET,CACEb,MAAO,eACPa,MAAO,eAET,CACEb,MAAO,UACPa,MAAO,WAET,CACEb,MAAO,gBACPa,MAAO,gBAET,CACEb,MAAO,uBACPa,MAAO,sBAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,QACPa,MAAO,SAET,CACEb,MAAO,QACPa,MAAO,SAET,CACEb,MAAO,aACPa,MAAO,aAET,CACEb,MAAO,aACPa,MAAO,aAET,CACEb,MAAO,oBACPa,MAAO,mBAET,CACEb,MAAO,iBACPa,MAAO,gBAET,CACEb,MAAO,QACPa,MAAO,SAET,CACEb,MAAO,gBACPa,MAAO,gBAET,CACEb,MAAO,cACPa,MAAO,cAET,CACEb,MAAO,mBACPa,MAAO,kBAET,CACEb,MAAO,2BACPa,MAAO,uBAET,CACEb,MAAO,eACPa,MAAO,eAET,CACEb,MAAO,SACPa,MAAO,UAET,CACEb,MAAO,cACPa,MAAO,cAET,CACEb,MAAO,cACPa,MAAO,cAET,CACEb,MAAO,eACPa,MAAO,eAET,CACEb,MAAO,qBACPa,MAAO,oBAET,CACEb,MA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","sources":["screens/shared/ErrorBlock.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Configurations/TiersConfiguration/s3-regions.tsx","screens/Console/Configurations/TiersConfiguration/gcs-regions.ts","screens/Console/Configurations/TiersConfiguration/azure-regions.ts","screens/Console/Configurations/TiersConfiguration/RegionSelect.tsx","screens/Console/Configurations/TiersConfiguration/RegionSelectWrapper.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { ClipboardEvent, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  onFocus?: () => void;\n  onPaste?: (e: ClipboardEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n  onFocus,\n  onPaste,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n  const [toggleTextInput, setToggleTextInput] = useState<boolean>(false);\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  let inputBoxWrapperIcon = overlayIcon;\n  let inputBoxWrapperType = type;\n\n  if (type === \"password\" && overlayIcon === null) {\n    inputBoxWrapperIcon = toggleTextInput ? (\n      <VisibilityOffIcon />\n    ) : (\n      <RemoveRedEyeIcon />\n    );\n    inputBoxWrapperType = toggleTextInput ? \"text\" : \"password\";\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={inputBoxWrapperType}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n            onFocus={onFocus}\n            onPaste={onPaste}\n          />\n          {inputBoxWrapperIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => setToggleTextInput(!toggleTextInput)\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {inputBoxWrapperIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { RegionEntry } from \"./types\";\n\nconst s3Regions: RegionEntry[] = [\n  { label: \"US East (Ohio)\", value: \"us-east-2\" },\n  { label: \"US East (N. Virginia)\", value: \"us-east-1\" },\n  { label: \"US West (N. California)\", value: \"us-west-1\" },\n  { label: \"US West (Oregon)\", value: \"us-west-2\" },\n  { label: \"Africa (Cape Town)\", value: \"af-south-1\" },\n  { label: \"Asia Pacific (Hong Kong)***\", value: \"ap-east-1\" },\n  { label: \"Asia Pacific (Jakarta)\", value: \"ap-southeast-3\" },\n  { label: \"Asia Pacific (Mumbai)\", value: \"ap-south-1\" },\n  { label: \"Asia Pacific (Osaka)\", value: \"ap-northeast-3\" },\n  { label: \"Asia Pacific (Seoul)\", value: \"ap-northeast-2\" },\n  { label: \"Asia Pacific (Singapore)\", value: \"ap-southeast-1\" },\n  { label: \"Asia Pacific (Sydney)\", value: \"ap-southeast-2\" },\n  { label: \"Asia Pacific (Tokyo)\", value: \"ap-northeast-1\" },\n  { label: \"Canada (Central)\", value: \"ca-central-1\" },\n  { label: \"China (Beijing)\", value: \"cn-north-1\" },\n  { label: \"China (Ningxia)\", value: \"cn-northwest-1\" },\n  { label: \"Europe (Frankfurt)\", value: \"eu-central-1\" },\n  { label: \"Europe (Ireland)\", value: \"eu-west-1\" },\n  { label: \"Europe (London)\", value: \"eu-west-2\" },\n  { label: \"Europe (Milan)\", value: \"eu-south-1\" },\n  { label: \"Europe (Paris)\", value: \"eu-west-3\" },\n  { label: \"Europe (Stockholm)\", value: \"eu-north-1\" },\n  { label: \"South America (São Paulo)\", value: \"sa-east-1\" },\n  { label: \"Middle East (Bahrain)\", value: \"me-south-1\" },\n  { label: \"AWS GovCloud (US-East)\", value: \"us-gov-east-1\" },\n  { label: \"AWS GovCloud (US-West)\", value: \"us-gov-west-1\" },\n];\n\nexport default s3Regions;\n","import { RegionEntry } from \"./types\";\n\nconst gcsRegions: RegionEntry[] = [\n  { label: \"Montréal\", value: \"NORTHAMERICA-NORTHEAST1\" },\n  { label: \"Toronto\", value: \"NORTHAMERICA-NORTHEAST2\" },\n  { label: \"Iowa\", value: \"US-CENTRAL1\" },\n  { label: \"South Carolina\", value: \"US-EAST1\" },\n  { label: \"Northern Virginia\", value: \"US-EAST4\" },\n  { label: \"Oregon\", value: \"US-WEST1\" },\n  { label: \"Los Angeles\", value: \"US-WEST2\" },\n  { label: \"Salt Lake City\", value: \"US-WEST3\" },\n  { label: \"Las Vegas\", value: \"US-WEST4\" },\n  { label: \"São Paulo\", value: \"SOUTHAMERICA-EAST1\" },\n  { label: \"Santiago\", value: \"SOUTHAMERICA-WEST1\" },\n  { label: \"Warsaw\", value: \"EUROPE-CENTRAL2\" },\n  { label: \"Finland\", value: \"EUROPE-NORTH1\" },\n  { label: \"Belgium\", value: \"EUROPE-WEST1\" },\n  { label: \"London\", value: \"EUROPE-WEST2\" },\n  { label: \"Frankfurt\", value: \"EUROPE-WEST3\" },\n  { label: \"Netherlands\", value: \"EUROPE-WEST4\" },\n  { label: \"Zürich\", value: \"EUROPE-WEST6\" },\n  { label: \"Taiwan\", value: \"ASIA-EAST1\" },\n  { label: \"Hong Kong\", value: \"ASIA-EAST2\" },\n  { label: \"Tokyo\", value: \"ASIA-NORTHEAST1\" },\n  { label: \"Osaka\", value: \"ASIA-NORTHEAST2\" },\n  { label: \"Seoul\", value: \"ASIA-NORTHEAST3\" },\n  { label: \"Mumbai\", value: \"ASIA-SOUTH1\" },\n  { label: \"Delhi\", value: \"ASIA-SOUTH2\" },\n  { label: \"Singapore\", value: \"ASIA-SOUTHEAST1\" },\n  { label: \"Jakarta\", value: \"ASIA-SOUTHEAST2\" },\n  { label: \"Sydney\", value: \"AUSTRALIA-SOUTHEAST1\" },\n  { label: \"Melbourne\", value: \"AUSTRALIA-SOUTHEAST2\" },\n];\n\nexport default gcsRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { RegionEntry } from \"./types\";\n\nconst azureRegions: RegionEntry[] = [\n  {\n    label: \"Asia\",\n    value: \"asia\",\n  },\n  {\n    label: \"Asia Pacific\",\n    value: \"asiapacific\",\n  },\n  {\n    label: \"Australia\",\n    value: \"australia\",\n  },\n  {\n    label: \"Australia Central\",\n    value: \"australiacentral\",\n  },\n  {\n    label: \"Australia Central 2\",\n    value: \"australiacentral2\",\n  },\n  {\n    label: \"Australia East\",\n    value: \"australiaeast\",\n  },\n  {\n    label: \"Australia Southeast\",\n    value: \"australiasoutheast\",\n  },\n  {\n    label: \"Brazil\",\n    value: \"brazil\",\n  },\n  {\n    label: \"Brazil South\",\n    value: \"brazilsouth\",\n  },\n  {\n    label: \"Brazil Southeast\",\n    value: \"brazilsoutheast\",\n  },\n  {\n    label: \"Canada\",\n    value: \"canada\",\n  },\n  {\n    label: \"Canada Central\",\n    value: \"canadacentral\",\n  },\n  {\n    label: \"Canada East\",\n    value: \"canadaeast\",\n  },\n  {\n    label: \"Central India\",\n    value: \"centralindia\",\n  },\n  {\n    label: \"Central US\",\n    value: \"centralus\",\n  },\n  {\n    label: \"Central US (Stage)\",\n    value: \"centralusstage\",\n  },\n  {\n    label: \"Central US EUAP\",\n    value: \"centraluseuap\",\n  },\n  {\n    label: \"East Asia\",\n    value: \"eastasia\",\n  },\n  {\n    label: \"East Asia (Stage)\",\n    value: \"eastasiastage\",\n  },\n  {\n    label: \"East US\",\n    value: \"eastus\",\n  },\n  {\n    label: \"East US (Stage)\",\n    value: \"eastusstage\",\n  },\n  {\n    label: \"East US 2\",\n    value: \"eastus2\",\n  },\n  {\n    label: \"East US 2 (Stage)\",\n    value: \"eastus2stage\",\n  },\n  {\n    label: \"East US 2 EUAP\",\n    value: \"eastus2euap\",\n  },\n  {\n    label: \"Europe\",\n    value: \"europe\",\n  },\n  {\n    label: \"France\",\n    value: \"france\",\n  },\n  {\n    label: \"France Central\",\n    value: \"francecentral\",\n  },\n  {\n    label: \"France South\",\n    value: \"francesouth\",\n  },\n  {\n    label: \"Germany\",\n    value: \"germany\",\n  },\n  {\n    label: \"Germany North\",\n    value: \"germanynorth\",\n  },\n  {\n    label: \"Germany West Central\",\n    value: \"germanywestcentral\",\n  },\n  {\n    label: \"Global\",\n    value: \"global\",\n  },\n  {\n    label: \"India\",\n    value: \"india\",\n  },\n  {\n    label: \"Japan\",\n    value: \"japan\",\n  },\n  {\n    label: \"Japan East\",\n    value: \"japaneast\",\n  },\n  {\n    label: \"Japan West\",\n    value: \"japanwest\",\n  },\n  {\n    label: \"Jio India Central\",\n    value: \"jioindiacentral\",\n  },\n  {\n    label: \"Jio India West\",\n    value: \"jioindiawest\",\n  },\n  {\n    label: \"Korea\",\n    value: \"korea\",\n  },\n  {\n    label: \"Korea Central\",\n    value: \"koreacentral\",\n  },\n  {\n    label: \"Korea South\",\n    value: \"koreasouth\",\n  },\n  {\n    label: \"North Central US\",\n    value: \"northcentralus\",\n  },\n  {\n    label: \"North Central US (Stage)\",\n    value: \"northcentralusstage\",\n  },\n  {\n    label: \"North Europe\",\n    value: \"northeurope\",\n  },\n  {\n    label: \"Norway\",\n    value: \"norway\",\n  },\n  {\n    label: \"Norway East\",\n    value: \"norwayeast\",\n  },\n  {\n    label: \"Norway West\",\n    value: \"norwaywest\",\n  },\n  {\n    label: \"South Africa\",\n    value: \"southafrica\",\n  },\n  {\n    label: \"South Africa North\",\n    value: \"southafricanorth\",\n  },\n  {\n    label: \"South Africa West\",\n    value: \"southafricawest\",\n  },\n  {\n    label: \"South Central US\",\n    value: \"southcentralus\",\n  },\n  {\n    label: \"South Central US (Stage)\",\n    value: \"southcentralusstage\",\n  },\n  {\n    label: \"South India\",\n    value: \"southindia\",\n  },\n  {\n    label: \"Southeast Asia\",\n    value: \"southeastasia\",\n  },\n  {\n    label: \"Southeast Asia (Stage)\",\n    value: \"southeastasiastage\",\n  },\n  {\n    label: \"Sweden Central\",\n    value: \"swedencentral\",\n  },\n  {\n    label: \"Switzerland\",\n    value: \"switzerland\",\n  },\n  {\n    label: \"Switzerland North\",\n    value: \"switzerlandnorth\",\n  },\n  {\n    label: \"Switzerland West\",\n    value: \"switzerlandwest\",\n  },\n  {\n    label: \"UAE Central\",\n    value: \"uaecentral\",\n  },\n  {\n    label: \"UAE North\",\n    value: \"uaenorth\",\n  },\n  {\n    label: \"UK South\",\n    value: \"uksouth\",\n  },\n  {\n    label: \"UK West\",\n    value: \"ukwest\",\n  },\n  {\n    label: \"United Arab Emirates\",\n    value: \"uae\",\n  },\n  {\n    label: \"United Kingdom\",\n    value: \"uk\",\n  },\n  {\n    label: \"United States\",\n    value: \"unitedstates\",\n  },\n  {\n    label: \"United States EUAP\",\n    value: \"unitedstateseuap\",\n  },\n  {\n    label: \"West Central US\",\n    value: \"westcentralus\",\n  },\n  {\n    label: \"West Europe\",\n    value: \"westeurope\",\n  },\n  {\n    label: \"West India\",\n    value: \"westindia\",\n  },\n  {\n    label: \"West US\",\n    value: \"westus\",\n  },\n  {\n    label: \"West US (Stage)\",\n    value: \"westusstage\",\n  },\n  {\n    label: \"West US 2\",\n    value: \"westus2\",\n  },\n  {\n    label: \"West US 2 (Stage)\",\n    value: \"westus2stage\",\n  },\n  {\n    label: \"West US 3\",\n    value: \"westus3\",\n  },\n];\nexport default azureRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { Autocomplete, Box, TextField } from \"@mui/material\";\n\nimport s3Regions from \"./s3-regions\";\nimport gcsRegions from \"./gcs-regions\";\nimport azRegions from \"./azure-regions\";\n\nconst getRegions = (type: string): any => {\n  if (type === \"s3\") {\n    return s3Regions;\n  }\n  if (type === \"gcs\") {\n    return gcsRegions;\n  }\n  if (type === \"azure\") {\n    return azRegions;\n  }\n\n  return [];\n};\n\nconst RegionSelect = ({\n  type,\n  onChange,\n  inputProps,\n}: {\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\" | \"unsupported\";\n  onChange: (obj: any) => void;\n  inputProps?: any;\n}) => {\n  const regionList = getRegions(type);\n  const [value, setValue] = React.useState(\"\");\n\n  return (\n    <Autocomplete\n      sx={{\n        \"& .MuiOutlinedInput-root\": {\n          padding: 0,\n          paddingLeft: \"10px\",\n          fontSize: 13,\n          fontWeight: 600,\n        },\n        \"& .MuiAutocomplete-inputRoot\": {\n          \"& .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#e5e5e5\",\n            borderWidth: 1,\n          },\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#07193E\",\n            borderWidth: 1,\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#07193E\",\n            borderWidth: 1,\n          },\n        },\n      }}\n      freeSolo\n      selectOnFocus\n      handleHomeEndKeys\n      onChange={(event, newValue) => {\n        let newVal: any = newValue;\n\n        if (typeof newValue === \"string\") {\n          newVal = {\n            label: newValue,\n          };\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          newVal = {\n            label: newValue.inputValue,\n          };\n        } else {\n          newVal = newValue;\n        }\n        setValue(newVal);\n        onChange(newVal?.value);\n      }}\n      value={value}\n      onInputChange={(e: any) => {\n        const { target: { value = \"\" } = {} } = e || {};\n        onChange(value);\n      }}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.value;\n      }}\n      options={regionList}\n      filterOptions={(opts: any[], state: any) => {\n        const filterText = state.inputValue.toLowerCase();\n\n        return opts.filter((opt) =>\n          `${opt.label.toLowerCase()}${opt.value.toLowerCase()}`.includes(\n            filterText\n          )\n        );\n      }}\n      renderOption={(props: any, opt: any) => {\n        return (\n          <li {...props}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                alignItems: \"baseline\",\n                padding: \"4px\",\n                borderBottom: \"1px solid #eaeaea\",\n                cursor: \"pointer\",\n                width: \"100%\",\n\n                \"& .label\": {\n                  fontSize: \"13px\",\n                  fontWeight: 500,\n                },\n                \"& .value\": {\n                  fontSize: \"11px\",\n                  fontWeight: 400,\n                },\n              }}\n            >\n              <span className=\"label\">{opt.value}</span>\n              <span className=\"value\">{opt.label}</span>\n            </Box>\n          </li>\n        );\n      }}\n      renderInput={(params) => (\n        <TextField {...params} {...inputProps} fullWidth />\n      )}\n    />\n  );\n};\n\nexport default RegionSelect;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, IconButton, InputLabel, Tooltip } from \"@mui/material\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { HelpIcon } from \"mds\";\nimport clsx from \"clsx\";\nimport RegionSelect from \"./RegionSelect\";\n\ninterface RegionSelectBoxProps {\n  label: string;\n  classes?: any;\n  onChange: (value: string) => void;\n  onKeyPress?: (e: any) => void;\n  value?: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\";\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      minWidth: 160,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nconst RegionSelectWrapper = ({\n  label,\n  onChange,\n  id,\n  name,\n  type,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n  className = \"\",\n}: RegionSelectBoxProps) => {\n  const inputClasses = inputStyles();\n\n  let inputProps: any = {\n    \"data-index\": index,\n    ...extraInputProps,\n    name: name,\n    id: id,\n    classes: inputClasses,\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <RegionSelect\n            type={type}\n            inputProps={inputProps}\n            onChange={onChange}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(RegionSelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport { BackLink, Button, PageLayout } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box } from \"@mui/material\";\nimport {\n  fileInputStyles,\n  formFieldStyles,\n  modalBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\n\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\n\nimport RegionSelectWrapper from \"./RegionSelectWrapper\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    ...formFieldStyles,\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Inter,sans-serif\",\n      paddingLeft: 18,\n    },\n    fileInputFieldCss: {\n      margin: \"0\",\n    },\n    fileTextBoxContainer: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    fileReselectCss: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    ...fileInputStyles,\n  });\n\ninterface IAddNotificationEndpointProps {\n  classes: any;\n}\n\nconst AddTierConfiguration = ({ classes }: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(params, \"service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      switch (type) {\n        case \"minio\":\n          request = {\n            minio: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n            },\n          };\n          break;\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType,\n        ...request,\n      };\n\n      api\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\n        .then(() => {\n          setSaving(false);\n          navigate(IAM_PAGES.TIERS);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    dispatch,\n    storageClass,\n    type,\n    navigate,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\" && type !== \"minio\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add-tier-configuration\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label={\"Add Tier\"}\n              onClick={() => navigate(IAM_PAGES.TIERS_ADD)}\n            />\n          </Fragment>\n        }\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            border: \"1px solid #eaeaea\",\n            padding: \"25px\",\n          }}\n        >\n          <form noValidate onSubmit={submitForm}>\n            {type !== \"\" && targetElement ? (\n              <Grid\n                item\n                xs={12}\n                key={`icon-${targetElement.targetTitle}`}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  marginBottom: \"20px\",\n                }}\n              >\n                {targetElement.logo ? (\n                  <Box\n                    sx={{\n                      \"& .min-icon\": {\n                        height: \"60px\",\n                        width: \"60px\",\n                      },\n                    }}\n                  >\n                    {targetElement.logo}\n                  </Box>\n                ) : null}\n\n                <div className={classes.lambdaNotifTitle}>\n                  <b>\n                    {titleSelection ? titleSelection : \"\"} - Add Tier\n                    Configuration\n                  </b>\n                </div>\n              </Grid>\n            ) : null}\n\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"grid\",\n                gridTemplateColumns: { xs: \"1fr\", sm: \"1fr 1fr\" },\n                gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n                gridRowGap: 25,\n                gridColumnGap: 50,\n              }}\n            >\n              {type !== \"\" && (\n                <Fragment>\n                  <InputBoxWrapper\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                    value={name}\n                    onChange={updateTierName}\n                    error={nameInputError}\n                    required\n                  />\n                  <InputBoxWrapper\n                    id=\"endpoint\"\n                    name=\"endpoint\"\n                    label=\"Endpoint\"\n                    placeholder=\"Enter Endpoint\"\n                    value={endpoint}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setEndpoint(e.target.value);\n                    }}\n                    required\n                  />\n                  {(type === s3ServiceName || type === minioServiceName) && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accessKey\"\n                        name=\"accessKey\"\n                        label=\"Access Key\"\n                        placeholder=\"Enter Access Key\"\n                        value={accessKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccessKey(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBoxWrapper\n                        id=\"secretKey\"\n                        name=\"secretKey\"\n                        label=\"Secret Key\"\n                        placeholder=\"Enter Secret Key\"\n                        value={secretKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setSecretKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  {type === gcsServiceName && (\n                    <FileSelector\n                      accept=\".json\"\n                      classes={{\n                        fileInputField: classes.fileInputFieldCss,\n                        textBoxContainer: classes.fileTextBoxContainer,\n                        fileReselect: classes.fileReselectCss,\n                      }}\n                      id=\"creds\"\n                      label=\"Credentials\"\n                      name=\"creds\"\n                      onChange={(encodedValue, fileName) => {\n                        setEncodedCreds(encodedValue);\n                        setCreds(fileName);\n                      }}\n                      value={creds}\n                      required\n                    />\n                  )}\n                  {type === azureServiceName && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accountName\"\n                        name=\"accountName\"\n                        label=\"Account Name\"\n                        placeholder=\"Enter Account Name\"\n                        value={accountName}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountName(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBoxWrapper\n                        id=\"accountKey\"\n                        name=\"accountKey\"\n                        label=\"Account Key\"\n                        placeholder=\"Enter Account Key\"\n                        value={accountKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  <InputBoxWrapper\n                    id=\"bucket\"\n                    name=\"bucket\"\n                    label=\"Bucket\"\n                    placeholder=\"Enter Bucket\"\n                    value={bucket}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setBucket(e.target.value);\n                    }}\n                    required\n                  />\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    label=\"Prefix\"\n                    placeholder=\"Enter Prefix\"\n                    value={prefix}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    required\n                  />\n                  <RegionSelectWrapper\n                    onChange={(value) => {\n                      setRegion(value);\n                    }}\n                    required={type !== \"minio\"}\n                    label={\"Region\"}\n                    id=\"region\"\n                    name=\"region\"\n                    type={type as \"azure\" | \"s3\" | \"minio\" | \"gcs\"}\n                  />\n                  {type === s3ServiceName && (\n                    <InputBoxWrapper\n                      id=\"storageClass\"\n                      name=\"storageClass\"\n                      label=\"Storage Class\"\n                      placeholder=\"Enter Storage Class\"\n                      value={storageClass}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setStorageClass(e.target.value);\n                      }}\n                    />\n                  )}\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item xs={12} className={classes.settingsButtonContainer}>\n              <Button\n                id={\"save-tier-configuration\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={saving || !isFormValid}\n                label={\"Save Tier Configuration\"}\n              />\n            </Grid>\n          </form>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddTierConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  AzureTierIcon,\n  AzureTierIconXs,\n  GoogleTierIcon,\n  GoogleTierIconXs,\n  MinIOTierIcon,\n  MinIOTierIconXs,\n  S3TierIcon,\n  S3TierIconXs,\n} from \"mds\";\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: <MinIOTierIcon />,\n    logoXs: <MinIOTierIconXs />,\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: <GoogleTierIcon />,\n    logoXs: <GoogleTierIconXs />,\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: <S3TierIcon />,\n    logoXs: <S3TierIconXs />,\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: <AzureTierIcon />,\n    logoXs: <AzureTierIconXs />,\n  },\n];\n"],"names":["withStyles","theme","_theme$palette","createStyles","errorBlock","color","palette","error","main","_ref","classes","errorMessage","_ref$withBreak","withBreak","_jsxs","React","children","_jsx","Typography","component","variant","className","_objectSpread","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","onChange","id","name","_ref$disabled","disabled","_ref$tooltip","tooltip","required","_ref$error","_ref$accept","accept","_ref$value","value","_useState","useState","_useState2","_slicedToArray","showFileSelector","setShowSelector","Grid","item","xs","concat","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","onClick","disableRipple","disableFocusRipple","size","CancelIcon","ErrorBlock","fileReselect","AttachFileIcon","inputStyles","makeStyles","inputFieldStyles","InputField","props","TextField","InputProps","flexGrow","position","overlayAction","right","top","maxHeight","_ref$type","_ref$autoComplete","autoComplete","_ref$multiline","multiline","_ref$index","index","_ref$required","_ref$placeholder","placeholder","min","max","overlayId","_ref$overlayIcon","overlayIcon","_ref$overlayObject","overlayObject","_ref$extraInputProps","extraInputProps","_ref$noLabelMinWidth","noLabelMinWidth","_ref$pattern","pattern","_ref$autoFocus","autoFocus","_ref$className","onKeyPress","onFocus","onPaste","inputProps","toggleTextInput","setToggleTextInput","inputBoxWrapperIcon","inputBoxWrapperType","VisibilityOffIcon","RemoveRedEyeIcon","container","clsx","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","disableTouchRipple","regionList","s3Regions","gcsRegions","azRegions","getRegions","_React$useState","_React$useState2","setValue","Autocomplete","sx","padding","fontSize","borderColor","borderWidth","freeSolo","selectOnFocus","handleHomeEndKeys","event","newValue","_newVal","newVal","inputValue","onInputChange","_ref2$target","_ref2$target2$value","getOptionLabel","option","options","filterOptions","opts","state","filterText","toLowerCase","filter","opt","includes","renderOption","Box","display","alignItems","borderBottom","cursor","width","renderInput","params","minWidth","inputClasses","RegionSelect","modalBasic","settingsCommon","formFieldStyles","lambdaNotifTitle","fontFamily","fileInputFieldCss","fileTextBoxContainer","flex","fileReselectCss","dispatch","useAppDispatch","navigate","useNavigate","useParams","saving","setSaving","_useState3","_useState4","setName","_useState5","_useState6","endpoint","setEndpoint","_useState7","_useState8","bucket","setBucket","_useState9","_useState10","prefix","setPrefix","_useState11","_useState12","region","setRegion","_useState13","_useState14","storageClass","setStorageClass","_useState15","_useState16","accessKey","setAccessKey","_useState17","_useState18","secretKey","setSecretKey","_useState19","_useState20","creds","setCreds","_useState21","_useState22","encodedCreds","setEncodedCreds","_useState23","_useState24","accountName","setAccountName","_useState25","_useState26","accountKey","setAccountKey","_useState27","_useState28","titleSelection","setTitleSelection","_useState29","_useState30","isFormValid","setIsFormValid","_useState31","_useState32","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","minio","accesskey","secretkey","s3","storageclass","gcs","azure","accountname","accountkey","payload","api","invoke","then","IAM_PAGES","TIERS","catch","err","setErrorSnackMessage","valid","targetElement","tierTypes","find","serviceName","setHelpName","Fragment","PageHeaderWrapper","BackLink","TIERS_ADD","actions","HelpMenu","PageLayout","noValidate","onSubmit","preventDefault","justifyContent","marginBottom","logo","height","targetTitle","gridTemplateColumns","sm","gridAutoFlow","gridRowGap","gridColumnGap","InputBoxWrapper","toUpperCase","s3ServiceName","minioServiceName","gcsServiceName","FileSelector","encodedValue","azureServiceName","RegionSelectWrapper","settingsButtonContainer","Button","MinIOTierIcon","logoXs","MinIOTierIconXs","GoogleTierIcon","GoogleTierIconXs","S3TierIcon","S3TierIconXs","AzureTierIcon","AzureTierIconXs"],"sourceRoot":""}