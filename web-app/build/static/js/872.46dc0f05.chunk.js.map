{"version":3,"file":"static/js/872.46dc0f05.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  Loader,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ApiError, Tier } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const ILM_TYPES = [\n    { value: \"expiry\", label: \"Expiry\" },\n    { value: \"transition\", label: \"Transition\" },\n  ];\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.transition?.days &&\n          lifecycleRule.transition?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(transitionDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.transition?.noncurrent_transition_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCTransitionDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch(async (eRes) => {\n          setAddLoading(false);\n          const err = (await eRes.json()) as ApiError;\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {!loadingTiers ? (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <FormLayout containerPadding={false} withBorders={false}>\n            <Switch\n              label=\"Status\"\n              indicatorLabels={[\"Enabled\", \"Disabled\"]}\n              checked={enabled}\n              value={\"user_enabled\"}\n              id=\"rule_status\"\n              name=\"rule_status\"\n              onChange={(e) => {\n                setEnabled(e.target.checked);\n              }}\n            />\n            <InputBox\n              id=\"id\"\n              name=\"id\"\n              label=\"Id\"\n              value={lifecycleRule.id}\n              onChange={() => {}}\n              disabled\n            />\n            {ilmType ? (\n              <RadioGroup\n                currentValue={ilmType}\n                id=\"rule_type\"\n                name=\"rule_type\"\n                label=\"Rule Type\"\n                selectorOptions={ILM_TYPES}\n                onChange={() => {}}\n                disableOptions\n              />\n            ) : null}\n\n            <InputBox\n              id=\"object-version\"\n              name=\"object-version\"\n              label=\"Object Version\"\n              value={objectVersion}\n              onChange={() => {}}\n              disabled\n            />\n\n            {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n              <InputBox\n                type=\"number\"\n                id=\"expiry_days\"\n                name=\"expiry_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setExpiryDays(e.target.value);\n                }}\n                label=\"Expiry Days\"\n                value={expiryDays}\n                min=\"0\"\n              />\n            )}\n\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_expiration_days\"\n                  name=\"noncurrentversion_expiration_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCExpirationDays(e.target.value);\n                  }}\n                  label=\"Non-current Expiration Days\"\n                  value={NCExpirationDays}\n                  min=\"0\"\n                />\n              )}\n            {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"transition_days\"\n                  name=\"transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setTransitionDays(e.target.value);\n                  }}\n                  label=\"Transition Days\"\n                  value={transitionDays}\n                  min=\"0\"\n                />\n                <Select\n                  label=\"Tier\"\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  value={storageClass}\n                  onChange={(value) => {\n                    setStorageClass(value);\n                  }}\n                  options={tiersList}\n                />\n              </Fragment>\n            )}\n\n            {ilmType === \"transition\" &&\n              lifecycleRule.transition?.noncurrent_transition_days && (\n                <Fragment>\n                  <InputBox\n                    type=\"number\"\n                    id=\"noncurrentversion_transition_days\"\n                    name=\"noncurrentversion_transition_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionDays(e.target.value);\n                    }}\n                    label=\"Non-current Transition Days\"\n                    value={NCTransitionDays}\n                    min=\"0\"\n                  />\n                  <InputBox\n                    id=\"noncurrentversion_t_SC\"\n                    name=\"noncurrentversion_t_SC\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionSC(e.target.value);\n                    }}\n                    placeholder=\"Set Non-current Version Transition Storage Class\"\n                    label=\"Non-current Version Transition Storage Class\"\n                    value={NCTransitionSC}\n                  />\n                </Fragment>\n              )}\n            <Grid item xs={12}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <InputBox\n                  id=\"prefix\"\n                  name=\"prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPrefix(e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={prefix}\n                />\n                <QueryMultiSelector\n                  name=\"tags\"\n                  label=\"Tags\"\n                  elements={tags}\n                  onChange={(vl: string) => {\n                    setTags(vl);\n                  }}\n                  keyPlaceholder=\"Tag Key\"\n                  valuePlaceholder=\"Tag Value\"\n                  withBorder\n                />\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <Grid item xs={12}>\n                  <Accordion\n                    title={\"Advanced\"}\n                    id={\"lifecycle-advanced-filters\"}\n                    expanded={expandedAdv}\n                    onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                    sx={{ marginTop: 15 }}\n                  >\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                  </Accordion>\n                </Grid>\n              )}\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      ) : (\n        <Loader style={{ width: 16, height: 16 }} />\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AlertIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpTip,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [expiryUnit, setExpiryUnit] = useState<string>(\"days\");\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    if (!lifecycleDays || parseInt(lifecycleDays) === 0) {\n      valid = false;\n    }\n    if (parseInt(lifecycleDays) > 2147483647) {\n      //values over int32 cannot be parsed\n      valid = false;\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else if (expiryUnit === \"days\") {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"newer_noncurrentversion_expiration_versions\"] =\n          parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else if (expiryUnit === \"days\") {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of Lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n              helpTip={\n                <Fragment>\n                  Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html\"\n                  >\n                    Expiry\n                  </a>{\" \"}\n                  to delete Objects per this rule. Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-minio.html\"\n                  >\n                    Transition\n                  </a>{\" \"}\n                  to move Objects to a remote storage{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/windows/administration/object-management/transition-objects-to-minio.html#configure-the-remote-storage-tier\"\n                  >\n                    Tier\n                  </a>{\" \"}\n                  per this rule.\n                </Fragment>\n              }\n              helpTipPlacement=\"right\"\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n                helpTip={\n                  <Fragment>\n                    Select whether to apply the rule to current or non-current\n                    Object\n                    <a\n                      target=\"blank\"\n                      href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html#expire-versioned-objects\"\n                    >\n                      {\" \"}\n                      Versions\n                    </a>\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n\n            <InputBox\n              error={\n                lifecycleDays && !isFormValid\n                  ? parseInt(lifecycleDays) <= 0\n                    ? `Number of ${expiryUnit} to retain must be greater than zero`\n                    : parseInt(lifecycleDays) > 2147483647\n                      ? `Number of ${expiryUnit} must be less than or equal to 2147483647`\n                      : \"\"\n                  : \"\"\n              }\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <Fragment>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <InputUnitMenu\n                      id={\"expire-current-unit\"}\n                      unitSelected={expiryUnit}\n                      unitsList={[\n                        { label: \"Days\", value: \"days\" },\n                        { label: \"Versions\", value: \"versions\" },\n                      ]}\n                      disabled={\n                        targetVersion !== \"noncurrent\" || ilmType !== \"expiry\"\n                      }\n                      onUnitChange={(newValue) => {\n                        setExpiryUnit(newValue);\n                      }}\n                    />\n                    {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                      <HelpTip\n                        content={\n                          <Fragment>\n                            Select to set expiry by days or newer noncurrent\n                            versions\n                          </Fragment>\n                        }\n                        placement=\"right\"\n                      >\n                        {\" \"}\n                        <AlertIcon style={{ width: 15, height: 15 }} />\n                      </HelpTip>\n                    )}\n                  </Grid>\n                </Fragment>\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n                helpTip={\n                  <Fragment>\n                    Configure a{\" \"}\n                    <a\n                      href={IAM_PAGES.TIERS_ADD}\n                      color=\"secondary\"\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      remote tier\n                    </a>{\" \"}\n                    to receive transitioned Objects\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <Grid item xs={12}>\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Grid item xs={12}>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expire Delete Marker\"}\n                      description={\n                        \"Remove the reference to the object if no versions are left\"\n                      }\n                    />\n                  </Grid>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n  HelpTip,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 ||\n            el.expiration.noncurrent_expiration_days ||\n            (el.expiration.newer_noncurrent_expiration_versions &&\n              el.expiration.newer_noncurrent_expiration_versions > 0))\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (\n            el.expiration.noncurrent_expiration_days ||\n            el.expiration.newer_noncurrent_expiration_versions\n          ) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          } else {\n            return (\n              <span>\n                {el.expiration.newer_noncurrent_expiration_versions} versions\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        <HelpTip\n          content={\n            <Fragment>\n              MinIO derives it’s behavior and syntax from{\" \"}\n              <a\n                target=\"blank\"\n                href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\"\n              >\n                S3 lifecycle\n              </a>{\" \"}\n              for compatibility in migrating workloads and lifecycle rules from\n              S3 to MinIO.\n            </Fragment>\n          }\n          placement=\"right\"\n        >\n          Lifecycle Rules\n        </HelpTip>\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","onCloseAndRefresh","deleteOpen","bucket","id","dispatch","useAppDispatch","deletingRule","setDeletingRule","useState","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_jsxs","Fragment","children","_lifecycleRule$expira7","_lifecycleRule$expira8","_lifecycleRule$transi8","_lifecycleRule$transi9","_lifecycleRule$expira9","closeModalAndRefresh","selectedBucket","lifecycleRule","open","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","expandedAdv","setExpandedAdv","expanded","setExpanded","admin","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","valid","_lifecycleRule$expira3","status","transitionMode","_lifecycleRule$transi","_lifecycleRule$transi2","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$expira","_lifecycleRule$expira2","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","Loader","style","width","height","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira4","_lifecycleRule$expira5","_lifecycleRule$expira6","expiry","parseInt","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$transi7","lifecycleUpdate","disable","expired_object_delete_marker","updateBucketLifecycle","async","eRes","json","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","disabled","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","options","placeholder","Grid","item","xs","Accordion","onTitleClick","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","sx","marginTop","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","expiryUnit","setExpiryUnit","formFieldRowFilter","padding","getBucketVersioning","setModalErrorSnackMessage","container","addRecord","lifecycleInsert","addBucketLifecycle","helpTip","href","helpTipPlacement","validity","pattern","overlayObject","justifyContent","InputUnitMenu","unitSelected","unitsList","onUnitChange","newValue","HelpTip","content","placement","AlertIcon","IAM_PAGES","TIERS_ADD","textDecoration","description","BucketLifecyclePanel","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","newer_noncurrent_expiration_versions","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","rel","UnitMenuButton","styled","button","theme","border","borderRadius","backgroundColor","fontSize","_ref2","anchorEl","setAnchorEl","React","Boolean","handleClose","newUnit","undefined","currentTarget","DropdownSelector","selectedOption","onSelect","hideTriggerAction","anchorOrigin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","className","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","HelpIcon","overflowY","position","ref"],"sourceRoot":""}