"use strict";(self.webpackChunkweb_app=self.webpackChunkweb_app||[]).push([[2448],{27468:(e,r,i)=>{i.d(r,{c:()=>a});var t=i(69060),o=i(66152),n=i(82496);const l=e=>{let{icon:r,description:i}=e;return(0,n.jsxs)(o.kvh,{sx:{display:"flex","& .min-icon":{marginRight:"10px",height:"23px",width:"23px",marginBottom:"10px"}},children:[r," ",(0,n.jsx)("div",{style:{fontSize:"14px",fontStyle:"italic",color:"#5E5E5E"},children:i})]})},a=e=>{let{helpText:r,docLink:i,docText:a,contents:s}=e;return(0,n.jsxs)(o.kvh,{sx:{flex:1,border:"1px solid #eaeaea",borderRadius:"2px",display:"flex",flexFlow:"column",padding:"20px"},children:[(0,n.jsxs)(o.kvh,{sx:{fontSize:"16px",fontWeight:600,display:"flex",alignItems:"center",marginBottom:"16px",paddingBottom:"20px","& .min-icon":{height:"21px",width:"21px",marginRight:"15px"}},children:[(0,n.jsx)(o.cFZ,{}),(0,n.jsx)("div",{children:r})]}),(0,n.jsxs)(o.kvh,{sx:{fontSize:"14px",marginBottom:"15px"},children:[s.map(((e,r)=>(0,n.jsxs)(t.Fragment,{children:[e.icon&&(0,n.jsx)(o.kvh,{sx:{paddingBottom:"20px"},children:(0,n.jsx)(l,{icon:e.icon,description:e.iconDescription})}),(0,n.jsx)(o.kvh,{sx:{paddingBottom:"20px"},children:e.text})]},"feature-item-".concat(r)))),(0,n.jsx)(o.kvh,{sx:{paddingBottom:"20px"},children:(0,n.jsx)("a",{href:i,target:"_blank",rel:"noopener",children:a})})]})]})}},52448:(e,r,i)=>{i.r(r),i.d(r,{default:()=>g});var t=i(69060),o=i(21124),n=i(66152),l=i(51560),a=i(66156),s=i(61628),d=i(95705),c=i(3428),p=i(48504),h=i(61180),u=i(78256),x=i(82496);const m=e=>{let{icon:r,helpBox:i,header:o,backLink:m,title:y,formFields:f}=e;const g={name:{required:!0,hasError:(e,r)=>!e&&r?"Config Name is required":"",label:"Name",tooltip:"Name for identity provider configuration",placeholder:"Name",type:"text"},...f},b=(0,l.i6)(),D=(0,a.Ab)(),[C,v]=(0,t.useState)({}),[k,O]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{D((0,d.i8)("add_idp_config"))}),[]),(0,x.jsxs)(n.yeN,{item:!0,xs:12,children:[(0,x.jsx)(c.c,{label:(0,x.jsx)(n.y_F,{onClick:()=>b(m),label:o}),actions:(0,x.jsx)(p.c,{})}),(0,x.jsx)(n._al,{children:(0,x.jsxs)(n.yE_,{helpBox:i,children:[(0,x.jsx)(n.eCc,{icon:r,children:y}),(0,x.jsx)("form",{noValidate:!0,autoComplete:"off",onSubmit:e=>{(e=>{O(!0),e.preventDefault();const r=C.name;let i="";for(const t of Object.keys(f))C[t]&&(i+="".concat(t,"=").concat(C[t]," "));h.m.idp.createConfiguration("openid",{name:r,input:i}).then((e=>{b(m),D((0,d.s$)(!0===e.data.restart))})).catch((e=>{D((0,d.aW)((0,u.K)(e.error)))})).finally((()=>O(!1)))})(e)},children:(0,x.jsx)(n.yeN,{container:!0,children:(0,x.jsxs)(n.yeN,{xs:12,item:!0,children:[Object.entries(g).map((e=>{let[r,i]=e;return((e,r)=>"toggle"===r.type?(0,x.jsx)(n.Wkk,{indicatorLabels:["Enabled","Disabled"],checked:"on"===C[e],value:"is-field-enabled",id:"is-field-enabled",name:"is-field-enabled",label:r.label,tooltip:r.tooltip,onChange:r=>v({...C,[e]:r.target.checked?"on":"off"}),description:""}):(0,x.jsx)(n.q22,{id:e,required:r.required,name:e,label:r.label,tooltip:r.tooltip,error:r.hasError(C[e],!0),value:C[e]?C[e]:"",onChange:r=>v({...C,[e]:r.target.value}),placeholder:r.placeholder,type:r.type}))(r,i)})),(0,x.jsxs)(n.yeN,{item:!0,xs:12,sx:s.W2.modalButtonBar,children:[(0,x.jsx)(n.qaq,{id:"clear",type:"button",variant:"regular",onClick:()=>{v({})},label:"Clear"}),(0,x.jsx)(n.qaq,{id:"save-key",type:"submit",variant:"callAction",color:"primary",disabled:k||!(()=>{for(const[e,r]of Object.entries(g))if(r.required&&(void 0===C[e]||null===C[e]||""===C[e]))return!1;return!0})(),label:"Save"})]})]})})})]})})]})};var y=i(69024),f=i(27468);const g=()=>(0,x.jsx)(m,{icon:(0,x.jsx)(n.mpG,{}),helpBox:(0,x.jsx)(f.c,{helpText:"Learn more about OpenID Connect Configurations",contents:y.Ce,docLink:"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-oidc",docText:"Learn more about OpenID Connect Configurations"}),header:"OpenID Configurations",backLink:o.Ks.IDP_OPENID_CONFIGURATIONS,title:"Create OpenID Configuration",formFields:y.UN})},69024:(e,r,i)=>{i.d(r,{Ce:()=>l,EJ:()=>n,UN:()=>a,qc:()=>s});var t=i(66152),o=i(82496);const n=[{text:"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:(0,o.jsx)(t.eMq,{}),iconDescription:"Create Configurations"},{text:"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries",icon:null,iconDescription:""},{text:"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.",icon:null,iconDescription:""}],l=[{text:"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.",icon:(0,o.jsx)(t.mpG,{}),iconDescription:"Create Configurations"},{text:"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:null,iconDescription:""}],a={config_url:{required:!0,hasError:(e,r)=>!e&&r?"Config URL is required":"",label:"Config URL",tooltip:"Config URL for identity provider configuration",placeholder:"https://identity-provider-url/.well-known/openid-configuration",type:"text",editOnly:!1},client_id:{required:!0,hasError:(e,r)=>!e&&r?"Client ID is required":"",label:"Client ID",tooltip:"Identity provider Client ID",placeholder:"Enter Client ID",type:"text",editOnly:!1},client_secret:{required:!0,hasError:(e,r)=>!e&&r?"Client Secret is required":"",label:"Client Secret",tooltip:"Identity provider Client Secret",placeholder:"Enter Client Secret",type:"password",editOnly:!0},claim_name:{required:!1,label:"Claim Name",tooltip:"Claim from which MinIO will read the policy or role to use",placeholder:"Enter Claim Name",type:"text",hasError:(e,r)=>"",editOnly:!1},display_name:{required:!1,label:"Display Name",tooltip:"",placeholder:"Enter Display Name",type:"text",hasError:(e,r)=>"",editOnly:!1},claim_prefix:{required:!1,label:"Claim Prefix",tooltip:"",placeholder:"Enter Claim Prefix",type:"text",hasError:(e,r)=>"",editOnly:!1},scopes:{required:!1,label:"Scopes",tooltip:"",placeholder:"openid,profile,email",type:"text",hasError:(e,r)=>"",editOnly:!1},redirect_uri:{required:!1,label:"Redirect URI",tooltip:"",placeholder:"https://console-endpoint-url/oauth_callback",type:"text",hasError:(e,r)=>"",editOnly:!1},role_policy:{required:!1,label:"Role Policy",tooltip:"",placeholder:"readonly",type:"text",hasError:(e,r)=>"",editOnly:!1},claim_userinfo:{required:!1,label:"Claim User Info",tooltip:"",placeholder:"Claim User Info",type:"toggle",hasError:(e,r)=>"",editOnly:!1},redirect_uri_dynamic:{required:!1,label:"Redirect URI Dynamic",tooltip:"",placeholder:"Redirect URI Dynamic",type:"toggle",hasError:(e,r)=>"",editOnly:!1}},s={server_insecure:{required:!0,hasError:(e,r)=>!e&&r?"Server Address is required":"",label:"Server Insecure",tooltip:"Disable SSL certificate verification ",placeholder:"myldapserver.com:636",type:"toggle",editOnly:!1},server_addr:{required:!0,hasError:(e,r)=>!e&&r?"Server Address is required":"",label:"Server Address",tooltip:'AD/LDAP server address e.g. "myldapserver.com:636"',placeholder:"myldapserver.com:636",type:"text",editOnly:!1},lookup_bind_dn:{required:!0,hasError:(e,r)=>!e&&r?"Lookup Bind DN is required":"",label:"Lookup Bind DN",tooltip:"DN (Distinguished Name) for LDAP read-only service account used to perform DN and group lookups",placeholder:"cn=admin,dc=min,dc=io",type:"text",editOnly:!1},lookup_bind_password:{required:!0,hasError:(e,r)=>!e&&r?"Lookup Bind Password is required":"",label:"Lookup Bind Password",tooltip:"Password for LDAP read-only service account used to perform DN and group lookups",placeholder:"admin",type:"password",editOnly:!0},user_dn_search_base_dn:{required:!0,hasError:(e,r)=>!e&&r?"User DN Search Base DN is required":"",label:"User DN Search Base",tooltip:"",placeholder:"DC=example,DC=net",type:"text",editOnly:!1},user_dn_search_filter:{required:!0,hasError:(e,r)=>!e&&r?"User DN Search Filter is required":"",label:"User DN Search Filter",tooltip:"",placeholder:"(sAMAcountName=%s)",type:"text",editOnly:!1},group_search_base_dn:{required:!1,hasError:(e,r)=>"",label:"Group Search Base DN",tooltip:"",placeholder:"ou=swengg,dc=min,dc=io",type:"text",editOnly:!1},group_search_filter:{required:!1,hasError:(e,r)=>"",label:"Group Search Filter",tooltip:"",placeholder:"(&(objectclass=groupofnames)(member=%d))",type:"text",editOnly:!1}}}}]);
//# sourceMappingURL=2448.5e41ba14.chunk.js.map