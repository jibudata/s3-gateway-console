name: "UI Permissions"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  permissions:
    name: Permissions Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [ 1.17.x ]
        os: [ ubuntu-latest ]
    steps:
      - name: Set up Go ${{ matrix.go-version }} on ${{ matrix.os }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
        id: go
      - uses: actions/setup-node@v2
        with:
          node-version: '17'
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Make assets
        run: |
          make assets
      - name: Build Console on ${{ matrix.os }}
        env:
          GO111MODULE: on
          GOOS: linux
        run: |
          make console

      - name: Start Console, front-end app and initialize users/policies
        run: |
          (./console server) & (make initialize-permissions)

      - name: Run TestCafe Tests
        uses: DevExpress/testcafe-action@latest
        with:
          args: '"chrome:headless" portal-ui/tests/permissions/ --skip-js-errors -c 3'

      - name: Clean up users & policies
        run: |
          make cleanup-permissions
